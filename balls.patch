diff --git a/actors/cappy/geo.inc.c b/actors/cappy/geo.inc.c
deleted file mode 100644
index 0b10b7a3..00000000
--- a/actors/cappy/geo.inc.c
+++ /dev/null
@@ -1,10 +0,0 @@
-#include "src/game/envfx_snow.h"
-
-const GeoLayout cappy_geo[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, cappy_CapManHero__HeadMT_mesh_layer_1),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, cappy_material_revert_render_settings),
-	GEO_CLOSE_NODE(),
-	GEO_END(),
-};
diff --git a/actors/cappy/geo_header.h b/actors/cappy/geo_header.h
deleted file mode 100644
index 999ddc61..00000000
--- a/actors/cappy/geo_header.h
+++ /dev/null
@@ -1,32 +0,0 @@
-extern const GeoLayout cappy_geo[];
-extern Lights1 cappy_HeadMT_f3d_lights;
-extern Lights1 cappy_BodyMT_f3d_lights;
-extern Lights1 cappy_EyesMT_f3d_lights;
-extern Lights1 cappy_EyePupilLeftMT_f3d_lights;
-extern Lights1 cappy_HairMT_f3d_lights;
-extern Lights1 cappy_EyePupilRightMT_f3d_lights;
-extern u8 cappy_CapManHeroEyePupil_emm_5_ci8[];
-extern u8 cappy_CapManHeroEyePupil_emm_5_pal_rgba16[];
-extern u8 cappy_hair_rgba16[];
-extern Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0[1241];
-extern Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_0[];
-extern Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1[591];
-extern Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_1[];
-extern Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2[596];
-extern Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_2[];
-extern Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_3[44];
-extern Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_3[];
-extern Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4[200];
-extern Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_4[];
-extern Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_5[46];
-extern Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_5[];
-extern Gfx mat_cappy_HeadMT_f3d[];
-extern Gfx mat_cappy_BodyMT_f3d[];
-extern Gfx mat_cappy_EyesMT_f3d[];
-extern Gfx mat_cappy_EyePupilLeftMT_f3d[];
-extern Gfx mat_revert_cappy_EyePupilLeftMT_f3d[];
-extern Gfx mat_cappy_HairMT_f3d[];
-extern Gfx mat_cappy_EyePupilRightMT_f3d[];
-extern Gfx mat_revert_cappy_EyePupilRightMT_f3d[];
-extern Gfx cappy_CapManHero__HeadMT_mesh_layer_1[];
-extern Gfx cappy_material_revert_render_settings[];
diff --git a/actors/cappy/model.inc.c b/actors/cappy/model.inc.c
deleted file mode 100644
index 3a5899e8..00000000
--- a/actors/cappy/model.inc.c
+++ /dev/null
@@ -1,6126 +0,0 @@
-Lights1 cappy_HeadMT_f3d_lights = gdSPDefLights1(
-	0x5E, 0x5E, 0x5E,
-	0xBE, 0xBE, 0xBE, 0x28, 0x28, 0x28);
-
-Lights1 cappy_BodyMT_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 cappy_EyesMT_f3d_lights = gdSPDefLights1(
-	0x13, 0x13, 0x13,
-	0x31, 0x31, 0x31, 0x28, 0x28, 0x28);
-
-Lights1 cappy_EyePupilLeftMT_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 cappy_HairMT_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 cappy_EyePupilRightMT_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Gfx cappy_CapManHeroEyePupil_emm_5_ci8_aligner[] = {gsSPEndDisplayList()};
-u8 cappy_CapManHeroEyePupil_emm_5_ci8[] = {
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 
-	0x03, 0x03, 0x04, 0x05, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x06, 0x07, 0x08, 0x09, 
-	0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x05, 0x10, 0x0a, 0x11, 0x0a, 
-	0x12, 0x13, 0x14, 0x11, 0x11, 0x15, 0x16, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x05, 0x17, 0x11, 0x11, 0x18, 0x19, 
-	0x1a, 0x1b, 0x1c, 0x1d, 0x0b, 0x0b, 0x1e, 0x1f, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x20, 0x21, 0x0b, 0x0b, 0x12, 0x22, 
-	0x23, 0x23, 0x24, 0x25, 0x26, 0x26, 0x0b, 0x27, 
-	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x28, 0x29, 0x26, 0x2a, 0x26, 0x2b, 0x2c, 
-	0x23, 0x23, 0x2d, 0x25, 0x2a, 0x2a, 0x2a, 0x2e, 
-	0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x2f, 0x18, 0x2a, 0x30, 0x2a, 0x21, 0x31, 
-	0x22, 0x32, 0x33, 0x2e, 0x26, 0x34, 0x34, 0x35, 
-	0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x37, 0x35, 0x38, 0x38, 0x2a, 0x39, 0x3a, 
-	0x3b, 0x3b, 0x0a, 0x39, 0x11, 0x38, 0x3c, 0x34, 
-	0x3d, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x10, 0x34, 0x3e, 0x3e, 0x26, 0x39, 0x39, 
-	0x39, 0x39, 0x39, 0x39, 0x39, 0x3f, 0x40, 0x41, 
-	0x42, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x44, 0x38, 0x45, 0x45, 0x35, 0x39, 0x39, 
-	0x39, 0x39, 0x39, 0x39, 0x39, 0x46, 0x47, 0x48, 
-	0x49, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x37, 0x38, 0x4a, 0x4b, 0x3f, 0x39, 0x39, 
-	0x11, 0x11, 0x11, 0x39, 0x11, 0x4c, 0x4d, 0x4e, 
-	0x4f, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x50, 0x51, 0x52, 0x53, 0x4b, 0x11, 0x11, 
-	0x26, 0x26, 0x0b, 0x39, 0x3f, 0x54, 0x53, 0x55, 
-	0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x05, 0x56, 0x4c, 0x57, 0x58, 0x4c, 0x0b, 
-	0x26, 0x2a, 0x11, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 
-	0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x5e, 0x41, 0x5a, 0x5f, 0x60, 0x61, 
-	0x4b, 0x4a, 0x62, 0x63, 0x64, 0x65, 0x47, 0x66, 
-	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x05, 0x67, 0x68, 0x69, 0x6a, 0x6b, 
-	0x6c, 0x6d, 0x6e, 0x6e, 0x5f, 0x6f, 0x70, 0x04, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x05, 0x71, 0x72, 0x73, 0x74, 
-	0x75, 0x76, 0x77, 0x61, 0x78, 0x79, 0x7a, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x7b, 0x7c, 
-	0x7d, 0x7d, 0x7e, 0x7f, 0x80, 0x05, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
-	0x43, 0x0f, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	
-};
-
-Gfx cappy_CapManHeroEyePupil_emm_5_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 cappy_CapManHeroEyePupil_emm_5_pal_rgba16[] = {
-	0xde, 0xf7, 0xde, 0xb7, 0xce, 0x73, 0xc5, 0xef, 
-	0xce, 0x31, 0xd6, 0xb5, 0xde, 0xb5, 0xad, 0x29, 
-	0x5a, 0x53, 0x20, 0xc7, 0x10, 0x43, 0x10, 0x01, 
-	0x18, 0x85, 0x41, 0xcf, 0x94, 0x21, 0xd6, 0x73, 
-	0x73, 0x5b, 0x08, 0x01, 0x28, 0x85, 0x30, 0x87, 
-	0x20, 0x43, 0x49, 0xcf, 0xbd, 0xef, 0x6b, 0x19, 
-	0x18, 0x41, 0x49, 0x09, 0xac, 0x61, 0xc5, 0x29, 
-	0x69, 0xcf, 0x28, 0x45, 0x39, 0x4b, 0xc5, 0xf1, 
-	0x9c, 0xa5, 0x10, 0x41, 0x93, 0x5b, 0xff, 0xff, 
-	0xcd, 0xef, 0x40, 0xc7, 0x18, 0x01, 0x62, 0x95, 
-	0xd6, 0x75, 0x41, 0x8d, 0x20, 0x01, 0x28, 0x83, 
-	0x83, 0x17, 0xc5, 0x6b, 0x18, 0x43, 0xb5, 0x6b, 
-	0x28, 0x03, 0x38, 0xc7, 0xa4, 0x63, 0x51, 0x8d, 
-	0x30, 0x43, 0x20, 0x41, 0x73, 0x19, 0x8c, 0x21, 
-	0x38, 0x43, 0x00, 0x01, 0x08, 0x41, 0x20, 0x85, 
-	0x40, 0x45, 0x51, 0xcf, 0x48, 0x45, 0x40, 0x43, 
-	0x50, 0x87, 0x48, 0x85, 0x41, 0x4b, 0xd6, 0xb3, 
-	0x7b, 0x5b, 0x60, 0x87, 0x50, 0x85, 0x68, 0xc9, 
-	0x58, 0x85, 0x49, 0x4b, 0x70, 0xc9, 0x78, 0xc9, 
-	0x70, 0xc7, 0x89, 0x0d, 0x60, 0xc7, 0x52, 0x0f, 
-	0xb5, 0xad, 0x38, 0x83, 0x80, 0xc9, 0x99, 0x0f, 
-	0x99, 0x0d, 0x58, 0x87, 0x51, 0xcd, 0xa9, 0x4f, 
-	0xa9, 0x51, 0x38, 0x85, 0xa9, 0x4d, 0xb1, 0x53, 
-	0x99, 0x4f, 0x40, 0x85, 0xa4, 0xe7, 0xd2, 0x19, 
-	0xd2, 0x17, 0xb1, 0x8f, 0x99, 0x4d, 0xc9, 0xd5, 
-	0xd2, 0x1d, 0xb9, 0x93, 0x6a, 0xd5, 0x83, 0x9b, 
-	0x60, 0x85, 0xc1, 0x8f, 0xea, 0xa1, 0xea, 0xe3, 
-	0xe2, 0x9f, 0xe2, 0xa1, 0xea, 0xe5, 0x79, 0x09, 
-	0x59, 0xcd, 0x94, 0x1f, 0x61, 0x09, 0xa1, 0x4b, 
-	0xc9, 0xd3, 0xda, 0x5b, 0xe2, 0x5b, 0xda, 0x59, 
-	0x68, 0xc7, 0x72, 0x95, 0xc6, 0x31, 0x8b, 0x9d, 
-	0x72, 0x51, 0x71, 0x8d, 0x71, 0xcf, 0x7b, 0x17, 
-	0xb5, 0x29, 
-};
-
-Gfx cappy_hair_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 cappy_hair_rgba16[] = {
-	0xd6, 0x71, 0xce, 0x71, 0xbd, 0xad, 0xbd, 0xab, 
-	0xb5, 0x6b, 0xb5, 0xab, 0xbd, 0xab, 0xc5, 0xef, 
-	0xc6, 0x2f, 0xb5, 0xad, 0x9d, 0xab, 0x75, 0xad, 
-	0x34, 0xe9, 0x1c, 0xa7, 0x14, 0x65, 0x0c, 0x23, 
-	0x0b, 0xe3, 0x0b, 0xa3, 0x0b, 0xa3, 0x0b, 0xe3, 
-	0x0c, 0x27, 0x54, 0xed, 0xdf, 0x7b, 0xdf, 0x7b, 
-	0xdf, 0x7b, 0xdf, 0x7b, 0xd7, 0x7b, 0xcf, 0x39, 
-	0xcf, 0x39, 0xc7, 0x39, 0xc6, 0xf9, 0xc6, 0xf7, 
-	0xd6, 0x71, 0xce, 0x31, 0xb5, 0xab, 0xb5, 0xab, 
-	0xbd, 0xad, 0xc5, 0xed, 0xc5, 0xef, 0xbd, 0xed, 
-	0xbd, 0xed, 0xad, 0xab, 0x95, 0x6b, 0x65, 0x6b, 
-	0x2c, 0xe7, 0x1c, 0xa7, 0x14, 0xa9, 0x0c, 0x65, 
-	0x0b, 0xe5, 0x0b, 0xe3, 0x0b, 0xe3, 0x0c, 0x25, 
-	0x0b, 0xa7, 0x44, 0x2b, 0xdf, 0x7b, 0xdf, 0x7b, 
-	0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x39, 
-	0xcf, 0x39, 0xc7, 0x39, 0xc7, 0x39, 0xc6, 0xf9, 
-	0xd6, 0x71, 0xce, 0x71, 0xbd, 0xed, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc5, 0xef, 0xc5, 0xef, 0xc6, 0x2f, 
-	0xbd, 0xed, 0xa5, 0xab, 0x85, 0x6b, 0x5d, 0x69, 
-	0x2c, 0xe7, 0x1c, 0xa7, 0x14, 0xa9, 0x0c, 0x67, 
-	0x0c, 0x27, 0x0c, 0x67, 0x0c, 0x69, 0x0b, 0xe7, 
-	0x02, 0xe5, 0x2b, 0xa7, 0xd7, 0x7b, 0xcf, 0x3b, 
-	0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x3b, 
-	0xcf, 0x39, 0xcf, 0x39, 0xcf, 0x39, 0xc7, 0x39, 
-	0xd6, 0x73, 0xd6, 0x71, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xc5, 0xef, 0xc5, 0xef, 0xc5, 0xef, 0xc5, 0xef, 
-	0xb5, 0xed, 0x9d, 0xab, 0x75, 0x6b, 0x4d, 0x29, 
-	0x34, 0xe9, 0x1c, 0xe9, 0x14, 0xa9, 0x0c, 0x67, 
-	0x0c, 0x67, 0x0c, 0x69, 0x04, 0x27, 0x03, 0x65, 
-	0x02, 0xa3, 0x23, 0x27, 0xcf, 0x3b, 0xcf, 0x7b, 
-	0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x3b, 
-	0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 0xc7, 0x39, 
-	0xce, 0x71, 0xce, 0x31, 0xce, 0x2f, 0xc5, 0xef, 
-	0xc5, 0xef, 0xc5, 0xef, 0xc5, 0xef, 0xbd, 0xef, 
-	0xad, 0xed, 0x8d, 0xab, 0x65, 0x6b, 0x45, 0x2b, 
-	0x2d, 0x2b, 0x1c, 0xe9, 0x14, 0xa9, 0x0c, 0xa9, 
-	0x0c, 0x27, 0x03, 0xe7, 0x03, 0xa7, 0x02, 0xe5, 
-	0x02, 0x63, 0x1a, 0xe5, 0xcf, 0x3b, 0xcf, 0x7b, 
-	0xcf, 0x7b, 0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x3b, 
-	0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 0xc7, 0x39, 
-	0xce, 0x31, 0xb5, 0x6b, 0xc5, 0xed, 0xc5, 0xed, 
-	0xc5, 0xef, 0xc5, 0xef, 0xc5, 0xef, 0xbd, 0xed, 
-	0xa5, 0xed, 0x85, 0xad, 0x65, 0xad, 0x45, 0x6b, 
-	0x2d, 0x2b, 0x1c, 0xe9, 0x14, 0xa9, 0x0c, 0x69, 
-	0x0c, 0x29, 0x03, 0xa7, 0x03, 0xa7, 0x02, 0xe5, 
-	0x02, 0x63, 0x2b, 0x67, 0xd7, 0x7b, 0xcf, 0x7b, 
-	0xcf, 0x7b, 0xcf, 0x7b, 0xcf, 0x7b, 0xcf, 0x3b, 
-	0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 0xc7, 0x39, 
-	0xc5, 0xef, 0xad, 0x29, 0xbd, 0xad, 0xc5, 0xed, 
-	0xc5, 0xed, 0xc5, 0xef, 0xbd, 0xef, 0xb5, 0xed, 
-	0xa5, 0xed, 0x85, 0xad, 0x5d, 0xad, 0x35, 0x2b, 
-	0x24, 0xa9, 0x1c, 0xa9, 0x14, 0x69, 0x0b, 0xe7, 
-	0x0b, 0xa9, 0x0b, 0x67, 0x03, 0x25, 0x02, 0xa3, 
-	0x02, 0x63, 0x43, 0xab, 0xd7, 0x7b, 0xd7, 0x7b, 
-	0xd7, 0x7b, 0xcf, 0x7b, 0xcf, 0x7b, 0xcf, 0x3b, 
-	0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 0xcf, 0x39, 
-	0xbd, 0xad, 0xad, 0x69, 0xbd, 0xed, 0xc5, 0xed, 
-	0xc5, 0xed, 0xc5, 0xef, 0xbd, 0xed, 0xb5, 0xed, 
-	0x95, 0xad, 0x6d, 0xad, 0x55, 0xad, 0x3d, 0x6d, 
-	0x2d, 0x2d, 0x1c, 0xa9, 0x14, 0x27, 0x0b, 0xe9, 
-	0x0b, 0x67, 0x0b, 0x27, 0x02, 0x63, 0x02, 0x23, 
-	0x02, 0x21, 0x9d, 0xf5, 0xd7, 0x7b, 0xd7, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xcf, 0x7b, 0xcf, 0x7b, 
-	0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 0xcf, 0x39, 
-	0xad, 0x69, 0xb5, 0xab, 0xbd, 0xed, 0xbd, 0xed, 
-	0xc5, 0xed, 0xc5, 0xed, 0xb5, 0xed, 0xad, 0xed, 
-	0x8d, 0xed, 0x6d, 0xaf, 0x4d, 0x6d, 0x35, 0x2d, 
-	0x24, 0xeb, 0x1c, 0xab, 0x1c, 0x29, 0x0b, 0x67, 
-	0x0b, 0x27, 0x02, 0x65, 0x01, 0xe3, 0x01, 0xa1, 
-	0x43, 0x69, 0xdf, 0x7b, 0xdf, 0x7b, 0xd7, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xcf, 0x7b, 0xcf, 0x3b, 
-	0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 0xcf, 0x39, 
-	0xa5, 0x27, 0xb5, 0xab, 0xbd, 0xad, 0xbd, 0xed, 
-	0xbd, 0xed, 0xbd, 0xed, 0xb5, 0xed, 0x9d, 0xed, 
-	0x85, 0xaf, 0x65, 0xaf, 0x4d, 0x6d, 0x35, 0x2d, 
-	0x24, 0xab, 0x1c, 0x29, 0x13, 0xe9, 0x13, 0x67, 
-	0x0a, 0xa5, 0x01, 0xe5, 0x01, 0xa5, 0x01, 0x61, 
-	0x64, 0x2d, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xcf, 0x7b, 0xcf, 0x7b, 
-	0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 0xcf, 0x39, 
-	0xad, 0x29, 0xb5, 0x6b, 0xb5, 0xab, 0xbd, 0xad, 
-	0xbd, 0xad, 0xb5, 0xad, 0xad, 0xad, 0x95, 0xed, 
-	0x75, 0xaf, 0x5d, 0xad, 0x3d, 0x2b, 0x2c, 0xab, 
-	0x24, 0x69, 0x1b, 0xe7, 0x13, 0x67, 0x0a, 0xe5, 
-	0x0a, 0x25, 0x01, 0xa3, 0x01, 0x63, 0x01, 0x61, 
-	0x2a, 0xa7, 0xdf, 0x7b, 0xdf, 0x7b, 0xd7, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 0xcf, 0x7b, 
-	0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 
-	0xad, 0x29, 0xad, 0x69, 0xb5, 0x6b, 0xb5, 0xab, 
-	0xad, 0x69, 0xad, 0xad, 0x9d, 0xad, 0x85, 0xad, 
-	0x6d, 0xad, 0x55, 0xad, 0x45, 0x6d, 0x34, 0xeb, 
-	0x24, 0xab, 0x1c, 0x29, 0x13, 0x67, 0x0a, 0xa5, 
-	0x09, 0xe3, 0x01, 0xa5, 0x01, 0x63, 0x01, 0x61, 
-	0x01, 0x61, 0x8d, 0x71, 0xdf, 0x7b, 0xd7, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 0xcf, 0x7b, 
-	0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x39, 0xc7, 0x39, 
-	0xa5, 0x27, 0xad, 0x29, 0xad, 0x69, 0xad, 0x29, 
-	0xad, 0x69, 0xad, 0xab, 0x9d, 0xad, 0x7d, 0xad, 
-	0x65, 0xad, 0x4d, 0x6d, 0x3d, 0x2d, 0x34, 0xeb, 
-	0x24, 0x6b, 0x1b, 0xe9, 0x13, 0x67, 0x0a, 0xa7, 
-	0x0a, 0x25, 0x01, 0x61, 0x01, 0x61, 0x01, 0x63, 
-	0x01, 0xa1, 0x22, 0xa5, 0xd7, 0x39, 0xdf, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 0xcf, 0x7b, 
-	0xcf, 0x3b, 0xcf, 0x3b, 0xc7, 0x39, 0xc6, 0xf9, 
-	0xa5, 0x27, 0xa5, 0x27, 0xa5, 0x29, 0xa5, 0x27, 
-	0xa5, 0x69, 0xa5, 0xab, 0x95, 0xad, 0x75, 0xad, 
-	0x5d, 0x6d, 0x45, 0x2b, 0x34, 0xeb, 0x2c, 0xa9, 
-	0x24, 0x69, 0x1b, 0xe7, 0x13, 0x67, 0x0a, 0xa5, 
-	0x0a, 0x25, 0x01, 0xa5, 0x01, 0x63, 0x01, 0xa1, 
-	0x09, 0xe3, 0x0a, 0x23, 0x9d, 0xb3, 0xdf, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xcf, 0x7b, 0xcf, 0x3b, 
-	0xcf, 0x39, 0xc7, 0x39, 0xc6, 0xf9, 0xc6, 0xf9, 
-	0xa5, 0x27, 0xa4, 0xe7, 0x9c, 0xe5, 0xa5, 0x27, 
-	0xa5, 0x69, 0xa5, 0xab, 0x95, 0xad, 0x7d, 0xef, 
-	0x65, 0xaf, 0x4d, 0xad, 0x3d, 0x6d, 0x2c, 0xeb, 
-	0x24, 0xab, 0x1c, 0x29, 0x13, 0xa7, 0x12, 0xe7, 
-	0x0a, 0x25, 0x01, 0xa5, 0x01, 0xa5, 0x01, 0xa3, 
-	0x09, 0xe3, 0x09, 0xe3, 0x3b, 0x27, 0xd7, 0x7b, 
-	0xd7, 0x7b, 0xcf, 0x7b, 0xcf, 0x3b, 0xcf, 0x39, 
-	0xc7, 0x39, 0xc6, 0xf9, 0xc6, 0xf7, 0xc6, 0xf7, 
-	0xa4, 0xe7, 0xa4, 0xe7, 0x9c, 0xe7, 0x9d, 0x27, 
-	0x9d, 0x6b, 0x9d, 0xad, 0x95, 0xef, 0x7d, 0xf1, 
-	0x5d, 0xef, 0x4d, 0xef, 0x3d, 0xaf, 0x35, 0x2f, 
-	0x2c, 0xed, 0x1c, 0x2b, 0x13, 0xa9, 0x0b, 0x27, 
-	0x02, 0x25, 0x01, 0xa3, 0x01, 0xa3, 0x01, 0xa1, 
-	0x01, 0xa1, 0x01, 0xa1, 0x09, 0xa1, 0xb6, 0x77, 
-	0xcf, 0x7b, 0xcf, 0x3b, 0xcf, 0x39, 0xc7, 0x39, 
-	0xc6, 0xf7, 0xc6, 0xf7, 0xc6, 0xf7, 0xbe, 0xb7, 
-	0x9c, 0xe5, 0x9c, 0xe7, 0x9c, 0xe7, 0x9d, 0x27, 
-	0x9d, 0x6b, 0x9d, 0xad, 0x8d, 0xef, 0x75, 0xef, 
-	0x55, 0xef, 0x4d, 0xef, 0x45, 0xaf, 0x35, 0x2d, 
-	0x24, 0xab, 0x1b, 0xe9, 0x13, 0x67, 0x0a, 0xe5, 
-	0x02, 0x23, 0x01, 0xe3, 0x01, 0xa1, 0x01, 0xa1, 
-	0x01, 0xa1, 0x01, 0x61, 0x01, 0x61, 0x74, 0xaf, 
-	0xcf, 0x3b, 0xcf, 0x39, 0xc6, 0xf9, 0xc6, 0xf7, 
-	0xbe, 0xf7, 0xbe, 0xb7, 0xbe, 0xb7, 0xbe, 0xb5, 
-	0x9c, 0xe5, 0x9c, 0xe7, 0x9d, 0x27, 0x95, 0x27, 
-	0x95, 0x29, 0x8d, 0xab, 0x85, 0xad, 0x6d, 0xad, 
-	0x55, 0xad, 0x45, 0xad, 0x35, 0x6d, 0x24, 0xed, 
-	0x1c, 0x6b, 0x13, 0xe7, 0x0b, 0x65, 0x02, 0xa5, 
-	0x02, 0x63, 0x01, 0xe1, 0x01, 0xa1, 0x01, 0xa1, 
-	0x01, 0xa1, 0x01, 0x61, 0x01, 0x61, 0x3b, 0x27, 
-	0xcf, 0x39, 0xc6, 0xf9, 0xc6, 0xf7, 0xbe, 0xf7, 
-	0xbe, 0xb7, 0xbe, 0xb5, 0xbe, 0xb5, 0xb6, 0x75, 
-	0x9c, 0xe5, 0x9c, 0xe7, 0x9d, 0x27, 0x9d, 0x29, 
-	0x95, 0x6b, 0x95, 0xab, 0x85, 0xed, 0x6d, 0xaf, 
-	0x55, 0xad, 0x3d, 0x6d, 0x2d, 0x2d, 0x1c, 0xa9, 
-	0x14, 0x27, 0x0b, 0xa7, 0x0b, 0x65, 0x02, 0xe5, 
-	0x02, 0x63, 0x02, 0x23, 0x01, 0xe1, 0x01, 0xa1, 
-	0x01, 0xa1, 0x01, 0x61, 0x01, 0x61, 0x1a, 0x25, 
-	0xc7, 0x39, 0xc6, 0xf7, 0xbe, 0xf7, 0xbe, 0xb7, 
-	0xbe, 0xb5, 0xbe, 0xb5, 0xb6, 0x75, 0xb6, 0x73, 
-	0x9c, 0xe5, 0x9c, 0xe7, 0xa5, 0x29, 0x9d, 0x69, 
-	0x9d, 0xab, 0x95, 0xed, 0x8e, 0x2f, 0x7e, 0x31, 
-	0x65, 0xf1, 0x4d, 0xef, 0x35, 0x6d, 0x1c, 0xab, 
-	0x1c, 0x6b, 0x0b, 0xe7, 0x0b, 0x65, 0x02, 0xe5, 
-	0x02, 0x63, 0x02, 0x63, 0x02, 0x23, 0x01, 0xe1, 
-	0x01, 0xa1, 0x01, 0xa1, 0x01, 0x61, 0x1a, 0x25, 
-	0xc6, 0xf7, 0xbe, 0xf7, 0xbe, 0xb7, 0xbe, 0xb5, 
-	0xb6, 0xb5, 0xb6, 0x75, 0xb6, 0x73, 0xb6, 0x73, 
-	0x9c, 0xe5, 0x9d, 0x27, 0xa5, 0x69, 0xa5, 0x6b, 
-	0x9d, 0xad, 0x9d, 0xef, 0x96, 0x31, 0x7e, 0x31, 
-	0x66, 0x31, 0x4d, 0xaf, 0x35, 0x6d, 0x24, 0xed, 
-	0x14, 0x6b, 0x0b, 0xe7, 0x03, 0x65, 0x02, 0xe3, 
-	0x02, 0xa3, 0x02, 0x63, 0x02, 0x65, 0x02, 0x65, 
-	0x01, 0xe1, 0x01, 0xa1, 0x01, 0xa1, 0x22, 0xa5, 
-	0xbe, 0xb7, 0xbe, 0xb7, 0xbe, 0xb5, 0xb6, 0xb5, 
-	0xb6, 0x75, 0xb6, 0x73, 0xb6, 0x73, 0xae, 0x31, 
-	0xa4, 0xe7, 0xa5, 0x27, 0xad, 0x69, 0xad, 0xab, 
-	0xad, 0xad, 0xa5, 0xef, 0x96, 0x31, 0x86, 0x71, 
-	0x76, 0x31, 0x5d, 0xf1, 0x35, 0x6d, 0x1c, 0xab, 
-	0x0c, 0x27, 0x03, 0xe7, 0x03, 0x67, 0x03, 0x25, 
-	0x02, 0xe5, 0x02, 0xa5, 0x02, 0xe5, 0x02, 0xa5, 
-	0x02, 0x63, 0x02, 0x23, 0x01, 0xe1, 0x33, 0x29, 
-	0xbe, 0xb7, 0xbe, 0xb7, 0xbe, 0xb5, 0xb6, 0x75, 
-	0xb6, 0x73, 0xae, 0x73, 0xae, 0x31, 0xae, 0x31, 
-	0xa5, 0x27, 0xad, 0x69, 0xad, 0x6b, 0xad, 0xad, 
-	0xb5, 0xed, 0xad, 0xef, 0x9e, 0x2f, 0x86, 0x31, 
-	0x65, 0xef, 0x45, 0xad, 0x25, 0x2d, 0x14, 0xed, 
-	0x0c, 0x69, 0x04, 0x29, 0x03, 0xa7, 0x03, 0x67, 
-	0x03, 0x67, 0x03, 0x67, 0x03, 0x27, 0x02, 0xe5, 
-	0x02, 0xa3, 0x02, 0xa3, 0x02, 0x63, 0x2b, 0x67, 
-	0xbe, 0xb5, 0xbe, 0xb5, 0xb6, 0x75, 0xb6, 0x73, 
-	0xb6, 0x73, 0xae, 0x33, 0xae, 0x31, 0xad, 0xf1, 
-	0xad, 0x29, 0xad, 0x69, 0xad, 0x6b, 0xad, 0xad, 
-	0xb5, 0xed, 0xad, 0xef, 0x95, 0xef, 0x7d, 0xef, 
-	0x65, 0xef, 0x45, 0xad, 0x25, 0x6d, 0x0c, 0xeb, 
-	0x04, 0xa9, 0x04, 0x69, 0x04, 0x29, 0x03, 0xe7, 
-	0x03, 0xa7, 0x03, 0xa7, 0x03, 0x67, 0x03, 0x25, 
-	0x03, 0x25, 0x02, 0xe5, 0x02, 0xe5, 0x0b, 0x25, 
-	0xbe, 0xb5, 0xb6, 0xb5, 0xb6, 0x75, 0xb6, 0x73, 
-	0xae, 0x33, 0xae, 0x31, 0xad, 0xf1, 0xa5, 0xef, 
-	0xad, 0x69, 0xad, 0x69, 0xad, 0x6b, 0xad, 0xad, 
-	0xad, 0xed, 0xa5, 0xed, 0x95, 0xef, 0x75, 0xef, 
-	0x5d, 0xef, 0x45, 0xaf, 0x25, 0xaf, 0x15, 0x6d, 
-	0x0c, 0xeb, 0x04, 0xab, 0x04, 0x69, 0x04, 0x29, 
-	0x03, 0xe9, 0x03, 0xe7, 0x03, 0xa5, 0x03, 0xa5, 
-	0x03, 0x65, 0x03, 0x65, 0x03, 0x67, 0x03, 0x67, 
-	0xa6, 0x33, 0xb6, 0x75, 0xb6, 0x73, 0xb6, 0x73, 
-	0xae, 0x31, 0xae, 0x31, 0xa5, 0xf1, 0xa5, 0xef, 
-	0xad, 0x69, 0xad, 0x6b, 0xad, 0xab, 0xad, 0xad, 
-	0xad, 0xed, 0xa5, 0xef, 0x96, 0x31, 0x86, 0x31, 
-	0x6e, 0x31, 0x4d, 0xf1, 0x2d, 0xaf, 0x15, 0x6d, 
-	0x0d, 0x2d, 0x04, 0xeb, 0x04, 0xab, 0x04, 0xab, 
-	0x04, 0x29, 0x04, 0x27, 0x04, 0x29, 0x04, 0x27, 
-	0x03, 0xa7, 0x03, 0xe9, 0x03, 0xe9, 0x0b, 0xa7, 
-	0x8d, 0xb1, 0xb6, 0x75, 0xb6, 0x73, 0xb6, 0x33, 
-	0xae, 0x31, 0xae, 0x31, 0xa5, 0xf1, 0xa5, 0xef, 
-	0xb5, 0x6b, 0xad, 0x6b, 0xad, 0xab, 0xad, 0xad, 
-	0xad, 0xed, 0xad, 0xef, 0x9e, 0x2f, 0x86, 0x31, 
-	0x6e, 0x31, 0x4d, 0xef, 0x2d, 0xaf, 0x15, 0x6d, 
-	0x0d, 0x6d, 0x05, 0x2d, 0x04, 0xed, 0x04, 0xab, 
-	0x04, 0xa9, 0x04, 0xed, 0x04, 0xab, 0x04, 0x29, 
-	0x04, 0x69, 0x0c, 0x6b, 0x03, 0xe9, 0x0b, 0xa7, 
-	0x8d, 0xb1, 0xb6, 0x73, 0xb6, 0x73, 0xae, 0x33, 
-	0xae, 0x33, 0xae, 0x31, 0xa5, 0xf1, 0xa5, 0xef, 
-	0xa5, 0x27, 0xad, 0x69, 0xa5, 0x69, 0xa5, 0x69, 
-	0xad, 0xab, 0xa5, 0xad, 0x95, 0xad, 0x85, 0xef, 
-	0x7e, 0x31, 0x66, 0x31, 0x4d, 0xf1, 0x2d, 0xf1, 
-	0x15, 0xaf, 0x0d, 0x6d, 0x0d, 0x2d, 0x05, 0x2d, 
-	0x05, 0x2d, 0x0d, 0x6f, 0x04, 0xa9, 0x04, 0xab, 
-	0x0d, 0x2f, 0x0c, 0xab, 0x04, 0x27, 0x0c, 0x27, 
-	0xb6, 0x75, 0xb6, 0x75, 0xb6, 0x73, 0xb6, 0x73, 
-	0xae, 0x31, 0xae, 0x31, 0xa5, 0xf1, 0xa5, 0xef, 
-	0x83, 0xdd, 0xad, 0x69, 0xa5, 0x69, 0xa5, 0x69, 
-	0xa5, 0x69, 0x9d, 0x6b, 0x9d, 0xad, 0x9e, 0x31, 
-	0x96, 0x73, 0x7e, 0x31, 0x5e, 0x33, 0x3d, 0xf1, 
-	0x25, 0xaf, 0x1d, 0xad, 0x15, 0xaf, 0x15, 0xaf, 
-	0x0d, 0xaf, 0x0d, 0x2d, 0x0d, 0x2d, 0x0d, 0x6d, 
-	0x0d, 0x2d, 0x0c, 0x69, 0x0c, 0x69, 0x2c, 0xeb, 
-	0xbe, 0xb5, 0xb6, 0xb5, 0xb6, 0x75, 0xb6, 0x73, 
-	0xae, 0x33, 0xae, 0x31, 0xad, 0xf1, 0xa5, 0xef, 
-	0x83, 0xdf, 0xa4, 0xe7, 0xad, 0xab, 0xa5, 0x6b, 
-	0x9d, 0x69, 0xa5, 0xab, 0xad, 0xef, 0xa6, 0x31, 
-	0x9e, 0x71, 0x7e, 0x31, 0x6e, 0x31, 0x5e, 0x33, 
-	0x56, 0x33, 0x3e, 0x31, 0x2d, 0xf1, 0x25, 0xf1, 
-	0x1d, 0xaf, 0x15, 0x6d, 0x15, 0x6d, 0x15, 0x6d, 
-	0x0c, 0xeb, 0x0c, 0x67, 0x0c, 0x67, 0x3d, 0x2d, 
-	0xbe, 0xb5, 0xbe, 0xb5, 0xb6, 0x75, 0xb6, 0x73, 
-	0xb6, 0x73, 0xae, 0x33, 0xae, 0x31, 0xad, 0xf1, 
-	0x8c, 0x21, 0x94, 0x61, 0xb5, 0xad, 0xad, 0xab, 
-	0xa5, 0x6b, 0xad, 0xad, 0xb5, 0xef, 0xb6, 0x31, 
-	0xa6, 0x31, 0x8e, 0x31, 0x7e, 0x31, 0x7e, 0x73, 
-	0x6e, 0x73, 0x5e, 0x33, 0x46, 0x31, 0x3d, 0xf1, 
-	0x2d, 0xaf, 0x25, 0xad, 0x1d, 0x6d, 0x15, 0x2b, 
-	0x0c, 0xa7, 0x0c, 0x65, 0x14, 0xa7, 0x3d, 0x2b, 
-	0xbe, 0xb7, 0xbe, 0xb7, 0xbe, 0xb5, 0xb6, 0x75, 
-	0xb6, 0x73, 0xb6, 0x73, 0xae, 0x31, 0xae, 0x31, 
-	0x8c, 0x21, 0x8c, 0x21, 0xad, 0x6b, 0xad, 0xad, 
-	0xad, 0xad, 0xb5, 0xef, 0xb6, 0x2f, 0xb6, 0x2f, 
-	0xae, 0x2f, 0x9e, 0x2f, 0x96, 0x31, 0x8e, 0x71, 
-	0x86, 0x71, 0x6e, 0x31, 0x5e, 0x31, 0x55, 0xf1, 
-	0x3d, 0xaf, 0x2d, 0xad, 0x25, 0x2b, 0x14, 0xe9, 
-	0x0c, 0xa7, 0x0c, 0x65, 0x14, 0xa7, 0x65, 0xaf, 
-	0xc6, 0xf7, 0xbe, 0xf7, 0xbe, 0xb7, 0xbe, 0xb5, 
-	0xb6, 0x75, 0xb6, 0x73, 0xb6, 0x73, 0xae, 0x31, 
-	0x8c, 0x61, 0x8c, 0x61, 0xad, 0x69, 0xad, 0xab, 
-	0xad, 0xad, 0xb6, 0x2f, 0xb5, 0xef, 0xb6, 0x2f, 
-	0xb5, 0xef, 0xae, 0x2f, 0xa6, 0x31, 0x9e, 0x31, 
-	0x96, 0x2f, 0x86, 0x2f, 0x7d, 0xef, 0x6d, 0xed, 
-	0x55, 0xad, 0x35, 0x2b, 0x24, 0xe9, 0x1c, 0xa7, 
-	0x1d, 0x2b, 0x14, 0xa7, 0x14, 0x65, 0xa6, 0x75, 
-	0xc6, 0xf7, 0xc6, 0xf7, 0xbe, 0xf7, 0xbe, 0xb7, 
-	0xbe, 0xb5, 0xb6, 0x75, 0xb6, 0x75, 0xb6, 0x73, 
-	0x94, 0x63, 0x94, 0x63, 0xad, 0x6b, 0xad, 0x6b, 
-	0xa5, 0x6b, 0xb5, 0xef, 0xb6, 0x2f, 0xb6, 0x2f, 
-	0xb5, 0xef, 0xb5, 0xef, 0xb5, 0xef, 0xae, 0x2f, 
-	0x9d, 0xef, 0x9d, 0xef, 0x8d, 0xef, 0x7d, 0xad, 
-	0x5d, 0x6b, 0x3d, 0x29, 0x2c, 0xa7, 0x2d, 0x2b, 
-	0x25, 0x6d, 0x1d, 0x6d, 0x65, 0xf1, 0xc7, 0x39, 
-	0xc7, 0x39, 0xc6, 0xf9, 0xc6, 0xf9, 0xc6, 0xf7, 
-	0xbe, 0xb7, 0xbe, 0xb5, 0xb6, 0xb5, 0xb6, 0x75, 
-	0x94, 0xa3, 0x94, 0xa3, 0xad, 0x6b, 0xa5, 0x6b, 
-	0x9d, 0x69, 0xa5, 0xab, 0xb5, 0xef, 0xb5, 0xef, 
-	0xb5, 0xef, 0xb5, 0xed, 0xb5, 0xef, 0xad, 0xed, 
-	0xa5, 0xed, 0xa5, 0xef, 0x9d, 0xad, 0x85, 0x6b, 
-	0x65, 0x29, 0x4c, 0xe7, 0x3d, 0x29, 0x3d, 0xad, 
-	0x2d, 0xad, 0x2d, 0xad, 0xb6, 0xf9, 0xcf, 0x3b, 
-	0xcf, 0x3b, 0xcf, 0x39, 0xc7, 0x39, 0xc6, 0xf9, 
-	0xc6, 0xf7, 0xbe, 0xb7, 0xbe, 0xb5, 0xbe, 0x75, 
-	0x9c, 0xe5, 0x9c, 0xe5, 0xad, 0xab, 0xa5, 0x6b, 
-	0xa5, 0x69, 0xa5, 0x69, 0xad, 0xab, 0xb5, 0xed, 
-	0xb5, 0xed, 0xb5, 0xed, 0xb5, 0xad, 0xb5, 0xad, 
-	0xa5, 0xab, 0xa5, 0xad, 0x9d, 0x6b, 0x85, 0x6b, 
-	0x6d, 0x29, 0x54, 0xa7, 0x55, 0x6d, 0x55, 0xef, 
-	0x45, 0xad, 0x7e, 0x73, 0xd7, 0x7b, 0xd7, 0x7b, 
-	0xcf, 0x7b, 0xcf, 0x3b, 0xcf, 0x3b, 0xc7, 0x39, 
-	0xc6, 0xf9, 0xbe, 0xf7, 0xbe, 0xb7, 0xbe, 0xb7, 
-	0xa4, 0xe7, 0xa4, 0xe7, 0xad, 0xab, 0xa5, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x69, 0xa5, 0x69, 0xad, 0xab, 
-	0xb5, 0xad, 0xad, 0xab, 0xad, 0xab, 0xad, 0xab, 
-	0xad, 0xab, 0xa5, 0xab, 0x9d, 0x69, 0x8d, 0x29, 
-	0x74, 0xe7, 0x64, 0xe7, 0x6d, 0x6d, 0x65, 0xad, 
-	0x5d, 0xef, 0xc7, 0x39, 0xdf, 0x7b, 0xd7, 0x7b, 
-	0xd7, 0x7d, 0xd7, 0x7b, 0xcf, 0x3b, 0xcf, 0x39, 
-	0xc7, 0x39, 0xc6, 0xf7, 0xc6, 0xf7, 0xbe, 0xb7, 
-	0xa4, 0xe7, 0xa4, 0xe7, 0xb5, 0xab, 0xa5, 0x69, 
-	0xa5, 0x29, 0xa5, 0x69, 0xa5, 0x29, 0xa5, 0x29, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xa5, 0x69, 0xa5, 0x69, 0x9d, 0x29, 0x8c, 0xe7, 
-	0x7c, 0xa5, 0x74, 0xa5, 0x7d, 0x29, 0x75, 0xab, 
-	0x96, 0x31, 0xd7, 0x3b, 0xdf, 0x7b, 0xdf, 0x7b, 
-	0xdf, 0x7b, 0xd7, 0x7b, 0xcf, 0x7b, 0xcf, 0x3b, 
-	0xcf, 0x39, 0xc7, 0x39, 0xc6, 0xf7, 0xc6, 0xf7, 
-	0xad, 0x29, 0xad, 0x29, 0xb5, 0xab, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x69, 0xad, 0x69, 0xa5, 0x29, 
-	0xa5, 0x29, 0xad, 0x69, 0xad, 0x69, 0xad, 0x69, 
-	0xa5, 0x69, 0xa5, 0x29, 0x9d, 0x27, 0x94, 0xe7, 
-	0x84, 0xa5, 0x7c, 0xa5, 0x84, 0xa5, 0x95, 0x29, 
-	0xb6, 0x73, 0xd7, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 
-	0xdf, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 0xcf, 0x7b, 
-	0xcf, 0x3b, 0xcf, 0x39, 0xc7, 0x39, 0xc6, 0xf7, 
-	0xb5, 0xab, 0xb5, 0x6b, 0xb5, 0x6b, 0xa5, 0x29, 
-	0xa5, 0x69, 0xad, 0x69, 0xb5, 0x6b, 0xad, 0x69, 
-	0xad, 0x69, 0xa5, 0x29, 0xa5, 0x27, 0xa5, 0x27, 
-	0xa5, 0x27, 0x9c, 0xe7, 0x9c, 0xe7, 0x94, 0xe7, 
-	0x94, 0xa5, 0x8c, 0xa5, 0x8c, 0xa5, 0x8c, 0xa5, 
-	0xb6, 0x73, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 
-	0xdf, 0x7b, 0xdf, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 
-	0xcf, 0x7b, 0xcf, 0x39, 0xcf, 0x39, 0xc7, 0x39, 
-	0xbd, 0xed, 0xbd, 0xad, 0xbd, 0xad, 0xad, 0x69, 
-	0xad, 0x69, 0xb5, 0x6b, 0xad, 0x69, 0xad, 0x29, 
-	0xa5, 0x27, 0xa4, 0xe7, 0xa4, 0xe7, 0xa4, 0xe7, 
-	0xa4, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x94, 0xe5, 0x94, 0xe5, 0x94, 0xe5, 0x9c, 0xe5, 
-	0xc6, 0xf7, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 
-	0xdf, 0x7b, 0xdf, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 
-	0xcf, 0x7b, 0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 
-	0xce, 0x2f, 0xce, 0x31, 0xc5, 0xed, 0xb5, 0x6b, 
-	0xb5, 0x6b, 0xad, 0x6b, 0xad, 0x29, 0xa4, 0xe7, 
-	0xa4, 0xe5, 0x9c, 0xe5, 0x9c, 0xe5, 0x9c, 0xe5, 
-	0x9c, 0xe5, 0x9c, 0xe5, 0x9c, 0xe5, 0xa4, 0xe7, 
-	0x9c, 0xe7, 0x9c, 0xe5, 0x9c, 0xe5, 0xa5, 0x6b, 
-	0xd7, 0x3b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 
-	0xd7, 0x7b, 0xcf, 0x7b, 0xcf, 0x3b, 0xcf, 0x39, 
-	0xd6, 0x71, 0xd6, 0x71, 0xc5, 0xed, 0xad, 0x6b, 
-	0x8d, 0x69, 0x9d, 0x29, 0xa5, 0x29, 0xa4, 0xe5, 
-	0x9c, 0xe5, 0xad, 0x27, 0xa4, 0xe7, 0x9c, 0xe5, 
-	0xa4, 0xe5, 0xa4, 0xe7, 0xa5, 0x27, 0xa5, 0x27, 
-	0xa5, 0x27, 0x9c, 0xe7, 0x9c, 0xe7, 0xbe, 0x73, 
-	0xd7, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 
-	0xcf, 0x7b, 0xcf, 0x7b, 0xcf, 0x3b, 0xcf, 0x3b, 
-	0xd6, 0x73, 0xd6, 0x73, 0xbd, 0xad, 0x7c, 0xe7, 
-	0x14, 0xa7, 0x1c, 0xa7, 0x1c, 0xa9, 0x24, 0xa9, 
-	0x4c, 0xa7, 0x6c, 0xe9, 0x95, 0x29, 0x74, 0xa7, 
-	0x54, 0x25, 0x53, 0xe5, 0x5b, 0xe5, 0x74, 0x25, 
-	0x8c, 0xa7, 0x9c, 0xe7, 0x9d, 0x6b, 0xcf, 0x39, 
-	0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xd7, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 
-	0xcf, 0x7b, 0xcf, 0x7b, 0xcf, 0x3b, 0xcf, 0x3b, 
-	0xd6, 0x71, 0xd6, 0x71, 0xb5, 0x69, 0x44, 0xa5, 
-	0x14, 0xa5, 0x14, 0xa7, 0x14, 0xa7, 0x0c, 0xa9, 
-	0x0c, 0xa9, 0x0c, 0x69, 0x0c, 0x27, 0x0b, 0xe7, 
-	0x0b, 0x65, 0x0a, 0xa3, 0x02, 0x23, 0x09, 0xe3, 
-	0x0a, 0x25, 0x12, 0x65, 0x64, 0x6b, 0xd7, 0x3b, 
-	0xdf, 0x7b, 0xdf, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 0xcf, 0x7b, 
-	0xcf, 0x7b, 0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x3b, 
-	0xce, 0x31, 0xce, 0x71, 0xa5, 0x29, 0x24, 0x65, 
-	0x14, 0x65, 0x14, 0xa7, 0x14, 0xa7, 0x14, 0xa7, 
-	0x0c, 0xa7, 0x0c, 0x67, 0x0c, 0x27, 0x0b, 0xa7, 
-	0x0b, 0x27, 0x0a, 0xa5, 0x0a, 0x23, 0x0a, 0x23, 
-	0x12, 0x27, 0x12, 0x65, 0x12, 0x63, 0x4b, 0xed, 
-	0xb6, 0xb7, 0xd7, 0x7b, 0xd7, 0x7b, 0xd7, 0x7b, 
-	0xd7, 0x7b, 0xd7, 0x7b, 0xcf, 0x7b, 0xcf, 0x7b, 
-	0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x39, 
-	0xce, 0x2f, 0xce, 0x2f, 0x9d, 0x69, 0x1c, 0x65, 
-	0x14, 0x65, 0x14, 0xa5, 0x14, 0xa7, 0x14, 0xa7, 
-	0x0c, 0xa7, 0x14, 0xa9, 0x14, 0xab, 0x14, 0x29, 
-	0x0b, 0x29, 0x0a, 0xa7, 0x0a, 0x25, 0x0a, 0x25, 
-	0x12, 0x25, 0x0a, 0x63, 0x12, 0x65, 0x12, 0x65, 
-	0x12, 0x65, 0x95, 0xb3, 0xd7, 0x7b, 0xd7, 0x7b, 
-	0xd7, 0x7b, 0xcf, 0x7b, 0xcf, 0x7b, 0xcf, 0x3b, 
-	0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 
-	0xc5, 0xed, 0xc5, 0xef, 0x7d, 0x6b, 0x25, 0x29, 
-	0x1c, 0x65, 0x1c, 0x65, 0x14, 0xa7, 0x14, 0xa7, 
-	0x1d, 0x2b, 0x1d, 0x2b, 0x14, 0xab, 0x0b, 0xe9, 
-	0x0b, 0x67, 0x0a, 0x65, 0x0a, 0x65, 0x0a, 0x65, 
-	0x12, 0x65, 0x12, 0xa5, 0x12, 0x65, 0x0a, 0x25, 
-	0x02, 0x23, 0x0a, 0x63, 0x6d, 0x2f, 0xcf, 0x3b, 
-	0xcf, 0x7b, 0xcf, 0x7b, 0xcf, 0x3b, 0xcf, 0x3b, 
-	0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 
-	0xc5, 0xed, 0xbd, 0xad, 0x5d, 0x6b, 0x2d, 0x6b, 
-	0x24, 0xe9, 0x1c, 0x65, 0x24, 0xe7, 0x2d, 0x6b, 
-	0x25, 0x2b, 0x25, 0x2b, 0x1c, 0xed, 0x1c, 0xab, 
-	0x13, 0xa9, 0x0a, 0xe5, 0x02, 0x65, 0x0a, 0x65, 
-	0x0a, 0x63, 0x12, 0xe7, 0x0a, 0x63, 0x0a, 0x23, 
-	0x02, 0x21, 0x0a, 0xa3, 0x0b, 0x65, 0x44, 0xed, 
-	0xcf, 0x39, 0xcf, 0x3b, 0xcf, 0x3b, 0xcf, 0x3b, 
-	0xcf, 0x3b, 0xcf, 0x39, 0xcf, 0x39, 0xcf, 0x39, 
-	0xbd, 0xad, 0xb5, 0xab, 0x4d, 0x6d, 0x35, 0x6b, 
-	0x35, 0x29, 0x24, 0xa5, 0x3d, 0x29, 0x35, 0x6b, 
-	0x35, 0x2b, 0x35, 0x6d, 0x2d, 0x2d, 0x1c, 0xab, 
-	0x13, 0xe9, 0x0b, 0x25, 0x0a, 0xa5, 0x0a, 0x63, 
-	0x0a, 0x65, 0x12, 0xa5, 0x12, 0x65, 0x0a, 0x23, 
-	0x0a, 0x63, 0x0a, 0xe5, 0x0b, 0xa7, 0x0c, 0x27, 
-	0x2c, 0xeb, 0xb6, 0xb7, 0xd7, 0x3b, 0xcf, 0x3b, 
-	0xcf, 0x39, 0xcf, 0x39, 0xcf, 0x39, 0xc7, 0x39, 
-	0xbd, 0xad, 0xad, 0xab, 0x45, 0xaf, 0x45, 0x6b, 
-	0x34, 0xa7, 0x45, 0x29, 0x4d, 0x6b, 0x45, 0x2b, 
-	0x4d, 0xad, 0x45, 0xaf, 0x35, 0x6d, 0x24, 0xed, 
-	0x14, 0x69, 0x0b, 0xa7, 0x0b, 0x27, 0x0a, 0xe5, 
-	0x12, 0xe5, 0x12, 0xa5, 0x12, 0xe7, 0x12, 0xe5, 
-	0x0a, 0xe3, 0x0b, 0x65, 0x0b, 0xe7, 0x0c, 0x67, 
-	0x0c, 0xa9, 0x1c, 0xe9, 0x9e, 0x73, 0xd7, 0x3b, 
-	0xcf, 0x3b, 0xc7, 0x39, 0xc7, 0x39, 0xc6, 0xf9, 
-	0xb5, 0xab, 0x95, 0x6b, 0x55, 0xad, 0x4d, 0xad, 
-	0x44, 0xa7, 0x65, 0x6b, 0x55, 0x29, 0x65, 0xad, 
-	0x5d, 0xef, 0x55, 0xef, 0x45, 0x6d, 0x2d, 0x2d, 
-	0x14, 0x69, 0x14, 0x29, 0x0b, 0x67, 0x13, 0x27, 
-	0x13, 0x27, 0x13, 0x27, 0x1b, 0x69, 0x1b, 0x67, 
-	0x13, 0x65, 0x0b, 0xa5, 0x0c, 0x27, 0x0c, 0x67, 
-	0x0c, 0xa9, 0x0c, 0xa7, 0x1c, 0xa7, 0x8d, 0xf1, 
-	0xce, 0xf9, 0xcf, 0x39, 0xc7, 0x39, 0xc6, 0xf7, 
-	0xb5, 0x6b, 0x8c, 0xe7, 0x54, 0xa7, 0x55, 0x2b, 
-	0x5c, 0xe7, 0x6d, 0x69, 0x6d, 0x6b, 0x7d, 0xef, 
-	0x75, 0xef, 0x65, 0xef, 0x4d, 0xaf, 0x35, 0x2b, 
-	0x24, 0xeb, 0x14, 0x6b, 0x13, 0xe7, 0x1b, 0xe9, 
-	0x1b, 0xa7, 0x23, 0xe9, 0x23, 0xa9, 0x24, 0x29, 
-	0x1c, 0x29, 0x13, 0xe5, 0x14, 0x67, 0x0c, 0x67, 
-	0x0c, 0xa7, 0x14, 0xa7, 0x14, 0xa7, 0x1c, 0xa7, 
-	0x95, 0xef, 0xd7, 0x39, 0xd7, 0x39, 0xc6, 0xf7, 
-	0xb5, 0x69, 0x84, 0xe7, 0x5c, 0xa5, 0x5c, 0xa5, 
-	0x6d, 0x29, 0x75, 0x29, 0x85, 0x6b, 0x8d, 0xef, 
-	0x8e, 0x2f, 0x75, 0xad, 0x5d, 0xad, 0x4d, 0x6f, 
-	0x34, 0xed, 0x24, 0xab, 0x2c, 0x6b, 0x24, 0x29, 
-	0x2c, 0x69, 0x2c, 0x6b, 0x34, 0x6b, 0x2c, 0x69, 
-	0x2c, 0xa9, 0x24, 0x67, 0x14, 0x65, 0x14, 0xa7, 
-	0x0c, 0xa5, 0x14, 0xa7, 0x14, 0xa7, 0x14, 0xa7, 
-	0x4d, 0x6d, 0xd7, 0x3b, 0xd7, 0x7b, 0xd7, 0x39, 
-	0xb5, 0x69, 0x8d, 0x29, 0x75, 0x29, 0x6c, 0xa5, 
-	0x85, 0x29, 0x85, 0x69, 0x8d, 0x6b, 0x9d, 0xef, 
-	0x95, 0xef, 0x85, 0xef, 0x75, 0xef, 0x55, 0xaf, 
-	0x45, 0x2d, 0x3c, 0xeb, 0x3c, 0xed, 0x34, 0xab, 
-	0x3c, 0xeb, 0x44, 0xed, 0x4c, 0xed, 0x3c, 0xa9, 
-	0x3c, 0xeb, 0x2c, 0xa9, 0x1c, 0x65, 0x1c, 0xa7, 
-	0x14, 0xa7, 0x14, 0xa5, 0x14, 0xa7, 0x14, 0xa5, 
-	0x1c, 0x65, 0xb6, 0xf9, 0xd7, 0x39, 0xd7, 0x39, 
-	0xad, 0x29, 0x84, 0xe7, 0x7d, 0x29, 0x7c, 0xa5, 
-	0x84, 0xe7, 0x95, 0x6b, 0x9d, 0x6b, 0xa5, 0xef, 
-	0xa5, 0xed, 0x95, 0xef, 0x85, 0xef, 0x75, 0xaf, 
-	0x5d, 0x6d, 0x5d, 0x6d, 0x4c, 0xeb, 0x55, 0x2d, 
-	0x5d, 0x2d, 0x5d, 0x2b, 0x65, 0x6d, 0x4d, 0x2b, 
-	0x55, 0x2b, 0x3c, 0xe9, 0x2c, 0xa7, 0x24, 0xa7, 
-	0x24, 0xa7, 0x14, 0xa7, 0x14, 0xa5, 0x14, 0x21, 
-	0x13, 0x1b, 0x86, 0x33, 0xcf, 0x39, 0xcf, 0x39, 
-	0xad, 0x27, 0x84, 0xe5, 0x7c, 0xa5, 0x84, 0xa5, 
-	0x8c, 0xe7, 0x9d, 0x69, 0x9d, 0x6b, 0xad, 0xad, 
-	0xa5, 0xad, 0xa5, 0xad, 0x95, 0xad, 0x85, 0xad, 
-	0x7d, 0xad, 0x6d, 0x6d, 0x65, 0x6d, 0x75, 0x6d, 
-	0x75, 0x6d, 0x75, 0x6d, 0x75, 0x6d, 0x6d, 0x6b, 
-	0x65, 0x6b, 0x4c, 0xe9, 0x44, 0xe7, 0x34, 0xa7, 
-	0x2c, 0xe7, 0x24, 0xe7, 0x14, 0xa7, 0x13, 0x5b, 
-	0x0a, 0xd7, 0x4c, 0xe7, 0xcf, 0x39, 0xcf, 0x39, 
-	0xa4, 0xe7, 0x8c, 0xa5, 0x84, 0xa5, 0x8c, 0xa5, 
-	0x94, 0xe5, 0x9d, 0x29, 0xa5, 0x69, 0xa5, 0xab, 
-	0xad, 0xad, 0xa5, 0xab, 0x9d, 0xad, 0x95, 0xad, 
-	0x8d, 0xad, 0x85, 0x6d, 0x8d, 0xad, 0x8d, 0xad, 
-	0x85, 0x6b, 0x95, 0xad, 0x85, 0x6b, 0x85, 0x6b, 
-	0x7d, 0x6b, 0x65, 0x29, 0x5d, 0x29, 0x4c, 0xe7, 
-	0x44, 0xe7, 0x3c, 0xe7, 0x2c, 0xa7, 0x13, 0x19, 
-	0x12, 0xd7, 0x23, 0x5b, 0xc6, 0xf7, 0xcf, 0x39, 
-	0x9c, 0xa3, 0x94, 0xe5, 0x8c, 0xa5, 0x8c, 0xa5, 
-	0x94, 0xe5, 0x9d, 0x27, 0xa5, 0x29, 0xa5, 0x69, 
-	0xa5, 0x6b, 0x9d, 0x6b, 0x9d, 0x6b, 0x9d, 0x6b, 
-	0x95, 0x6b, 0x9d, 0xad, 0x9d, 0xad, 0x95, 0x6b, 
-	0x9d, 0xad, 0xa5, 0xad, 0x9d, 0xab, 0x9d, 0x6b, 
-	0x8d, 0x6b, 0x85, 0x6b, 0x7d, 0x6b, 0x65, 0x29, 
-	0x54, 0xe7, 0x54, 0xe7, 0x4c, 0xa7, 0x3c, 0x65, 
-	0x13, 0x19, 0x12, 0x95, 0xa5, 0xef, 0xcf, 0x39, 
-	0x8c, 0x21, 0x9c, 0xe7, 0x94, 0xe5, 0x94, 0xe5, 
-	0x94, 0xe5, 0x9c, 0xe7, 0x9d, 0x27, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x69, 0xa5, 0x69, 0x9d, 0x69, 
-	0xa5, 0xab, 0xa5, 0xab, 0xa5, 0x6b, 0xad, 0xab, 
-	0xad, 0xad, 0xad, 0xad, 0xad, 0xad, 0xad, 0xab, 
-	0xa5, 0xab, 0x9d, 0x6b, 0x8d, 0x69, 0x7d, 0x29, 
-	0x6d, 0x29, 0x54, 0xe7, 0x54, 0xe7, 0x4c, 0xe5, 
-	0x44, 0x63, 0x12, 0xd7, 0x8d, 0xad, 0xcf, 0x39, 
-	0x94, 0x21, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe5, 
-	0x9c, 0xa5, 0x9c, 0xe5, 0x9c, 0xe7, 0x9d, 0x27, 
-	0xa5, 0x27, 0xa5, 0x29, 0xa5, 0x69, 0xad, 0x6b, 
-	0xad, 0xab, 0xb5, 0xab, 0xb5, 0xad, 0xbd, 0xed, 
-	0xbd, 0xed, 0xbd, 0xed, 0xbd, 0xed, 0xbd, 0xed, 
-	0xb5, 0xad, 0xad, 0xab, 0x9d, 0x6b, 0x95, 0x6b, 
-	0x85, 0x29, 0x75, 0x29, 0x5c, 0xe7, 0x54, 0xe7, 
-	0x54, 0xa5, 0x4c, 0xa5, 0x9e, 0x73, 0xcf, 0x39, 
-	0x94, 0x61, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x9c, 0xe5, 0x9c, 0xe5, 0x9c, 0xe7, 0xa4, 0xe7, 
-	0xa4, 0xe7, 0xa5, 0x27, 0xa5, 0x29, 0xad, 0x69, 
-	0xb5, 0xab, 0xb5, 0xab, 0xbd, 0xef, 0xc5, 0xef, 
-	0xc5, 0xed, 0xbd, 0xed, 0xc5, 0xef, 0xc5, 0xed, 
-	0xce, 0x2f, 0xbd, 0xad, 0xad, 0xab, 0xa5, 0x6b, 
-	0x95, 0x69, 0x8d, 0x29, 0x7d, 0x29, 0x6c, 0xe7, 
-	0x54, 0xe7, 0x54, 0xe7, 0x7d, 0xf1, 0xd7, 0x7b, 
-	0x8c, 0x1f, 0x94, 0xa3, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0xa4, 0xe7, 0xa4, 0xe7, 0xa5, 0x27, 0xa4, 0xe7, 
-	0xa5, 0x27, 0xa5, 0x27, 0xad, 0x29, 0xad, 0x69, 
-	0xb5, 0xab, 0xb5, 0xab, 0xc6, 0x2f, 0xc5, 0xed, 
-	0xbd, 0xed, 0xbd, 0xed, 0xbd, 0xed, 0xbd, 0xed, 
-	0xd6, 0x73, 0xd6, 0x73, 0xbd, 0xed, 0xad, 0xad, 
-	0xa5, 0xad, 0x9d, 0x6b, 0x8d, 0x29, 0x84, 0xe7, 
-	0x74, 0xe7, 0x5c, 0xe7, 0x5c, 0xe7, 0xcf, 0x39, 
-	0x84, 0x1f, 0x8c, 0x21, 0x9c, 0xa5, 0x9c, 0xe7, 
-	0xa4, 0xe7, 0xa5, 0x27, 0xa5, 0x27, 0xa5, 0x27, 
-	0xa5, 0x27, 0xa5, 0x27, 0xad, 0x29, 0xad, 0x69, 
-	0xb5, 0x6b, 0xb5, 0xab, 0xc6, 0x2f, 0xc5, 0xed, 
-	0xbd, 0xed, 0xbd, 0xed, 0xbd, 0xed, 0xbd, 0xed, 
-	0xd6, 0x73, 0xde, 0xb3, 0xd6, 0x73, 0xbd, 0xef, 
-	0xb5, 0xed, 0xad, 0xad, 0x9d, 0x6b, 0x95, 0x29, 
-	0x85, 0x27, 0x74, 0xe7, 0x75, 0x6b, 0xbe, 0xf7, 
-	
-};
-
-Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0[1241] = {
-	{{ {-285, 489, 73}, 0, {555, 548}, {139, 228, 42, 255} }},
-	{{ {-281, 416, 14}, 0, {599, 572}, {132, 242, 23, 255} }},
-	{{ {-265, 415, 67}, 0, {572, 585}, {139, 241, 48, 255} }},
-	{{ {-305, 482, -43}, 0, {615, 526}, {133, 223, 2, 255} }},
-	{{ {-306, 566, 67}, 0, {543, 506}, {137, 230, 37, 255} }},
-	{{ {-341, 614, -65}, 0, {601, 453}, {133, 224, 4, 255} }},
-	{{ {-325, 651, 54}, 0, {533, 460}, {137, 236, 40, 255} }},
-	{{ {-357, 713, -26}, 0, {561, 411}, {132, 243, 25, 255} }},
-	{{ {-337, 726, 39}, 0, {526, 418}, {140, 1, 51, 255} }},
-	{{ {-337, 776, 27}, 0, {521, 391}, {140, 23, 46, 255} }},
-	{{ {-360, 762, -39}, 0, {558, 384}, {131, 12, 22, 255} }},
-	{{ {-361, 698, -94}, 0, {600, 404}, {131, 236, 3, 255} }},
-	{{ {-368, 747, -114}, 0, {600, 376}, {129, 0, 255, 255} }},
-	{{ {-354, 682, -164}, 0, {637, 401}, {134, 224, 239, 255} }},
-	{{ {-361, 733, -180}, 0, {637, 373}, {132, 248, 232, 255} }},
-	{{ {-334, 667, -226}, 0, {673, 399}, {142, 220, 213, 255} }},
-	{{ {-361, 733, -180}, 0, {637, 373}, {132, 248, 232, 255} }},
-	{{ {-341, 717, -242}, 0, {672, 369}, {140, 240, 207, 255} }},
-	{{ {-334, 667, -226}, 0, {673, 399}, {142, 220, 213, 255} }},
-	{{ {-307, 705, -300}, 0, {709, 370}, {152, 234, 186, 255} }},
-	{{ {-300, 652, -284}, 0, {709, 399}, {155, 210, 194, 255} }},
-	{{ {-261, 692, -352}, 0, {747, 371}, {169, 230, 167, 255} }},
-	{{ {-254, 641, -336}, 0, {746, 400}, {171, 210, 173, 255} }},
-	{{ {-204, 681, -392}, 0, {785, 377}, {189, 228, 152, 255} }},
-	{{ {-199, 630, -376}, 0, {783, 405}, {190, 203, 161, 255} }},
-	{{ {-140, 672, -423}, 0, {823, 382}, {209, 227, 142, 255} }},
-	{{ {-137, 623, -407}, 0, {819, 410}, {210, 206, 149, 255} }},
-	{{ {-72, 667, -442}, 0, {861, 390}, {231, 227, 135, 255} }},
-	{{ {-69, 617, -425}, 0, {856, 418}, {233, 201, 144, 255} }},
-	{{ {0, 665, -450}, 0, {898, 398}, {0, 227, 132, 255} }},
-	{{ {0, 615, -433}, 0, {892, 426}, {0, 204, 140, 255} }},
-	{{ {0, 521, -371}, 0, {875, 484}, {0, 191, 147, 255} }},
-	{{ {-69, 617, -425}, 0, {856, 418}, {233, 201, 144, 255} }},
-	{{ {0, 521, -371}, 0, {875, 484}, {0, 191, 147, 255} }},
-	{{ {-123, 532, -354}, 0, {810, 466}, {213, 194, 154, 255} }},
-	{{ {-113, 462, -319}, 0, {805, 508}, {212, 205, 148, 255} }},
-	{{ {0, 462, -341}, 0, {866, 519}, {0, 204, 140, 255} }},
-	{{ {-56, 417, -321}, 0, {831, 538}, {232, 246, 132, 255} }},
-	{{ {0, 417, -326}, 0, {861, 544}, {0, 246, 129, 255} }},
-	{{ {-109, 417, -305}, 0, {802, 534}, {208, 247, 139, 255} }},
-	{{ {-159, 417, -279}, 0, {772, 532}, {188, 242, 149, 255} }},
-	{{ {-215, 468, -258}, 0, {741, 504}, {171, 208, 175, 255} }},
-	{{ {-202, 417, -244}, 0, {742, 533}, {167, 240, 166, 255} }},
-	{{ {-238, 417, -201}, 0, {713, 537}, {150, 240, 187, 255} }},
-	{{ {-280, 473, -160}, 0, {677, 512}, {143, 216, 215, 255} }},
-	{{ {-265, 417, -152}, 0, {684, 543}, {139, 243, 207, 255} }},
-	{{ {-281, 417, -98}, 0, {655, 551}, {132, 243, 233, 255} }},
-	{{ {-305, 482, -43}, 0, {615, 526}, {133, 223, 2, 255} }},
-	{{ {-281, 417, -98}, 0, {655, 551}, {132, 243, 233, 255} }},
-	{{ {-287, 416, -42}, 0, {627, 561}, {130, 244, 0, 255} }},
-	{{ {-305, 482, -43}, 0, {615, 526}, {133, 223, 2, 255} }},
-	{{ {-281, 416, 14}, 0, {599, 572}, {132, 242, 23, 255} }},
-	{{ {-316, 592, -192}, 0, {670, 443}, {144, 210, 216, 255} }},
-	{{ {-280, 473, -160}, 0, {677, 512}, {143, 216, 215, 255} }},
-	{{ {-215, 468, -258}, 0, {741, 504}, {171, 208, 175, 255} }},
-	{{ {-242, 583, -305}, 0, {742, 436}, {172, 199, 179, 255} }},
-	{{ {-300, 652, -284}, 0, {709, 399}, {155, 210, 194, 255} }},
-	{{ {-334, 667, -226}, 0, {673, 399}, {142, 220, 213, 255} }},
-	{{ {-354, 682, -164}, 0, {637, 401}, {134, 224, 239, 255} }},
-	{{ {-341, 614, -65}, 0, {601, 453}, {133, 224, 4, 255} }},
-	{{ {-361, 698, -94}, 0, {600, 404}, {131, 236, 3, 255} }},
-	{{ {-357, 713, -26}, 0, {561, 411}, {132, 243, 25, 255} }},
-	{{ {-123, 532, -354}, 0, {810, 466}, {213, 194, 154, 255} }},
-	{{ {-113, 462, -319}, 0, {805, 508}, {212, 205, 148, 255} }},
-	{{ {-242, 583, -305}, 0, {742, 436}, {172, 199, 179, 255} }},
-	{{ {-199, 630, -376}, 0, {783, 405}, {190, 203, 161, 255} }},
-	{{ {-123, 532, -354}, 0, {810, 466}, {213, 194, 154, 255} }},
-	{{ {-254, 641, -336}, 0, {746, 400}, {171, 210, 173, 255} }},
-	{{ {-300, 652, -284}, 0, {709, 399}, {155, 210, 194, 255} }},
-	{{ {-137, 623, -407}, 0, {819, 410}, {210, 206, 149, 255} }},
-	{{ {-69, 617, -425}, 0, {856, 418}, {233, 201, 144, 255} }},
-	{{ {0, 417, -326}, 0, {978, 974}, {0, 228, 132, 255} }},
-	{{ {0, 411, -333}, 0, {974, 974}, {5, 15, 130, 255} }},
-	{{ {-56, 417, -321}, 0, {978, 947}, {233, 227, 134, 255} }},
-	{{ {-56, 411, -328}, 0, {973, 947}, {234, 6, 131, 255} }},
-	{{ {0, 297, -289}, 0, {912, 974}, {0, 210, 138, 255} }},
-	{{ {-51, 297, -284}, 0, {912, 947}, {233, 210, 140, 255} }},
-	{{ {-112, 411, -312}, 0, {973, 921}, {224, 13, 134, 255} }},
-	{{ {-100, 297, -269}, 0, {912, 920}, {210, 210, 147, 255} }},
-	{{ {-162, 410, -285}, 0, {973, 894}, {207, 13, 139, 255} }},
-	{{ {-100, 297, -269}, 0, {912, 920}, {210, 210, 147, 255} }},
-	{{ {-145, 297, -243}, 0, {912, 892}, {189, 210, 158, 255} }},
-	{{ {-162, 410, -285}, 0, {973, 894}, {207, 13, 139, 255} }},
-	{{ {-206, 411, -249}, 0, {974, 867}, {169, 12, 165, 255} }},
-	{{ {-185, 297, -210}, 0, {912, 864}, {171, 211, 173, 255} }},
-	{{ {-244, 411, -205}, 0, {973, 840}, {161, 15, 173, 255} }},
-	{{ {-218, 297, -169}, 0, {912, 835}, {156, 212, 191, 255} }},
-	{{ {-271, 411, -154}, 0, {973, 812}, {147, 17, 193, 255} }},
-	{{ {-242, 297, -122}, 0, {912, 806}, {144, 215, 212, 255} }},
-	{{ {-288, 411, -99}, 0, {973, 783}, {137, 20, 215, 255} }},
-	{{ {-257, 298, -70}, 0, {912, 776}, {137, 218, 234, 255} }},
-	{{ {-294, 411, -42}, 0, {973, 753}, {132, 24, 239, 255} }},
-	{{ {-262, 298, -17}, 0, {912, 746}, {134, 222, 1, 255} }},
-	{{ {-289, 411, 15}, 0, {973, 723}, {133, 29, 7, 255} }},
-	{{ {-257, 298, 36}, 0, {912, 716}, {135, 227, 25, 255} }},
-	{{ {-272, 410, 70}, 0, {973, 693}, {137, 35, 29, 255} }},
-	{{ {-257, 298, 36}, 0, {912, 716}, {135, 227, 25, 255} }},
-	{{ {-242, 298, 88}, 0, {912, 686}, {141, 233, 48, 255} }},
-	{{ {-272, 410, 70}, 0, {973, 693}, {137, 35, 29, 255} }},
-	{{ {-245, 410, 121}, 0, {973, 663}, {147, 40, 51, 255} }},
-	{{ {-218, 298, 135}, 0, {912, 657}, {152, 240, 71, 255} }},
-	{{ {-209, 410, 166}, 0, {973, 633}, {161, 46, 70, 255} }},
-	{{ {-185, 298, 176}, 0, {912, 627}, {167, 247, 91, 255} }},
-	{{ {-164, 410, 201}, 0, {973, 603}, {180, 52, 88, 255} }},
-	{{ {-146, 298, 209}, 0, {912, 598}, {192, 252, 110, 255} }},
-	{{ {-114, 409, 225}, 0, {973, 574}, {198, 53, 100, 255} }},
-	{{ {-82, 298, 236}, 0, {912, 560}, {225, 1, 123, 255} }},
-	{{ {-60, 409, 236}, 0, {973, 544}, {238, 60, 111, 255} }},
-	{{ {0, 408, 243}, 0, {972, 514}, {8, 44, 119, 255} }},
-	{{ {0, 298, 246}, 0, {912, 514}, {254, 4, 127, 255} }},
-	{{ {0, 413, 233}, 0, {978, 514}, {0, 248, 127, 255} }},
-	{{ {-56, 413, 228}, 0, {978, 544}, {237, 250, 125, 255} }},
-	{{ {-110, 413, 216}, 0, {978, 574}, {217, 245, 120, 255} }},
-	{{ {-60, 409, 236}, 0, {973, 544}, {238, 60, 111, 255} }},
-	{{ {-56, 413, 228}, 0, {978, 544}, {237, 250, 125, 255} }},
-	{{ {-114, 409, 225}, 0, {973, 574}, {198, 53, 100, 255} }},
-	{{ {-164, 410, 201}, 0, {973, 603}, {180, 52, 88, 255} }},
-	{{ {-159, 414, 194}, 0, {978, 603}, {192, 241, 109, 255} }},
-	{{ {-209, 410, 166}, 0, {973, 633}, {161, 46, 70, 255} }},
-	{{ {-202, 414, 160}, 0, {978, 633}, {169, 232, 90, 255} }},
-	{{ {-245, 410, 121}, 0, {973, 663}, {147, 40, 51, 255} }},
-	{{ {-238, 415, 117}, 0, {978, 663}, {154, 226, 70, 255} }},
-	{{ {-272, 410, 70}, 0, {973, 693}, {137, 35, 29, 255} }},
-	{{ {-265, 415, 67}, 0, {978, 693}, {143, 223, 47, 255} }},
-	{{ {-289, 411, 15}, 0, {973, 723}, {133, 29, 7, 255} }},
-	{{ {-281, 416, 14}, 0, {978, 723}, {135, 224, 22, 255} }},
-	{{ {-294, 411, -42}, 0, {973, 753}, {132, 24, 239, 255} }},
-	{{ {-287, 416, -42}, 0, {978, 753}, {132, 227, 0, 255} }},
-	{{ {-288, 411, -99}, 0, {973, 783}, {137, 20, 215, 255} }},
-	{{ {-294, 411, -42}, 0, {973, 753}, {132, 24, 239, 255} }},
-	{{ {-287, 416, -42}, 0, {978, 753}, {132, 227, 0, 255} }},
-	{{ {-281, 417, -98}, 0, {978, 783}, {135, 225, 233, 255} }},
-	{{ {-271, 411, -154}, 0, {973, 812}, {147, 17, 193, 255} }},
-	{{ {-265, 417, -152}, 0, {978, 812}, {142, 225, 209, 255} }},
-	{{ {-244, 411, -205}, 0, {973, 840}, {161, 15, 173, 255} }},
-	{{ {-238, 417, -201}, 0, {978, 840}, {153, 222, 189, 255} }},
-	{{ {-206, 411, -249}, 0, {974, 867}, {169, 12, 165, 255} }},
-	{{ {-202, 417, -244}, 0, {978, 867}, {169, 224, 169, 255} }},
-	{{ {-159, 417, -279}, 0, {978, 894}, {191, 220, 153, 255} }},
-	{{ {-162, 410, -285}, 0, {973, 894}, {207, 13, 139, 255} }},
-	{{ {-112, 411, -312}, 0, {973, 921}, {224, 13, 134, 255} }},
-	{{ {-109, 417, -305}, 0, {978, 922}, {209, 228, 141, 255} }},
-	{{ {-56, 411, -328}, 0, {973, 947}, {234, 6, 131, 255} }},
-	{{ {-56, 417, -321}, 0, {978, 947}, {233, 227, 134, 255} }},
-	{{ {285, 489, 73}, 0, {555, 548}, {117, 228, 42, 255} }},
-	{{ {265, 415, 67}, 0, {572, 585}, {117, 241, 48, 255} }},
-	{{ {281, 416, 14}, 0, {599, 572}, {124, 242, 23, 255} }},
-	{{ {305, 482, -43}, 0, {615, 526}, {123, 223, 2, 255} }},
-	{{ {287, 416, -42}, 0, {627, 561}, {126, 244, 0, 255} }},
-	{{ {281, 417, -98}, 0, {655, 551}, {124, 243, 233, 255} }},
-	{{ {280, 473, -160}, 0, {677, 512}, {113, 216, 215, 255} }},
-	{{ {265, 417, -152}, 0, {684, 543}, {117, 243, 207, 255} }},
-	{{ {238, 417, -201}, 0, {713, 537}, {106, 240, 187, 255} }},
-	{{ {215, 468, -258}, 0, {741, 504}, {85, 208, 175, 255} }},
-	{{ {202, 417, -244}, 0, {742, 533}, {89, 240, 166, 255} }},
-	{{ {159, 417, -279}, 0, {772, 532}, {68, 242, 149, 255} }},
-	{{ {113, 462, -319}, 0, {805, 508}, {45, 205, 149, 255} }},
-	{{ {109, 417, -305}, 0, {802, 534}, {48, 247, 139, 255} }},
-	{{ {56, 417, -321}, 0, {831, 538}, {24, 246, 132, 255} }},
-	{{ {0, 462, -341}, 0, {866, 519}, {0, 204, 140, 255} }},
-	{{ {0, 462, -341}, 0, {866, 519}, {0, 204, 140, 255} }},
-	{{ {56, 417, -321}, 0, {831, 538}, {24, 246, 132, 255} }},
-	{{ {0, 417, -326}, 0, {861, 544}, {0, 246, 129, 255} }},
-	{{ {0, 521, -371}, 0, {875, 484}, {0, 191, 147, 255} }},
-	{{ {113, 462, -319}, 0, {805, 508}, {45, 205, 149, 255} }},
-	{{ {123, 532, -354}, 0, {810, 466}, {43, 194, 154, 255} }},
-	{{ {69, 617, -425}, 0, {856, 418}, {23, 201, 144, 255} }},
-	{{ {0, 615, -433}, 0, {892, 426}, {0, 204, 140, 255} }},
-	{{ {0, 665, -450}, 0, {898, 398}, {0, 227, 132, 255} }},
-	{{ {72, 667, -442}, 0, {861, 390}, {25, 227, 135, 255} }},
-	{{ {137, 623, -407}, 0, {819, 410}, {46, 206, 149, 255} }},
-	{{ {140, 672, -423}, 0, {823, 382}, {47, 227, 142, 255} }},
-	{{ {199, 630, -376}, 0, {783, 405}, {66, 203, 161, 255} }},
-	{{ {204, 681, -392}, 0, {785, 377}, {67, 228, 152, 255} }},
-	{{ {254, 641, -336}, 0, {746, 400}, {85, 210, 173, 255} }},
-	{{ {261, 692, -352}, 0, {747, 371}, {87, 230, 167, 255} }},
-	{{ {300, 652, -284}, 0, {709, 399}, {101, 210, 194, 255} }},
-	{{ {254, 641, -336}, 0, {746, 400}, {85, 210, 173, 255} }},
-	{{ {261, 692, -352}, 0, {747, 371}, {87, 230, 167, 255} }},
-	{{ {307, 705, -300}, 0, {709, 370}, {104, 234, 186, 255} }},
-	{{ {334, 667, -226}, 0, {673, 399}, {114, 220, 213, 255} }},
-	{{ {341, 717, -242}, 0, {672, 369}, {116, 240, 207, 255} }},
-	{{ {361, 733, -180}, 0, {637, 373}, {124, 248, 232, 255} }},
-	{{ {354, 682, -164}, 0, {637, 401}, {122, 224, 239, 255} }},
-	{{ {368, 747, -114}, 0, {600, 376}, {127, 0, 255, 255} }},
-	{{ {361, 698, -94}, 0, {600, 404}, {125, 236, 3, 255} }},
-	{{ {360, 762, -39}, 0, {558, 384}, {125, 12, 22, 255} }},
-	{{ {357, 713, -26}, 0, {561, 411}, {124, 243, 25, 255} }},
-	{{ {337, 776, 27}, 0, {521, 391}, {116, 23, 46, 255} }},
-	{{ {337, 726, 39}, 0, {526, 418}, {116, 1, 51, 255} }},
-	{{ {325, 651, 54}, 0, {533, 460}, {119, 236, 40, 255} }},
-	{{ {341, 614, -65}, 0, {601, 453}, {123, 223, 4, 255} }},
-	{{ {325, 651, 54}, 0, {533, 460}, {119, 236, 40, 255} }},
-	{{ {306, 566, 67}, 0, {543, 506}, {119, 230, 37, 255} }},
-	{{ {341, 614, -65}, 0, {601, 453}, {123, 223, 4, 255} }},
-	{{ {305, 482, -43}, 0, {615, 526}, {123, 223, 2, 255} }},
-	{{ {285, 489, 73}, 0, {555, 548}, {117, 228, 42, 255} }},
-	{{ {316, 592, -192}, 0, {670, 443}, {112, 210, 216, 255} }},
-	{{ {280, 473, -160}, 0, {677, 512}, {113, 216, 215, 255} }},
-	{{ {215, 468, -258}, 0, {741, 504}, {85, 208, 175, 255} }},
-	{{ {242, 583, -305}, 0, {742, 436}, {84, 199, 179, 255} }},
-	{{ {123, 532, -354}, 0, {810, 466}, {43, 194, 154, 255} }},
-	{{ {113, 462, -319}, 0, {805, 508}, {45, 205, 149, 255} }},
-	{{ {199, 630, -376}, 0, {783, 405}, {66, 203, 161, 255} }},
-	{{ {137, 623, -407}, 0, {819, 410}, {46, 206, 149, 255} }},
-	{{ {69, 617, -425}, 0, {856, 418}, {23, 201, 144, 255} }},
-	{{ {254, 641, -336}, 0, {746, 400}, {85, 210, 173, 255} }},
-	{{ {300, 652, -284}, 0, {709, 399}, {101, 210, 194, 255} }},
-	{{ {334, 667, -226}, 0, {673, 399}, {114, 220, 213, 255} }},
-	{{ {316, 592, -192}, 0, {670, 443}, {112, 210, 216, 255} }},
-	{{ {300, 652, -284}, 0, {709, 399}, {101, 210, 194, 255} }},
-	{{ {354, 682, -164}, 0, {637, 401}, {122, 224, 239, 255} }},
-	{{ {341, 614, -65}, 0, {601, 453}, {123, 223, 4, 255} }},
-	{{ {361, 698, -94}, 0, {600, 404}, {125, 236, 3, 255} }},
-	{{ {357, 713, -26}, 0, {561, 411}, {124, 243, 25, 255} }},
-	{{ {0, 417, -326}, 0, {978, 974}, {0, 228, 132, 255} }},
-	{{ {56, 417, -321}, 0, {978, 947}, {23, 227, 134, 255} }},
-	{{ {0, 411, -333}, 0, {974, 974}, {251, 15, 130, 255} }},
-	{{ {56, 411, -328}, 0, {973, 947}, {23, 6, 131, 255} }},
-	{{ {109, 417, -305}, 0, {978, 922}, {47, 228, 141, 255} }},
-	{{ {112, 411, -312}, 0, {973, 921}, {36, 10, 135, 255} }},
-	{{ {159, 417, -279}, 0, {978, 894}, {65, 220, 153, 255} }},
-	{{ {162, 410, -285}, 0, {973, 894}, {54, 7, 141, 255} }},
-	{{ {206, 411, -249}, 0, {974, 867}, {81, 14, 160, 255} }},
-	{{ {159, 417, -279}, 0, {978, 894}, {65, 220, 153, 255} }},
-	{{ {202, 417, -244}, 0, {978, 867}, {87, 224, 169, 255} }},
-	{{ {206, 411, -249}, 0, {974, 867}, {81, 14, 160, 255} }},
-	{{ {238, 417, -201}, 0, {978, 840}, {103, 222, 189, 255} }},
-	{{ {244, 411, -205}, 0, {973, 840}, {97, 13, 175, 255} }},
-	{{ {265, 417, -152}, 0, {978, 812}, {114, 225, 209, 255} }},
-	{{ {271, 411, -154}, 0, {973, 812}, {111, 15, 195, 255} }},
-	{{ {281, 417, -98}, 0, {978, 783}, {121, 225, 233, 255} }},
-	{{ {288, 411, -99}, 0, {973, 783}, {120, 18, 217, 255} }},
-	{{ {287, 416, -42}, 0, {978, 753}, {124, 227, 0, 255} }},
-	{{ {294, 411, -42}, 0, {973, 753}, {124, 22, 241, 255} }},
-	{{ {281, 416, 14}, 0, {978, 723}, {121, 224, 22, 255} }},
-	{{ {289, 411, 15}, 0, {973, 723}, {124, 27, 9, 255} }},
-	{{ {265, 415, 67}, 0, {978, 693}, {113, 223, 47, 255} }},
-	{{ {272, 410, 70}, 0, {973, 693}, {118, 33, 32, 255} }},
-	{{ {238, 415, 117}, 0, {978, 663}, {102, 226, 70, 255} }},
-	{{ {272, 410, 70}, 0, {973, 693}, {118, 33, 32, 255} }},
-	{{ {238, 415, 117}, 0, {978, 663}, {102, 226, 70, 255} }},
-	{{ {245, 410, 121}, 0, {973, 663}, {109, 38, 53, 255} }},
-	{{ {202, 414, 160}, 0, {978, 633}, {87, 232, 90, 255} }},
-	{{ {209, 410, 166}, 0, {973, 633}, {95, 44, 73, 255} }},
-	{{ {159, 414, 194}, 0, {978, 603}, {64, 241, 109, 255} }},
-	{{ {164, 410, 201}, 0, {973, 603}, {75, 50, 90, 255} }},
-	{{ {110, 413, 216}, 0, {978, 574}, {39, 245, 120, 255} }},
-	{{ {114, 409, 225}, 0, {973, 574}, {55, 49, 104, 255} }},
-	{{ {60, 409, 236}, 0, {973, 544}, {22, 61, 109, 255} }},
-	{{ {56, 413, 228}, 0, {978, 544}, {19, 250, 125, 255} }},
-	{{ {0, 413, 233}, 0, {978, 514}, {1, 248, 127, 255} }},
-	{{ {0, 408, 243}, 0, {972, 514}, {248, 44, 119, 255} }},
-	{{ {82, 298, 236}, 0, {912, 560}, {31, 1, 123, 255} }},
-	{{ {0, 298, 246}, 0, {912, 514}, {2, 4, 127, 255} }},
-	{{ {146, 298, 209}, 0, {912, 598}, {64, 252, 110, 255} }},
-	{{ {164, 410, 201}, 0, {973, 603}, {75, 50, 90, 255} }},
-	{{ {146, 298, 209}, 0, {912, 598}, {64, 252, 110, 255} }},
-	{{ {185, 298, 176}, 0, {912, 627}, {89, 247, 91, 255} }},
-	{{ {209, 410, 166}, 0, {973, 633}, {95, 44, 73, 255} }},
-	{{ {218, 298, 135}, 0, {912, 657}, {104, 240, 71, 255} }},
-	{{ {245, 410, 121}, 0, {973, 663}, {109, 38, 53, 255} }},
-	{{ {242, 298, 88}, 0, {912, 686}, {115, 233, 48, 255} }},
-	{{ {272, 410, 70}, 0, {973, 693}, {118, 33, 32, 255} }},
-	{{ {257, 298, 36}, 0, {912, 716}, {121, 227, 25, 255} }},
-	{{ {289, 411, 15}, 0, {973, 723}, {124, 27, 9, 255} }},
-	{{ {262, 298, -17}, 0, {912, 746}, {122, 222, 1, 255} }},
-	{{ {294, 411, -42}, 0, {973, 753}, {124, 22, 241, 255} }},
-	{{ {257, 298, -70}, 0, {912, 776}, {119, 218, 234, 255} }},
-	{{ {288, 411, -99}, 0, {973, 783}, {120, 18, 217, 255} }},
-	{{ {242, 297, -122}, 0, {912, 806}, {112, 215, 212, 255} }},
-	{{ {271, 411, -154}, 0, {973, 812}, {111, 15, 195, 255} }},
-	{{ {271, 411, -154}, 0, {973, 812}, {111, 15, 195, 255} }},
-	{{ {242, 297, -122}, 0, {912, 806}, {112, 215, 212, 255} }},
-	{{ {218, 297, -169}, 0, {912, 835}, {100, 212, 191, 255} }},
-	{{ {244, 411, -205}, 0, {973, 840}, {97, 13, 175, 255} }},
-	{{ {185, 297, -210}, 0, {912, 864}, {85, 211, 173, 255} }},
-	{{ {206, 411, -249}, 0, {974, 867}, {81, 14, 160, 255} }},
-	{{ {145, 297, -243}, 0, {912, 892}, {67, 210, 158, 255} }},
-	{{ {162, 410, -285}, 0, {973, 894}, {54, 7, 141, 255} }},
-	{{ {100, 297, -269}, 0, {912, 920}, {46, 210, 147, 255} }},
-	{{ {112, 411, -312}, 0, {973, 921}, {36, 10, 135, 255} }},
-	{{ {51, 297, -284}, 0, {912, 947}, {23, 210, 140, 255} }},
-	{{ {56, 411, -328}, 0, {973, 947}, {23, 6, 131, 255} }},
-	{{ {0, 297, -289}, 0, {912, 974}, {0, 210, 138, 255} }},
-	{{ {0, 411, -333}, 0, {974, 974}, {251, 15, 130, 255} }},
-	{{ {-304, 789, 84}, 0, {100, 538}, {153, 30, 69, 255} }},
-	{{ {-337, 776, 27}, 0, {64, 545}, {140, 23, 46, 255} }},
-	{{ {-337, 726, 39}, 0, {70, 572}, {140, 1, 52, 255} }},
-	{{ {-303, 740, 97}, 0, {106, 564}, {153, 8, 74, 255} }},
-	{{ {-281, 664, 120}, 0, {122, 606}, {157, 249, 79, 255} }},
-	{{ {-325, 651, 54}, 0, {80, 613}, {137, 237, 40, 255} }},
-	{{ {-306, 566, 67}, 0, {93, 659}, {137, 230, 36, 255} }},
-	{{ {-253, 568, 141}, 0, {143, 657}, {162, 242, 84, 255} }},
-	{{ {-285, 489, 73}, 0, {105, 702}, {139, 228, 42, 255} }},
-	{{ {-223, 491, 163}, 0, {163, 698}, {171, 241, 93, 255} }},
-	{{ {-238, 415, 117}, 0, {140, 741}, {152, 244, 72, 255} }},
-	{{ {-265, 415, 67}, 0, {110, 743}, {139, 241, 48, 255} }},
-	{{ {-202, 414, 160}, 0, {171, 741}, {168, 249, 91, 255} }},
-	{{ {-159, 414, 194}, 0, {201, 741}, {193, 2, 110, 255} }},
-	{{ {-118, 486, 222}, 0, {228, 702}, {215, 250, 120, 255} }},
-	{{ {-94, 413, 222}, 0, {241, 742}, {227, 10, 123, 255} }},
-	{{ {-118, 486, 222}, 0, {228, 702}, {215, 250, 120, 255} }},
-	{{ {-94, 413, 222}, 0, {241, 742}, {227, 10, 123, 255} }},
-	{{ {0, 413, 234}, 0, {294, 742}, {0, 248, 127, 255} }},
-	{{ {-26, 606, 246}, 0, {279, 636}, {234, 251, 125, 255} }},
-	{{ {0, 602, 248}, 0, {294, 638}, {0, 247, 127, 255} }},
-	{{ {26, 606, 246}, 0, {309, 636}, {20, 249, 125, 255} }},
-	{{ {118, 486, 222}, 0, {359, 702}, {41, 249, 120, 255} }},
-	{{ {94, 413, 222}, 0, {347, 742}, {29, 10, 123, 255} }},
-	{{ {159, 414, 194}, 0, {386, 741}, {63, 2, 110, 255} }},
-	{{ {223, 491, 163}, 0, {424, 698}, {85, 241, 93, 255} }},
-	{{ {202, 414, 160}, 0, {417, 741}, {88, 249, 91, 255} }},
-	{{ {238, 415, 117}, 0, {447, 741}, {104, 244, 72, 255} }},
-	{{ {285, 489, 73}, 0, {483, 702}, {117, 228, 42, 255} }},
-	{{ {265, 415, 67}, 0, {478, 743}, {117, 241, 48, 255} }},
-	{{ {253, 568, 141}, 0, {445, 657}, {94, 242, 84, 255} }},
-	{{ {306, 566, 67}, 0, {494, 659}, {119, 230, 36, 255} }},
-	{{ {253, 568, 141}, 0, {445, 657}, {94, 242, 84, 255} }},
-	{{ {306, 566, 67}, 0, {494, 659}, {119, 230, 36, 255} }},
-	{{ {281, 664, 120}, 0, {466, 605}, {99, 249, 79, 255} }},
-	{{ {325, 651, 54}, 0, {507, 613}, {119, 237, 40, 255} }},
-	{{ {337, 726, 39}, 0, {518, 572}, {116, 1, 52, 255} }},
-	{{ {303, 740, 97}, 0, {482, 564}, {103, 8, 74, 255} }},
-	{{ {304, 789, 84}, 0, {487, 538}, {103, 30, 69, 255} }},
-	{{ {337, 776, 27}, 0, {523, 544}, {116, 23, 46, 255} }},
-	{{ {258, 799, 133}, 0, {451, 531}, {87, 37, 85, 255} }},
-	{{ {258, 754, 145}, 0, {446, 556}, {86, 14, 93, 255} }},
-	{{ {198, 809, 174}, 0, {415, 525}, {56, 16, 113, 255} }},
-	{{ {230, 723, 168}, 0, {425, 570}, {73, 16, 103, 255} }},
-	{{ {193, 749, 184}, 0, {405, 557}, {60, 16, 111, 255} }},
-	{{ {151, 761, 199}, 0, {381, 549}, {39, 17, 120, 255} }},
-	{{ {130, 815, 198}, 0, {373, 518}, {33, 42, 115, 255} }},
-	{{ {60, 784, 217}, 0, {331, 531}, {28, 24, 122, 255} }},
-	{{ {60, 784, 217}, 0, {331, 531}, {28, 24, 122, 255} }},
-	{{ {130, 815, 198}, 0, {373, 518}, {33, 42, 115, 255} }},
-	{{ {73, 800, 210}, 0, {340, 523}, {75, 7, 103, 255} }},
-	{{ {73, 817, 205}, 0, {342, 513}, {51, 62, 99, 255} }},
-	{{ {108, 759, 210}, 0, {356, 547}, {30, 27, 120, 255} }},
-	{{ {151, 761, 199}, 0, {381, 549}, {39, 17, 120, 255} }},
-	{{ {71, 748, 222}, 0, {335, 551}, {31, 25, 121, 255} }},
-	{{ {43, 777, 223}, 0, {321, 534}, {21, 27, 122, 255} }},
-	{{ {45, 734, 232}, 0, {319, 558}, {21, 29, 122, 255} }},
-	{{ {3, 755, 232}, 0, {297, 544}, {16, 17, 125, 255} }},
-	{{ {19, 783, 223}, 0, {308, 529}, {63, 191, 89, 255} }},
-	{{ {22, 720, 240}, 0, {305, 565}, {14, 35, 121, 255} }},
-	{{ {0, 713, 243}, 0, {294, 568}, {0, 31, 123, 255} }},
-	{{ {-22, 720, 240}, 0, {283, 564}, {243, 38, 121, 255} }},
-	{{ {-45, 734, 232}, 0, {269, 557}, {236, 37, 120, 255} }},
-	{{ {-35, 746, 230}, 0, {274, 550}, {248, 142, 55, 255} }},
-	{{ {-67, 756, 221}, 0, {254, 546}, {176, 161, 28, 255} }},
-	{{ {-45, 734, 232}, 0, {269, 557}, {236, 37, 120, 255} }},
-	{{ {-35, 746, 230}, 0, {274, 550}, {248, 142, 55, 255} }},
-	{{ {-71, 748, 222}, 0, {253, 550}, {226, 27, 120, 255} }},
-	{{ {-108, 759, 210}, 0, {231, 547}, {227, 25, 121, 255} }},
-	{{ {-79, 787, 211}, 0, {244, 530}, {173, 249, 96, 255} }},
-	{{ {-151, 761, 199}, 0, {206, 549}, {215, 16, 119, 255} }},
-	{{ {-130, 815, 198}, 0, {214, 518}, {227, 34, 119, 255} }},
-	{{ {-81, 817, 204}, 0, {241, 514}, {195, 41, 104, 255} }},
-	{{ {-198, 809, 174}, 0, {172, 525}, {198, 17, 112, 255} }},
-	{{ {-193, 749, 184}, 0, {182, 557}, {196, 16, 111, 255} }},
-	{{ {-230, 723, 168}, 0, {162, 571}, {186, 17, 105, 255} }},
-	{{ {-258, 754, 145}, 0, {141, 556}, {170, 14, 93, 255} }},
-	{{ {-258, 799, 133}, 0, {136, 531}, {169, 37, 85, 255} }},
-	{{ {-303, 740, 97}, 0, {106, 564}, {153, 8, 74, 255} }},
-	{{ {-304, 789, 84}, 0, {100, 538}, {153, 30, 69, 255} }},
-	{{ {-258, 754, 145}, 0, {141, 556}, {170, 14, 93, 255} }},
-	{{ {-303, 740, 97}, 0, {106, 564}, {153, 8, 74, 255} }},
-	{{ {-281, 664, 120}, 0, {122, 606}, {157, 249, 79, 255} }},
-	{{ {-242, 694, 163}, 0, {155, 587}, {165, 1, 89, 255} }},
-	{{ {-221, 674, 187}, 0, {170, 598}, {180, 252, 102, 255} }},
-	{{ {-222, 649, 179}, 0, {169, 613}, {175, 240, 97, 255} }},
-	{{ {-253, 568, 141}, 0, {143, 657}, {162, 242, 84, 255} }},
-	{{ {-186, 565, 193}, 0, {189, 658}, {194, 250, 111, 255} }},
-	{{ {-223, 491, 163}, 0, {163, 698}, {171, 241, 93, 255} }},
-	{{ {-118, 486, 222}, 0, {228, 702}, {215, 250, 120, 255} }},
-	{{ {-124, 665, 217}, 0, {224, 606}, {213, 1, 120, 255} }},
-	{{ {-99, 654, 224}, 0, {237, 611}, {222, 2, 122, 255} }},
-	{{ {-76, 640, 231}, 0, {250, 619}, {220, 2, 122, 255} }},
-	{{ {-54, 619, 239}, 0, {263, 630}, {217, 2, 121, 255} }},
-	{{ {-26, 606, 246}, 0, {279, 636}, {234, 251, 125, 255} }},
-	{{ {-150, 667, 207}, 0, {210, 604}, {211, 0, 119, 255} }},
-	{{ {-174, 658, 197}, 0, {196, 609}, {224, 242, 122, 255} }},
-	{{ {-186, 565, 193}, 0, {189, 658}, {194, 250, 111, 255} }},
-	{{ {-150, 667, 207}, 0, {210, 604}, {211, 0, 119, 255} }},
-	{{ {-199, 642, 189}, 0, {183, 617}, {209, 247, 118, 255} }},
-	{{ {-165, 687, 212}, 0, {204, 594}, {214, 220, 114, 255} }},
-	{{ {-150, 667, 207}, 0, {210, 604}, {215, 200, 106, 255} }},
-	{{ {-124, 665, 217}, 0, {224, 606}, {203, 181, 88, 255} }},
-	{{ {-93, 670, 241}, 0, {244, 601}, {187, 212, 97, 255} }},
-	{{ {-99, 654, 224}, 0, {237, 611}, {196, 186, 87, 255} }},
-	{{ {-76, 640, 231}, 0, {250, 619}, {172, 189, 68, 255} }},
-	{{ {-39, 629, 269}, 0, {276, 618}, {201, 195, 97, 255} }},
-	{{ {-54, 619, 239}, 0, {263, 630}, {178, 180, 65, 255} }},
-	{{ {-26, 606, 245}, 0, {279, 636}, {215, 161, 74, 255} }},
-	{{ {0, 623, 276}, 0, {294, 621}, {0, 186, 106, 255} }},
-	{{ {0, 602, 248}, 0, {294, 638}, {0, 155, 78, 255} }},
-	{{ {26, 606, 245}, 0, {309, 636}, {41, 161, 74, 255} }},
-	{{ {0, 623, 276}, 0, {294, 621}, {0, 186, 106, 255} }},
-	{{ {26, 606, 245}, 0, {309, 636}, {41, 161, 74, 255} }},
-	{{ {39, 629, 269}, 0, {312, 618}, {55, 194, 97, 255} }},
-	{{ {54, 619, 239}, 0, {325, 630}, {78, 180, 65, 255} }},
-	{{ {76, 640, 231}, 0, {338, 619}, {84, 189, 68, 255} }},
-	{{ {93, 670, 241}, 0, {343, 601}, {65, 212, 100, 255} }},
-	{{ {99, 654, 224}, 0, {350, 611}, {60, 185, 87, 255} }},
-	{{ {124, 665, 217}, 0, {364, 606}, {53, 181, 88, 255} }},
-	{{ {165, 687, 212}, 0, {384, 594}, {44, 223, 114, 255} }},
-	{{ {150, 667, 207}, 0, {378, 604}, {41, 200, 106, 255} }},
-	{{ {174, 658, 197}, 0, {392, 609}, {32, 242, 122, 255} }},
-	{{ {199, 642, 189}, 0, {405, 617}, {48, 246, 117, 255} }},
-	{{ {186, 565, 193}, 0, {399, 658}, {62, 250, 111, 255} }},
-	{{ {150, 667, 207}, 0, {378, 604}, {45, 0, 119, 255} }},
-	{{ {124, 665, 217}, 0, {364, 606}, {43, 1, 120, 255} }},
-	{{ {118, 486, 222}, 0, {359, 702}, {41, 249, 120, 255} }},
-	{{ {118, 486, 222}, 0, {359, 702}, {41, 249, 120, 255} }},
-	{{ {124, 665, 217}, 0, {364, 606}, {43, 1, 120, 255} }},
-	{{ {99, 654, 224}, 0, {350, 611}, {34, 2, 122, 255} }},
-	{{ {76, 640, 231}, 0, {338, 619}, {36, 2, 122, 255} }},
-	{{ {54, 619, 239}, 0, {325, 630}, {39, 2, 121, 255} }},
-	{{ {26, 606, 246}, 0, {309, 636}, {20, 249, 125, 255} }},
-	{{ {223, 491, 163}, 0, {424, 698}, {85, 241, 93, 255} }},
-	{{ {186, 565, 193}, 0, {399, 658}, {62, 250, 111, 255} }},
-	{{ {253, 568, 141}, 0, {445, 657}, {94, 242, 84, 255} }},
-	{{ {222, 649, 179}, 0, {418, 613}, {79, 242, 99, 255} }},
-	{{ {281, 664, 120}, 0, {466, 605}, {99, 249, 79, 255} }},
-	{{ {221, 674, 187}, 0, {417, 598}, {72, 248, 105, 255} }},
-	{{ {242, 694, 163}, 0, {433, 587}, {87, 2, 93, 255} }},
-	{{ {258, 754, 145}, 0, {446, 556}, {86, 14, 93, 255} }},
-	{{ {303, 740, 97}, 0, {482, 564}, {103, 8, 74, 255} }},
-	{{ {230, 723, 168}, 0, {425, 570}, {73, 16, 103, 255} }},
-	{{ {180, 710, 210}, 0, {391, 581}, {61, 12, 111, 255} }},
-	{{ {221, 674, 187}, 0, {417, 598}, {72, 248, 105, 255} }},
-	{{ {230, 723, 168}, 0, {425, 570}, {73, 16, 103, 255} }},
-	{{ {162, 740, 213}, 0, {383, 565}, {49, 58, 102, 255} }},
-	{{ {193, 749, 184}, 0, {405, 557}, {67, 58, 91, 255} }},
-	{{ {151, 761, 198}, 0, {381, 549}, {36, 84, 89, 255} }},
-	{{ {108, 759, 210}, 0, {356, 547}, {18, 92, 86, 255} }},
-	{{ {90, 733, 242}, 0, {342, 567}, {17, 72, 103, 255} }},
-	{{ {71, 748, 221}, 0, {335, 551}, {244, 98, 80, 255} }},
-	{{ {36, 707, 264}, 0, {312, 579}, {5, 71, 105, 255} }},
-	{{ {22, 720, 240}, 0, {305, 565}, {230, 102, 71, 255} }},
-	{{ {0, 713, 243}, 0, {294, 568}, {0, 106, 71, 255} }},
-	{{ {0, 693, 273}, 0, {294, 586}, {0, 76, 102, 255} }},
-	{{ {-36, 707, 264}, 0, {276, 579}, {252, 70, 106, 255} }},
-	{{ {-22, 720, 240}, 0, {283, 564}, {26, 102, 71, 255} }},
-	{{ {-71, 748, 221}, 0, {253, 550}, {11, 99, 79, 255} }},
-	{{ {-71, 748, 221}, 0, {253, 550}, {11, 99, 79, 255} }},
-	{{ {-90, 733, 242}, 0, {245, 567}, {240, 68, 106, 255} }},
-	{{ {-36, 707, 264}, 0, {276, 579}, {252, 70, 106, 255} }},
-	{{ {-108, 759, 210}, 0, {231, 547}, {238, 92, 86, 255} }},
-	{{ {-162, 740, 213}, 0, {205, 565}, {206, 59, 101, 255} }},
-	{{ {-151, 761, 198}, 0, {206, 549}, {221, 84, 89, 255} }},
-	{{ {-193, 749, 184}, 0, {182, 557}, {189, 58, 91, 255} }},
-	{{ {-230, 723, 168}, 0, {162, 571}, {186, 17, 105, 255} }},
-	{{ {-180, 710, 210}, 0, {196, 581}, {193, 11, 110, 255} }},
-	{{ {-221, 674, 187}, 0, {170, 598}, {180, 252, 102, 255} }},
-	{{ {-242, 694, 163}, 0, {155, 587}, {165, 1, 89, 255} }},
-	{{ {-258, 754, 145}, 0, {141, 556}, {170, 14, 93, 255} }},
-	{{ {-165, 687, 212}, 0, {204, 594}, {214, 220, 114, 255} }},
-	{{ {-199, 642, 189}, 0, {183, 617}, {209, 247, 118, 255} }},
-	{{ {-222, 649, 179}, 0, {169, 613}, {175, 240, 97, 255} }},
-	{{ {-186, 565, 193}, 0, {189, 658}, {194, 250, 111, 255} }},
-	{{ {-180, 710, 210}, 0, {196, 581}, {193, 11, 110, 255} }},
-	{{ {-165, 687, 212}, 0, {204, 594}, {214, 220, 114, 255} }},
-	{{ {-104, 709, 243}, 0, {238, 581}, {209, 5, 118, 255} }},
-	{{ {-93, 670, 241}, 0, {244, 601}, {187, 212, 97, 255} }},
-	{{ {-32, 660, 279}, 0, {280, 602}, {217, 255, 121, 255} }},
-	{{ {-39, 629, 269}, 0, {276, 618}, {201, 195, 97, 255} }},
-	{{ {0, 654, 286}, 0, {294, 606}, {0, 243, 126, 255} }},
-	{{ {0, 623, 276}, 0, {294, 621}, {0, 186, 106, 255} }},
-	{{ {39, 629, 269}, 0, {312, 618}, {55, 194, 97, 255} }},
-	{{ {32, 660, 279}, 0, {308, 603}, {42, 254, 120, 255} }},
-	{{ {93, 670, 241}, 0, {343, 601}, {65, 212, 100, 255} }},
-	{{ {104, 709, 243}, 0, {349, 582}, {48, 10, 117, 255} }},
-	{{ {165, 687, 212}, 0, {384, 594}, {44, 223, 114, 255} }},
-	{{ {180, 710, 210}, 0, {391, 581}, {61, 12, 111, 255} }},
-	{{ {221, 674, 187}, 0, {417, 598}, {72, 248, 105, 255} }},
-	{{ {199, 642, 189}, 0, {405, 617}, {48, 246, 117, 255} }},
-	{{ {199, 642, 189}, 0, {405, 617}, {48, 246, 117, 255} }},
-	{{ {222, 649, 179}, 0, {418, 613}, {79, 242, 99, 255} }},
-	{{ {221, 674, 187}, 0, {417, 598}, {72, 248, 105, 255} }},
-	{{ {186, 565, 193}, 0, {399, 658}, {62, 250, 111, 255} }},
-	{{ {104, 709, 243}, 0, {349, 582}, {48, 10, 117, 255} }},
-	{{ {180, 710, 210}, 0, {391, 581}, {61, 12, 111, 255} }},
-	{{ {162, 740, 213}, 0, {383, 565}, {49, 58, 102, 255} }},
-	{{ {90, 733, 242}, 0, {342, 567}, {17, 72, 103, 255} }},
-	{{ {36, 707, 264}, 0, {312, 579}, {5, 71, 105, 255} }},
-	{{ {32, 660, 279}, 0, {308, 603}, {42, 254, 120, 255} }},
-	{{ {0, 654, 286}, 0, {294, 606}, {0, 243, 126, 255} }},
-	{{ {0, 693, 273}, 0, {294, 586}, {0, 76, 102, 255} }},
-	{{ {-36, 707, 264}, 0, {276, 579}, {252, 70, 106, 255} }},
-	{{ {-32, 660, 279}, 0, {280, 602}, {217, 255, 121, 255} }},
-	{{ {-104, 709, 243}, 0, {238, 581}, {209, 5, 118, 255} }},
-	{{ {-90, 733, 242}, 0, {245, 567}, {240, 68, 106, 255} }},
-	{{ {-162, 740, 213}, 0, {205, 565}, {206, 59, 101, 255} }},
-	{{ {-104, 709, 243}, 0, {238, 581}, {209, 5, 118, 255} }},
-	{{ {-90, 733, 242}, 0, {245, 567}, {240, 68, 106, 255} }},
-	{{ {-180, 710, 210}, 0, {196, 581}, {193, 11, 110, 255} }},
-	{{ {0, 313, -342}, 0, {525, 809}, {0, 125, 21, 255} }},
-	{{ {-51, 297, -284}, 0, {489, 779}, {6, 121, 37, 255} }},
-	{{ {0, 297, -289}, 0, {525, 779}, {0, 122, 37, 255} }},
-	{{ {-101, 313, -327}, 0, {469, 809}, {6, 125, 21, 255} }},
-	{{ {0, 318, -400}, 0, {525, 839}, {247, 124, 232, 255} }},
-	{{ {-174, 318, -356}, 0, {441, 839}, {252, 126, 238, 255} }},
-	{{ {-80, 306, -419}, 0, {489, 857}, {245, 95, 172, 255} }},
-	{{ {0, 306, -427}, 0, {525, 857}, {0, 94, 170, 255} }},
-	{{ {-82, 284, -429}, 0, {489, 871}, {232, 15, 132, 255} }},
-	{{ {0, 284, -437}, 0, {525, 871}, {0, 15, 130, 255} }},
-	{{ {-81, 261, -424}, 0, {489, 884}, {240, 174, 160, 255} }},
-	{{ {0, 261, -432}, 0, {525, 884}, {0, 179, 155, 255} }},
-	{{ {0, 242, -405}, 0, {525, 902}, {249, 135, 219, 255} }},
-	{{ {-81, 261, -424}, 0, {489, 884}, {240, 174, 160, 255} }},
-	{{ {0, 261, -432}, 0, {525, 884}, {0, 179, 155, 255} }},
-	{{ {-176, 242, -361}, 0, {441, 902}, {240, 134, 225, 255} }},
-	{{ {0, 236, -349}, 0, {526, 936}, {254, 129, 251, 255} }},
-	{{ {-228, 236, -246}, 0, {385, 936}, {254, 129, 253, 255} }},
-	{{ {-128, 240, -248}, 0, {435, 967}, {30, 137, 33, 255} }},
-	{{ {-51, 240, -275}, 0, {489, 967}, {8, 136, 40, 255} }},
-	{{ {0, 240, -280}, 0, {525, 967}, {0, 135, 40, 255} }},
-	{{ {0, 268, -256}, 0, {525, 979}, {2, 190, 109, 255} }},
-	{{ {-71, 268, -246}, 0, {471, 979}, {34, 192, 104, 255} }},
-	{{ {0, 335, -234}, 0, {525, 1002}, {0, 232, 125, 255} }},
-	{{ {-83, 335, -218}, 0, {456, 1002}, {48, 232, 115, 255} }},
-	{{ {-153, 268, -201}, 0, {401, 979}, {72, 193, 84, 255} }},
-	{{ {-153, 335, -171}, 0, {385, 1002}, {89, 232, 88, 255} }},
-	{{ {-212, 268, -129}, 0, {332, 979}, {99, 193, 50, 255} }},
-	{{ {-212, 268, -129}, 0, {332, 979}, {99, 193, 50, 255} }},
-	{{ {-153, 335, -171}, 0, {385, 1002}, {89, 232, 88, 255} }},
-	{{ {-200, 335, -101}, 0, {316, 1002}, {116, 232, 47, 255} }},
-	{{ {-238, 268, -39}, 0, {266, 979}, {111, 194, 9, 255} }},
-	{{ {-216, 335, -18}, 0, {251, 1002}, {125, 231, 0, 255} }},
-	{{ {-233, 268, 29}, 0, {218, 979}, {108, 194, 232, 255} }},
-	{{ {-200, 335, 65}, 0, {187, 1002}, {115, 231, 209, 255} }},
-	{{ {-212, 268, 93}, 0, {173, 979}, {97, 192, 205, 255} }},
-	{{ {-153, 335, 135}, 0, {126, 1002}, {88, 232, 168, 255} }},
-	{{ {-168, 268, 151}, 0, {126, 979}, {77, 191, 179, 255} }},
-	{{ {-111, 268, 194}, 0, {76, 979}, {50, 192, 158, 255} }},
-	{{ {-83, 335, 182}, 0, {62, 1002}, {57, 231, 145, 255} }},
-	{{ {-46, 268, 216}, 0, {28, 979}, {22, 191, 149, 255} }},
-	{{ {-42, 335, 194}, 0, {28, 1002}, {24, 232, 134, 255} }},
-	{{ {0, 335, 199}, 0, {-8, 1002}, {0, 232, 131, 255} }},
-	{{ {0, 268, 220}, 0, {-8, 979}, {0, 192, 146, 255} }},
-	{{ {0, 268, 220}, 0, {-8, 979}, {0, 192, 146, 255} }},
-	{{ {-51, 240, 240}, 0, {28, 967}, {8, 136, 216, 255} }},
-	{{ {-46, 268, 216}, 0, {28, 979}, {22, 191, 149, 255} }},
-	{{ {0, 240, 245}, 0, {-8, 967}, {0, 136, 215, 255} }},
-	{{ {-124, 236, 280}, 0, {61, 936}, {255, 129, 4, 255} }},
-	{{ {0, 236, 301}, 0, {-8, 936}, {0, 129, 4, 255} }},
-	{{ {-119, 242, 350}, 0, {48, 902}, {239, 135, 35, 255} }},
-	{{ {0, 242, 367}, 0, {-8, 902}, {0, 134, 34, 255} }},
-	{{ {-81, 261, 389}, 0, {28, 884}, {238, 176, 97, 255} }},
-	{{ {0, 261, 397}, 0, {-8, 884}, {0, 177, 99, 255} }},
-	{{ {0, 284, 402}, 0, {-8, 871}, {0, 15, 126, 255} }},
-	{{ {-82, 284, 394}, 0, {28, 871}, {232, 15, 124, 255} }},
-	{{ {0, 306, 391}, 0, {-8, 857}, {0, 96, 84, 255} }},
-	{{ {-80, 306, 383}, 0, {28, 857}, {241, 96, 82, 255} }},
-	{{ {0, 318, 361}, 0, {-8, 839}, {0, 126, 14, 255} }},
-	{{ {-117, 318, 344}, 0, {48, 839}, {250, 126, 15, 255} }},
-	{{ {0, 318, 361}, 0, {-8, 839}, {0, 126, 14, 255} }},
-	{{ {0, 313, 306}, 0, {-8, 809}, {0, 125, 236, 255} }},
-	{{ {-117, 318, 344}, 0, {48, 839}, {250, 126, 15, 255} }},
-	{{ {-99, 313, 292}, 0, {47, 809}, {6, 125, 237, 255} }},
-	{{ {-51, 298, 241}, 0, {28, 779}, {5, 123, 223, 255} }},
-	{{ {0, 298, 246}, 0, {-8, 779}, {0, 123, 224, 255} }},
-	{{ {-100, 298, 230}, 0, {62, 779}, {12, 123, 225, 255} }},
-	{{ {-146, 298, 209}, 0, {94, 779}, {18, 122, 226, 255} }},
-	{{ {-211, 313, 229}, 0, {113, 809}, {13, 125, 241, 255} }},
-	{{ {-185, 298, 176}, 0, {126, 779}, {25, 122, 233, 255} }},
-	{{ {-218, 298, 135}, 0, {156, 779}, {27, 123, 237, 255} }},
-	{{ {-289, 313, 131}, 0, {174, 809}, {18, 125, 247, 255} }},
-	{{ {-242, 298, 88}, 0, {187, 779}, {30, 123, 245, 255} }},
-	{{ {-257, 298, 36}, 0, {218, 779}, {31, 123, 249, 255} }},
-	{{ {-323, 313, 14}, 0, {234, 809}, {20, 125, 254, 255} }},
-	{{ {-262, 298, -17}, 0, {251, 779}, {32, 123, 0, 255} }},
-	{{ {-312, 313, -107}, 0, {297, 809}, {19, 125, 5, 255} }},
-	{{ {-323, 313, 14}, 0, {234, 809}, {20, 125, 254, 255} }},
-	{{ {-262, 298, -17}, 0, {251, 779}, {32, 123, 0, 255} }},
-	{{ {-257, 298, -70}, 0, {283, 779}, {31, 123, 5, 255} }},
-	{{ {-242, 297, -122}, 0, {316, 779}, {30, 123, 14, 255} }},
-	{{ {-237, 313, -244}, 0, {381, 809}, {14, 125, 14, 255} }},
-	{{ {-218, 297, -169}, 0, {350, 779}, {31, 122, 17, 255} }},
-	{{ {-185, 297, -210}, 0, {385, 779}, {23, 123, 22, 255} }},
-	{{ {-145, 297, -243}, 0, {421, 779}, {20, 121, 32, 255} }},
-	{{ {-101, 313, -327}, 0, {469, 809}, {6, 125, 21, 255} }},
-	{{ {-100, 297, -269}, 0, {456, 779}, {15, 122, 33, 255} }},
-	{{ {-51, 297, -284}, 0, {489, 779}, {6, 121, 37, 255} }},
-	{{ {-174, 318, -356}, 0, {441, 839}, {252, 126, 238, 255} }},
-	{{ {-290, 318, -264}, 0, {371, 839}, {245, 126, 244, 255} }},
-	{{ {-227, 306, -358}, 0, {421, 857}, {203, 94, 189, 255} }},
-	{{ {-157, 306, -396}, 0, {456, 857}, {225, 96, 178, 255} }},
-	{{ {-157, 306, -396}, 0, {456, 857}, {225, 96, 178, 255} }},
-	{{ {-174, 318, -356}, 0, {441, 839}, {252, 126, 238, 255} }},
-	{{ {-80, 306, -419}, 0, {489, 857}, {245, 95, 172, 255} }},
-	{{ {-82, 284, -429}, 0, {489, 871}, {232, 15, 132, 255} }},
-	{{ {-161, 284, -405}, 0, {456, 871}, {208, 15, 139, 255} }},
-	{{ {-81, 261, -424}, 0, {489, 884}, {240, 174, 160, 255} }},
-	{{ {-159, 261, -401}, 0, {456, 884}, {220, 176, 164, 255} }},
-	{{ {-176, 242, -361}, 0, {441, 902}, {240, 134, 225, 255} }},
-	{{ {-230, 261, -363}, 0, {421, 884}, {200, 175, 175, 255} }},
-	{{ {-294, 242, -268}, 0, {371, 902}, {229, 134, 233, 255} }},
-	{{ {-228, 236, -246}, 0, {385, 936}, {254, 129, 253, 255} }},
-	{{ {-325, 236, -53}, 0, {269, 936}, {251, 129, 255, 255} }},
-	{{ {-253, 240, -90}, 0, {297, 967}, {44, 137, 2, 255} }},
-	{{ {-206, 240, -182}, 0, {365, 967}, {40, 137, 17, 255} }},
-	{{ {-128, 240, -248}, 0, {435, 967}, {30, 137, 33, 255} }},
-	{{ {-153, 268, -201}, 0, {401, 979}, {72, 193, 84, 255} }},
-	{{ {-128, 240, -248}, 0, {435, 967}, {30, 137, 33, 255} }},
-	{{ {-71, 268, -246}, 0, {471, 979}, {34, 192, 104, 255} }},
-	{{ {-153, 268, -201}, 0, {401, 979}, {72, 193, 84, 255} }},
-	{{ {-51, 240, -275}, 0, {489, 967}, {8, 136, 40, 255} }},
-	{{ {-206, 240, -182}, 0, {365, 967}, {40, 137, 17, 255} }},
-	{{ {-212, 268, -129}, 0, {332, 979}, {99, 193, 50, 255} }},
-	{{ {-253, 240, -90}, 0, {297, 967}, {44, 137, 2, 255} }},
-	{{ {-238, 268, -39}, 0, {266, 979}, {111, 194, 9, 255} }},
-	{{ {-262, 240, 12}, 0, {232, 967}, {40, 136, 244, 255} }},
-	{{ {-233, 268, 29}, 0, {218, 979}, {108, 194, 232, 255} }},
-	{{ {-212, 268, 93}, 0, {173, 979}, {97, 192, 205, 255} }},
-	{{ {-230, 240, 110}, 0, {169, 967}, {36, 135, 240, 255} }},
-	{{ {-168, 268, 151}, 0, {126, 979}, {77, 191, 179, 255} }},
-	{{ {-186, 240, 168}, 0, {126, 967}, {28, 136, 227, 255} }},
-	{{ {-128, 240, 213}, 0, {80, 967}, {17, 135, 221, 255} }},
-	{{ {-111, 268, 194}, 0, {76, 979}, {50, 192, 158, 255} }},
-	{{ {-51, 240, 240}, 0, {28, 967}, {8, 136, 216, 255} }},
-	{{ {-128, 240, 213}, 0, {80, 967}, {17, 135, 221, 255} }},
-	{{ {-111, 268, 194}, 0, {76, 979}, {50, 192, 158, 255} }},
-	{{ {-46, 268, 216}, 0, {28, 979}, {22, 191, 149, 255} }},
-	{{ {-124, 236, 280}, 0, {61, 936}, {255, 129, 4, 255} }},
-	{{ {-186, 240, 168}, 0, {126, 967}, {28, 136, 227, 255} }},
-	{{ {-269, 236, 162}, 0, {156, 936}, {252, 129, 2, 255} }},
-	{{ {-250, 242, 276}, 0, {113, 902}, {233, 134, 27, 255} }},
-	{{ {-119, 242, 350}, 0, {48, 902}, {239, 135, 35, 255} }},
-	{{ {-230, 261, 327}, 0, {94, 884}, {203, 175, 82, 255} }},
-	{{ {-159, 261, 365}, 0, {62, 884}, {217, 176, 91, 255} }},
-	{{ {-81, 261, 389}, 0, {28, 884}, {238, 176, 97, 255} }},
-	{{ {-161, 284, 370}, 0, {62, 871}, {208, 15, 117, 255} }},
-	{{ {-82, 284, 394}, 0, {28, 871}, {232, 15, 124, 255} }},
-	{{ {-157, 306, 360}, 0, {62, 857}, {223, 96, 77, 255} }},
-	{{ {-80, 306, 383}, 0, {28, 857}, {241, 96, 82, 255} }},
-	{{ {-80, 306, 383}, 0, {28, 857}, {241, 96, 82, 255} }},
-	{{ {-117, 318, 344}, 0, {48, 839}, {250, 126, 15, 255} }},
-	{{ {-157, 306, 360}, 0, {62, 857}, {223, 96, 77, 255} }},
-	{{ {-227, 306, 322}, 0, {94, 857}, {212, 97, 70, 255} }},
-	{{ {-246, 318, 272}, 0, {112, 839}, {245, 126, 12, 255} }},
-	{{ {-99, 313, 292}, 0, {47, 809}, {6, 125, 237, 255} }},
-	{{ {-211, 313, 229}, 0, {113, 809}, {13, 125, 241, 255} }},
-	{{ {-339, 318, 156}, 0, {174, 839}, {241, 126, 7, 255} }},
-	{{ {-289, 313, 131}, 0, {174, 809}, {18, 125, 247, 255} }},
-	{{ {-379, 318, 13}, 0, {237, 839}, {228, 124, 0, 255} }},
-	{{ {-323, 313, 14}, 0, {234, 809}, {20, 125, 254, 255} }},
-	{{ {-362, 318, -134}, 0, {303, 839}, {240, 126, 253, 255} }},
-	{{ {-312, 313, -107}, 0, {297, 809}, {19, 125, 5, 255} }},
-	{{ {-290, 318, -264}, 0, {371, 839}, {245, 126, 244, 255} }},
-	{{ {-237, 313, -244}, 0, {381, 809}, {14, 125, 14, 255} }},
-	{{ {-340, 306, -245}, 0, {350, 857}, {181, 94, 214, 255} }},
-	{{ {-378, 306, -174}, 0, {316, 857}, {179, 96, 223, 255} }},
-	{{ {-362, 318, -134}, 0, {303, 839}, {240, 126, 253, 255} }},
-	{{ {-340, 306, -245}, 0, {350, 857}, {181, 94, 214, 255} }},
-	{{ {-349, 284, -251}, 0, {350, 871}, {151, 15, 186, 255} }},
-	{{ {-289, 306, -307}, 0, {385, 857}, {198, 96, 196, 255} }},
-	{{ {-290, 318, -264}, 0, {371, 839}, {245, 126, 244, 255} }},
-	{{ {-227, 306, -358}, 0, {421, 857}, {203, 94, 189, 255} }},
-	{{ {-233, 284, -366}, 0, {421, 871}, {186, 15, 151, 255} }},
-	{{ {-157, 306, -396}, 0, {456, 857}, {225, 96, 178, 255} }},
-	{{ {-161, 284, -405}, 0, {456, 871}, {208, 15, 139, 255} }},
-	{{ {-230, 261, -363}, 0, {421, 884}, {200, 175, 175, 255} }},
-	{{ {-159, 261, -401}, 0, {456, 884}, {220, 176, 164, 255} }},
-	{{ {-297, 284, -314}, 0, {385, 871}, {167, 15, 167, 255} }},
-	{{ {-293, 261, -311}, 0, {385, 884}, {187, 176, 185, 255} }},
-	{{ {-294, 242, -268}, 0, {371, 902}, {229, 134, 233, 255} }},
-	{{ {-345, 261, -248}, 0, {350, 884}, {174, 175, 203, 255} }},
-	{{ {-345, 261, -248}, 0, {350, 884}, {174, 175, 203, 255} }},
-	{{ {-294, 242, -268}, 0, {371, 902}, {229, 134, 233, 255} }},
-	{{ {-367, 242, -136}, 0, {303, 902}, {219, 135, 249, 255} }},
-	{{ {-325, 236, -53}, 0, {269, 936}, {251, 129, 255, 255} }},
-	{{ {-385, 242, 13}, 0, {237, 902}, {220, 134, 3, 255} }},
-	{{ {-269, 236, 162}, 0, {156, 936}, {252, 129, 2, 255} }},
-	{{ {-230, 240, 110}, 0, {169, 967}, {36, 135, 240, 255} }},
-	{{ {-262, 240, 12}, 0, {232, 967}, {40, 136, 244, 255} }},
-	{{ {-253, 240, -90}, 0, {297, 967}, {44, 137, 2, 255} }},
-	{{ {-186, 240, 168}, 0, {126, 967}, {28, 136, 227, 255} }},
-	{{ {-297, 284, -314}, 0, {385, 871}, {167, 15, 167, 255} }},
-	{{ {-289, 306, -307}, 0, {385, 857}, {198, 96, 196, 255} }},
-	{{ {-233, 284, -366}, 0, {421, 871}, {186, 15, 151, 255} }},
-	{{ {-349, 284, -251}, 0, {350, 871}, {151, 15, 186, 255} }},
-	{{ {-293, 261, -311}, 0, {385, 884}, {187, 176, 185, 255} }},
-	{{ {-387, 284, -178}, 0, {316, 871}, {139, 15, 208, 255} }},
-	{{ {-345, 261, -248}, 0, {350, 884}, {174, 175, 203, 255} }},
-	{{ {-383, 261, -176}, 0, {316, 884}, {165, 176, 217, 255} }},
-	{{ {-387, 284, -178}, 0, {316, 871}, {139, 15, 208, 255} }},
-	{{ {-367, 242, -136}, 0, {303, 902}, {219, 135, 249, 255} }},
-	{{ {-407, 261, -99}, 0, {283, 884}, {159, 175, 238, 255} }},
-	{{ {-385, 242, 13}, 0, {237, 902}, {220, 134, 3, 255} }},
-	{{ {-415, 261, -18}, 0, {251, 884}, {157, 176, 255, 255} }},
-	{{ {-407, 261, 63}, 0, {218, 884}, {160, 175, 20, 255} }},
-	{{ {-344, 242, 158}, 0, {174, 902}, {224, 134, 16, 255} }},
-	{{ {-269, 236, 162}, 0, {156, 936}, {252, 129, 2, 255} }},
-	{{ {-250, 242, 276}, 0, {113, 902}, {233, 134, 27, 255} }},
-	{{ {-345, 261, 213}, 0, {156, 884}, {175, 175, 56, 255} }},
-	{{ {-293, 261, 276}, 0, {126, 884}, {185, 176, 69, 255} }},
-	{{ {-230, 261, 327}, 0, {94, 884}, {203, 175, 82, 255} }},
-	{{ {-297, 284, 279}, 0, {126, 871}, {167, 15, 89, 255} }},
-	{{ {-233, 284, 331}, 0, {94, 871}, {186, 15, 105, 255} }},
-	{{ {-161, 284, 370}, 0, {62, 871}, {208, 15, 117, 255} }},
-	{{ {-233, 284, 331}, 0, {94, 871}, {186, 15, 105, 255} }},
-	{{ {-230, 261, 327}, 0, {94, 884}, {203, 175, 82, 255} }},
-	{{ {-159, 261, 365}, 0, {62, 884}, {217, 176, 91, 255} }},
-	{{ {-157, 306, 360}, 0, {62, 857}, {223, 96, 77, 255} }},
-	{{ {-227, 306, 322}, 0, {94, 857}, {212, 97, 70, 255} }},
-	{{ {-289, 306, 271}, 0, {126, 857}, {196, 96, 58, 255} }},
-	{{ {-246, 318, 272}, 0, {112, 839}, {245, 126, 12, 255} }},
-	{{ {-340, 306, 209}, 0, {156, 857}, {188, 97, 47, 255} }},
-	{{ {-339, 318, 156}, 0, {174, 839}, {241, 126, 7, 255} }},
-	{{ {-378, 306, 139}, 0, {187, 857}, {178, 96, 31, 255} }},
-	{{ {-401, 306, 62}, 0, {218, 857}, {175, 97, 18, 255} }},
-	{{ {-379, 318, 13}, 0, {237, 839}, {228, 124, 0, 255} }},
-	{{ {-409, 306, -18}, 0, {251, 857}, {171, 95, 3, 255} }},
-	{{ {-401, 306, -98}, 0, {283, 857}, {175, 96, 242, 255} }},
-	{{ {-362, 318, -134}, 0, {303, 839}, {240, 126, 253, 255} }},
-	{{ {-378, 306, -174}, 0, {316, 857}, {179, 96, 223, 255} }},
-	{{ {-401, 306, -98}, 0, {283, 857}, {175, 96, 242, 255} }},
-	{{ {-362, 318, -134}, 0, {303, 839}, {240, 126, 253, 255} }},
-	{{ {-411, 284, -100}, 0, {283, 871}, {132, 15, 232, 255} }},
-	{{ {-387, 284, -178}, 0, {316, 871}, {139, 15, 208, 255} }},
-	{{ {-349, 284, -251}, 0, {350, 871}, {151, 15, 186, 255} }},
-	{{ {-407, 261, -99}, 0, {283, 884}, {159, 175, 238, 255} }},
-	{{ {-383, 261, -176}, 0, {316, 884}, {165, 176, 217, 255} }},
-	{{ {-419, 284, -18}, 0, {251, 871}, {130, 15, 0, 255} }},
-	{{ {-415, 261, -18}, 0, {251, 884}, {157, 176, 255, 255} }},
-	{{ {-407, 261, 63}, 0, {218, 884}, {160, 175, 20, 255} }},
-	{{ {-411, 284, 64}, 0, {218, 871}, {132, 15, 24, 255} }},
-	{{ {-387, 284, 143}, 0, {187, 871}, {139, 15, 48, 255} }},
-	{{ {-383, 261, 141}, 0, {187, 884}, {164, 176, 36, 255} }},
-	{{ {-344, 242, 158}, 0, {174, 902}, {224, 134, 16, 255} }},
-	{{ {-345, 261, 213}, 0, {156, 884}, {175, 175, 56, 255} }},
-	{{ {-387, 284, 143}, 0, {187, 871}, {139, 15, 48, 255} }},
-	{{ {-345, 261, 213}, 0, {156, 884}, {175, 175, 56, 255} }},
-	{{ {-349, 284, 215}, 0, {156, 871}, {151, 15, 70, 255} }},
-	{{ {-297, 284, 279}, 0, {126, 871}, {167, 15, 89, 255} }},
-	{{ {-293, 261, 276}, 0, {126, 884}, {185, 176, 69, 255} }},
-	{{ {-289, 306, 271}, 0, {126, 857}, {196, 96, 58, 255} }},
-	{{ {-233, 284, 331}, 0, {94, 871}, {186, 15, 105, 255} }},
-	{{ {-340, 306, 209}, 0, {156, 857}, {188, 97, 47, 255} }},
-	{{ {-378, 306, 139}, 0, {187, 857}, {178, 96, 31, 255} }},
-	{{ {-411, 284, 64}, 0, {218, 871}, {132, 15, 24, 255} }},
-	{{ {-401, 306, 62}, 0, {218, 857}, {175, 97, 18, 255} }},
-	{{ {-409, 306, -18}, 0, {251, 857}, {171, 95, 3, 255} }},
-	{{ {-419, 284, -18}, 0, {251, 871}, {130, 15, 0, 255} }},
-	{{ {-411, 284, -100}, 0, {283, 871}, {132, 15, 232, 255} }},
-	{{ {-401, 306, -98}, 0, {283, 857}, {175, 96, 242, 255} }},
-	{{ {0, 313, -342}, 0, {525, 809}, {0, 125, 22, 255} }},
-	{{ {0, 297, -289}, 0, {525, 779}, {0, 122, 37, 255} }},
-	{{ {51, 297, -284}, 0, {489, 779}, {250, 121, 37, 255} }},
-	{{ {101, 313, -327}, 0, {469, 809}, {249, 125, 20, 255} }},
-	{{ {100, 297, -269}, 0, {456, 779}, {241, 122, 33, 255} }},
-	{{ {145, 297, -243}, 0, {421, 779}, {236, 121, 32, 255} }},
-	{{ {237, 313, -244}, 0, {381, 809}, {241, 125, 13, 255} }},
-	{{ {185, 297, -210}, 0, {385, 779}, {233, 123, 22, 255} }},
-	{{ {218, 297, -169}, 0, {350, 779}, {225, 122, 17, 255} }},
-	{{ {242, 297, -122}, 0, {316, 779}, {226, 123, 14, 255} }},
-	{{ {312, 313, -107}, 0, {297, 809}, {237, 125, 5, 255} }},
-	{{ {257, 298, -70}, 0, {283, 779}, {225, 123, 5, 255} }},
-	{{ {262, 298, -17}, 0, {251, 779}, {224, 123, 0, 255} }},
-	{{ {323, 313, 14}, 0, {234, 809}, {236, 125, 255, 255} }},
-	{{ {257, 298, 36}, 0, {218, 779}, {225, 123, 249, 255} }},
-	{{ {289, 313, 131}, 0, {174, 809}, {238, 125, 247, 255} }},
-	{{ {257, 298, 36}, 0, {218, 779}, {225, 123, 249, 255} }},
-	{{ {242, 298, 88}, 0, {187, 779}, {226, 123, 245, 255} }},
-	{{ {289, 313, 131}, 0, {174, 809}, {238, 125, 247, 255} }},
-	{{ {218, 298, 135}, 0, {156, 779}, {229, 123, 237, 255} }},
-	{{ {211, 313, 229}, 0, {113, 809}, {243, 125, 241, 255} }},
-	{{ {185, 298, 176}, 0, {126, 779}, {231, 122, 233, 255} }},
-	{{ {146, 298, 209}, 0, {94, 779}, {238, 122, 226, 255} }},
-	{{ {99, 313, 292}, 0, {47, 809}, {251, 125, 237, 255} }},
-	{{ {100, 298, 230}, 0, {62, 779}, {244, 123, 225, 255} }},
-	{{ {51, 298, 241}, 0, {28, 779}, {251, 123, 223, 255} }},
-	{{ {0, 313, 306}, 0, {-8, 809}, {0, 125, 236, 255} }},
-	{{ {0, 298, 246}, 0, {-8, 779}, {0, 123, 224, 255} }},
-	{{ {117, 318, 344}, 0, {48, 839}, {6, 124, 27, 255} }},
-	{{ {246, 318, 272}, 0, {112, 839}, {12, 126, 12, 255} }},
-	{{ {227, 306, 322}, 0, {94, 857}, {50, 95, 68, 255} }},
-	{{ {157, 306, 360}, 0, {62, 857}, {29, 95, 80, 255} }},
-	{{ {157, 306, 360}, 0, {62, 857}, {29, 95, 80, 255} }},
-	{{ {117, 318, 344}, 0, {48, 839}, {6, 124, 27, 255} }},
-	{{ {80, 306, 383}, 0, {28, 857}, {21, 94, 83, 255} }},
-	{{ {0, 318, 361}, 0, {-8, 839}, {0, 126, 14, 255} }},
-	{{ {0, 313, 306}, 0, {-8, 809}, {0, 125, 236, 255} }},
-	{{ {0, 306, 391}, 0, {-8, 857}, {0, 96, 84, 255} }},
-	{{ {82, 284, 394}, 0, {28, 871}, {24, 15, 124, 255} }},
-	{{ {0, 284, 402}, 0, {-8, 871}, {0, 15, 126, 255} }},
-	{{ {81, 261, 389}, 0, {28, 884}, {20, 174, 95, 255} }},
-	{{ {0, 261, 397}, 0, {-8, 884}, {0, 179, 101, 255} }},
-	{{ {0, 242, 370}, 0, {-9, 902}, {12, 136, 40, 255} }},
-	{{ {176, 242, 326}, 0, {75, 902}, {14, 134, 33, 255} }},
-	{{ {124, 236, 280}, 0, {61, 936}, {1, 129, 1, 255} }},
-	{{ {0, 236, 301}, 0, {-8, 936}, {0, 129, 3, 255} }},
-	{{ {0, 240, 245}, 0, {-8, 967}, {0, 136, 215, 255} }},
-	{{ {51, 240, 240}, 0, {28, 967}, {1, 138, 209, 255} }},
-	{{ {51, 240, 240}, 0, {28, 967}, {1, 138, 209, 255} }},
-	{{ {0, 240, 245}, 0, {-8, 967}, {0, 136, 215, 255} }},
-	{{ {0, 268, 220}, 0, {-8, 979}, {0, 192, 146, 255} }},
-	{{ {46, 268, 216}, 0, {28, 979}, {234, 191, 149, 255} }},
-	{{ {0, 335, 199}, 0, {-8, 1002}, {0, 232, 131, 255} }},
-	{{ {42, 335, 194}, 0, {28, 1002}, {232, 232, 134, 255} }},
-	{{ {83, 335, 182}, 0, {62, 1002}, {199, 231, 145, 255} }},
-	{{ {111, 268, 194}, 0, {76, 979}, {206, 192, 158, 255} }},
-	{{ {153, 335, 135}, 0, {126, 1002}, {168, 232, 168, 255} }},
-	{{ {168, 268, 151}, 0, {126, 979}, {179, 191, 179, 255} }},
-	{{ {212, 268, 93}, 0, {173, 979}, {159, 192, 205, 255} }},
-	{{ {200, 335, 65}, 0, {187, 1002}, {141, 231, 209, 255} }},
-	{{ {233, 268, 29}, 0, {218, 979}, {148, 194, 232, 255} }},
-	{{ {216, 335, -18}, 0, {251, 1002}, {131, 231, 0, 255} }},
-	{{ {238, 268, -39}, 0, {266, 979}, {145, 194, 9, 255} }},
-	{{ {200, 335, -101}, 0, {316, 1002}, {140, 232, 47, 255} }},
-	{{ {200, 335, -101}, 0, {316, 1002}, {140, 232, 47, 255} }},
-	{{ {212, 268, -129}, 0, {332, 979}, {157, 194, 49, 255} }},
-	{{ {238, 268, -39}, 0, {266, 979}, {145, 194, 9, 255} }},
-	{{ {153, 335, -171}, 0, {385, 1002}, {168, 232, 88, 255} }},
-	{{ {168, 268, -186}, 0, {385, 979}, {179, 192, 79, 255} }},
-	{{ {111, 268, -230}, 0, {440, 979}, {204, 191, 96, 255} }},
-	{{ {83, 335, -218}, 0, {456, 1002}, {209, 231, 115, 255} }},
-	{{ {46, 268, -251}, 0, {489, 979}, {233, 193, 108, 255} }},
-	{{ {0, 335, -234}, 0, {525, 1002}, {0, 231, 125, 255} }},
-	{{ {0, 268, -256}, 0, {525, 979}, {0, 192, 110, 255} }},
-	{{ {51, 240, -275}, 0, {489, 967}, {247, 135, 39, 255} }},
-	{{ {0, 240, -280}, 0, {525, 967}, {0, 135, 40, 255} }},
-	{{ {0, 236, -349}, 0, {526, 936}, {2, 129, 251, 255} }},
-	{{ {128, 240, -248}, 0, {435, 967}, {239, 136, 37, 255} }},
-	{{ {228, 236, -246}, 0, {385, 936}, {1, 129, 252, 255} }},
-	{{ {250, 242, -312}, 0, {400, 902}, {24, 137, 217, 255} }},
-	{{ {250, 242, -312}, 0, {400, 902}, {24, 137, 217, 255} }},
-	{{ {0, 236, -349}, 0, {526, 936}, {2, 129, 251, 255} }},
-	{{ {119, 242, -385}, 0, {469, 902}, {6, 135, 218, 255} }},
-	{{ {0, 242, -402}, 0, {525, 902}, {0, 134, 220, 255} }},
-	{{ {81, 261, -424}, 0, {489, 884}, {26, 179, 158, 255} }},
-	{{ {0, 261, -432}, 0, {525, 884}, {0, 177, 156, 255} }},
-	{{ {0, 284, -437}, 0, {525, 871}, {0, 15, 130, 255} }},
-	{{ {82, 284, -429}, 0, {489, 871}, {24, 15, 132, 255} }},
-	{{ {0, 306, -427}, 0, {525, 857}, {0, 96, 172, 255} }},
-	{{ {80, 306, -419}, 0, {489, 857}, {15, 96, 174, 255} }},
-	{{ {0, 318, -396}, 0, {525, 839}, {0, 126, 242, 255} }},
-	{{ {117, 318, -380}, 0, {469, 839}, {6, 126, 241, 255} }},
-	{{ {0, 313, -342}, 0, {525, 809}, {0, 125, 22, 255} }},
-	{{ {101, 313, -327}, 0, {469, 809}, {249, 125, 20, 255} }},
-	{{ {246, 318, -308}, 0, {400, 839}, {12, 126, 244, 255} }},
-	{{ {237, 313, -244}, 0, {381, 809}, {241, 125, 13, 255} }},
-	{{ {246, 318, -308}, 0, {400, 839}, {12, 126, 244, 255} }},
-	{{ {237, 313, -244}, 0, {381, 809}, {241, 125, 13, 255} }},
-	{{ {339, 318, -191}, 0, {330, 839}, {14, 126, 248, 255} }},
-	{{ {312, 313, -107}, 0, {297, 809}, {237, 125, 5, 255} }},
-	{{ {379, 318, -49}, 0, {264, 839}, {16, 126, 254, 255} }},
-	{{ {323, 313, 14}, 0, {234, 809}, {236, 125, 255, 255} }},
-	{{ {362, 318, 99}, 0, {200, 839}, {15, 126, 7, 255} }},
-	{{ {289, 313, 131}, 0, {174, 809}, {238, 125, 247, 255} }},
-	{{ {315, 318, 193}, 0, {156, 839}, {12, 126, 9, 255} }},
-	{{ {211, 313, 229}, 0, {113, 809}, {243, 125, 241, 255} }},
-	{{ {246, 318, 272}, 0, {112, 839}, {12, 126, 12, 255} }},
-	{{ {99, 313, 292}, 0, {47, 809}, {251, 125, 237, 255} }},
-	{{ {340, 306, 209}, 0, {156, 857}, {69, 96, 47, 255} }},
-	{{ {289, 306, 271}, 0, {126, 857}, {60, 96, 58, 255} }},
-	{{ {227, 306, 322}, 0, {94, 857}, {50, 95, 68, 255} }},
-	{{ {233, 284, 331}, 0, {94, 871}, {70, 15, 105, 255} }},
-	{{ {233, 284, 331}, 0, {94, 871}, {70, 15, 105, 255} }},
-	{{ {227, 306, 322}, 0, {94, 857}, {50, 95, 68, 255} }},
-	{{ {157, 306, 360}, 0, {62, 857}, {29, 95, 80, 255} }},
-	{{ {161, 284, 370}, 0, {62, 871}, {48, 15, 117, 255} }},
-	{{ {82, 284, 394}, 0, {28, 871}, {24, 15, 124, 255} }},
-	{{ {80, 306, 383}, 0, {28, 857}, {21, 94, 83, 255} }},
-	{{ {81, 261, 389}, 0, {28, 884}, {20, 174, 95, 255} }},
-	{{ {159, 261, 365}, 0, {62, 884}, {36, 176, 92, 255} }},
-	{{ {176, 242, 326}, 0, {75, 902}, {14, 134, 33, 255} }},
-	{{ {230, 261, 327}, 0, {94, 884}, {53, 176, 83, 255} }},
-	{{ {294, 242, 232}, 0, {138, 902}, {31, 135, 21, 255} }},
-	{{ {287, 236, 139}, 0, {170, 936}, {4, 129, 3, 255} }},
-	{{ {124, 236, 280}, 0, {61, 936}, {1, 129, 1, 255} }},
-	{{ {186, 240, 168}, 0, {126, 967}, {227, 136, 227, 255} }},
-	{{ {128, 240, 213}, 0, {80, 967}, {240, 135, 220, 255} }},
-	{{ {51, 240, 240}, 0, {28, 967}, {1, 138, 209, 255} }},
-	{{ {111, 268, 194}, 0, {76, 979}, {206, 192, 158, 255} }},
-	{{ {128, 240, 213}, 0, {80, 967}, {240, 135, 220, 255} }},
-	{{ {51, 240, 240}, 0, {28, 967}, {1, 138, 209, 255} }},
-	{{ {46, 268, 216}, 0, {28, 979}, {234, 191, 149, 255} }},
-	{{ {168, 268, 151}, 0, {126, 979}, {179, 191, 179, 255} }},
-	{{ {186, 240, 168}, 0, {126, 967}, {227, 136, 227, 255} }},
-	{{ {230, 240, 110}, 0, {169, 967}, {222, 135, 239, 255} }},
-	{{ {212, 268, 93}, 0, {173, 979}, {159, 192, 205, 255} }},
-	{{ {262, 240, 12}, 0, {232, 967}, {216, 135, 252, 255} }},
-	{{ {233, 268, 29}, 0, {218, 979}, {148, 194, 232, 255} }},
-	{{ {238, 268, -39}, 0, {266, 979}, {145, 194, 9, 255} }},
-	{{ {253, 240, -90}, 0, {297, 967}, {219, 135, 8, 255} }},
-	{{ {212, 268, -129}, 0, {332, 979}, {157, 194, 49, 255} }},
-	{{ {206, 240, -182}, 0, {365, 967}, {223, 135, 21, 255} }},
-	{{ {168, 268, -186}, 0, {385, 979}, {179, 192, 79, 255} }},
-	{{ {128, 240, -248}, 0, {435, 967}, {239, 136, 37, 255} }},
-	{{ {111, 268, -230}, 0, {440, 979}, {204, 191, 96, 255} }},
-	{{ {128, 240, -248}, 0, {435, 967}, {239, 136, 37, 255} }},
-	{{ {168, 268, -186}, 0, {385, 979}, {179, 192, 79, 255} }},
-	{{ {51, 240, -275}, 0, {489, 967}, {247, 135, 39, 255} }},
-	{{ {46, 268, -251}, 0, {489, 979}, {233, 193, 108, 255} }},
-	{{ {206, 240, -182}, 0, {365, 967}, {223, 135, 21, 255} }},
-	{{ {228, 236, -246}, 0, {385, 936}, {1, 129, 252, 255} }},
-	{{ {253, 240, -90}, 0, {297, 967}, {219, 135, 8, 255} }},
-	{{ {317, 236, -81}, 0, {284, 936}, {5, 129, 0, 255} }},
-	{{ {320, 242, -231}, 0, {350, 902}, {28, 134, 237, 255} }},
-	{{ {250, 242, -312}, 0, {400, 902}, {24, 137, 217, 255} }},
-	{{ {345, 261, -248}, 0, {350, 884}, {82, 176, 201, 255} }},
-	{{ {293, 261, -311}, 0, {385, 884}, {71, 176, 187, 255} }},
-	{{ {230, 261, -363}, 0, {421, 884}, {53, 175, 173, 255} }},
-	{{ {119, 242, -385}, 0, {469, 902}, {6, 135, 218, 255} }},
-	{{ {159, 261, -401}, 0, {456, 884}, {33, 178, 161, 255} }},
-	{{ {119, 242, -385}, 0, {469, 902}, {6, 135, 218, 255} }},
-	{{ {81, 261, -424}, 0, {489, 884}, {26, 179, 158, 255} }},
-	{{ {159, 261, -401}, 0, {456, 884}, {33, 178, 161, 255} }},
-	{{ {161, 284, -405}, 0, {456, 871}, {48, 15, 139, 255} }},
-	{{ {82, 284, -429}, 0, {489, 871}, {24, 15, 132, 255} }},
-	{{ {157, 306, -396}, 0, {456, 857}, {33, 96, 179, 255} }},
-	{{ {80, 306, -419}, 0, {489, 857}, {15, 96, 174, 255} }},
-	{{ {117, 318, -380}, 0, {469, 839}, {6, 126, 241, 255} }},
-	{{ {227, 306, -358}, 0, {421, 857}, {44, 97, 186, 255} }},
-	{{ {246, 318, -308}, 0, {400, 839}, {12, 126, 244, 255} }},
-	{{ {289, 306, -307}, 0, {385, 857}, {60, 96, 198, 255} }},
-	{{ {340, 306, -245}, 0, {350, 857}, {68, 97, 209, 255} }},
-	{{ {339, 318, -191}, 0, {330, 839}, {14, 126, 248, 255} }},
-	{{ {378, 306, -174}, 0, {316, 857}, {78, 96, 225, 255} }},
-	{{ {401, 306, -98}, 0, {283, 857}, {81, 97, 238, 255} }},
-	{{ {379, 318, -49}, 0, {264, 839}, {16, 126, 254, 255} }},
-	{{ {401, 306, -98}, 0, {283, 857}, {81, 97, 238, 255} }},
-	{{ {379, 318, -49}, 0, {264, 839}, {16, 126, 254, 255} }},
-	{{ {409, 306, -18}, 0, {251, 857}, {83, 96, 1, 255} }},
-	{{ {401, 306, 62}, 0, {218, 857}, {81, 96, 14, 255} }},
-	{{ {362, 318, 99}, 0, {200, 839}, {15, 126, 7, 255} }},
-	{{ {378, 306, 139}, 0, {187, 857}, {80, 95, 29, 255} }},
-	{{ {340, 306, 209}, 0, {156, 857}, {69, 96, 47, 255} }},
-	{{ {315, 318, 193}, 0, {156, 839}, {12, 126, 9, 255} }},
-	{{ {349, 284, 215}, 0, {156, 871}, {105, 15, 70, 255} }},
-	{{ {289, 306, 271}, 0, {126, 857}, {60, 96, 58, 255} }},
-	{{ {297, 284, 279}, 0, {126, 871}, {89, 15, 89, 255} }},
-	{{ {233, 284, 331}, 0, {94, 871}, {70, 15, 105, 255} }},
-	{{ {230, 261, 327}, 0, {94, 884}, {53, 176, 83, 255} }},
-	{{ {161, 284, 370}, 0, {62, 871}, {48, 15, 117, 255} }},
-	{{ {159, 261, 365}, 0, {62, 884}, {36, 176, 92, 255} }},
-	{{ {293, 261, 276}, 0, {126, 884}, {69, 176, 71, 255} }},
-	{{ {345, 261, 213}, 0, {156, 884}, {83, 176, 54, 255} }},
-	{{ {297, 284, 279}, 0, {126, 871}, {89, 15, 89, 255} }},
-	{{ {293, 261, 276}, 0, {126, 884}, {69, 176, 71, 255} }},
-	{{ {294, 242, 232}, 0, {138, 902}, {31, 135, 21, 255} }},
-	{{ {230, 261, 327}, 0, {94, 884}, {53, 176, 83, 255} }},
-	{{ {355, 242, 129}, 0, {187, 902}, {31, 134, 16, 255} }},
-	{{ {383, 261, 141}, 0, {187, 884}, {92, 177, 38, 255} }},
-	{{ {407, 261, 63}, 0, {218, 884}, {97, 176, 20, 255} }},
-	{{ {385, 242, 13}, 0, {237, 902}, {38, 135, 254, 255} }},
-	{{ {287, 236, 139}, 0, {170, 936}, {4, 129, 3, 255} }},
-	{{ {317, 236, -81}, 0, {284, 936}, {5, 129, 0, 255} }},
-	{{ {367, 242, -136}, 0, {303, 902}, {43, 137, 250, 255} }},
-	{{ {320, 242, -231}, 0, {350, 902}, {28, 134, 237, 255} }},
-	{{ {345, 261, -248}, 0, {350, 884}, {82, 176, 201, 255} }},
-	{{ {383, 261, -176}, 0, {316, 884}, {91, 176, 217, 255} }},
-	{{ {387, 284, -178}, 0, {316, 871}, {117, 15, 208, 255} }},
-	{{ {345, 261, -248}, 0, {350, 884}, {82, 176, 201, 255} }},
-	{{ {349, 284, -251}, 0, {350, 871}, {105, 15, 186, 255} }},
-	{{ {387, 284, -178}, 0, {316, 871}, {117, 15, 208, 255} }},
-	{{ {297, 284, -314}, 0, {385, 871}, {89, 15, 167, 255} }},
-	{{ {293, 261, -311}, 0, {385, 884}, {71, 176, 187, 255} }},
-	{{ {230, 261, -363}, 0, {421, 884}, {53, 175, 173, 255} }},
-	{{ {233, 284, -366}, 0, {421, 871}, {70, 15, 151, 255} }},
-	{{ {161, 284, -405}, 0, {456, 871}, {48, 15, 139, 255} }},
-	{{ {159, 261, -401}, 0, {456, 884}, {33, 178, 161, 255} }},
-	{{ {157, 306, -396}, 0, {456, 857}, {33, 96, 179, 255} }},
-	{{ {227, 306, -358}, 0, {421, 857}, {44, 97, 186, 255} }},
-	{{ {289, 306, -307}, 0, {385, 857}, {60, 96, 198, 255} }},
-	{{ {340, 306, -245}, 0, {350, 857}, {68, 97, 209, 255} }},
-	{{ {378, 306, -174}, 0, {316, 857}, {78, 96, 225, 255} }},
-	{{ {411, 284, -100}, 0, {283, 871}, {124, 15, 232, 255} }},
-	{{ {401, 306, -98}, 0, {283, 857}, {81, 97, 238, 255} }},
-	{{ {411, 284, -100}, 0, {283, 871}, {124, 15, 232, 255} }},
-	{{ {401, 306, -98}, 0, {283, 857}, {81, 97, 238, 255} }},
-	{{ {409, 306, -18}, 0, {251, 857}, {83, 96, 1, 255} }},
-	{{ {419, 284, -18}, 0, {251, 871}, {126, 15, 0, 255} }},
-	{{ {411, 284, 64}, 0, {218, 871}, {124, 15, 24, 255} }},
-	{{ {401, 306, 62}, 0, {218, 857}, {81, 96, 14, 255} }},
-	{{ {378, 306, 139}, 0, {187, 857}, {80, 95, 29, 255} }},
-	{{ {387, 284, 143}, 0, {187, 871}, {117, 15, 48, 255} }},
-	{{ {349, 284, 215}, 0, {156, 871}, {105, 15, 70, 255} }},
-	{{ {345, 261, 213}, 0, {156, 884}, {83, 176, 54, 255} }},
-	{{ {297, 284, 279}, 0, {126, 871}, {89, 15, 89, 255} }},
-	{{ {383, 261, 141}, 0, {187, 884}, {92, 177, 38, 255} }},
-	{{ {407, 261, 63}, 0, {218, 884}, {97, 176, 20, 255} }},
-	{{ {415, 261, -18}, 0, {251, 884}, {99, 176, 255, 255} }},
-	{{ {385, 242, 13}, 0, {237, 902}, {38, 135, 254, 255} }},
-	{{ {407, 261, -99}, 0, {283, 884}, {97, 175, 238, 255} }},
-	{{ {407, 261, -99}, 0, {283, 884}, {97, 175, 238, 255} }},
-	{{ {385, 242, 13}, 0, {237, 902}, {38, 135, 254, 255} }},
-	{{ {367, 242, -136}, 0, {303, 902}, {43, 137, 250, 255} }},
-	{{ {383, 261, -176}, 0, {316, 884}, {91, 176, 217, 255} }},
-	{{ {387, 284, -178}, 0, {316, 871}, {117, 15, 208, 255} }},
-	{{ {411, 284, -100}, 0, {283, 871}, {124, 15, 232, 255} }},
-	{{ {419, 284, -18}, 0, {251, 871}, {126, 15, 0, 255} }},
-	{{ {415, 261, -18}, 0, {251, 884}, {99, 176, 255, 255} }},
-	{{ {317, 236, -81}, 0, {284, 936}, {5, 129, 0, 255} }},
-	{{ {262, 240, 12}, 0, {232, 967}, {216, 135, 252, 255} }},
-	{{ {253, 240, -90}, 0, {297, 967}, {219, 135, 8, 255} }},
-	{{ {287, 236, 139}, 0, {170, 936}, {4, 129, 3, 255} }},
-	{{ {230, 240, 110}, 0, {169, 967}, {222, 135, 239, 255} }},
-	{{ {186, 240, 168}, 0, {126, 967}, {227, 136, 227, 255} }},
-	{{ {-72, 667, -442}, 0, {767, 8}, {231, 227, 135, 255} }},
-	{{ {0, 680, -448}, 0, {805, 12}, {0, 58, 143, 255} }},
-	{{ {0, 665, -450}, 0, {805, 5}, {0, 227, 132, 255} }},
-	{{ {-71, 682, -441}, 0, {769, 16}, {239, 60, 145, 255} }},
-	{{ {-140, 672, -423}, 0, {732, 18}, {209, 227, 142, 255} }},
-	{{ {-138, 687, -422}, 0, {734, 25}, {221, 62, 151, 255} }},
-	{{ {-204, 681, -392}, 0, {698, 35}, {189, 228, 152, 255} }},
-	{{ {-202, 696, -392}, 0, {702, 42}, {211, 66, 157, 255} }},
-	{{ {-261, 692, -352}, 0, {669, 57}, {169, 230, 167, 255} }},
-	{{ {-258, 706, -352}, 0, {674, 62}, {193, 72, 172, 255} }},
-	{{ {-307, 705, -300}, 0, {645, 84}, {152, 234, 186, 255} }},
-	{{ {-303, 718, -300}, 0, {651, 88}, {184, 78, 186, 255} }},
-	{{ {-335, 730, -243}, 0, {634, 117}, {180, 82, 195, 255} }},
-	{{ {-341, 717, -242}, 0, {628, 115}, {140, 240, 207, 255} }},
-	{{ {-355, 744, -182}, 0, {624, 149}, {176, 91, 218, 255} }},
-	{{ {-361, 733, -180}, 0, {617, 148}, {132, 248, 232, 255} }},
-	{{ {-361, 758, -116}, 0, {620, 183}, {176, 97, 237, 255} }},
-	{{ {-355, 744, -182}, 0, {624, 149}, {176, 91, 218, 255} }},
-	{{ {-361, 733, -180}, 0, {617, 148}, {132, 248, 232, 255} }},
-	{{ {-368, 747, -114}, 0, {614, 183}, {129, 0, 255, 255} }},
-	{{ {-353, 773, -43}, 0, {624, 221}, {177, 99, 253, 255} }},
-	{{ {-360, 762, -39}, 0, {618, 222}, {131, 12, 22, 255} }},
-	{{ {-331, 787, 22}, 0, {636, 254}, {183, 104, 10, 255} }},
-	{{ {-337, 776, 27}, 0, {630, 257}, {140, 23, 46, 255} }},
-	{{ {-304, 789, 84}, 0, {647, 287}, {153, 30, 69, 255} }},
-	{{ {-297, 799, 79}, 0, {653, 283}, {192, 107, 26, 255} }},
-	{{ {-258, 799, 133}, 0, {671, 312}, {170, 37, 86, 255} }},
-	{{ {-253, 810, 127}, 0, {676, 308}, {202, 108, 38, 255} }},
-	{{ {-203, 808, 170}, 0, {700, 332}, {197, 44, 104, 255} }},
-	{{ {-200, 818, 164}, 0, {703, 327}, {214, 108, 52, 255} }},
-	{{ {-130, 815, 198}, 0, {737, 347}, {227, 36, 118, 255} }},
-	{{ {-130, 825, 191}, 0, {738, 341}, {231, 103, 70, 255} }},
-	{{ {-130, 815, 198}, 0, {737, 347}, {227, 36, 118, 255} }},
-	{{ {-81, 817, 204}, 0, {762, 351}, {195, 41, 104, 255} }},
-	{{ {-130, 825, 191}, 0, {738, 341}, {231, 103, 70, 255} }},
-	{{ {-71, 827, 199}, 0, {768, 345}, {205, 115, 20, 255} }},
-	{{ {-146, 830, 166}, 0, {730, 325}, {247, 127, 5, 255} }},
-	{{ {-43, 840, 182}, 0, {783, 338}, {248, 125, 237, 255} }},
-	{{ {-51, 832, 112}, 0, {780, 293}, {254, 126, 243, 255} }},
-	{{ {-3, 842, 187}, 0, {804, 340}, {8, 125, 235, 255} }},
-	{{ {157, 829, 159}, 0, {886, 323}, {12, 126, 0, 255} }},
-	{{ {23, 839, 198}, 0, {817, 346}, {17, 126, 4, 255} }},
-	{{ {59, 831, 201}, 0, {831, 347}, {24, 124, 16, 255} }},
-	{{ {130, 825, 191}, 0, {871, 341}, {23, 102, 73, 255} }},
-	{{ {73, 817, 205}, 0, {843, 351}, {51, 62, 99, 255} }},
-	{{ {130, 815, 198}, 0, {873, 347}, {33, 43, 115, 255} }},
-	{{ {200, 818, 164}, 0, {907, 327}, {43, 107, 53, 255} }},
-	{{ {203, 808, 170}, 0, {910, 332}, {59, 45, 103, 255} }},
-	{{ {200, 818, 164}, 0, {907, 327}, {43, 107, 53, 255} }},
-	{{ {203, 808, 170}, 0, {910, 332}, {59, 45, 103, 255} }},
-	{{ {253, 810, 127}, 0, {934, 308}, {54, 108, 38, 255} }},
-	{{ {258, 799, 133}, 0, {939, 312}, {86, 37, 86, 255} }},
-	{{ {297, 799, 79}, 0, {957, 283}, {64, 107, 26, 255} }},
-	{{ {304, 789, 84}, 0, {962, 287}, {103, 30, 69, 255} }},
-	{{ {331, 787, 22}, 0, {974, 254}, {73, 104, 10, 255} }},
-	{{ {337, 776, 27}, 0, {980, 257}, {116, 23, 46, 255} }},
-	{{ {360, 762, -39}, 0, {992, 222}, {125, 12, 22, 255} }},
-	{{ {353, 773, -43}, 0, {985, 221}, {79, 99, 253, 255} }},
-	{{ {368, 747, -114}, 0, {996, 183}, {127, 0, 255, 255} }},
-	{{ {361, 758, -116}, 0, {989, 183}, {80, 97, 237, 255} }},
-	{{ {361, 733, -180}, 0, {992, 148}, {124, 248, 232, 255} }},
-	{{ {355, 744, -182}, 0, {986, 149}, {80, 91, 218, 255} }},
-	{{ {341, 717, -242}, 0, {982, 115}, {116, 240, 207, 255} }},
-	{{ {335, 730, -243}, 0, {976, 117}, {77, 87, 204, 255} }},
-	{{ {307, 705, -300}, 0, {965, 84}, {104, 234, 186, 255} }},
-	{{ {335, 730, -243}, 0, {976, 117}, {77, 87, 204, 255} }},
-	{{ {341, 717, -242}, 0, {982, 115}, {116, 240, 207, 255} }},
-	{{ {303, 718, -300}, 0, {959, 88}, {72, 78, 186, 255} }},
-	{{ {258, 706, -352}, 0, {936, 62}, {63, 72, 172, 255} }},
-	{{ {261, 692, -352}, 0, {941, 57}, {87, 230, 167, 255} }},
-	{{ {202, 696, -392}, 0, {908, 42}, {45, 66, 157, 255} }},
-	{{ {204, 681, -392}, 0, {911, 35}, {67, 228, 152, 255} }},
-	{{ {138, 687, -422}, 0, {875, 25}, {35, 62, 151, 255} }},
-	{{ {140, 672, -423}, 0, {878, 18}, {47, 227, 142, 255} }},
-	{{ {71, 682, -441}, 0, {841, 16}, {17, 60, 145, 255} }},
-	{{ {72, 667, -442}, 0, {842, 8}, {25, 227, 135, 255} }},
-	{{ {0, 680, -448}, 0, {805, 12}, {0, 58, 143, 255} }},
-	{{ {0, 665, -450}, 0, {805, 5}, {0, 227, 132, 255} }},
-	{{ {0, 698, -432}, 0, {805, 24}, {0, 108, 189, 255} }},
-	{{ {-71, 682, -441}, 0, {769, 16}, {239, 60, 145, 255} }},
-	{{ {-107, 702, -417}, 0, {751, 33}, {245, 109, 192, 255} }},
-	{{ {0, 698, -432}, 0, {805, 24}, {0, 108, 189, 255} }},
-	{{ {-71, 682, -441}, 0, {769, 16}, {239, 60, 145, 255} }},
-	{{ {-138, 687, -422}, 0, {734, 25}, {221, 62, 151, 255} }},
-	{{ {-220, 715, -362}, 0, {695, 61}, {231, 110, 198, 255} }},
-	{{ {-202, 696, -392}, 0, {702, 42}, {211, 66, 157, 255} }},
-	{{ {-258, 706, -352}, 0, {674, 62}, {193, 72, 172, 255} }},
-	{{ {-297, 735, -276}, 0, {655, 103}, {215, 111, 210, 255} }},
-	{{ {-303, 718, -300}, 0, {651, 88}, {184, 78, 186, 255} }},
-	{{ {-335, 730, -243}, 0, {634, 117}, {180, 82, 195, 255} }},
-	{{ {-339, 760, -160}, 0, {635, 162}, {212, 115, 226, 255} }},
-	{{ {-355, 744, -182}, 0, {624, 149}, {176, 91, 218, 255} }},
-	{{ {-361, 758, -116}, 0, {620, 183}, {176, 97, 237, 255} }},
-	{{ {-332, 783, -50}, 0, {636, 218}, {219, 121, 241, 255} }},
-	{{ {-353, 773, -43}, 0, {624, 221}, {177, 99, 253, 255} }},
-	{{ {-331, 787, 22}, 0, {636, 254}, {183, 104, 10, 255} }},
-	{{ {-331, 787, 22}, 0, {636, 254}, {183, 104, 10, 255} }},
-	{{ {-295, 803, 44}, 0, {656, 265}, {222, 122, 252, 255} }},
-	{{ {-332, 783, -50}, 0, {636, 218}, {219, 121, 241, 255} }},
-	{{ {-297, 799, 79}, 0, {653, 283}, {192, 107, 26, 255} }},
-	{{ {-253, 810, 127}, 0, {676, 308}, {202, 108, 38, 255} }},
-	{{ {-238, 817, 112}, 0, {684, 300}, {231, 125, 1, 255} }},
-	{{ {-200, 818, 164}, 0, {703, 327}, {214, 108, 52, 255} }},
-	{{ {-146, 830, 166}, 0, {730, 325}, {247, 127, 5, 255} }},
-	{{ {-130, 825, 191}, 0, {738, 341}, {231, 103, 70, 255} }},
-	{{ {-182, 819, 51}, 0, {712, 271}, {245, 126, 245, 255} }},
-	{{ {-51, 832, 112}, 0, {780, 293}, {254, 126, 243, 255} }},
-	{{ {-96, 818, -6}, 0, {758, 233}, {253, 126, 240, 255} }},
-	{{ {161, 823, 66}, 0, {886, 276}, {8, 126, 244, 255} }},
-	{{ {157, 829, 159}, 0, {886, 323}, {12, 126, 0, 255} }},
-	{{ {238, 817, 112}, 0, {925, 300}, {25, 125, 1, 255} }},
-	{{ {200, 818, 164}, 0, {907, 327}, {43, 107, 53, 255} }},
-	{{ {130, 825, 191}, 0, {871, 341}, {23, 102, 73, 255} }},
-	{{ {200, 818, 164}, 0, {907, 327}, {43, 107, 53, 255} }},
-	{{ {157, 829, 159}, 0, {886, 323}, {12, 126, 0, 255} }},
-	{{ {253, 810, 127}, 0, {934, 308}, {54, 108, 38, 255} }},
-	{{ {238, 817, 112}, 0, {925, 300}, {25, 125, 1, 255} }},
-	{{ {295, 803, 44}, 0, {953, 265}, {34, 122, 252, 255} }},
-	{{ {297, 799, 79}, 0, {957, 283}, {64, 107, 26, 255} }},
-	{{ {331, 787, 22}, 0, {974, 254}, {73, 104, 10, 255} }},
-	{{ {332, 783, -50}, 0, {973, 218}, {37, 120, 240, 255} }},
-	{{ {353, 773, -43}, 0, {985, 221}, {79, 99, 253, 255} }},
-	{{ {361, 758, -116}, 0, {989, 183}, {80, 97, 237, 255} }},
-	{{ {339, 760, -160}, 0, {975, 162}, {44, 115, 226, 255} }},
-	{{ {355, 744, -182}, 0, {986, 149}, {80, 91, 218, 255} }},
-	{{ {335, 730, -243}, 0, {976, 117}, {77, 87, 204, 255} }},
-	{{ {297, 735, -276}, 0, {954, 103}, {37, 110, 205, 255} }},
-	{{ {303, 718, -300}, 0, {959, 88}, {72, 78, 186, 255} }},
-	{{ {258, 706, -352}, 0, {936, 62}, {63, 72, 172, 255} }},
-	{{ {297, 735, -276}, 0, {954, 103}, {37, 110, 205, 255} }},
-	{{ {303, 718, -300}, 0, {959, 88}, {72, 78, 186, 255} }},
-	{{ {220, 715, -362}, 0, {915, 61}, {23, 110, 197, 255} }},
-	{{ {202, 696, -392}, 0, {908, 42}, {45, 66, 157, 255} }},
-	{{ {138, 687, -422}, 0, {875, 25}, {35, 62, 151, 255} }},
-	{{ {107, 702, -417}, 0, {858, 33}, {7, 108, 190, 255} }},
-	{{ {71, 682, -441}, 0, {841, 16}, {17, 60, 145, 255} }},
-	{{ {0, 698, -432}, 0, {805, 24}, {0, 108, 189, 255} }},
-	{{ {0, 736, -341}, 0, {805, 73}, {0, 120, 213, 255} }},
-	{{ {-107, 702, -417}, 0, {751, 33}, {245, 109, 192, 255} }},
-	{{ {-153, 744, -306}, 0, {729, 93}, {248, 119, 213, 255} }},
-	{{ {-220, 715, -362}, 0, {695, 61}, {231, 110, 198, 255} }},
-	{{ {-297, 735, -276}, 0, {655, 103}, {215, 111, 210, 255} }},
-	{{ {-257, 764, -212}, 0, {675, 137}, {236, 120, 220, 255} }},
-	{{ {-339, 760, -160}, 0, {635, 162}, {212, 115, 226, 255} }},
-	{{ {-339, 760, -160}, 0, {635, 162}, {212, 115, 226, 255} }},
-	{{ {-286, 781, -122}, 0, {660, 182}, {232, 122, 231, 255} }},
-	{{ {-257, 764, -212}, 0, {675, 137}, {236, 120, 220, 255} }},
-	{{ {-332, 783, -50}, 0, {636, 218}, {219, 121, 241, 255} }},
-	{{ {-224, 800, -76}, 0, {692, 206}, {243, 125, 235, 255} }},
-	{{ {-295, 803, 44}, 0, {656, 265}, {222, 122, 252, 255} }},
-	{{ {-182, 819, 51}, 0, {712, 271}, {245, 126, 245, 255} }},
-	{{ {-238, 817, 112}, 0, {684, 300}, {231, 125, 1, 255} }},
-	{{ {-96, 818, -6}, 0, {758, 233}, {253, 126, 240, 255} }},
-	{{ {-118, 796, -129}, 0, {745, 182}, {251, 124, 229, 255} }},
-	{{ {78, 798, -130}, 0, {844, 182}, {2, 124, 229, 255} }},
-	{{ {140, 813, -28}, 0, {875, 230}, {4, 126, 238, 255} }},
-	{{ {161, 823, 66}, 0, {886, 276}, {8, 126, 244, 255} }},
-	{{ {224, 800, -76}, 0, {918, 206}, {15, 124, 233, 255} }},
-	{{ {295, 803, 44}, 0, {953, 265}, {34, 122, 252, 255} }},
-	{{ {238, 817, 112}, 0, {925, 300}, {25, 125, 1, 255} }},
-	{{ {295, 803, 44}, 0, {953, 265}, {34, 122, 252, 255} }},
-	{{ {332, 783, -50}, 0, {973, 218}, {37, 120, 240, 255} }},
-	{{ {224, 800, -76}, 0, {918, 206}, {15, 124, 233, 255} }},
-	{{ {286, 781, -122}, 0, {950, 182}, {23, 122, 231, 255} }},
-	{{ {339, 760, -160}, 0, {975, 162}, {44, 115, 226, 255} }},
-	{{ {257, 764, -212}, 0, {934, 137}, {17, 120, 219, 255} }},
-	{{ {297, 735, -276}, 0, {954, 103}, {37, 110, 205, 255} }},
-	{{ {153, 744, -306}, 0, {881, 93}, {9, 119, 213, 255} }},
-	{{ {220, 715, -362}, 0, {915, 61}, {23, 110, 197, 255} }},
-	{{ {107, 702, -417}, 0, {858, 33}, {7, 108, 190, 255} }},
-	{{ {0, 736, -341}, 0, {805, 73}, {0, 120, 213, 255} }},
-	{{ {85, 770, -234}, 0, {847, 131}, {3, 122, 222, 255} }},
-	{{ {-153, 744, -306}, 0, {729, 93}, {248, 119, 213, 255} }},
-	{{ {-130, 773, -216}, 0, {739, 136}, {251, 123, 223, 255} }},
-	{{ {-257, 764, -212}, 0, {675, 137}, {236, 120, 220, 255} }},
-	{{ {-118, 796, -129}, 0, {745, 182}, {251, 124, 229, 255} }},
-	{{ {-224, 800, -76}, 0, {692, 206}, {243, 125, 235, 255} }},
-	{{ {-118, 796, -129}, 0, {745, 182}, {251, 124, 229, 255} }},
-	{{ {-257, 764, -212}, 0, {675, 137}, {236, 120, 220, 255} }},
-	{{ {-286, 781, -122}, 0, {660, 182}, {232, 122, 231, 255} }},
-	{{ {78, 798, -130}, 0, {844, 182}, {2, 124, 229, 255} }},
-	{{ {-130, 773, -216}, 0, {739, 136}, {251, 123, 223, 255} }},
-	{{ {85, 770, -234}, 0, {847, 131}, {3, 122, 222, 255} }},
-	{{ {257, 764, -212}, 0, {934, 137}, {17, 120, 219, 255} }},
-	{{ {224, 800, -76}, 0, {918, 206}, {15, 124, 233, 255} }},
-	{{ {140, 813, -28}, 0, {875, 230}, {4, 126, 238, 255} }},
-	{{ {286, 781, -122}, 0, {950, 182}, {23, 122, 231, 255} }},
-	{{ {153, 744, -306}, 0, {881, 93}, {9, 119, 213, 255} }},
-	{{ {0, 335, 199}, 0, {1, 608}, {254, 229, 132, 255} }},
-	{{ {0, 395, 191}, 0, {-1, 643}, {253, 156, 178, 255} }},
-	{{ {67, 394, 183}, 0, {11, 647}, {219, 160, 181, 255} }},
-	{{ {0, 438, -18}, 0, {-2, 687}, {0, 129, 1, 255} }},
-	{{ {67, 394, 183}, 0, {11, 647}, {219, 160, 181, 255} }},
-	{{ {0, 438, -18}, 0, {-2, 687}, {0, 129, 1, 255} }},
-	{{ {148, 395, 130}, 0, {28, 656}, {200, 157, 200, 255} }},
-	{{ {194, 393, 62}, 0, {37, 669}, {181, 158, 225, 255} }},
-	{{ {209, 395, -18}, 0, {42, 684}, {177, 156, 0, 255} }},
-	{{ {194, 393, -98}, 0, {39, 700}, {181, 158, 31, 255} }},
-	{{ {148, 395, -166}, 0, {32, 714}, {200, 156, 56, 255} }},
-	{{ {80, 393, -211}, 0, {19, 724}, {225, 158, 75, 255} }},
-	{{ {0, 395, -227}, 0, {4, 729}, {0, 156, 79, 255} }},
-	{{ {0, 335, -234}, 0, {5, 761}, {0, 231, 125, 255} }},
-	{{ {83, 335, -218}, 0, {38, 755}, {208, 231, 115, 255} }},
-	{{ {153, 335, -171}, 0, {60, 736}, {168, 231, 88, 255} }},
-	{{ {200, 335, -101}, 0, {73, 711}, {141, 231, 48, 255} }},
-	{{ {216, 335, -18}, 0, {77, 682}, {131, 231, 0, 255} }},
-	{{ {200, 335, 65}, 0, {70, 654}, {141, 231, 208, 255} }},
-	{{ {153, 335, 135}, 0, {53, 630}, {169, 230, 168, 255} }},
-	{{ {83, 335, 182}, 0, {29, 614}, {196, 232, 147, 255} }},
-	{{ {67, 394, 183}, 0, {11, 647}, {219, 160, 181, 255} }},
-	{{ {153, 335, 135}, 0, {53, 630}, {169, 230, 168, 255} }},
-	{{ {42, 335, 194}, 0, {15, 610}, {235, 231, 133, 255} }},
-	{{ {0, 335, 199}, 0, {1, 608}, {254, 229, 132, 255} }},
-	{{ {-67, 394, 183}, 0, {11, 647}, {32, 159, 180, 255} }},
-	{{ {0, 395, 191}, 0, {-1, 643}, {3, 156, 178, 255} }},
-	{{ {0, 335, 199}, 0, {1, 608}, {2, 229, 132, 255} }},
-	{{ {0, 438, -18}, 0, {-2, 687}, {0, 129, 1, 255} }},
-	{{ {-148, 395, 130}, 0, {28, 656}, {56, 157, 200, 255} }},
-	{{ {-153, 335, 135}, 0, {53, 630}, {87, 230, 168, 255} }},
-	{{ {-83, 335, 182}, 0, {29, 614}, {60, 232, 147, 255} }},
-	{{ {-42, 335, 194}, 0, {15, 610}, {21, 231, 133, 255} }},
-	{{ {-194, 393, 62}, 0, {37, 669}, {75, 158, 225, 255} }},
-	{{ {-209, 395, -18}, 0, {42, 684}, {79, 156, 0, 255} }},
-	{{ {-216, 335, -18}, 0, {77, 682}, {125, 231, 0, 255} }},
-	{{ {-216, 335, -18}, 0, {77, 682}, {125, 231, 0, 255} }},
-	{{ {-194, 393, 62}, 0, {37, 669}, {75, 158, 225, 255} }},
-	{{ {-200, 335, 65}, 0, {70, 654}, {115, 231, 208, 255} }},
-	{{ {-153, 335, 135}, 0, {53, 630}, {87, 230, 168, 255} }},
-	{{ {-194, 393, -98}, 0, {39, 700}, {75, 158, 31, 255} }},
-	{{ {-209, 395, -18}, 0, {42, 684}, {79, 156, 0, 255} }},
-	{{ {0, 438, -18}, 0, {-2, 687}, {0, 129, 1, 255} }},
-	{{ {-148, 395, -166}, 0, {32, 714}, {56, 156, 56, 255} }},
-	{{ {-153, 335, -171}, 0, {60, 736}, {88, 231, 88, 255} }},
-	{{ {-200, 335, -101}, 0, {73, 711}, {115, 231, 48, 255} }},
-	{{ {-80, 393, -211}, 0, {19, 724}, {31, 158, 75, 255} }},
-	{{ {0, 395, -227}, 0, {4, 729}, {0, 156, 79, 255} }},
-	{{ {0, 335, -234}, 0, {5, 761}, {0, 231, 125, 255} }},
-	{{ {-83, 335, -218}, 0, {38, 755}, {48, 231, 115, 255} }},
-};
-
-Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_0[] = {
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(11, 7, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(7, 3, 5, 0),
-	gsSP1Triangle(8, 3, 7, 0),
-	gsSP1Triangle(9, 3, 8, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 9, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(4, 5, 2, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(4, 8, 7, 0),
-	gsSP1Triangle(9, 8, 4, 0),
-	gsSP1Triangle(10, 9, 4, 0),
-	gsSP1Triangle(10, 4, 11, 0),
-	gsSP1Triangle(11, 4, 2, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 15, 6, 0),
-	gsSP1Triangle(7, 14, 6, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(1, 5, 2, 0),
-	gsSP1Triangle(5, 6, 2, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(10, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 80, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 96, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(11, 12, 14, 0),
-	gsSP1Triangle(11, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 112, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 128, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 144, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 160, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(3, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 6, 8, 0),
-	gsSP1Triangle(10, 6, 9, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 176, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(11, 13, 14, 0),
-	gsSP1Triangle(11, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 192, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(2, 3, 5, 0),
-	gsSP1Triangle(5, 3, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(5, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 7, 10, 0),
-	gsSP1Triangle(8, 9, 11, 0),
-	gsSP1Triangle(11, 9, 12, 0),
-	gsSP1Triangle(9, 13, 12, 0),
-	gsSP1Triangle(8, 11, 14, 0),
-	gsSP1Triangle(15, 8, 14, 0),
-	gsSP1Triangle(5, 8, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 208, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 224, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 240, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(9, 12, 13, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(8, 9, 13, 0),
-	gsSP1Triangle(8, 13, 15, 0),
-	gsSP1Triangle(6, 8, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 256, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 272, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 286, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(2, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(9, 10, 12, 0),
-	gsSP1Triangle(9, 12, 13, 0),
-	gsSP1Triangle(9, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 302, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(4, 2, 5, 0),
-	gsSP1Triangle(5, 2, 6, 0),
-	gsSP1Triangle(2, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(9, 12, 14, 0),
-	gsSP1Triangle(14, 12, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 318, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(2, 4, 5, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(5, 6, 8, 0),
-	gsSP1Triangle(9, 5, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(13, 10, 14, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 334, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 0, 0),
-	gsSP1Triangle(6, 4, 0, 0),
-	gsSP1Triangle(7, 6, 0, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(9, 7, 10, 0),
-	gsSP1Triangle(11, 8, 9, 0),
-	gsSP1Triangle(12, 11, 9, 0),
-	gsSP1Triangle(13, 12, 9, 0),
-	gsSP1Triangle(14, 13, 9, 0),
-	gsSP1Triangle(14, 9, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 350, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 5, 8, 0),
-	gsSP1Triangle(9, 6, 7, 0),
-	gsSP1Triangle(9, 10, 6, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(9, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 366, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(4, 2, 5, 0),
-	gsSP1Triangle(5, 2, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(11, 9, 12, 0),
-	gsSP1Triangle(12, 9, 13, 0),
-	gsSP1Triangle(9, 14, 13, 0),
-	gsSP1Triangle(15, 7, 10, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 382, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(10, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 398, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(2, 4, 5, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(5, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 414, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 5, 0, 0),
-	gsSP1Triangle(0, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(10, 14, 13, 0),
-	gsSP1Triangle(15, 12, 13, 0),
-	gsSP1Triangle(11, 12, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 430, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(6, 7, 3, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(14, 13, 11, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 446, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(7, 8, 4, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(11, 10, 7, 0),
-	gsSP1Triangle(9, 12, 8, 0),
-	gsSP1Triangle(9, 13, 12, 0),
-	gsSP1Triangle(9, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 462, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 478, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 4, 7, 0),
-	gsSP1Triangle(9, 4, 8, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(15, 14, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 494, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 7, 5, 0),
-	gsSP1Triangle(8, 7, 4, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 510, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 6, 4, 0),
-	gsSP1Triangle(7, 4, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 526, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 542, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 558, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(1, 5, 4, 0),
-	gsSP1Triangle(3, 4, 6, 0),
-	gsSP1Triangle(6, 7, 3, 0),
-	gsSP1Triangle(7, 8, 3, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 574, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(5, 0, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 5, 7, 0),
-	gsSP1Triangle(9, 5, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(9, 12, 5, 0),
-	gsSP1Triangle(12, 13, 5, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(14, 12, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 590, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(9, 7, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(13, 10, 14, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 606, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 2, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 622, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(0, 4, 1, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(6, 4, 7, 0),
-	gsSP1Triangle(4, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 638, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(1, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(15, 11, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 654, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(2, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(10, 12, 7, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(13, 10, 14, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 670, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(3, 7, 6, 0),
-	gsSP1Triangle(3, 8, 7, 0),
-	gsSP1Triangle(5, 6, 9, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(10, 13, 11, 0),
-	gsSP1Triangle(0, 13, 10, 0),
-	gsSP1Triangle(0, 10, 14, 0),
-	gsSP1Triangle(0, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 686, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(9, 8, 5, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 702, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 1, 0, 0),
-	gsSP1Triangle(4, 5, 1, 0),
-	gsSP1Triangle(1, 5, 6, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(11, 9, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 718, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(4, 6, 3, 0),
-	gsSP1Triangle(7, 6, 4, 0),
-	gsSP1Triangle(6, 8, 3, 0),
-	gsSP1Triangle(9, 8, 6, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(14, 13, 10, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSP1Triangle(13, 15, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 734, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 5, 2, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(2, 5, 7, 0),
-	gsSP1Triangle(8, 2, 7, 0),
-	gsSP1Triangle(8, 0, 2, 0),
-	gsSP1Triangle(9, 0, 8, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 9, 11, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(13, 11, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 749, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(6, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(10, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 765, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 7, 10, 0),
-	gsSP1Triangle(13, 7, 12, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(14, 12, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 781, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(2, 3, 5, 0),
-	gsSP1Triangle(2, 5, 6, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(12, 10, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 797, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(6, 7, 3, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 813, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(15, 14, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 829, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(11, 13, 14, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 845, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(8, 10, 12, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(10, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 861, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(2, 5, 4, 0),
-	gsSP1Triangle(3, 4, 6, 0),
-	gsSP1Triangle(3, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(11, 8, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(15, 14, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 877, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 1, 0, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(6, 4, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 893, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(5, 1, 6, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 8, 6, 0),
-	gsSP1Triangle(9, 6, 10, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(12, 10, 13, 0),
-	gsSP1Triangle(10, 14, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 909, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(5, 7, 8, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(11, 9, 12, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 925, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(5, 6, 8, 0),
-	gsSP1Triangle(8, 6, 9, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(15, 10, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 941, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(5, 0, 3, 0),
-	gsSP1Triangle(6, 0, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 7, 5, 0),
-	gsSP1Triangle(8, 5, 9, 0),
-	gsSP1Triangle(5, 3, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(13, 14, 11, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 957, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(3, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(7, 9, 6, 0),
-	gsSP1Triangle(6, 9, 10, 0),
-	gsSP1Triangle(11, 6, 10, 0),
-	gsSP1Triangle(3, 6, 11, 0),
-	gsSP1Triangle(3, 11, 1, 0),
-	gsSP1Triangle(11, 12, 1, 0),
-	gsSP1Triangle(1, 12, 13, 0),
-	gsSP1Triangle(2, 1, 13, 0),
-	gsSP1Triangle(2, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 973, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(2, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 7, 9, 0),
-	gsSP1Triangle(12, 7, 11, 0),
-	gsSP1Triangle(4, 7, 12, 0),
-	gsSP1Triangle(3, 4, 12, 0),
-	gsSP1Triangle(13, 3, 12, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 989, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(4, 5, 0, 0),
-	gsSP1Triangle(5, 6, 0, 0),
-	gsSP1Triangle(0, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 11, 9, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1003, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1019, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(0, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1035, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(11, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1051, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1067, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(12, 14, 10, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1083, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(10, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1099, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(1, 4, 5, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(5, 7, 9, 0),
-	gsSP1Triangle(9, 7, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1115, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(5, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(13, 14, 11, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1131, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 6, 3, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 6, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1147, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(4, 6, 8, 0),
-	gsSP1Triangle(4, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(8, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(15, 14, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1163, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 3, 1, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(10, 11, 7, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1179, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(1, 4, 5, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(6, 4, 7, 0),
-	gsSP1Triangle(4, 8, 7, 0),
-	gsSP1Triangle(9, 8, 4, 0),
-	gsSP1Triangle(7, 8, 10, 0),
-	gsSP1Triangle(6, 7, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1195, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(1, 5, 4, 0),
-	gsSP1Triangle(1, 6, 5, 0),
-	gsSP1Triangle(1, 7, 6, 0),
-	gsSP1Triangle(1, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(7, 10, 11, 0),
-	gsSP1Triangle(7, 11, 6, 0),
-	gsSP1Triangle(6, 11, 5, 0),
-	gsSP1Triangle(5, 11, 12, 0),
-	gsSP1Triangle(13, 5, 12, 0),
-	gsSP1Triangle(4, 5, 13, 0),
-	gsSP1Triangle(3, 4, 13, 0),
-	gsSP1Triangle(3, 13, 14, 0),
-	gsSP1Triangle(15, 3, 14, 0),
-	gsSP1Triangle(15, 2, 3, 0),
-	gsSP1Triangle(0, 2, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1211, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(5, 8, 6, 0),
-	gsSP1Triangle(9, 8, 5, 0),
-	gsSP1Triangle(9, 5, 10, 0),
-	gsSP1Triangle(10, 5, 11, 0),
-	gsSP1Triangle(5, 12, 11, 0),
-	gsSP1Triangle(5, 7, 12, 0),
-	gsSP1Triangle(13, 9, 10, 0),
-	gsSP1Triangle(13, 8, 9, 0),
-	gsSP1Triangle(14, 8, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_0 + 1227, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 0, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(7, 6, 4, 0),
-	gsSP1Triangle(7, 4, 8, 0),
-	gsSP1Triangle(8, 4, 9, 0),
-	gsSP1Triangle(4, 0, 9, 0),
-	gsSP1Triangle(10, 7, 8, 0),
-	gsSP1Triangle(10, 6, 7, 0),
-	gsSP1Triangle(11, 6, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(10, 8, 13, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1[591] = {
-	{{ {-319, 112, 199}, 0, {682, 650}, {232, 133, 21, 255} }},
-	{{ {-260, 102, 149}, 0, {730, 616}, {247, 129, 4, 255} }},
-	{{ {-307, 116, 215}, 0, {693, 666}, {20, 142, 53, 255} }},
-	{{ {-218, 108, 163}, 0, {760, 633}, {34, 142, 45, 255} }},
-	{{ {-228, 102, 123}, 0, {758, 601}, {5, 129, 246, 255} }},
-	{{ {-185, 110, 87}, 0, {797, 583}, {32, 135, 236, 255} }},
-	{{ {-159, 118, 119}, 0, {810, 611}, {46, 143, 37, 255} }},
-	{{ {-202, 133, 187}, 0, {772, 657}, {58, 184, 88, 255} }},
-	{{ {-142, 146, 145}, 0, {823, 640}, {70, 187, 80, 255} }},
-	{{ {-140, 183, 160}, 0, {832, 669}, {72, 250, 105, 255} }},
-	{{ {-201, 167, 202}, 0, {779, 683}, {59, 248, 112, 255} }},
-	{{ {-156, 220, 159}, 0, {836, 699}, {51, 59, 101, 255} }},
-	{{ {-213, 202, 199}, 0, {784, 708}, {38, 54, 108, 255} }},
-	{{ {-179, 249, 141}, 0, {840, 731}, {13, 105, 71, 255} }},
-	{{ {-236, 228, 183}, 0, {786, 735}, {2, 99, 80, 255} }},
-	{{ {-260, 238, 155}, 0, {788, 762}, {219, 116, 35, 255} }},
-	{{ {-179, 249, 141}, 0, {840, 731}, {13, 105, 71, 255} }},
-	{{ {-205, 260, 110}, 0, {842, 763}, {229, 121, 26, 255} }},
-	{{ {-260, 238, 155}, 0, {788, 762}, {219, 116, 35, 255} }},
-	{{ {-283, 231, 124}, 0, {787, 790}, {182, 103, 244, 255} }},
-	{{ {-230, 252, 77}, 0, {841, 795}, {192, 107, 233, 255} }},
-	{{ {-296, 206, 99}, 0, {784, 817}, {159, 61, 201, 255} }},
-	{{ {-243, 225, 48}, 0, {838, 826}, {169, 65, 190, 255} }},
-	{{ {-298, 172, 84}, 0, {779, 842}, {156, 255, 177, 255} }},
-	{{ {-246, 188, 33}, 0, {831, 856}, {167, 1, 166, 255} }},
-	{{ {-233, 150, 37}, 0, {822, 885}, {188, 193, 169, 255} }},
-	{{ {-287, 137, 89}, 0, {770, 867}, {177, 191, 180, 255} }},
-	{{ {-211, 120, 56}, 0, {810, 914}, {224, 147, 199, 255} }},
-	{{ {-266, 110, 105}, 0, {759, 892}, {214, 146, 209, 255} }},
-	{{ {-185, 110, 87}, 0, {795, 942}, {20, 135, 222, 255} }},
-	{{ {-222, 102, 118}, 0, {762, 926}, {7, 130, 245, 255} }},
-	{{ {-259, 102, 148}, 0, {730, 909}, {246, 129, 2, 255} }},
-	{{ {-333, 117, 185}, 0, {692, 858}, {201, 147, 222, 255} }},
-	{{ {-266, 110, 105}, 0, {759, 892}, {214, 146, 209, 255} }},
-	{{ {-259, 102, 148}, 0, {730, 909}, {246, 129, 2, 255} }},
-	{{ {-319, 112, 199}, 0, {682, 874}, {226, 133, 14, 255} }},
-	{{ {-344, 131, 176}, 0, {700, 841}, {169, 186, 195, 255} }},
-	{{ {-287, 137, 89}, 0, {770, 867}, {177, 191, 180, 255} }},
-	{{ {-351, 150, 174}, 0, {706, 822}, {147, 250, 191, 255} }},
-	{{ {-298, 172, 84}, 0, {779, 842}, {156, 255, 177, 255} }},
-	{{ {-296, 206, 99}, 0, {784, 817}, {159, 61, 201, 255} }},
-	{{ {-349, 168, 182}, 0, {710, 803}, {150, 56, 214, 255} }},
-	{{ {-283, 231, 124}, 0, {787, 790}, {182, 103, 244, 255} }},
-	{{ {-342, 181, 195}, 0, {713, 783}, {173, 96, 255, 255} }},
-	{{ {-260, 238, 155}, 0, {788, 762}, {219, 116, 35, 255} }},
-	{{ {-330, 184, 211}, 0, {714, 762}, {207, 109, 43, 255} }},
-	{{ {-317, 180, 225}, 0, {713, 741}, {245, 94, 85, 255} }},
-	{{ {-236, 228, 183}, 0, {786, 735}, {2, 99, 80, 255} }},
-	{{ {-306, 166, 234}, 0, {711, 721}, {23, 52, 114, 255} }},
-	{{ {-236, 228, 183}, 0, {786, 735}, {2, 99, 80, 255} }},
-	{{ {-317, 180, 225}, 0, {713, 741}, {245, 94, 85, 255} }},
-	{{ {-213, 202, 199}, 0, {784, 708}, {38, 54, 108, 255} }},
-	{{ {-299, 147, 236}, 0, {707, 702}, {44, 244, 119, 255} }},
-	{{ {-201, 167, 202}, 0, {779, 683}, {59, 248, 112, 255} }},
-	{{ {-202, 133, 187}, 0, {772, 657}, {58, 184, 88, 255} }},
-	{{ {-300, 129, 228}, 0, {701, 684}, {43, 181, 93, 255} }},
-	{{ {-218, 108, 163}, 0, {760, 633}, {34, 142, 45, 255} }},
-	{{ {-307, 116, 215}, 0, {693, 666}, {20, 142, 53, 255} }},
-	{{ {0, -3, -39}, 0, {-11, 491}, {0, 129, 11, 255} }},
-	{{ {-55, 8, -123}, 0, {71, 514}, {222, 134, 0, 255} }},
-	{{ {0, 0, -118}, 0, {-11, 542}, {0, 129, 3, 255} }},
-	{{ {-76, 8, -47}, 0, {64, 459}, {224, 133, 5, 255} }},
-	{{ {0, 10, 31}, 0, {-11, 440}, {0, 133, 32, 255} }},
-	{{ {-91, 23, 22}, 0, {60, 410}, {219, 139, 32, 255} }},
-	{{ {-60, 45, 89}, 0, {30, 374}, {228, 150, 65, 255} }},
-	{{ {-91, 23, 22}, 0, {60, 410}, {219, 139, 32, 255} }},
-	{{ {0, 10, 31}, 0, {-11, 440}, {0, 133, 32, 255} }},
-	{{ {0, 40, 93}, 0, {-11, 386}, {0, 149, 69, 255} }},
-	{{ {0, 79, 138}, 0, {-11, 337}, {0, 170, 93, 255} }},
-	{{ {-70, 84, 132}, 0, {33, 329}, {222, 172, 89, 255} }},
-	{{ {0, 127, 175}, 0, {-11, 285}, {0, 199, 114, 255} }},
-	{{ {-66, 130, 168}, 0, {30, 286}, {228, 199, 110, 255} }},
-	{{ {-66, 182, 189}, 0, {32, 244}, {229, 226, 120, 255} }},
-	{{ {0, 181, 195}, 0, {-11, 236}, {0, 226, 123, 255} }},
-	{{ {-58, 238, 196}, 0, {31, 201}, {237, 5, 125, 255} }},
-	{{ {0, 238, 200}, 0, {-11, 190}, {0, 6, 127, 255} }},
-	{{ {0, 294, 189}, 0, {-11, 146}, {0, 51, 116, 255} }},
-	{{ {-66, 296, 183}, 0, {42, 161}, {237, 51, 115, 255} }},
-	{{ {0, 370, 144}, 0, {-11, 83}, {0, 66, 109, 255} }},
-	{{ {-70, 369, 137}, 0, {61, 102}, {237, 65, 108, 255} }},
-	{{ {-70, 369, 137}, 0, {61, 102}, {237, 65, 108, 255} }},
-	{{ {-134, 304, 155}, 0, {103, 169}, {195, 42, 103, 255} }},
-	{{ {-66, 296, 183}, 0, {42, 161}, {237, 51, 115, 255} }},
-	{{ {-135, 368, 115}, 0, {127, 116}, {195, 66, 90, 255} }},
-	{{ {-187, 321, 103}, 0, {167, 164}, {165, 47, 76, 255} }},
-	{{ {-169, 258, 139}, 0, {128, 210}, {180, 28, 98, 255} }},
-	{{ {-197, 271, 104}, 0, {167, 207}, {166, 38, 81, 255} }},
-	{{ {-205, 260, 110}, 0, {162, 216}, {201, 105, 46, 255} }},
-	{{ {-230, 252, 76}, 0, {177, 242}, {169, 93, 3, 255} }},
-	{{ {-226, 261, 65}, 0, {187, 242}, {142, 39, 41, 255} }},
-	{{ {-187, 321, 103}, 0, {202, 180}, {166, 48, 75, 255} }},
-	{{ {-226, 310, 35}, 0, {229, 234}, {142, 48, 30, 255} }},
-	{{ {-167, 384, 58}, 0, {268, 170}, {163, 76, 43, 255} }},
-	{{ {-135, 368, 115}, 0, {230, 128}, {195, 66, 90, 255} }},
-	{{ {-210, 356, -24}, 0, {284, 242}, {152, 73, 252, 255} }},
-	{{ {-251, 259, -35}, 0, {238, 295}, {131, 24, 252, 255} }},
-	{{ {-226, 308, -78}, 0, {284, 294}, {147, 52, 217, 255} }},
-	{{ {-251, 259, -35}, 0, {238, 295}, {131, 24, 252, 255} }},
-	{{ {-210, 356, -24}, 0, {284, 242}, {152, 73, 252, 255} }},
-	{{ {-181, 354, -119}, 0, {336, 294}, {172, 74, 195, 255} }},
-	{{ {-158, 396, -70}, 0, {345, 243}, {177, 93, 219, 255} }},
-	{{ {-168, 391, -13}, 0, {311, 208}, {173, 96, 3, 255} }},
-	{{ {-167, 384, 58}, 0, {268, 170}, {163, 76, 43, 255} }},
-	{{ {-97, 391, -148}, 0, {401, 297}, {211, 87, 176, 255} }},
-	{{ {-95, 342, -200}, 0, {400, 351}, {214, 73, 161, 255} }},
-	{{ {0, 356, -211}, 0, {466, 367}, {0, 79, 156, 255} }},
-	{{ {0, 404, -159}, 0, {466, 312}, {0, 93, 169, 255} }},
-	{{ {-84, 283, -235}, 0, {401, 403}, {219, 41, 142, 255} }},
-	{{ {-154, 247, -211}, 0, {341, 396}, {185, 22, 153, 255} }},
-	{{ {-113, 187, -237}, 0, {340, 453}, {190, 12, 148, 255} }},
-	{{ {-62, 214, -254}, 0, {400, 458}, {222, 30, 137, 255} }},
-	{{ {0, 296, -244}, 0, {466, 419}, {0, 48, 138, 255} }},
-	{{ {-62, 214, -254}, 0, {400, 458}, {222, 30, 137, 255} }},
-	{{ {0, 296, -244}, 0, {466, 419}, {0, 48, 138, 255} }},
-	{{ {0, 224, -260}, 0, {466, 471}, {0, 36, 134, 255} }},
-	{{ {-76, 8, -47}, 0, {64, 459}, {224, 133, 5, 255} }},
-	{{ {-103, 30, -137}, 0, {139, 491}, {191, 148, 241, 255} }},
-	{{ {-55, 8, -123}, 0, {71, 514}, {222, 134, 0, 255} }},
-	{{ {-142, 37, -67}, 0, {129, 434}, {186, 150, 246, 255} }},
-	{{ {-91, 23, 22}, 0, {60, 410}, {219, 139, 32, 255} }},
-	{{ {-172, 62, -1}, 0, {122, 384}, {176, 159, 17, 255} }},
-	{{ {-124, 65, 75}, 0, {72, 359}, {198, 159, 59, 255} }},
-	{{ {-60, 45, 89}, 0, {30, 374}, {228, 150, 65, 255} }},
-	{{ {-70, 84, 132}, 0, {33, 329}, {222, 172, 89, 255} }},
-	{{ {-146, 113, 114}, 0, {82, 316}, {211, 170, 82, 255} }},
-	{{ {-66, 130, 168}, 0, {30, 286}, {228, 199, 110, 255} }},
-	{{ {-128, 144, 143}, 0, {71, 288}, {217, 198, 106, 255} }},
-	{{ {-126, 185, 159}, 0, {75, 256}, {213, 228, 116, 255} }},
-	{{ {-66, 130, 168}, 0, {30, 286}, {228, 199, 110, 255} }},
-	{{ {-66, 182, 189}, 0, {32, 244}, {229, 226, 120, 255} }},
-	{{ {-126, 185, 159}, 0, {75, 256}, {213, 228, 116, 255} }},
-	{{ {-114, 252, 176}, 0, {75, 203}, {201, 8, 114, 255} }},
-	{{ {-58, 238, 196}, 0, {31, 201}, {237, 5, 125, 255} }},
-	{{ {-66, 296, 183}, 0, {42, 161}, {237, 51, 115, 255} }},
-	{{ {-134, 304, 155}, 0, {103, 169}, {195, 42, 103, 255} }},
-	{{ {-169, 258, 139}, 0, {128, 210}, {180, 28, 98, 255} }},
-	{{ {-144, 227, 159}, 0, {97, 228}, {202, 9, 115, 255} }},
-	{{ {-179, 249, 141}, 0, {131, 220}, {236, 87, 90, 255} }},
-	{{ {-205, 260, 110}, 0, {162, 216}, {201, 105, 46, 255} }},
-	{{ {-156, 220, 159}, 0, {104, 236}, {17, 42, 119, 255} }},
-	{{ {-140, 183, 160}, 0, {85, 259}, {36, 239, 121, 255} }},
-	{{ {-128, 144, 143}, 0, {71, 288}, {217, 198, 106, 255} }},
-	{{ {-142, 145, 145}, 0, {81, 287}, {36, 183, 98, 255} }},
-	{{ {-146, 113, 114}, 0, {82, 316}, {211, 170, 82, 255} }},
-	{{ {-142, 145, 145}, 0, {81, 287}, {36, 183, 98, 255} }},
-	{{ {-159, 118, 119}, 0, {90, 311}, {16, 144, 58, 255} }},
-	{{ {-146, 113, 114}, 0, {82, 316}, {211, 170, 82, 255} }},
-	{{ {-173, 104, 79}, 0, {103, 333}, {191, 158, 48, 255} }},
-	{{ {-185, 109, 87}, 0, {108, 324}, {238, 131, 9, 255} }},
-	{{ {-201, 115, 45}, 0, {130, 337}, {165, 171, 26, 255} }},
-	{{ {-211, 120, 55}, 0, {130, 327}, {198, 148, 223, 255} }},
-	{{ {-227, 147, 23}, 0, {158, 326}, {142, 200, 10, 255} }},
-	{{ {-233, 150, 37}, 0, {152, 318}, {165, 190, 196, 255} }},
-	{{ {-246, 188, 33}, 0, {170, 298}, {145, 250, 195, 255} }},
-	{{ {-242, 191, 19}, 0, {179, 303}, {130, 239, 4, 255} }},
-	{{ {-244, 225, 48}, 0, {178, 272}, {146, 51, 218, 255} }},
-	{{ {-239, 233, 37}, 0, {189, 273}, {131, 18, 17, 255} }},
-	{{ {-226, 261, 65}, 0, {187, 242}, {142, 39, 41, 255} }},
-	{{ {-230, 252, 76}, 0, {177, 242}, {169, 93, 3, 255} }},
-	{{ {-226, 310, 35}, 0, {229, 234}, {142, 48, 30, 255} }},
-	{{ {-251, 259, -35}, 0, {238, 295}, {131, 24, 252, 255} }},
-	{{ {-239, 233, 37}, 0, {189, 273}, {131, 18, 17, 255} }},
-	{{ {-226, 310, 35}, 0, {229, 234}, {142, 48, 30, 255} }},
-	{{ {-250, 192, -28}, 0, {203, 323}, {131, 235, 6, 255} }},
-	{{ {-246, 183, -81}, 0, {226, 351}, {138, 228, 219, 255} }},
-	{{ {-228, 248, -130}, 0, {280, 346}, {147, 19, 193, 255} }},
-	{{ {-226, 308, -78}, 0, {284, 294}, {147, 52, 217, 255} }},
-	{{ {-176, 305, -172}, 0, {339, 345}, {175, 53, 174, 255} }},
-	{{ {-181, 354, -119}, 0, {336, 294}, {172, 74, 195, 255} }},
-	{{ {-95, 342, -200}, 0, {400, 351}, {214, 73, 161, 255} }},
-	{{ {-154, 247, -211}, 0, {341, 396}, {185, 22, 153, 255} }},
-	{{ {-197, 196, -176}, 0, {283, 396}, {160, 249, 173, 255} }},
-	{{ {-144, 148, -212}, 0, {287, 454}, {168, 241, 166, 255} }},
-	{{ {-113, 187, -237}, 0, {340, 453}, {190, 12, 148, 255} }},
-	{{ {-209, 141, -139}, 0, {233, 403}, {151, 211, 200, 255} }},
-	{{ {-222, 111, -38}, 0, {172, 368}, {151, 185, 248, 255} }},
-	{{ {-188, 82, -98}, 0, {182, 415}, {162, 176, 226, 255} }},
-	{{ {-222, 111, -38}, 0, {172, 368}, {151, 185, 248, 255} }},
-	{{ {-209, 141, -139}, 0, {233, 403}, {151, 211, 200, 255} }},
-	{{ {-152, 105, -185}, 0, {240, 462}, {159, 205, 191, 255} }},
-	{{ {-144, 148, -212}, 0, {287, 454}, {168, 241, 166, 255} }},
-	{{ {-137, 64, -158}, 0, {194, 474}, {167, 173, 218, 255} }},
-	{{ {-142, 37, -67}, 0, {129, 434}, {186, 150, 246, 255} }},
-	{{ {-103, 30, -137}, 0, {139, 491}, {191, 148, 241, 255} }},
-	{{ {-172, 62, -1}, 0, {122, 384}, {176, 159, 17, 255} }},
-	{{ {-201, 115, 45}, 0, {130, 337}, {165, 171, 26, 255} }},
-	{{ {-173, 104, 79}, 0, {103, 333}, {191, 158, 48, 255} }},
-	{{ {-124, 65, 75}, 0, {72, 359}, {198, 159, 59, 255} }},
-	{{ {-146, 113, 114}, 0, {82, 316}, {211, 170, 82, 255} }},
-	{{ {-227, 147, 23}, 0, {158, 326}, {142, 200, 10, 255} }},
-	{{ {-250, 192, -28}, 0, {203, 323}, {131, 235, 6, 255} }},
-	{{ {-242, 191, 19}, 0, {179, 303}, {130, 239, 4, 255} }},
-	{{ {-242, 191, 19}, 0, {179, 303}, {130, 239, 4, 255} }},
-	{{ {-239, 233, 37}, 0, {189, 273}, {131, 18, 17, 255} }},
-	{{ {-250, 192, -28}, 0, {203, 323}, {131, 235, 6, 255} }},
-	{{ {-222, 111, -38}, 0, {172, 368}, {151, 185, 248, 255} }},
-	{{ {-246, 183, -81}, 0, {226, 351}, {138, 228, 219, 255} }},
-	{{ {-126, 185, 159}, 0, {75, 256}, {213, 228, 116, 255} }},
-	{{ {-114, 252, 176}, 0, {75, 203}, {201, 8, 114, 255} }},
-	{{ {-144, 227, 159}, 0, {97, 228}, {202, 9, 115, 255} }},
-	{{ {-197, 196, -176}, 0, {283, 396}, {160, 249, 173, 255} }},
-	{{ {-228, 248, -130}, 0, {280, 346}, {147, 19, 193, 255} }},
-	{{ {319, 112, 199}, 0, {682, 650}, {24, 133, 21, 255} }},
-	{{ {307, 116, 215}, 0, {693, 666}, {237, 142, 52, 255} }},
-	{{ {260, 102, 149}, 0, {730, 616}, {9, 129, 4, 255} }},
-	{{ {218, 108, 163}, 0, {760, 633}, {222, 142, 45, 255} }},
-	{{ {300, 129, 228}, 0, {701, 684}, {214, 180, 93, 255} }},
-	{{ {202, 133, 187}, 0, {772, 657}, {198, 185, 88, 255} }},
-	{{ {300, 129, 228}, 0, {701, 684}, {214, 180, 93, 255} }},
-	{{ {299, 147, 236}, 0, {707, 702}, {212, 243, 118, 255} }},
-	{{ {202, 133, 187}, 0, {772, 657}, {198, 185, 88, 255} }},
-	{{ {201, 167, 202}, 0, {779, 683}, {197, 247, 112, 255} }},
-	{{ {213, 202, 199}, 0, {784, 708}, {218, 55, 108, 255} }},
-	{{ {306, 166, 234}, 0, {711, 721}, {232, 49, 115, 255} }},
-	{{ {236, 228, 183}, 0, {786, 735}, {254, 99, 80, 255} }},
-	{{ {317, 180, 225}, 0, {713, 741}, {10, 93, 86, 255} }},
-	{{ {260, 238, 155}, 0, {788, 762}, {37, 116, 35, 255} }},
-	{{ {330, 184, 211}, 0, {714, 762}, {47, 109, 45, 255} }},
-	{{ {342, 181, 195}, 0, {713, 783}, {82, 97, 0, 255} }},
-	{{ {283, 231, 124}, 0, {787, 790}, {73, 103, 243, 255} }},
-	{{ {349, 168, 182}, 0, {710, 803}, {106, 58, 215, 255} }},
-	{{ {296, 206, 99}, 0, {784, 817}, {97, 61, 201, 255} }},
-	{{ {351, 150, 174}, 0, {706, 822}, {109, 252, 191, 255} }},
-	{{ {298, 172, 84}, 0, {779, 842}, {99, 255, 177, 255} }},
-	{{ {351, 150, 174}, 0, {706, 822}, {109, 252, 191, 255} }},
-	{{ {287, 137, 89}, 0, {770, 867}, {78, 190, 180, 255} }},
-	{{ {298, 172, 84}, 0, {779, 842}, {99, 255, 177, 255} }},
-	{{ {344, 131, 176}, 0, {700, 841}, {87, 188, 193, 255} }},
-	{{ {266, 110, 105}, 0, {759, 892}, {42, 146, 209, 255} }},
-	{{ {333, 117, 185}, 0, {692, 858}, {53, 146, 221, 255} }},
-	{{ {259, 102, 148}, 0, {730, 909}, {10, 129, 2, 255} }},
-	{{ {319, 112, 199}, 0, {682, 874}, {30, 133, 14, 255} }},
-	{{ {222, 102, 118}, 0, {762, 926}, {249, 130, 245, 255} }},
-	{{ {185, 110, 87}, 0, {795, 942}, {236, 135, 222, 255} }},
-	{{ {211, 120, 56}, 0, {810, 914}, {32, 147, 198, 255} }},
-	{{ {233, 150, 37}, 0, {822, 885}, {69, 194, 169, 255} }},
-	{{ {246, 188, 33}, 0, {831, 856}, {90, 2, 166, 255} }},
-	{{ {243, 225, 48}, 0, {838, 826}, {87, 66, 191, 255} }},
-	{{ {296, 206, 99}, 0, {784, 817}, {97, 61, 201, 255} }},
-	{{ {230, 252, 77}, 0, {841, 795}, {63, 108, 234, 255} }},
-	{{ {283, 231, 124}, 0, {787, 790}, {73, 103, 243, 255} }},
-	{{ {296, 206, 99}, 0, {784, 817}, {97, 61, 201, 255} }},
-	{{ {230, 252, 77}, 0, {841, 795}, {63, 108, 234, 255} }},
-	{{ {205, 260, 110}, 0, {842, 763}, {27, 121, 26, 255} }},
-	{{ {260, 238, 155}, 0, {788, 762}, {37, 116, 35, 255} }},
-	{{ {179, 249, 141}, 0, {840, 731}, {243, 105, 70, 255} }},
-	{{ {236, 228, 183}, 0, {786, 735}, {254, 99, 80, 255} }},
-	{{ {213, 202, 199}, 0, {784, 708}, {218, 55, 108, 255} }},
-	{{ {156, 220, 159}, 0, {836, 699}, {203, 57, 101, 255} }},
-	{{ {201, 167, 202}, 0, {779, 683}, {197, 247, 112, 255} }},
-	{{ {140, 183, 160}, 0, {832, 669}, {183, 247, 104, 255} }},
-	{{ {202, 133, 187}, 0, {772, 657}, {198, 185, 88, 255} }},
-	{{ {142, 146, 145}, 0, {823, 640}, {186, 187, 80, 255} }},
-	{{ {159, 118, 119}, 0, {810, 611}, {209, 144, 37, 255} }},
-	{{ {218, 108, 163}, 0, {760, 633}, {222, 142, 45, 255} }},
-	{{ {185, 110, 87}, 0, {797, 583}, {224, 135, 236, 255} }},
-	{{ {228, 102, 123}, 0, {758, 601}, {251, 129, 246, 255} }},
-	{{ {218, 108, 163}, 0, {760, 633}, {222, 142, 45, 255} }},
-	{{ {185, 110, 87}, 0, {797, 583}, {224, 135, 236, 255} }},
-	{{ {260, 102, 149}, 0, {730, 616}, {9, 129, 4, 255} }},
-	{{ {0, -3, -39}, 0, {-11, 491}, {0, 129, 11, 255} }},
-	{{ {0, 0, -118}, 0, {-11, 542}, {0, 129, 3, 255} }},
-	{{ {55, 8, -123}, 0, {71, 514}, {34, 134, 0, 255} }},
-	{{ {76, 8, -47}, 0, {64, 459}, {32, 133, 5, 255} }},
-	{{ {103, 30, -137}, 0, {139, 491}, {65, 148, 241, 255} }},
-	{{ {142, 37, -67}, 0, {129, 434}, {70, 150, 246, 255} }},
-	{{ {137, 64, -158}, 0, {194, 474}, {89, 173, 218, 255} }},
-	{{ {188, 82, -98}, 0, {182, 415}, {94, 176, 226, 255} }},
-	{{ {152, 105, -185}, 0, {240, 462}, {97, 205, 191, 255} }},
-	{{ {209, 141, -139}, 0, {233, 403}, {105, 211, 200, 255} }},
-	{{ {144, 148, -212}, 0, {287, 454}, {88, 241, 166, 255} }},
-	{{ {197, 196, -176}, 0, {283, 396}, {96, 249, 173, 255} }},
-	{{ {144, 148, -212}, 0, {287, 454}, {88, 241, 166, 255} }},
-	{{ {154, 247, -211}, 0, {341, 396}, {71, 22, 153, 255} }},
-	{{ {197, 196, -176}, 0, {283, 396}, {96, 249, 173, 255} }},
-	{{ {113, 187, -237}, 0, {340, 453}, {66, 12, 148, 255} }},
-	{{ {84, 283, -235}, 0, {401, 403}, {37, 41, 142, 255} }},
-	{{ {62, 214, -254}, 0, {400, 458}, {34, 30, 137, 255} }},
-	{{ {0, 296, -244}, 0, {466, 419}, {0, 48, 138, 255} }},
-	{{ {0, 224, -260}, 0, {466, 471}, {0, 36, 134, 255} }},
-	{{ {0, 356, -211}, 0, {466, 367}, {0, 79, 156, 255} }},
-	{{ {95, 342, -200}, 0, {400, 351}, {42, 73, 161, 255} }},
-	{{ {97, 391, -148}, 0, {401, 297}, {45, 87, 176, 255} }},
-	{{ {0, 404, -159}, 0, {466, 312}, {0, 93, 169, 255} }},
-	{{ {181, 354, -119}, 0, {336, 294}, {84, 74, 195, 255} }},
-	{{ {158, 396, -70}, 0, {345, 243}, {79, 93, 219, 255} }},
-	{{ {210, 356, -24}, 0, {284, 242}, {104, 73, 252, 255} }},
-	{{ {168, 391, -13}, 0, {311, 208}, {83, 96, 3, 255} }},
-	{{ {167, 384, 58}, 0, {268, 170}, {93, 76, 43, 255} }},
-	{{ {210, 356, -24}, 0, {284, 242}, {104, 73, 252, 255} }},
-	{{ {168, 391, -13}, 0, {311, 208}, {83, 96, 3, 255} }},
-	{{ {226, 310, 35}, 0, {229, 234}, {114, 48, 30, 255} }},
-	{{ {187, 321, 103}, 0, {202, 180}, {90, 48, 75, 255} }},
-	{{ {135, 368, 115}, 0, {230, 128}, {61, 66, 90, 255} }},
-	{{ {226, 261, 65}, 0, {187, 242}, {113, 40, 43, 255} }},
-	{{ {239, 233, 37}, 0, {189, 273}, {125, 18, 17, 255} }},
-	{{ {244, 225, 48}, 0, {178, 272}, {110, 51, 218, 255} }},
-	{{ {230, 252, 76}, 0, {177, 242}, {87, 93, 3, 255} }},
-	{{ {197, 271, 104}, 0, {167, 207}, {90, 38, 81, 255} }},
-	{{ {205, 260, 110}, 0, {162, 216}, {55, 105, 46, 255} }},
-	{{ {169, 258, 139}, 0, {128, 210}, {76, 28, 98, 255} }},
-	{{ {187, 321, 103}, 0, {167, 164}, {91, 47, 76, 255} }},
-	{{ {134, 304, 155}, 0, {103, 169}, {61, 42, 103, 255} }},
-	{{ {135, 368, 115}, 0, {127, 116}, {61, 66, 90, 255} }},
-	{{ {134, 304, 155}, 0, {103, 169}, {61, 42, 103, 255} }},
-	{{ {135, 368, 115}, 0, {127, 116}, {61, 66, 90, 255} }},
-	{{ {70, 369, 137}, 0, {61, 102}, {19, 65, 108, 255} }},
-	{{ {66, 296, 183}, 0, {42, 161}, {19, 51, 115, 255} }},
-	{{ {0, 370, 144}, 0, {-11, 83}, {0, 66, 109, 255} }},
-	{{ {0, 294, 189}, 0, {-11, 146}, {0, 51, 116, 255} }},
-	{{ {58, 238, 196}, 0, {31, 201}, {19, 5, 125, 255} }},
-	{{ {0, 238, 200}, 0, {-11, 190}, {0, 6, 127, 255} }},
-	{{ {0, 181, 195}, 0, {-11, 236}, {0, 226, 123, 255} }},
-	{{ {66, 182, 189}, 0, {32, 244}, {27, 226, 120, 255} }},
-	{{ {0, 127, 175}, 0, {-11, 285}, {0, 199, 114, 255} }},
-	{{ {66, 130, 168}, 0, {30, 286}, {28, 199, 110, 255} }},
-	{{ {70, 84, 132}, 0, {33, 329}, {34, 172, 89, 255} }},
-	{{ {0, 79, 138}, 0, {-11, 337}, {0, 170, 93, 255} }},
-	{{ {60, 45, 89}, 0, {30, 374}, {28, 150, 65, 255} }},
-	{{ {0, 40, 93}, 0, {-11, 386}, {0, 149, 69, 255} }},
-	{{ {0, 40, 93}, 0, {-11, 386}, {0, 149, 69, 255} }},
-	{{ {0, 10, 31}, 0, {-11, 440}, {0, 133, 32, 255} }},
-	{{ {60, 45, 89}, 0, {30, 374}, {28, 150, 65, 255} }},
-	{{ {91, 23, 22}, 0, {60, 410}, {37, 139, 32, 255} }},
-	{{ {76, 8, -47}, 0, {64, 459}, {32, 133, 5, 255} }},
-	{{ {0, -3, -39}, 0, {-11, 491}, {0, 129, 11, 255} }},
-	{{ {142, 37, -67}, 0, {129, 434}, {70, 150, 246, 255} }},
-	{{ {172, 62, -1}, 0, {122, 384}, {80, 159, 17, 255} }},
-	{{ {188, 82, -98}, 0, {182, 415}, {94, 176, 226, 255} }},
-	{{ {222, 111, -38}, 0, {172, 368}, {105, 185, 248, 255} }},
-	{{ {209, 141, -139}, 0, {233, 403}, {105, 211, 200, 255} }},
-	{{ {246, 183, -81}, 0, {226, 351}, {118, 228, 219, 255} }},
-	{{ {197, 196, -176}, 0, {283, 396}, {96, 249, 173, 255} }},
-	{{ {228, 248, -130}, 0, {280, 346}, {109, 19, 193, 255} }},
-	{{ {154, 247, -211}, 0, {341, 396}, {71, 22, 153, 255} }},
-	{{ {176, 305, -172}, 0, {339, 345}, {81, 53, 174, 255} }},
-	{{ {154, 247, -211}, 0, {341, 396}, {71, 22, 153, 255} }},
-	{{ {95, 342, -200}, 0, {400, 351}, {42, 73, 161, 255} }},
-	{{ {176, 305, -172}, 0, {339, 345}, {81, 53, 174, 255} }},
-	{{ {84, 283, -235}, 0, {401, 403}, {37, 41, 142, 255} }},
-	{{ {181, 354, -119}, 0, {336, 294}, {84, 74, 195, 255} }},
-	{{ {226, 308, -78}, 0, {284, 294}, {109, 52, 217, 255} }},
-	{{ {210, 356, -24}, 0, {284, 242}, {104, 73, 252, 255} }},
-	{{ {251, 259, -35}, 0, {238, 295}, {125, 24, 252, 255} }},
-	{{ {226, 310, 35}, 0, {229, 234}, {114, 48, 30, 255} }},
-	{{ {239, 233, 37}, 0, {189, 273}, {125, 18, 17, 255} }},
-	{{ {250, 192, -28}, 0, {203, 323}, {125, 235, 6, 255} }},
-	{{ {242, 191, 19}, 0, {179, 303}, {126, 239, 4, 255} }},
-	{{ {244, 225, 48}, 0, {178, 272}, {110, 51, 218, 255} }},
-	{{ {246, 188, 33}, 0, {170, 298}, {111, 250, 195, 255} }},
-	{{ {227, 147, 23}, 0, {158, 326}, {114, 200, 10, 255} }},
-	{{ {233, 150, 37}, 0, {152, 318}, {91, 190, 196, 255} }},
-	{{ {211, 120, 55}, 0, {130, 327}, {58, 148, 223, 255} }},
-	{{ {227, 147, 23}, 0, {158, 326}, {114, 200, 10, 255} }},
-	{{ {233, 150, 37}, 0, {152, 318}, {91, 190, 196, 255} }},
-	{{ {201, 115, 45}, 0, {130, 337}, {91, 171, 26, 255} }},
-	{{ {185, 109, 87}, 0, {108, 324}, {18, 131, 9, 255} }},
-	{{ {173, 104, 79}, 0, {103, 333}, {65, 158, 48, 255} }},
-	{{ {159, 118, 119}, 0, {90, 311}, {240, 144, 58, 255} }},
-	{{ {146, 113, 114}, 0, {82, 316}, {45, 170, 82, 255} }},
-	{{ {142, 145, 145}, 0, {81, 287}, {220, 183, 98, 255} }},
-	{{ {128, 144, 143}, 0, {71, 288}, {39, 198, 106, 255} }},
-	{{ {140, 183, 160}, 0, {85, 259}, {220, 239, 121, 255} }},
-	{{ {126, 185, 159}, 0, {75, 256}, {43, 228, 116, 255} }},
-	{{ {144, 227, 159}, 0, {97, 228}, {54, 9, 115, 255} }},
-	{{ {156, 220, 159}, 0, {104, 236}, {239, 42, 119, 255} }},
-	{{ {179, 249, 141}, 0, {131, 220}, {20, 87, 90, 255} }},
-	{{ {169, 258, 139}, 0, {128, 210}, {76, 28, 98, 255} }},
-	{{ {179, 249, 141}, 0, {131, 220}, {20, 87, 90, 255} }},
-	{{ {205, 260, 110}, 0, {162, 216}, {55, 105, 46, 255} }},
-	{{ {169, 258, 139}, 0, {128, 210}, {76, 28, 98, 255} }},
-	{{ {144, 227, 159}, 0, {97, 228}, {54, 9, 115, 255} }},
-	{{ {114, 252, 176}, 0, {75, 203}, {55, 8, 114, 255} }},
-	{{ {134, 304, 155}, 0, {103, 169}, {61, 42, 103, 255} }},
-	{{ {66, 296, 183}, 0, {42, 161}, {19, 51, 115, 255} }},
-	{{ {58, 238, 196}, 0, {31, 201}, {19, 5, 125, 255} }},
-	{{ {66, 182, 189}, 0, {32, 244}, {27, 226, 120, 255} }},
-	{{ {126, 185, 159}, 0, {75, 256}, {43, 228, 116, 255} }},
-	{{ {66, 130, 168}, 0, {30, 286}, {28, 199, 110, 255} }},
-	{{ {128, 144, 143}, 0, {71, 288}, {39, 198, 106, 255} }},
-	{{ {146, 113, 114}, 0, {82, 316}, {45, 170, 82, 255} }},
-	{{ {70, 84, 132}, 0, {33, 329}, {34, 172, 89, 255} }},
-	{{ {124, 65, 75}, 0, {72, 359}, {58, 159, 59, 255} }},
-	{{ {60, 45, 89}, 0, {30, 374}, {28, 150, 65, 255} }},
-	{{ {60, 45, 89}, 0, {30, 374}, {28, 150, 65, 255} }},
-	{{ {91, 23, 22}, 0, {60, 410}, {37, 139, 32, 255} }},
-	{{ {124, 65, 75}, 0, {72, 359}, {58, 159, 59, 255} }},
-	{{ {172, 62, -1}, 0, {122, 384}, {80, 159, 17, 255} }},
-	{{ {173, 104, 79}, 0, {103, 333}, {65, 158, 48, 255} }},
-	{{ {201, 115, 45}, 0, {130, 337}, {91, 171, 26, 255} }},
-	{{ {222, 111, -38}, 0, {172, 368}, {105, 185, 248, 255} }},
-	{{ {227, 147, 23}, 0, {158, 326}, {114, 200, 10, 255} }},
-	{{ {250, 192, -28}, 0, {203, 323}, {125, 235, 6, 255} }},
-	{{ {246, 183, -81}, 0, {226, 351}, {118, 228, 219, 255} }},
-	{{ {251, 259, -35}, 0, {238, 295}, {125, 24, 252, 255} }},
-	{{ {228, 248, -130}, 0, {280, 346}, {109, 19, 193, 255} }},
-	{{ {226, 308, -78}, 0, {284, 294}, {109, 52, 217, 255} }},
-	{{ {176, 305, -172}, 0, {339, 345}, {81, 53, 174, 255} }},
-	{{ {242, 191, 19}, 0, {179, 303}, {126, 239, 4, 255} }},
-	{{ {146, 113, 114}, 0, {82, 316}, {45, 170, 82, 255} }},
-	{{ {126, 185, 159}, 0, {75, 256}, {43, 228, 116, 255} }},
-	{{ {144, 227, 159}, 0, {97, 228}, {54, 9, 115, 255} }},
-	{{ {114, 252, 176}, 0, {75, 203}, {55, 8, 114, 255} }},
-	{{ {0, -36, -254}, 0, {356, 83}, {1, 130, 18, 255} }},
-	{{ {-27, -28, -301}, 0, {387, 115}, {209, 144, 220, 255} }},
-	{{ {0, -33, -299}, 0, {373, 111}, {252, 132, 228, 255} }},
-	{{ {-29, -31, -256}, 0, {376, 88}, {219, 135, 14, 255} }},
-	{{ {0, -10, -175}, 0, {353, 39}, {0, 132, 28, 255} }},
-	{{ {-44, -3, -179}, 0, {382, 48}, {217, 137, 23, 255} }},
-	{{ {0, 0, -118}, 0, {359, 7}, {0, 129, 3, 255} }},
-	{{ {-55, 8, -123}, 0, {394, 16}, {222, 134, 0, 255} }},
-	{{ {-82, 14, -189}, 0, {410, 58}, {182, 153, 6, 255} }},
-	{{ {-103, 30, -137}, 0, {427, 28}, {191, 148, 241, 255} }},
-	{{ {-108, 42, -206}, 0, {436, 71}, {155, 181, 237, 255} }},
-	{{ {-137, 64, -158}, 0, {457, 42}, {167, 173, 218, 255} }},
-	{{ {-120, 75, -226}, 0, {460, 86}, {146, 217, 206, 255} }},
-	{{ {-120, 75, -226}, 0, {460, 86}, {146, 217, 206, 255} }},
-	{{ {-137, 64, -158}, 0, {457, 42}, {167, 173, 218, 255} }},
-	{{ {-152, 105, -185}, 0, {485, 58}, {159, 205, 191, 255} }},
-	{{ {-113, 110, -247}, 0, {482, 105}, {155, 0, 178, 255} }},
-	{{ {-144, 148, -212}, 0, {510, 79}, {168, 241, 166, 255} }},
-	{{ {-89, 141, -266}, 0, {503, 127}, {181, 30, 158, 255} }},
-	{{ {-113, 187, -237}, 0, {533, 105}, {190, 12, 148, 255} }},
-	{{ {-62, 214, -254}, 0, {553, 138}, {222, 30, 137, 255} }},
-	{{ {-49, 163, -279}, 0, {520, 155}, {217, 50, 146, 255} }},
-	{{ {0, 224, -260}, 0, {569, 177}, {0, 36, 134, 255} }},
-	{{ {0, 171, -283}, 0, {533, 186}, {0, 57, 142, 255} }},
-	{{ {-32, 93, -325}, 0, {478, 168}, {218, 48, 145, 255} }},
-	{{ {0, 96, -329}, 0, {486, 190}, {1, 53, 140, 255} }},
-	{{ {-20, 44, -342}, 0, {449, 168}, {221, 16, 135, 255} }},
-	{{ {0, 47, -344}, 0, {454, 179}, {0, 22, 131, 255} }},
-	{{ {0, -5, -338}, 0, {411, 148}, {0, 193, 146, 255} }},
-	{{ {-45, 28, -332}, 0, {436, 150}, {181, 242, 154, 255} }},
-	{{ {-20, 44, -342}, 0, {449, 168}, {221, 16, 135, 255} }},
-	{{ {0, -5, -338}, 0, {411, 148}, {0, 193, 146, 255} }},
-	{{ {-51, -3, -314}, 0, {412, 128}, {171, 187, 192, 255} }},
-	{{ {-27, -28, -301}, 0, {387, 115}, {209, 144, 220, 255} }},
-	{{ {0, -33, -299}, 0, {373, 111}, {252, 132, 228, 255} }},
-	{{ {-57, -17, -259}, 0, {395, 94}, {180, 154, 0, 255} }},
-	{{ {-29, -31, -256}, 0, {376, 88}, {219, 135, 14, 255} }},
-	{{ {-44, -3, -179}, 0, {382, 48}, {217, 137, 23, 255} }},
-	{{ {-82, 14, -189}, 0, {410, 58}, {182, 153, 6, 255} }},
-	{{ {-78, 7, -266}, 0, {416, 102}, {156, 181, 233, 255} }},
-	{{ {-108, 42, -206}, 0, {436, 71}, {155, 181, 237, 255} }},
-	{{ {-89, 35, -279}, 0, {437, 113}, {146, 218, 205, 255} }},
-	{{ {-120, 75, -226}, 0, {460, 86}, {146, 217, 206, 255} }},
-	{{ {-82, 60, -297}, 0, {454, 129}, {155, 253, 179, 255} }},
-	{{ {-113, 110, -247}, 0, {482, 105}, {155, 0, 178, 255} }},
-	{{ {-82, 60, -297}, 0, {454, 129}, {155, 253, 179, 255} }},
-	{{ {-113, 110, -247}, 0, {482, 105}, {155, 0, 178, 255} }},
-	{{ {-63, 81, -314}, 0, {468, 148}, {182, 30, 157, 255} }},
-	{{ {-89, 141, -266}, 0, {503, 127}, {181, 30, 158, 255} }},
-	{{ {-49, 163, -279}, 0, {520, 155}, {217, 50, 146, 255} }},
-	{{ {-32, 93, -325}, 0, {478, 168}, {218, 48, 145, 255} }},
-	{{ {-20, 44, -342}, 0, {449, 168}, {221, 16, 135, 255} }},
-	{{ {-45, 28, -332}, 0, {436, 150}, {181, 242, 154, 255} }},
-	{{ {-89, 35, -279}, 0, {437, 113}, {146, 218, 205, 255} }},
-	{{ {-51, -3, -314}, 0, {412, 128}, {171, 187, 192, 255} }},
-	{{ {-78, 7, -266}, 0, {416, 102}, {156, 181, 233, 255} }},
-	{{ {-57, -17, -259}, 0, {395, 94}, {180, 154, 0, 255} }},
-	{{ {27, -28, -301}, 0, {387, 115}, {46, 143, 220, 255} }},
-	{{ {0, -36, -254}, 0, {356, 83}, {255, 130, 18, 255} }},
-	{{ {0, -33, -299}, 0, {373, 111}, {4, 132, 228, 255} }},
-	{{ {29, -31, -256}, 0, {376, 88}, {37, 135, 14, 255} }},
-	{{ {27, -28, -301}, 0, {387, 115}, {46, 143, 220, 255} }},
-	{{ {57, -17, -259}, 0, {395, 94}, {75, 153, 255, 255} }},
-	{{ {29, -31, -256}, 0, {376, 88}, {37, 135, 14, 255} }},
-	{{ {51, -3, -314}, 0, {412, 128}, {83, 184, 192, 255} }},
-	{{ {0, -5, -338}, 0, {411, 148}, {0, 193, 146, 255} }},
-	{{ {0, -33, -299}, 0, {373, 111}, {4, 132, 228, 255} }},
-	{{ {45, 28, -332}, 0, {436, 150}, {74, 244, 153, 255} }},
-	{{ {20, 44, -342}, 0, {449, 168}, {35, 16, 135, 255} }},
-	{{ {0, 47, -344}, 0, {454, 179}, {0, 22, 131, 255} }},
-	{{ {0, 96, -329}, 0, {486, 190}, {255, 53, 140, 255} }},
-	{{ {32, 93, -325}, 0, {478, 168}, {38, 48, 145, 255} }},
-	{{ {0, 171, -283}, 0, {533, 186}, {0, 57, 142, 255} }},
-	{{ {49, 163, -279}, 0, {520, 155}, {39, 51, 146, 255} }},
-	{{ {0, 224, -260}, 0, {569, 177}, {0, 36, 134, 255} }},
-	{{ {62, 214, -254}, 0, {553, 138}, {34, 30, 137, 255} }},
-	{{ {89, 141, -266}, 0, {503, 127}, {75, 30, 158, 255} }},
-	{{ {89, 141, -266}, 0, {503, 127}, {75, 30, 158, 255} }},
-	{{ {62, 214, -254}, 0, {553, 138}, {34, 30, 137, 255} }},
-	{{ {113, 187, -237}, 0, {533, 105}, {66, 12, 148, 255} }},
-	{{ {144, 148, -212}, 0, {510, 79}, {88, 241, 166, 255} }},
-	{{ {113, 110, -247}, 0, {482, 105}, {101, 0, 178, 255} }},
-	{{ {152, 105, -185}, 0, {485, 58}, {97, 205, 191, 255} }},
-	{{ {120, 75, -226}, 0, {460, 86}, {110, 217, 206, 255} }},
-	{{ {137, 64, -158}, 0, {457, 42}, {89, 173, 218, 255} }},
-	{{ {108, 42, -206}, 0, {436, 71}, {101, 181, 237, 255} }},
-	{{ {103, 30, -137}, 0, {427, 28}, {65, 148, 241, 255} }},
-	{{ {82, 14, -189}, 0, {410, 58}, {74, 153, 6, 255} }},
-	{{ {55, 8, -123}, 0, {394, 16}, {34, 134, 0, 255} }},
-	{{ {44, -3, -179}, 0, {382, 48}, {39, 137, 23, 255} }},
-	{{ {0, 0, -118}, 0, {359, 7}, {0, 129, 3, 255} }},
-	{{ {0, -10, -175}, 0, {353, 39}, {0, 132, 28, 255} }},
-	{{ {29, -31, -256}, 0, {376, 88}, {37, 135, 14, 255} }},
-	{{ {29, -31, -256}, 0, {376, 88}, {37, 135, 14, 255} }},
-	{{ {0, -10, -175}, 0, {353, 39}, {0, 132, 28, 255} }},
-	{{ {0, -36, -254}, 0, {356, 83}, {255, 130, 18, 255} }},
-	{{ {57, -17, -259}, 0, {395, 94}, {75, 153, 255, 255} }},
-	{{ {44, -3, -179}, 0, {382, 48}, {39, 137, 23, 255} }},
-	{{ {82, 14, -189}, 0, {410, 58}, {74, 153, 6, 255} }},
-	{{ {78, 7, -266}, 0, {416, 102}, {101, 183, 231, 255} }},
-	{{ {51, -3, -314}, 0, {412, 128}, {83, 184, 192, 255} }},
-	{{ {89, 35, -279}, 0, {437, 113}, {109, 218, 203, 255} }},
-	{{ {45, 28, -332}, 0, {436, 150}, {74, 244, 153, 255} }},
-	{{ {82, 60, -297}, 0, {454, 129}, {101, 255, 178, 255} }},
-	{{ {63, 81, -314}, 0, {468, 148}, {74, 30, 157, 255} }},
-	{{ {20, 44, -342}, 0, {449, 168}, {35, 16, 135, 255} }},
-	{{ {32, 93, -325}, 0, {478, 168}, {38, 48, 145, 255} }},
-	{{ {49, 163, -279}, 0, {520, 155}, {39, 51, 146, 255} }},
-	{{ {89, 141, -266}, 0, {503, 127}, {75, 30, 158, 255} }},
-	{{ {63, 81, -314}, 0, {468, 148}, {74, 30, 157, 255} }},
-	{{ {89, 141, -266}, 0, {503, 127}, {75, 30, 158, 255} }},
-	{{ {113, 110, -247}, 0, {482, 105}, {101, 0, 178, 255} }},
-	{{ {82, 60, -297}, 0, {454, 129}, {101, 255, 178, 255} }},
-	{{ {120, 75, -226}, 0, {460, 86}, {110, 217, 206, 255} }},
-	{{ {89, 35, -279}, 0, {437, 113}, {109, 218, 203, 255} }},
-	{{ {108, 42, -206}, 0, {436, 71}, {101, 181, 237, 255} }},
-	{{ {78, 7, -266}, 0, {416, 102}, {101, 183, 231, 255} }},
-	{{ {82, 14, -189}, 0, {410, 58}, {74, 153, 6, 255} }},
-	{{ {-306, 165, 233}, 0, {220, 28}, {2, 44, 119, 255} }},
-	{{ {-324, 149, 238}, 0, {235, 46}, {250, 5, 127, 255} }},
-	{{ {-299, 147, 234}, 0, {214, 54}, {23, 240, 124, 255} }},
-	{{ {-316, 179, 224}, 0, {239, 8}, {231, 78, 97, 255} }},
-	{{ {-339, 166, 226}, 0, {258, 22}, {198, 76, 83, 255} }},
-	{{ {-329, 184, 210}, 0, {266, 0}, {191, 96, 53, 255} }},
-	{{ {-353, 163, 206}, 0, {289, 29}, {144, 60, 11, 255} }},
-	{{ {-329, 184, 210}, 0, {266, 0}, {191, 96, 53, 255} }},
-	{{ {-341, 180, 195}, 0, {294, 7}, {163, 86, 15, 255} }},
-	{{ {-353, 163, 206}, 0, {289, 29}, {144, 60, 11, 255} }},
-	{{ {-348, 167, 182}, 0, {313, 26}, {139, 43, 232, 255} }},
-	{{ {-357, 141, 209}, 0, {287, 55}, {131, 235, 252, 255} }},
-	{{ {-349, 150, 175}, 0, {321, 51}, {136, 246, 215, 255} }},
-	{{ {-343, 132, 176}, 0, {314, 77}, {155, 191, 213, 255} }},
-	{{ {-348, 127, 200}, 0, {290, 75}, {167, 166, 243, 255} }},
-	{{ {-332, 118, 185}, 0, {295, 97}, {192, 147, 240, 255} }},
-	{{ {-319, 113, 199}, 0, {268, 104}, {224, 134, 18, 255} }},
-	{{ {-333, 122, 219}, 0, {259, 83}, {225, 147, 58, 255} }},
-	{{ {-307, 117, 214}, 0, {241, 98}, {0, 146, 64, 255} }},
-	{{ {-300, 129, 228}, 0, {221, 79}, {254, 186, 106, 255} }},
-	{{ {-341, 133, 230}, 0, {257, 63}, {227, 182, 99, 255} }},
-	{{ {-324, 149, 238}, 0, {235, 46}, {250, 5, 127, 255} }},
-	{{ {-299, 147, 234}, 0, {214, 54}, {23, 240, 124, 255} }},
-	{{ {-341, 145, 234}, 0, {253, 49}, {216, 4, 121, 255} }},
-	{{ {-341, 133, 230}, 0, {257, 63}, {227, 182, 99, 255} }},
-	{{ {-324, 149, 238}, 0, {235, 46}, {250, 5, 127, 255} }},
-	{{ {-352, 141, 227}, 0, {267, 53}, {159, 229, 77, 255} }},
-	{{ {-348, 153, 229}, 0, {263, 39}, {182, 53, 88, 255} }},
-	{{ {-339, 166, 226}, 0, {258, 22}, {198, 76, 83, 255} }},
-	{{ {-353, 163, 206}, 0, {289, 29}, {144, 60, 11, 255} }},
-	{{ {-356, 150, 218}, 0, {277, 42}, {139, 36, 34, 255} }},
-	{{ {-357, 141, 209}, 0, {287, 55}, {131, 235, 252, 255} }},
-	{{ {-349, 130, 220}, 0, {271, 66}, {167, 171, 32, 255} }},
-	{{ {-348, 127, 200}, 0, {290, 75}, {167, 166, 243, 255} }},
-	{{ {-333, 122, 219}, 0, {259, 83}, {225, 147, 58, 255} }},
-	{{ {348, 167, 182}, 0, {313, 26}, {117, 43, 232, 255} }},
-	{{ {357, 141, 209}, 0, {287, 55}, {123, 225, 253, 255} }},
-	{{ {349, 150, 175}, 0, {321, 51}, {120, 246, 215, 255} }},
-	{{ {353, 163, 206}, 0, {289, 29}, {113, 57, 9, 255} }},
-	{{ {341, 180, 195}, 0, {294, 7}, {93, 86, 15, 255} }},
-	{{ {353, 163, 206}, 0, {289, 29}, {113, 57, 9, 255} }},
-	{{ {348, 167, 182}, 0, {313, 26}, {117, 43, 232, 255} }},
-	{{ {329, 184, 210}, 0, {266, 0}, {65, 96, 53, 255} }},
-	{{ {339, 166, 226}, 0, {258, 22}, {60, 76, 82, 255} }},
-	{{ {316, 179, 224}, 0, {239, 8}, {25, 78, 97, 255} }},
-	{{ {324, 149, 238}, 0, {235, 46}, {6, 4, 127, 255} }},
-	{{ {306, 165, 233}, 0, {220, 28}, {254, 44, 119, 255} }},
-	{{ {299, 147, 234}, 0, {214, 54}, {233, 240, 124, 255} }},
-	{{ {300, 129, 228}, 0, {221, 79}, {1, 186, 106, 255} }},
-	{{ {341, 133, 230}, 0, {257, 63}, {33, 178, 95, 255} }},
-	{{ {333, 122, 219}, 0, {259, 83}, {31, 144, 51, 255} }},
-	{{ {307, 117, 214}, 0, {241, 98}, {0, 146, 64, 255} }},
-	{{ {319, 113, 199}, 0, {268, 104}, {32, 134, 18, 255} }},
-	{{ {348, 127, 200}, 0, {290, 75}, {93, 170, 248, 255} }},
-	{{ {332, 118, 185}, 0, {295, 97}, {64, 147, 240, 255} }},
-	{{ {348, 127, 200}, 0, {290, 75}, {93, 170, 248, 255} }},
-	{{ {332, 118, 185}, 0, {295, 97}, {64, 147, 240, 255} }},
-	{{ {343, 132, 176}, 0, {314, 77}, {101, 191, 213, 255} }},
-	{{ {357, 141, 209}, 0, {287, 55}, {123, 225, 253, 255} }},
-	{{ {349, 150, 175}, 0, {321, 51}, {120, 246, 215, 255} }},
-	{{ {349, 130, 220}, 0, {271, 66}, {82, 164, 32, 255} }},
-	{{ {352, 141, 227}, 0, {267, 53}, {97, 229, 77, 255} }},
-	{{ {356, 150, 218}, 0, {277, 42}, {116, 37, 35, 255} }},
-	{{ {353, 163, 206}, 0, {289, 29}, {113, 57, 9, 255} }},
-	{{ {348, 153, 229}, 0, {263, 39}, {74, 53, 89, 255} }},
-	{{ {339, 166, 226}, 0, {258, 22}, {60, 76, 82, 255} }},
-	{{ {341, 145, 234}, 0, {253, 49}, {32, 248, 123, 255} }},
-	{{ {324, 149, 238}, 0, {235, 46}, {6, 4, 127, 255} }},
-	{{ {341, 133, 230}, 0, {257, 63}, {33, 178, 95, 255} }},
-	{{ {333, 122, 219}, 0, {259, 83}, {31, 144, 51, 255} }},
-};
-
-Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_1[] = {
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(3, 5, 6, 0),
-	gsSP1Triangle(3, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 1, 0, 0),
-	gsSP1Triangle(4, 5, 1, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(9, 8, 6, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 6, 4, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 11, 10, 0),
-	gsSP1Triangle(14, 13, 10, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(5, 0, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(10, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 80, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(6, 10, 9, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(12, 10, 13, 0),
-	gsSP1Triangle(14, 11, 12, 0),
-	gsSP1Triangle(15, 11, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 96, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(2, 5, 4, 0),
-	gsSP1Triangle(2, 6, 5, 0),
-	gsSP1Triangle(3, 4, 7, 0),
-	gsSP1Triangle(8, 3, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(9, 7, 10, 0),
-	gsSP1Triangle(11, 8, 9, 0),
-	gsSP1Triangle(12, 8, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(13, 11, 14, 0),
-	gsSP1Triangle(11, 15, 14, 0),
-	gsSP1Triangle(11, 9, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 112, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(3, 6, 4, 0),
-	gsSP1Triangle(7, 6, 3, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(9, 7, 10, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 128, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(5, 6, 3, 0),
-	gsSP1Triangle(3, 6, 7, 0),
-	gsSP1Triangle(8, 3, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(9, 7, 10, 0),
-	gsSP1Triangle(11, 8, 9, 0),
-	gsSP1Triangle(12, 8, 11, 0),
-	gsSP1Triangle(2, 8, 12, 0),
-	gsSP1Triangle(2, 12, 13, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 144, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(14, 13, 11, 0),
-	gsSP1Triangle(12, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 160, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(5, 0, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(10, 5, 7, 0),
-	gsSP1Triangle(11, 5, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(12, 10, 13, 0),
-	gsSP1Triangle(14, 11, 12, 0),
-	gsSP1Triangle(14, 4, 11, 0),
-	gsSP1Triangle(14, 15, 4, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 176, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(0, 3, 5, 0),
-	gsSP1Triangle(6, 0, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(6, 8, 0, 0),
-	gsSP1Triangle(0, 8, 1, 0),
-	gsSP1Triangle(8, 9, 1, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(1, 9, 13, 0),
-	gsSP1Triangle(1, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 192, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 4, 9, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(11, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 208, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(1, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 224, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(4, 6, 8, 0),
-	gsSP1Triangle(8, 9, 4, 0),
-	gsSP1Triangle(9, 10, 4, 0),
-	gsSP1Triangle(4, 10, 1, 0),
-	gsSP1Triangle(1, 10, 11, 0),
-	gsSP1Triangle(1, 11, 2, 0),
-	gsSP1Triangle(2, 11, 12, 0),
-	gsSP1Triangle(13, 2, 12, 0),
-	gsSP1Triangle(14, 2, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 240, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 5, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 256, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 272, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(4, 6, 8, 0),
-	gsSP1Triangle(4, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(9, 10, 12, 0),
-	gsSP1Triangle(12, 10, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 288, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(6, 3, 4, 0),
-	gsSP1Triangle(6, 7, 3, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(9, 8, 6, 0),
-	gsSP1Triangle(9, 6, 10, 0),
-	gsSP1Triangle(10, 6, 4, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(12, 10, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 304, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(9, 6, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 320, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(1, 5, 4, 0),
-	gsSP1Triangle(3, 4, 6, 0),
-	gsSP1Triangle(3, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 336, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(2, 1, 4, 0),
-	gsSP1Triangle(2, 4, 5, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(12, 11, 9, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(13, 14, 11, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 352, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 368, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(4, 2, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 4, 7, 0),
-	gsSP1Triangle(8, 9, 4, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 384, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(5, 3, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(14, 7, 8, 0),
-	gsSP1Triangle(2, 4, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 400, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(3, 6, 4, 0),
-	gsSP1Triangle(3, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 416, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(5, 7, 8, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 432, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 4, 2, 0),
-	gsSP1Triangle(4, 6, 3, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(6, 9, 10, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 448, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(2, 4, 5, 0),
-	gsSP1Triangle(6, 2, 5, 0),
-	gsSP1Triangle(7, 2, 6, 0),
-	gsSP1Triangle(7, 0, 2, 0),
-	gsSP1Triangle(7, 8, 0, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 464, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(4, 6, 3, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(4, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 480, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 496, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(7, 6, 3, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(11, 13, 14, 0),
-	gsSP1Triangle(11, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 512, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 10, 9, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 528, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(14, 12, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 544, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(5, 0, 2, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 3, 0),
-	gsSP1Triangle(8, 9, 3, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(1, 9, 11, 0),
-	gsSP1Triangle(3, 9, 1, 0),
-	gsSP1Triangle(7, 3, 4, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 13, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 560, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(6, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_1 + 576, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(3, 5, 0, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(7, 6, 3, 0),
-	gsSP1Triangle(7, 3, 8, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(6, 11, 13, 0),
-	gsSP1Triangle(6, 13, 5, 0),
-	gsSP1Triangle(13, 14, 5, 0),
-	gsSP1Triangle(0, 5, 14, 0),
-	gsSP1Triangle(9, 11, 6, 0),
-	gsSP1Triangle(7, 9, 6, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2[596] = {
-	{{ {83, 345, 229}, 0, {788, 811}, {236, 145, 198, 255} }},
-	{{ {105, 357, 219}, 0, {758, 792}, {249, 171, 162, 255} }},
-	{{ {110, 347, 223}, 0, {752, 805}, {16, 149, 189, 255} }},
-	{{ {82, 354, 224}, 0, {789, 798}, {223, 167, 171, 255} }},
-	{{ {57, 352, 234}, 0, {823, 807}, {202, 153, 205, 255} }},
-	{{ {57, 362, 229}, 0, {823, 793}, {194, 178, 177, 255} }},
-	{{ {34, 366, 239}, 0, {857, 793}, {172, 171, 211, 255} }},
-	{{ {36, 378, 232}, 0, {855, 776}, {169, 199, 183, 255} }},
-	{{ {14, 389, 243}, 0, {889, 768}, {152, 194, 217, 255} }},
-	{{ {13, 410, 236}, 0, {891, 739}, {150, 221, 195, 255} }},
-	{{ {1, 420, 245}, 0, {915, 731}, {138, 225, 221, 255} }},
-	{{ {-7, 458, 246}, 0, {934, 682}, {133, 241, 228, 255} }},
-	{{ {0, 461, 238}, 0, {922, 677}, {143, 251, 198, 255} }},
-	{{ {-8, 499, 245}, 0, {942, 628}, {132, 3, 229, 255} }},
-	{{ {-1, 518, 237}, 0, {928, 601}, {145, 19, 197, 255} }},
-	{{ {-3, 539, 242}, 0, {939, 573}, {136, 22, 219, 255} }},
-	{{ {-1, 518, 237}, 0, {928, 601}, {145, 19, 197, 255} }},
-	{{ {-3, 539, 242}, 0, {939, 573}, {136, 22, 219, 255} }},
-	{{ {16, 571, 231}, 0, {911, 530}, {162, 42, 182, 255} }},
-	{{ {7, 577, 239}, 0, {926, 522}, {143, 37, 211, 255} }},
-	{{ {35, 602, 226}, 0, {887, 489}, {178, 55, 172, 255} }},
-	{{ {23, 611, 235}, 0, {904, 477}, {159, 50, 191, 255} }},
-	{{ {46, 636, 229}, 0, {874, 444}, {184, 72, 180, 255} }},
-	{{ {55, 623, 221}, 0, {858, 461}, {203, 65, 161, 255} }},
-	{{ {74, 652, 223}, 0, {837, 423}, {209, 90, 179, 255} }},
-	{{ {91, 637, 212}, 0, {811, 442}, {234, 64, 148, 255} }},
-	{{ {106, 656, 216}, 0, {795, 414}, {246, 93, 170, 255} }},
-	{{ {138, 648, 209}, 0, {753, 420}, {20, 85, 164, 255} }},
-	{{ {131, 631, 205}, 0, {758, 443}, {6, 67, 148, 255} }},
-	{{ {163, 629, 205}, 0, {716, 438}, {51, 67, 161, 255} }},
-	{{ {152, 615, 200}, 0, {726, 459}, {37, 49, 145, 255} }},
-	{{ {184, 600, 201}, 0, {682, 471}, {74, 46, 163, 255} }},
-	{{ {184, 600, 201}, 0, {682, 471}, {74, 46, 163, 255} }},
-	{{ {181, 571, 196}, 0, {682, 511}, {63, 20, 147, 255} }},
-	{{ {152, 615, 200}, 0, {726, 459}, {37, 49, 145, 255} }},
-	{{ {196, 564, 199}, 0, {658, 515}, {87, 16, 165, 255} }},
-	{{ {200, 525, 199}, 0, {644, 565}, {97, 2, 174, 255} }},
-	{{ {190, 523, 196}, 0, {657, 569}, {67, 0, 148, 255} }},
-	{{ {198, 485, 200}, 0, {640, 619}, {100, 240, 180, 255} }},
-	{{ {188, 484, 197}, 0, {653, 620}, {66, 232, 150, 255} }},
-	{{ {175, 430, 202}, 0, {667, 693}, {63, 214, 154, 255} }},
-	{{ {190, 444, 204}, 0, {646, 674}, {95, 223, 178, 255} }},
-	{{ {175, 407, 208}, 0, {665, 725}, {87, 200, 182, 255} }},
-	{{ {150, 388, 208}, 0, {699, 751}, {57, 196, 159, 255} }},
-	{{ {156, 379, 212}, 0, {690, 763}, {73, 181, 184, 255} }},
-	{{ {130, 369, 213}, 0, {726, 775}, {32, 188, 154, 255} }},
-	{{ {134, 360, 218}, 0, {720, 788}, {46, 162, 184, 255} }},
-	{{ {105, 357, 219}, 0, {758, 792}, {249, 171, 162, 255} }},
-	{{ {110, 347, 223}, 0, {752, 805}, {16, 149, 189, 255} }},
-	{{ {105, 357, 219}, 0, {758, 792}, {249, 171, 162, 255} }},
-	{{ {134, 360, 218}, 0, {720, 788}, {46, 162, 184, 255} }},
-	{{ {112, 371, 196}, 0, {751, 759}, {22, 169, 166, 255} }},
-	{{ {130, 369, 213}, 0, {726, 775}, {32, 188, 154, 255} }},
-	{{ {150, 388, 208}, 0, {699, 751}, {57, 196, 159, 255} }},
-	{{ {141, 394, 190}, 0, {716, 732}, {56, 191, 162, 255} }},
-	{{ {108, 411, 173}, 0, {756, 708}, {11, 208, 139, 255} }},
-	{{ {75, 400, 181}, 0, {792, 723}, {231, 200, 145, 255} }},
-	{{ {77, 365, 203}, 0, {791, 769}, {231, 160, 176, 255} }},
-	{{ {82, 354, 224}, 0, {789, 798}, {223, 167, 171, 255} }},
-	{{ {57, 362, 229}, 0, {823, 793}, {194, 178, 177, 255} }},
-	{{ {44, 378, 209}, 0, {830, 757}, {184, 176, 188, 255} }},
-	{{ {36, 378, 232}, 0, {855, 776}, {169, 199, 183, 255} }},
-	{{ {13, 410, 236}, 0, {891, 739}, {150, 221, 195, 255} }},
-	{{ {20, 407, 213}, 0, {865, 730}, {156, 203, 197, 255} }},
-	{{ {4, 454, 215}, 0, {892, 678}, {141, 238, 204, 255} }},
-	{{ {20, 407, 213}, 0, {865, 730}, {156, 203, 197, 255} }},
-	{{ {13, 410, 236}, 0, {891, 739}, {150, 221, 195, 255} }},
-	{{ {0, 461, 238}, 0, {922, 677}, {143, 251, 198, 255} }},
-	{{ {-1, 518, 237}, 0, {928, 601}, {145, 19, 197, 255} }},
-	{{ {6, 524, 214}, 0, {900, 594}, {142, 19, 203, 255} }},
-	{{ {16, 571, 231}, 0, {911, 530}, {162, 42, 182, 255} }},
-	{{ {22, 565, 206}, 0, {881, 543}, {161, 44, 184, 255} }},
-	{{ {35, 602, 226}, 0, {887, 489}, {178, 55, 172, 255} }},
-	{{ {49, 604, 202}, 0, {852, 493}, {179, 67, 180, 255} }},
-	{{ {55, 623, 221}, 0, {858, 461}, {203, 65, 161, 255} }},
-	{{ {78, 619, 197}, 0, {819, 473}, {214, 80, 166, 255} }},
-	{{ {91, 637, 212}, 0, {811, 442}, {234, 64, 148, 255} }},
-	{{ {108, 622, 192}, 0, {784, 469}, {0, 83, 160, 255} }},
-	{{ {131, 631, 205}, 0, {758, 443}, {6, 67, 148, 255} }},
-	{{ {152, 615, 200}, 0, {726, 459}, {37, 49, 145, 255} }},
-	{{ {108, 622, 192}, 0, {784, 469}, {0, 83, 160, 255} }},
-	{{ {152, 615, 200}, 0, {726, 459}, {37, 49, 145, 255} }},
-	{{ {142, 603, 184}, 0, {739, 484}, {41, 62, 153, 255} }},
-	{{ {181, 571, 196}, 0, {682, 511}, {63, 20, 147, 255} }},
-	{{ {166, 568, 182}, 0, {705, 522}, {63, 29, 149, 255} }},
-	{{ {190, 523, 196}, 0, {657, 569}, {67, 0, 148, 255} }},
-	{{ {177, 500, 181}, 0, {678, 601}, {80, 250, 157, 255} }},
-	{{ {188, 484, 197}, 0, {653, 620}, {66, 232, 150, 255} }},
-	{{ {175, 430, 202}, 0, {667, 693}, {63, 214, 154, 255} }},
-	{{ {165, 436, 184}, 0, {688, 680}, {76, 219, 161, 255} }},
-	{{ {141, 394, 190}, 0, {716, 732}, {56, 191, 162, 255} }},
-	{{ {150, 388, 208}, 0, {699, 751}, {57, 196, 159, 255} }},
-	{{ {136, 444, 170}, 0, {724, 670}, {36, 230, 137, 255} }},
-	{{ {108, 411, 173}, 0, {756, 708}, {11, 208, 139, 255} }},
-	{{ {91, 449, 161}, 0, {777, 664}, {248, 230, 132, 255} }},
-	{{ {75, 400, 181}, 0, {792, 723}, {231, 200, 145, 255} }},
-	{{ {47, 417, 183}, 0, {824, 706}, {195, 215, 152, 255} }},
-	{{ {91, 449, 161}, 0, {777, 664}, {248, 230, 132, 255} }},
-	{{ {75, 400, 181}, 0, {792, 723}, {231, 200, 145, 255} }},
-	{{ {44, 378, 209}, 0, {830, 757}, {184, 176, 188, 255} }},
-	{{ {77, 365, 203}, 0, {791, 769}, {231, 160, 176, 255} }},
-	{{ {20, 407, 213}, 0, {865, 730}, {156, 203, 197, 255} }},
-	{{ {42, 454, 175}, 0, {834, 662}, {189, 238, 149, 255} }},
-	{{ {4, 454, 215}, 0, {892, 678}, {141, 238, 204, 255} }},
-	{{ {35, 499, 178}, 0, {846, 616}, {181, 7, 154, 255} }},
-	{{ {6, 524, 214}, 0, {900, 594}, {142, 19, 203, 255} }},
-	{{ {22, 565, 206}, 0, {881, 543}, {161, 44, 184, 255} }},
-	{{ {71, 543, 165}, 0, {807, 567}, {217, 25, 138, 255} }},
-	{{ {61, 581, 183}, 0, {829, 523}, {199, 42, 150, 255} }},
-	{{ {49, 604, 202}, 0, {852, 493}, {179, 67, 180, 255} }},
-	{{ {78, 619, 197}, 0, {819, 473}, {214, 80, 166, 255} }},
-	{{ {94, 591, 175}, 0, {791, 508}, {240, 49, 140, 255} }},
-	{{ {78, 619, 197}, 0, {819, 473}, {214, 80, 166, 255} }},
-	{{ {108, 622, 192}, 0, {784, 469}, {0, 83, 160, 255} }},
-	{{ {94, 591, 175}, 0, {791, 508}, {240, 49, 140, 255} }},
-	{{ {127, 576, 170}, 0, {751, 521}, {17, 33, 134, 255} }},
-	{{ {142, 603, 184}, 0, {739, 484}, {41, 62, 153, 255} }},
-	{{ {166, 568, 182}, 0, {705, 522}, {63, 29, 149, 255} }},
-	{{ {150, 507, 167}, 0, {716, 596}, {44, 0, 137, 255} }},
-	{{ {177, 500, 181}, 0, {678, 601}, {80, 250, 157, 255} }},
-	{{ {165, 436, 184}, 0, {688, 680}, {76, 219, 161, 255} }},
-	{{ {136, 444, 170}, 0, {724, 670}, {36, 230, 137, 255} }},
-	{{ {112, 507, 157}, 0, {756, 600}, {14, 4, 130, 255} }},
-	{{ {91, 449, 161}, 0, {777, 664}, {248, 230, 132, 255} }},
-	{{ {80, 497, 158}, 0, {792, 615}, {229, 1, 132, 255} }},
-	{{ {42, 454, 175}, 0, {834, 662}, {189, 238, 149, 255} }},
-	{{ {47, 417, 183}, 0, {824, 706}, {195, 215, 152, 255} }},
-	{{ {35, 499, 178}, 0, {846, 616}, {181, 7, 154, 255} }},
-	{{ {35, 499, 178}, 0, {846, 616}, {181, 7, 154, 255} }},
-	{{ {71, 543, 165}, 0, {807, 567}, {217, 25, 138, 255} }},
-	{{ {80, 497, 158}, 0, {792, 615}, {229, 1, 132, 255} }},
-	{{ {112, 507, 157}, 0, {756, 600}, {14, 4, 130, 255} }},
-	{{ {127, 576, 170}, 0, {751, 521}, {17, 33, 134, 255} }},
-	{{ {94, 591, 175}, 0, {791, 508}, {240, 49, 140, 255} }},
-	{{ {61, 581, 183}, 0, {829, 523}, {199, 42, 150, 255} }},
-	{{ {150, 507, 167}, 0, {716, 596}, {44, 0, 137, 255} }},
-	{{ {-7, 458, 246}, 0, {11, 675}, {133, 237, 229, 255} }},
-	{{ {-9, 476, 260}, 0, {25, 651}, {138, 251, 48, 255} }},
-	{{ {-7, 516, 244}, 0, {6, 602}, {131, 16, 244, 255} }},
-	{{ {1, 420, 245}, 0, {24, 723}, {138, 222, 222, 255} }},
-	{{ {1, 419, 259}, 0, {40, 717}, {144, 216, 45, 255} }},
-	{{ {14, 389, 243}, 0, {46, 763}, {152, 196, 214, 255} }},
-	{{ {15, 387, 257}, 0, {60, 754}, {154, 191, 40, 255} }},
-	{{ {34, 366, 239}, 0, {75, 792}, {169, 173, 214, 255} }},
-	{{ {15, 387, 257}, 0, {60, 754}, {154, 191, 40, 255} }},
-	{{ {34, 366, 239}, 0, {75, 792}, {169, 173, 214, 255} }},
-	{{ {47, 354, 250}, 0, {102, 788}, {195, 149, 32, 255} }},
-	{{ {57, 352, 234}, 0, {110, 811}, {205, 151, 206, 255} }},
-	{{ {86, 342, 243}, 0, {148, 800}, {254, 130, 16, 255} }},
-	{{ {83, 345, 229}, 0, {148, 817}, {235, 147, 195, 255} }},
-	{{ {112, 345, 237}, 0, {179, 796}, {30, 133, 11, 255} }},
-	{{ {110, 347, 223}, 0, {186, 811}, {15, 151, 186, 255} }},
-	{{ {138, 356, 231}, 0, {210, 780}, {76, 154, 254, 255} }},
-	{{ {134, 360, 218}, 0, {220, 792}, {46, 164, 181, 255} }},
-	{{ {167, 384, 224}, 0, {241, 744}, {101, 179, 250, 255} }},
-	{{ {156, 379, 212}, 0, {249, 764}, {67, 175, 184, 255} }},
-	{{ {175, 407, 208}, 0, {271, 725}, {94, 203, 189, 255} }},
-	{{ {195, 445, 217}, 0, {271, 672}, {121, 216, 253, 255} }},
-	{{ {192, 450, 203}, 0, {288, 670}, {99, 226, 182, 255} }},
-	{{ {206, 511, 213}, 0, {278, 594}, {126, 250, 245, 255} }},
-	{{ {200, 525, 199}, 0, {295, 576}, {97, 5, 174, 255} }},
-	{{ {206, 511, 213}, 0, {278, 594}, {126, 250, 245, 255} }},
-	{{ {192, 450, 203}, 0, {288, 670}, {99, 226, 182, 255} }},
-	{{ {196, 564, 199}, 0, {286, 527}, {89, 20, 167, 255} }},
-	{{ {201, 566, 212}, 0, {269, 530}, {123, 28, 246, 255} }},
-	{{ {184, 600, 201}, 0, {267, 481}, {73, 43, 161, 255} }},
-	{{ {189, 603, 214}, 0, {252, 488}, {112, 60, 247, 255} }},
-	{{ {163, 629, 205}, 0, {236, 443}, {50, 66, 160, 255} }},
-	{{ {168, 632, 218}, 0, {225, 456}, {94, 86, 254, 255} }},
-	{{ {142, 651, 223}, 0, {193, 436}, {52, 116, 7, 255} }},
-	{{ {138, 648, 209}, 0, {199, 420}, {20, 85, 163, 255} }},
-	{{ {109, 660, 229}, 0, {154, 428}, {12, 126, 4, 255} }},
-	{{ {106, 656, 216}, 0, {154, 411}, {244, 93, 170, 255} }},
-	{{ {77, 655, 237}, 0, {115, 434}, {222, 121, 17, 255} }},
-	{{ {74, 652, 223}, 0, {109, 419}, {210, 89, 178, 255} }},
-	{{ {48, 640, 243}, 0, {81, 453}, {186, 99, 38, 255} }},
-	{{ {46, 636, 229}, 0, {70, 442}, {185, 71, 178, 255} }},
-	{{ {48, 640, 243}, 0, {81, 453}, {186, 99, 38, 255} }},
-	{{ {74, 652, 223}, 0, {109, 419}, {210, 89, 178, 255} }},
-	{{ {23, 611, 235}, 0, {39, 478}, {159, 48, 190, 255} }},
-	{{ {25, 614, 249}, 0, {54, 485}, {162, 73, 46, 255} }},
-	{{ {4, 570, 254}, 0, {32, 539}, {148, 43, 51, 255} }},
-	{{ {7, 577, 239}, 0, {18, 523}, {146, 40, 206, 255} }},
-	{{ {-7, 516, 244}, 0, {6, 602}, {131, 16, 244, 255} }},
-	{{ {-9, 476, 260}, 0, {25, 651}, {138, 251, 48, 255} }},
-	{{ {1, 518, 268}, 0, {37, 602}, {189, 21, 106, 255} }},
-	{{ {3, 441, 269}, 0, {46, 689}, {188, 238, 106, 255} }},
-	{{ {1, 419, 259}, 0, {40, 717}, {144, 216, 45, 255} }},
-	{{ {29, 379, 265}, 0, {81, 756}, {210, 202, 105, 255} }},
-	{{ {15, 387, 257}, 0, {60, 754}, {154, 191, 40, 255} }},
-	{{ {47, 354, 250}, 0, {102, 788}, {195, 149, 32, 255} }},
-	{{ {74, 348, 255}, 0, {132, 786}, {249, 164, 88, 255} }},
-	{{ {47, 354, 250}, 0, {102, 788}, {195, 149, 32, 255} }},
-	{{ {86, 342, 243}, 0, {148, 800}, {254, 130, 16, 255} }},
-	{{ {74, 348, 255}, 0, {132, 786}, {249, 164, 88, 255} }},
-	{{ {112, 345, 237}, 0, {179, 796}, {30, 133, 11, 255} }},
-	{{ {129, 353, 243}, 0, {191, 776}, {57, 174, 79, 255} }},
-	{{ {138, 356, 231}, 0, {210, 780}, {76, 154, 254, 255} }},
-	{{ {167, 384, 224}, 0, {241, 744}, {101, 179, 250, 255} }},
-	{{ {170, 394, 235}, 0, {234, 729}, {98, 215, 70, 255} }},
-	{{ {195, 445, 217}, 0, {271, 672}, {121, 216, 253, 255} }},
-	{{ {197, 464, 227}, 0, {261, 648}, {100, 229, 73, 255} }},
-	{{ {206, 511, 213}, 0, {278, 594}, {126, 250, 245, 255} }},
-	{{ {202, 544, 224}, 0, {260, 558}, {107, 15, 67, 255} }},
-	{{ {201, 566, 212}, 0, {269, 530}, {123, 28, 246, 255} }},
-	{{ {187, 598, 226}, 0, {242, 498}, {95, 39, 74, 255} }},
-	{{ {189, 603, 214}, 0, {252, 488}, {112, 60, 247, 255} }},
-	{{ {157, 637, 231}, 0, {204, 459}, {70, 70, 79, 255} }},
-	{{ {168, 632, 218}, 0, {225, 456}, {94, 86, 254, 255} }},
-	{{ {157, 637, 231}, 0, {204, 459}, {70, 70, 79, 255} }},
-	{{ {189, 603, 214}, 0, {252, 488}, {112, 60, 247, 255} }},
-	{{ {142, 651, 223}, 0, {193, 436}, {52, 116, 7, 255} }},
-	{{ {111, 653, 240}, 0, {154, 442}, {27, 73, 100, 255} }},
-	{{ {109, 660, 229}, 0, {154, 428}, {12, 126, 4, 255} }},
-	{{ {77, 655, 237}, 0, {115, 434}, {222, 121, 17, 255} }},
-	{{ {63, 643, 250}, 0, {101, 458}, {239, 73, 103, 255} }},
-	{{ {48, 640, 243}, 0, {81, 453}, {186, 99, 38, 255} }},
-	{{ {25, 614, 249}, 0, {54, 485}, {162, 73, 46, 255} }},
-	{{ {21, 595, 261}, 0, {56, 513}, {199, 46, 104, 255} }},
-	{{ {4, 570, 254}, 0, {32, 539}, {148, 43, 51, 255} }},
-	{{ {1, 518, 268}, 0, {37, 602}, {189, 21, 106, 255} }},
-	{{ {25, 561, 267}, 0, {60, 552}, {25, 1, 125, 255} }},
-	{{ {11, 474, 271}, 0, {53, 651}, {17, 0, 126, 255} }},
-	{{ {3, 441, 269}, 0, {46, 689}, {188, 238, 106, 255} }},
-	{{ {3, 441, 269}, 0, {46, 689}, {188, 238, 106, 255} }},
-	{{ {25, 412, 270}, 0, {73, 720}, {14, 251, 126, 255} }},
-	{{ {11, 474, 271}, 0, {53, 651}, {17, 0, 126, 255} }},
-	{{ {29, 379, 265}, 0, {81, 756}, {210, 202, 105, 255} }},
-	{{ {58, 370, 263}, 0, {112, 763}, {16, 238, 125, 255} }},
-	{{ {74, 348, 255}, 0, {132, 786}, {249, 164, 88, 255} }},
-	{{ {89, 358, 257}, 0, {147, 774}, {31, 228, 120, 255} }},
-	{{ {125, 368, 250}, 0, {185, 760}, {12, 242, 126, 255} }},
-	{{ {129, 353, 243}, 0, {191, 776}, {57, 174, 79, 255} }},
-	{{ {170, 394, 235}, 0, {234, 729}, {98, 215, 70, 255} }},
-	{{ {157, 397, 242}, 0, {219, 726}, {29, 0, 124, 255} }},
-	{{ {185, 477, 234}, 0, {240, 635}, {18, 2, 126, 255} }},
-	{{ {197, 464, 227}, 0, {261, 648}, {100, 229, 73, 255} }},
-	{{ {196, 518, 230}, 0, {251, 589}, {64, 1, 110, 255} }},
-	{{ {202, 544, 224}, 0, {260, 558}, {107, 15, 67, 255} }},
-	{{ {171, 606, 234}, 0, {219, 494}, {48, 19, 116, 255} }},
-	{{ {171, 606, 234}, 0, {219, 494}, {48, 19, 116, 255} }},
-	{{ {202, 544, 224}, 0, {260, 558}, {107, 15, 67, 255} }},
-	{{ {187, 598, 226}, 0, {242, 498}, {95, 39, 74, 255} }},
-	{{ {157, 637, 231}, 0, {204, 459}, {70, 70, 79, 255} }},
-	{{ {125, 637, 243}, 0, {168, 464}, {32, 28, 120, 255} }},
-	{{ {111, 653, 240}, 0, {154, 442}, {27, 73, 100, 255} }},
-	{{ {63, 643, 250}, 0, {101, 458}, {239, 73, 103, 255} }},
-	{{ {62, 625, 256}, 0, {100, 478}, {10, 23, 125, 255} }},
-	{{ {21, 595, 261}, 0, {56, 513}, {199, 46, 104, 255} }},
-	{{ {25, 561, 267}, 0, {60, 552}, {25, 1, 125, 255} }},
-	{{ {54, 598, 258}, 0, {93, 509}, {40, 246, 120, 255} }},
-	{{ {45, 574, 256}, 0, {85, 536}, {73, 221, 98, 255} }},
-	{{ {31, 550, 260}, 0, {71, 563}, {78, 235, 98, 255} }},
-	{{ {22, 522, 263}, 0, {62, 595}, {112, 240, 58, 255} }},
-	{{ {11, 474, 271}, 0, {53, 651}, {17, 0, 126, 255} }},
-	{{ {17, 491, 264}, 0, {60, 630}, {105, 247, 71, 255} }},
-	{{ {18, 460, 265}, 0, {63, 665}, {101, 16, 76, 255} }},
-	{{ {17, 491, 264}, 0, {60, 630}, {105, 247, 71, 255} }},
-	{{ {11, 474, 271}, 0, {53, 651}, {17, 0, 126, 255} }},
-	{{ {24, 431, 265}, 0, {72, 698}, {105, 23, 68, 255} }},
-	{{ {25, 412, 270}, 0, {73, 720}, {14, 251, 126, 255} }},
-	{{ {34, 405, 263}, 0, {86, 726}, {86, 48, 80, 255} }},
-	{{ {49, 385, 260}, 0, {104, 747}, {86, 56, 75, 255} }},
-	{{ {58, 370, 263}, 0, {112, 763}, {16, 238, 125, 255} }},
-	{{ {67, 372, 257}, 0, {123, 760}, {45, 77, 91, 255} }},
-	{{ {87, 366, 253}, 0, {145, 764}, {26, 75, 99, 255} }},
-	{{ {89, 358, 257}, 0, {147, 774}, {31, 228, 120, 255} }},
-	{{ {108, 369, 248}, 0, {166, 759}, {0, 81, 98, 255} }},
-	{{ {125, 368, 250}, 0, {185, 760}, {12, 242, 126, 255} }},
-	{{ {127, 379, 244}, 0, {187, 747}, {221, 65, 103, 255} }},
-	{{ {144, 397, 240}, 0, {205, 727}, {230, 51, 113, 255} }},
-	{{ {157, 397, 242}, 0, {219, 726}, {29, 0, 124, 255} }},
-	{{ {144, 397, 240}, 0, {205, 727}, {230, 51, 113, 255} }},
-	{{ {157, 397, 242}, 0, {219, 726}, {29, 0, 124, 255} }},
-	{{ {158, 421, 236}, 0, {219, 700}, {205, 30, 112, 255} }},
-	{{ {185, 477, 234}, 0, {240, 635}, {18, 2, 126, 255} }},
-	{{ {168, 449, 233}, 0, {228, 668}, {203, 28, 112, 255} }},
-	{{ {174, 479, 231}, 0, {232, 633}, {227, 8, 123, 255} }},
-	{{ {175, 514, 230}, 0, {231, 595}, {189, 250, 108, 255} }},
-	{{ {171, 544, 230}, 0, {225, 561}, {164, 242, 87, 255} }},
-	{{ {169, 586, 234}, 0, {215, 518}, {9, 249, 126, 255} }},
-	{{ {196, 518, 230}, 0, {251, 589}, {64, 1, 110, 255} }},
-	{{ {171, 606, 234}, 0, {219, 494}, {48, 19, 116, 255} }},
-	{{ {105, 622, 247}, 0, {147, 483}, {30, 240, 122, 255} }},
-	{{ {125, 637, 243}, 0, {168, 464}, {32, 28, 120, 255} }},
-	{{ {62, 625, 256}, 0, {100, 478}, {10, 23, 125, 255} }},
-	{{ {54, 598, 258}, 0, {93, 509}, {40, 246, 120, 255} }},
-	{{ {82, 604, 247}, 0, {124, 500}, {50, 197, 101, 255} }},
-	{{ {63, 593, 252}, 0, {103, 513}, {56, 212, 105, 255} }},
-	{{ {82, 604, 247}, 0, {124, 500}, {50, 197, 101, 255} }},
-	{{ {54, 598, 258}, 0, {93, 509}, {40, 246, 120, 255} }},
-	{{ {45, 574, 256}, 0, {85, 536}, {73, 221, 98, 255} }},
-	{{ {102, 608, 243}, 0, {146, 495}, {25, 218, 119, 255} }},
-	{{ {105, 622, 247}, 0, {147, 483}, {30, 240, 122, 255} }},
-	{{ {125, 604, 238}, 0, {170, 498}, {242, 189, 107, 255} }},
-	{{ {169, 586, 234}, 0, {215, 518}, {9, 249, 126, 255} }},
-	{{ {145, 592, 234}, 0, {193, 510}, {243, 202, 114, 255} }},
-	{{ {162, 572, 231}, 0, {212, 531}, {241, 240, 125, 255} }},
-	{{ {171, 544, 230}, 0, {225, 561}, {164, 242, 87, 255} }},
-	{{ {-83, 345, 229}, 0, {788, 811}, {20, 145, 198, 255} }},
-	{{ {-110, 347, 223}, 0, {752, 805}, {240, 149, 189, 255} }},
-	{{ {-105, 357, 219}, 0, {758, 792}, {248, 175, 158, 255} }},
-	{{ {-134, 360, 218}, 0, {720, 788}, {210, 162, 184, 255} }},
-	{{ {-130, 369, 213}, 0, {726, 775}, {222, 188, 154, 255} }},
-	{{ {-134, 360, 218}, 0, {720, 788}, {210, 162, 184, 255} }},
-	{{ {-156, 379, 212}, 0, {690, 763}, {183, 181, 184, 255} }},
-	{{ {-130, 369, 213}, 0, {726, 775}, {222, 188, 154, 255} }},
-	{{ {-150, 388, 208}, 0, {699, 751}, {204, 202, 154, 255} }},
-	{{ {-175, 407, 208}, 0, {665, 725}, {169, 200, 182, 255} }},
-	{{ {-175, 430, 202}, 0, {667, 693}, {185, 225, 155, 255} }},
-	{{ {-190, 444, 204}, 0, {646, 674}, {161, 223, 178, 255} }},
-	{{ {-198, 485, 200}, 0, {640, 619}, {156, 240, 180, 255} }},
-	{{ {-188, 484, 197}, 0, {653, 620}, {187, 244, 150, 255} }},
-	{{ {-190, 523, 196}, 0, {657, 569}, {187, 10, 150, 255} }},
-	{{ {-200, 525, 199}, 0, {644, 565}, {159, 2, 174, 255} }},
-	{{ {-181, 571, 196}, 0, {682, 511}, {205, 32, 144, 255} }},
-	{{ {-196, 564, 199}, 0, {658, 515}, {169, 16, 165, 255} }},
-	{{ {-184, 600, 201}, 0, {682, 471}, {182, 46, 163, 255} }},
-	{{ {-152, 615, 200}, 0, {726, 459}, {227, 42, 140, 255} }},
-	{{ {-163, 629, 205}, 0, {716, 438}, {205, 67, 161, 255} }},
-	{{ {-163, 629, 205}, 0, {716, 438}, {205, 67, 161, 255} }},
-	{{ {-131, 631, 205}, 0, {758, 443}, {248, 48, 139, 255} }},
-	{{ {-152, 615, 200}, 0, {726, 459}, {227, 42, 140, 255} }},
-	{{ {-138, 648, 209}, 0, {753, 420}, {236, 85, 164, 255} }},
-	{{ {-91, 637, 212}, 0, {811, 442}, {20, 68, 151, 255} }},
-	{{ {-106, 656, 216}, 0, {795, 414}, {10, 93, 170, 255} }},
-	{{ {-74, 652, 223}, 0, {837, 423}, {47, 90, 179, 255} }},
-	{{ {-55, 623, 221}, 0, {858, 461}, {59, 68, 166, 255} }},
-	{{ {-46, 636, 229}, 0, {874, 444}, {72, 72, 180, 255} }},
-	{{ {-35, 602, 226}, 0, {887, 489}, {77, 54, 170, 255} }},
-	{{ {-23, 611, 235}, 0, {904, 477}, {97, 50, 191, 255} }},
-	{{ {-7, 577, 239}, 0, {926, 522}, {113, 37, 211, 255} }},
-	{{ {-16, 571, 231}, 0, {911, 530}, {94, 42, 182, 255} }},
-	{{ {3, 539, 242}, 0, {939, 573}, {120, 22, 219, 255} }},
-	{{ {1, 518, 237}, 0, {928, 601}, {112, 19, 199, 255} }},
-	{{ {8, 499, 245}, 0, {942, 628}, {124, 3, 229, 255} }},
-	{{ {1, 518, 237}, 0, {928, 601}, {112, 19, 199, 255} }},
-	{{ {8, 499, 245}, 0, {942, 628}, {124, 3, 229, 255} }},
-	{{ {0, 461, 238}, 0, {922, 677}, {113, 251, 198, 255} }},
-	{{ {7, 458, 246}, 0, {934, 682}, {123, 241, 228, 255} }},
-	{{ {-13, 410, 236}, 0, {891, 739}, {104, 221, 191, 255} }},
-	{{ {-1, 420, 245}, 0, {915, 731}, {118, 225, 221, 255} }},
-	{{ {-14, 389, 243}, 0, {889, 768}, {104, 194, 217, 255} }},
-	{{ {-36, 378, 232}, 0, {855, 776}, {87, 198, 183, 255} }},
-	{{ {-34, 366, 239}, 0, {857, 793}, {84, 171, 211, 255} }},
-	{{ {-57, 362, 229}, 0, {823, 793}, {62, 178, 177, 255} }},
-	{{ {-57, 352, 234}, 0, {823, 807}, {54, 153, 205, 255} }},
-	{{ {-82, 354, 224}, 0, {789, 798}, {22, 173, 162, 255} }},
-	{{ {-83, 345, 229}, 0, {788, 811}, {20, 145, 198, 255} }},
-	{{ {-105, 357, 219}, 0, {758, 792}, {248, 175, 158, 255} }},
-	{{ {-77, 365, 203}, 0, {791, 769}, {25, 160, 176, 255} }},
-	{{ {-112, 371, 196}, 0, {751, 759}, {233, 169, 166, 255} }},
-	{{ {-105, 357, 219}, 0, {758, 792}, {248, 175, 158, 255} }},
-	{{ {-130, 369, 213}, 0, {726, 775}, {222, 188, 154, 255} }},
-	{{ {-112, 371, 196}, 0, {751, 759}, {233, 169, 166, 255} }},
-	{{ {-150, 388, 208}, 0, {699, 751}, {204, 202, 154, 255} }},
-	{{ {-141, 394, 190}, 0, {716, 732}, {200, 191, 162, 255} }},
-	{{ {-175, 430, 202}, 0, {667, 693}, {185, 225, 155, 255} }},
-	{{ {-165, 436, 184}, 0, {688, 680}, {178, 223, 161, 255} }},
-	{{ {-177, 500, 181}, 0, {678, 601}, {176, 251, 157, 255} }},
-	{{ {-188, 484, 197}, 0, {653, 620}, {187, 244, 150, 255} }},
-	{{ {-190, 523, 196}, 0, {657, 569}, {187, 10, 150, 255} }},
-	{{ {-166, 568, 182}, 0, {705, 522}, {193, 33, 151, 255} }},
-	{{ {-181, 571, 196}, 0, {682, 511}, {205, 32, 144, 255} }},
-	{{ {-142, 603, 184}, 0, {739, 484}, {215, 61, 153, 255} }},
-	{{ {-152, 615, 200}, 0, {726, 459}, {227, 42, 140, 255} }},
-	{{ {-108, 622, 192}, 0, {784, 469}, {1, 83, 160, 255} }},
-	{{ {-131, 631, 205}, 0, {758, 443}, {248, 48, 139, 255} }},
-	{{ {-91, 637, 212}, 0, {811, 442}, {20, 68, 151, 255} }},
-	{{ {-108, 622, 192}, 0, {784, 469}, {1, 83, 160, 255} }},
-	{{ {-131, 631, 205}, 0, {758, 443}, {248, 48, 139, 255} }},
-	{{ {-78, 619, 197}, 0, {819, 473}, {42, 80, 166, 255} }},
-	{{ {-55, 623, 221}, 0, {858, 461}, {59, 68, 166, 255} }},
-	{{ {-49, 604, 202}, 0, {852, 493}, {77, 67, 180, 255} }},
-	{{ {-35, 602, 226}, 0, {887, 489}, {77, 54, 170, 255} }},
-	{{ {-22, 565, 206}, 0, {881, 543}, {96, 45, 186, 255} }},
-	{{ {-16, 571, 231}, 0, {911, 530}, {94, 42, 182, 255} }},
-	{{ {-6, 524, 214}, 0, {900, 594}, {114, 19, 203, 255} }},
-	{{ {1, 518, 237}, 0, {928, 601}, {112, 19, 199, 255} }},
-	{{ {-4, 454, 215}, 0, {892, 678}, {115, 239, 204, 255} }},
-	{{ {0, 461, 238}, 0, {922, 677}, {113, 251, 198, 255} }},
-	{{ {-13, 410, 236}, 0, {891, 739}, {104, 221, 191, 255} }},
-	{{ {-20, 407, 213}, 0, {865, 730}, {101, 204, 198, 255} }},
-	{{ {-44, 378, 209}, 0, {830, 757}, {72, 176, 188, 255} }},
-	{{ {-13, 410, 236}, 0, {891, 739}, {104, 221, 191, 255} }},
-	{{ {-36, 378, 232}, 0, {855, 776}, {87, 198, 183, 255} }},
-	{{ {-44, 378, 209}, 0, {830, 757}, {72, 176, 188, 255} }},
-	{{ {-57, 362, 229}, 0, {823, 793}, {62, 178, 177, 255} }},
-	{{ {-77, 365, 203}, 0, {791, 769}, {25, 160, 176, 255} }},
-	{{ {-82, 354, 224}, 0, {789, 798}, {22, 173, 162, 255} }},
-	{{ {-75, 400, 181}, 0, {792, 723}, {25, 199, 145, 255} }},
-	{{ {-112, 371, 196}, 0, {751, 759}, {233, 169, 166, 255} }},
-	{{ {-108, 411, 173}, 0, {756, 708}, {245, 208, 139, 255} }},
-	{{ {-141, 394, 190}, 0, {716, 732}, {200, 191, 162, 255} }},
-	{{ {-136, 444, 170}, 0, {724, 670}, {220, 230, 137, 255} }},
-	{{ {-165, 436, 184}, 0, {688, 680}, {178, 223, 161, 255} }},
-	{{ {-150, 507, 167}, 0, {716, 596}, {212, 1, 137, 255} }},
-	{{ {-177, 500, 181}, 0, {678, 601}, {176, 251, 157, 255} }},
-	{{ {-166, 568, 182}, 0, {705, 522}, {193, 33, 151, 255} }},
-	{{ {-127, 576, 170}, 0, {751, 521}, {239, 33, 134, 255} }},
-	{{ {-142, 603, 184}, 0, {739, 484}, {215, 61, 153, 255} }},
-	{{ {-127, 576, 170}, 0, {751, 521}, {239, 33, 134, 255} }},
-	{{ {-166, 568, 182}, 0, {705, 522}, {193, 33, 151, 255} }},
-	{{ {-108, 622, 192}, 0, {784, 469}, {1, 83, 160, 255} }},
-	{{ {-94, 591, 175}, 0, {791, 508}, {17, 49, 140, 255} }},
-	{{ {-78, 619, 197}, 0, {819, 473}, {42, 80, 166, 255} }},
-	{{ {-61, 581, 183}, 0, {829, 523}, {56, 43, 150, 255} }},
-	{{ {-49, 604, 202}, 0, {852, 493}, {77, 67, 180, 255} }},
-	{{ {-22, 565, 206}, 0, {881, 543}, {96, 45, 186, 255} }},
-	{{ {-71, 543, 165}, 0, {807, 567}, {39, 26, 138, 255} }},
-	{{ {-35, 499, 178}, 0, {846, 616}, {76, 7, 154, 255} }},
-	{{ {-6, 524, 214}, 0, {900, 594}, {114, 19, 203, 255} }},
-	{{ {-4, 454, 215}, 0, {892, 678}, {115, 239, 204, 255} }},
-	{{ {-42, 454, 175}, 0, {834, 662}, {67, 238, 149, 255} }},
-	{{ {-20, 407, 213}, 0, {865, 730}, {101, 204, 198, 255} }},
-	{{ {-47, 417, 183}, 0, {824, 706}, {61, 215, 152, 255} }},
-	{{ {-44, 378, 209}, 0, {830, 757}, {72, 176, 188, 255} }},
-	{{ {-47, 417, 183}, 0, {824, 706}, {61, 215, 152, 255} }},
-	{{ {-20, 407, 213}, 0, {865, 730}, {101, 204, 198, 255} }},
-	{{ {-75, 400, 181}, 0, {792, 723}, {25, 199, 145, 255} }},
-	{{ {-91, 449, 161}, 0, {777, 664}, {8, 230, 132, 255} }},
-	{{ {-108, 411, 173}, 0, {756, 708}, {245, 208, 139, 255} }},
-	{{ {-136, 444, 170}, 0, {724, 670}, {220, 230, 137, 255} }},
-	{{ {-112, 507, 157}, 0, {756, 600}, {242, 4, 130, 255} }},
-	{{ {-150, 507, 167}, 0, {716, 596}, {212, 1, 137, 255} }},
-	{{ {-127, 576, 170}, 0, {751, 521}, {239, 33, 134, 255} }},
-	{{ {-71, 543, 165}, 0, {807, 567}, {39, 26, 138, 255} }},
-	{{ {-94, 591, 175}, 0, {791, 508}, {17, 49, 140, 255} }},
-	{{ {-61, 581, 183}, 0, {829, 523}, {56, 43, 150, 255} }},
-	{{ {-80, 497, 158}, 0, {792, 615}, {27, 1, 132, 255} }},
-	{{ {-35, 499, 178}, 0, {846, 616}, {76, 7, 154, 255} }},
-	{{ {-42, 454, 175}, 0, {834, 662}, {67, 238, 149, 255} }},
-	{{ {7, 458, 246}, 0, {11, 675}, {123, 237, 229, 255} }},
-	{{ {7, 516, 244}, 0, {6, 602}, {125, 16, 244, 255} }},
-	{{ {9, 476, 260}, 0, {25, 651}, {120, 254, 43, 255} }},
-	{{ {-4, 570, 254}, 0, {32, 539}, {116, 37, 36, 255} }},
-	{{ {-7, 577, 239}, 0, {18, 523}, {110, 40, 206, 255} }},
-	{{ {-23, 611, 235}, 0, {39, 478}, {97, 48, 190, 255} }},
-	{{ {-25, 614, 249}, 0, {54, 485}, {94, 73, 46, 255} }},
-	{{ {-48, 640, 243}, 0, {81, 453}, {70, 99, 38, 255} }},
-	{{ {-46, 636, 229}, 0, {70, 442}, {71, 71, 178, 255} }},
-	{{ {-74, 652, 223}, 0, {109, 419}, {46, 89, 178, 255} }},
-	{{ {-77, 655, 237}, 0, {115, 434}, {24, 124, 17, 255} }},
-	{{ {-106, 656, 216}, 0, {154, 411}, {12, 93, 170, 255} }},
-	{{ {-109, 660, 229}, 0, {154, 428}, {244, 126, 4, 255} }},
-	{{ {-138, 648, 209}, 0, {199, 420}, {236, 85, 163, 255} }},
-	{{ {-142, 651, 223}, 0, {193, 436}, {204, 116, 7, 255} }},
-	{{ {-163, 629, 205}, 0, {236, 443}, {206, 66, 160, 255} }},
-	{{ {-163, 629, 205}, 0, {236, 443}, {206, 66, 160, 255} }},
-	{{ {-168, 632, 218}, 0, {225, 456}, {162, 86, 254, 255} }},
-	{{ {-142, 651, 223}, 0, {193, 436}, {204, 116, 7, 255} }},
-	{{ {-189, 603, 214}, 0, {252, 488}, {144, 60, 247, 255} }},
-	{{ {-184, 600, 201}, 0, {267, 481}, {183, 43, 161, 255} }},
-	{{ {-201, 566, 212}, 0, {269, 530}, {133, 28, 246, 255} }},
-	{{ {-196, 564, 199}, 0, {286, 527}, {167, 20, 167, 255} }},
-	{{ {-206, 511, 213}, 0, {278, 594}, {130, 249, 245, 255} }},
-	{{ {-200, 525, 199}, 0, {295, 576}, {159, 5, 174, 255} }},
-	{{ {-192, 450, 203}, 0, {288, 670}, {157, 226, 182, 255} }},
-	{{ {-195, 445, 217}, 0, {271, 672}, {135, 216, 253, 255} }},
-	{{ {-175, 407, 208}, 0, {271, 725}, {162, 203, 189, 255} }},
-	{{ {-167, 384, 224}, 0, {241, 744}, {155, 179, 250, 255} }},
-	{{ {-156, 379, 212}, 0, {249, 764}, {189, 175, 184, 255} }},
-	{{ {-134, 360, 218}, 0, {220, 792}, {210, 164, 181, 255} }},
-	{{ {-138, 356, 231}, 0, {210, 780}, {180, 154, 254, 255} }},
-	{{ {-110, 347, 223}, 0, {186, 811}, {241, 151, 186, 255} }},
-	{{ {-138, 356, 231}, 0, {210, 780}, {180, 154, 254, 255} }},
-	{{ {-134, 360, 218}, 0, {220, 792}, {210, 164, 181, 255} }},
-	{{ {-112, 345, 237}, 0, {179, 796}, {226, 133, 11, 255} }},
-	{{ {-83, 345, 229}, 0, {148, 817}, {21, 147, 195, 255} }},
-	{{ {-86, 342, 243}, 0, {148, 800}, {2, 130, 16, 255} }},
-	{{ {-57, 352, 234}, 0, {110, 811}, {51, 151, 206, 255} }},
-	{{ {-47, 354, 250}, 0, {102, 788}, {57, 150, 40, 255} }},
-	{{ {-34, 366, 239}, 0, {75, 792}, {87, 173, 214, 255} }},
-	{{ {-15, 387, 257}, 0, {60, 754}, {102, 191, 40, 255} }},
-	{{ {-14, 389, 243}, 0, {46, 763}, {104, 196, 214, 255} }},
-	{{ {-1, 419, 259}, 0, {40, 717}, {112, 216, 45, 255} }},
-	{{ {-1, 420, 245}, 0, {24, 723}, {118, 222, 222, 255} }},
-	{{ {9, 476, 260}, 0, {25, 651}, {120, 254, 43, 255} }},
-	{{ {7, 458, 246}, 0, {11, 675}, {123, 237, 229, 255} }},
-	{{ {-3, 441, 269}, 0, {46, 689}, {69, 241, 106, 255} }},
-	{{ {9, 476, 260}, 0, {25, 651}, {120, 254, 43, 255} }},
-	{{ {-1, 518, 268}, 0, {37, 602}, {81, 13, 97, 255} }},
-	{{ {-3, 441, 269}, 0, {46, 689}, {69, 241, 106, 255} }},
-	{{ {-4, 570, 254}, 0, {32, 539}, {116, 37, 36, 255} }},
-	{{ {-21, 595, 261}, 0, {56, 513}, {57, 45, 104, 255} }},
-	{{ {-25, 614, 249}, 0, {54, 485}, {94, 73, 46, 255} }},
-	{{ {-63, 643, 250}, 0, {101, 458}, {22, 72, 103, 255} }},
-	{{ {-48, 640, 243}, 0, {81, 453}, {70, 99, 38, 255} }},
-	{{ {-77, 655, 237}, 0, {115, 434}, {24, 124, 17, 255} }},
-	{{ {-111, 653, 240}, 0, {154, 442}, {224, 78, 95, 255} }},
-	{{ {-109, 660, 229}, 0, {154, 428}, {244, 126, 4, 255} }},
-	{{ {-142, 651, 223}, 0, {193, 436}, {204, 116, 7, 255} }},
-	{{ {-157, 637, 231}, 0, {204, 459}, {188, 71, 81, 255} }},
-	{{ {-168, 632, 218}, 0, {225, 456}, {162, 86, 254, 255} }},
-	{{ {-189, 603, 214}, 0, {252, 488}, {144, 60, 247, 255} }},
-	{{ {-187, 598, 226}, 0, {242, 498}, {161, 39, 75, 255} }},
-	{{ {-201, 566, 212}, 0, {269, 530}, {133, 28, 246, 255} }},
-	{{ {-187, 598, 226}, 0, {242, 498}, {161, 39, 75, 255} }},
-	{{ {-189, 603, 214}, 0, {252, 488}, {144, 60, 247, 255} }},
-	{{ {-202, 544, 224}, 0, {260, 558}, {148, 13, 66, 255} }},
-	{{ {-206, 511, 213}, 0, {278, 594}, {130, 249, 245, 255} }},
-	{{ {-197, 464, 227}, 0, {261, 648}, {146, 238, 62, 255} }},
-	{{ {-195, 445, 217}, 0, {271, 672}, {135, 216, 253, 255} }},
-	{{ {-170, 394, 235}, 0, {234, 729}, {158, 214, 69, 255} }},
-	{{ {-167, 384, 224}, 0, {241, 744}, {155, 179, 250, 255} }},
-	{{ {-129, 353, 243}, 0, {191, 776}, {195, 174, 76, 255} }},
-	{{ {-138, 356, 231}, 0, {210, 780}, {180, 154, 254, 255} }},
-	{{ {-112, 345, 237}, 0, {179, 796}, {226, 133, 11, 255} }},
-	{{ {-74, 348, 255}, 0, {132, 786}, {10, 164, 86, 255} }},
-	{{ {-86, 342, 243}, 0, {148, 800}, {2, 130, 16, 255} }},
-	{{ {-47, 354, 250}, 0, {102, 788}, {57, 150, 40, 255} }},
-	{{ {-29, 379, 265}, 0, {81, 756}, {50, 200, 103, 255} }},
-	{{ {-15, 387, 257}, 0, {60, 754}, {102, 191, 40, 255} }},
-	{{ {-29, 379, 265}, 0, {81, 756}, {50, 200, 103, 255} }},
-	{{ {-47, 354, 250}, 0, {102, 788}, {57, 150, 40, 255} }},
-	{{ {-1, 419, 259}, 0, {40, 717}, {112, 216, 45, 255} }},
-	{{ {-3, 441, 269}, 0, {46, 689}, {69, 241, 106, 255} }},
-	{{ {-25, 412, 270}, 0, {73, 720}, {243, 253, 126, 255} }},
-	{{ {-11, 474, 271}, 0, {53, 651}, {239, 2, 126, 255} }},
-	{{ {-1, 518, 268}, 0, {37, 602}, {81, 13, 97, 255} }},
-	{{ {-25, 561, 267}, 0, {60, 552}, {228, 0, 124, 255} }},
-	{{ {-21, 595, 261}, 0, {56, 513}, {57, 45, 104, 255} }},
-	{{ {-62, 625, 256}, 0, {100, 478}, {246, 23, 125, 255} }},
-	{{ {-63, 643, 250}, 0, {101, 458}, {22, 72, 103, 255} }},
-	{{ {-125, 637, 243}, 0, {168, 464}, {224, 27, 120, 255} }},
-	{{ {-111, 653, 240}, 0, {154, 442}, {224, 78, 95, 255} }},
-	{{ {-157, 637, 231}, 0, {204, 459}, {188, 71, 81, 255} }},
-	{{ {-171, 606, 234}, 0, {219, 494}, {206, 19, 115, 255} }},
-	{{ {-157, 637, 231}, 0, {204, 459}, {188, 71, 81, 255} }},
-	{{ {-187, 598, 226}, 0, {242, 498}, {161, 39, 75, 255} }},
-	{{ {-171, 606, 234}, 0, {219, 494}, {206, 19, 115, 255} }},
-	{{ {-202, 544, 224}, 0, {260, 558}, {148, 13, 66, 255} }},
-	{{ {-196, 518, 230}, 0, {251, 589}, {192, 0, 110, 255} }},
-	{{ {-197, 464, 227}, 0, {261, 648}, {146, 238, 62, 255} }},
-	{{ {-185, 477, 234}, 0, {240, 635}, {238, 2, 126, 255} }},
-	{{ {-170, 394, 235}, 0, {234, 729}, {158, 214, 69, 255} }},
-	{{ {-157, 397, 242}, 0, {219, 726}, {226, 11, 123, 255} }},
-	{{ {-125, 368, 250}, 0, {185, 760}, {228, 26, 121, 255} }},
-	{{ {-129, 353, 243}, 0, {191, 776}, {195, 174, 76, 255} }},
-	{{ {-74, 348, 255}, 0, {132, 786}, {10, 164, 86, 255} }},
-	{{ {-89, 358, 257}, 0, {147, 774}, {226, 229, 120, 255} }},
-	{{ {-58, 370, 263}, 0, {112, 763}, {242, 239, 125, 255} }},
-	{{ {-29, 379, 265}, 0, {81, 756}, {50, 200, 103, 255} }},
-	{{ {-25, 412, 270}, 0, {73, 720}, {243, 253, 126, 255} }},
-	{{ {-25, 412, 270}, 0, {73, 720}, {243, 253, 126, 255} }},
-	{{ {-49, 385, 260}, 0, {104, 747}, {170, 56, 75, 255} }},
-	{{ {-58, 370, 263}, 0, {112, 763}, {242, 239, 125, 255} }},
-	{{ {-34, 405, 263}, 0, {86, 726}, {170, 48, 80, 255} }},
-	{{ {-24, 431, 265}, 0, {72, 698}, {151, 23, 68, 255} }},
-	{{ {-11, 474, 271}, 0, {53, 651}, {239, 2, 126, 255} }},
-	{{ {-18, 460, 265}, 0, {63, 665}, {155, 16, 76, 255} }},
-	{{ {-17, 491, 264}, 0, {60, 630}, {151, 247, 71, 255} }},
-	{{ {-22, 522, 263}, 0, {62, 595}, {144, 240, 58, 255} }},
-	{{ {-25, 561, 267}, 0, {60, 552}, {228, 0, 124, 255} }},
-	{{ {-31, 550, 260}, 0, {71, 563}, {178, 235, 98, 255} }},
-	{{ {-45, 574, 256}, 0, {85, 536}, {183, 221, 98, 255} }},
-	{{ {-54, 598, 258}, 0, {93, 509}, {212, 247, 119, 255} }},
-	{{ {-62, 625, 256}, 0, {100, 478}, {246, 23, 125, 255} }},
-	{{ {-105, 622, 247}, 0, {147, 483}, {228, 243, 123, 255} }},
-	{{ {-125, 637, 243}, 0, {168, 464}, {224, 27, 120, 255} }},
-	{{ {-105, 622, 247}, 0, {147, 483}, {228, 243, 123, 255} }},
-	{{ {-125, 637, 243}, 0, {168, 464}, {224, 27, 120, 255} }},
-	{{ {-171, 606, 234}, 0, {219, 494}, {206, 19, 115, 255} }},
-	{{ {-169, 586, 234}, 0, {215, 518}, {246, 248, 126, 255} }},
-	{{ {-196, 518, 230}, 0, {251, 589}, {192, 0, 110, 255} }},
-	{{ {-185, 477, 234}, 0, {240, 635}, {238, 2, 126, 255} }},
-	{{ {-171, 544, 230}, 0, {225, 561}, {92, 242, 87, 255} }},
-	{{ {-175, 514, 230}, 0, {231, 595}, {67, 250, 108, 255} }},
-	{{ {-174, 479, 231}, 0, {232, 633}, {29, 8, 123, 255} }},
-	{{ {-168, 449, 233}, 0, {228, 668}, {53, 28, 112, 255} }},
-	{{ {-158, 421, 236}, 0, {219, 700}, {51, 30, 112, 255} }},
-	{{ {-157, 397, 242}, 0, {219, 726}, {226, 11, 123, 255} }},
-	{{ {-144, 397, 240}, 0, {205, 727}, {26, 51, 113, 255} }},
-	{{ {-125, 368, 250}, 0, {185, 760}, {228, 26, 121, 255} }},
-	{{ {-127, 379, 244}, 0, {187, 747}, {35, 65, 103, 255} }},
-	{{ {-108, 369, 248}, 0, {166, 759}, {0, 81, 98, 255} }},
-	{{ {-89, 358, 257}, 0, {147, 774}, {226, 229, 120, 255} }},
-	{{ {-108, 369, 248}, 0, {166, 759}, {0, 81, 98, 255} }},
-	{{ {-125, 368, 250}, 0, {185, 760}, {228, 26, 121, 255} }},
-	{{ {-87, 366, 253}, 0, {145, 764}, {230, 75, 99, 255} }},
-	{{ {-58, 370, 263}, 0, {112, 763}, {242, 239, 125, 255} }},
-	{{ {-67, 372, 257}, 0, {123, 760}, {211, 77, 91, 255} }},
-	{{ {-49, 385, 260}, 0, {104, 747}, {170, 56, 75, 255} }},
-	{{ {-162, 572, 231}, 0, {212, 531}, {15, 240, 125, 255} }},
-	{{ {-169, 586, 234}, 0, {215, 518}, {246, 248, 126, 255} }},
-	{{ {-171, 544, 230}, 0, {225, 561}, {92, 242, 87, 255} }},
-	{{ {-145, 592, 234}, 0, {193, 510}, {13, 202, 114, 255} }},
-	{{ {-125, 604, 238}, 0, {170, 498}, {14, 189, 107, 255} }},
-	{{ {-105, 622, 247}, 0, {147, 483}, {228, 243, 123, 255} }},
-	{{ {-102, 608, 243}, 0, {146, 495}, {231, 218, 119, 255} }},
-	{{ {-82, 604, 247}, 0, {124, 500}, {206, 197, 101, 255} }},
-	{{ {-54, 598, 258}, 0, {93, 509}, {212, 247, 119, 255} }},
-	{{ {-63, 593, 252}, 0, {103, 513}, {200, 212, 105, 255} }},
-	{{ {-54, 598, 258}, 0, {93, 509}, {212, 247, 119, 255} }},
-	{{ {-82, 604, 247}, 0, {124, 500}, {206, 197, 101, 255} }},
-	{{ {-45, 574, 256}, 0, {85, 536}, {183, 221, 98, 255} }},
-};
-
-Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_2[] = {
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(12, 9, 11, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(4, 5, 1, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(9, 8, 6, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(3, 7, 6, 0),
-	gsSP1Triangle(8, 7, 3, 0),
-	gsSP1Triangle(8, 3, 9, 0),
-	gsSP1Triangle(9, 3, 1, 0),
-	gsSP1Triangle(10, 9, 1, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 5, 0, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 80, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(10, 12, 9, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 96, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(5, 0, 3, 0),
-	gsSP1Triangle(5, 6, 0, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 112, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(3, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(10, 6, 9, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(13, 11, 14, 0),
-	gsSP1Triangle(15, 12, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 128, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(5, 4, 1, 0),
-	gsSP1Triangle(6, 5, 1, 0),
-	gsSP1Triangle(3, 4, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 11, 9, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 144, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(10, 12, 13, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 160, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 176, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 5, 7, 0),
-	gsSP1Triangle(8, 9, 5, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 192, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 208, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(10, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(15, 14, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 224, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 240, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 11, 9, 0),
-	gsSP1Triangle(13, 12, 9, 0),
-	gsSP1Triangle(14, 13, 9, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 256, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(9, 7, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 272, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(7, 6, 3, 0),
-	gsSP1Triangle(8, 7, 3, 0),
-	gsSP1Triangle(8, 3, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(14, 15, 11, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 288, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(1, 4, 5, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 304, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 8, 5, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 320, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(12, 9, 11, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 336, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(11, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 352, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 7, 5, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 368, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(13, 14, 11, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 384, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(4, 6, 2, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 400, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(12, 13, 10, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 416, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(10, 13, 7, 0),
-	gsSP1Triangle(10, 14, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSP1Triangle(15, 4, 13, 0),
-	gsSP1Triangle(1, 4, 15, 0),
-	gsSP1Triangle(13, 4, 7, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 432, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(5, 6, 3, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 448, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 464, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(13, 15, 11, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 480, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 496, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 512, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(1, 4, 5, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 528, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(14, 13, 11, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 544, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(5, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(9, 13, 12, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 560, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 7, 5, 0),
-	gsSP1Triangle(9, 8, 5, 0),
-	gsSP1Triangle(10, 9, 5, 0),
-	gsSP1Triangle(10, 5, 11, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 576, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 8, 7, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(11, 12, 8, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_2 + 592, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_3[44] = {
-	{{ {169, 449, 235}, 0, {1062, 574}, {82, 242, 96, 255} }},
-	{{ {146, 396, 242}, 0, {934, 822}, {63, 9, 110, 255} }},
-	{{ {160, 420, 237}, 0, {1010, 710}, {79, 236, 97, 255} }},
-	{{ {176, 478, 233}, 0, {1090, 427}, {45, 20, 117, 255} }},
-	{{ {133, 469, 259}, 0, {840, 474}, {58, 248, 113, 255} }},
-	{{ {176, 511, 232}, 0, {1095, 274}, {38, 27, 118, 255} }},
-	{{ {135, 536, 253}, 0, {856, 159}, {56, 17, 113, 255} }},
-	{{ {172, 545, 231}, 0, {1072, 111}, {28, 29, 120, 255} }},
-	{{ {162, 572, 233}, 0, {1017, -19}, {20, 27, 123, 255} }},
-	{{ {146, 592, 236}, 0, {932, -116}, {10, 47, 118, 255} }},
-	{{ {105, 577, 255}, 0, {717, -30}, {39, 44, 113, 255} }},
-	{{ {125, 605, 240}, 0, {824, -175}, {51, 67, 95, 255} }},
-	{{ {103, 609, 245}, 0, {706, -194}, {30, 72, 101, 255} }},
-	{{ {82, 605, 250}, 0, {599, -174}, {249, 14, 126, 255} }},
-	{{ {72, 527, 270}, 0, {539, 204}, {254, 20, 125, 255} }},
-	{{ {45, 575, 259}, 0, {404, -34}, {246, 0, 127, 255} }},
-	{{ {63, 593, 254}, 0, {496, -123}, {240, 54, 114, 255} }},
-	{{ {45, 575, 259}, 0, {404, -34}, {246, 0, 127, 255} }},
-	{{ {82, 605, 250}, 0, {599, -174}, {249, 14, 126, 255} }},
-	{{ {72, 527, 270}, 0, {539, 204}, {254, 20, 125, 255} }},
-	{{ {21, 523, 265}, 0, {276, 216}, {2, 248, 127, 255} }},
-	{{ {31, 551, 261}, 0, {328, 80}, {214, 34, 115, 255} }},
-	{{ {50, 470, 273}, 0, {426, 468}, {241, 1, 126, 255} }},
-	{{ {83, 452, 271}, 0, {603, 539}, {13, 0, 126, 255} }},
-	{{ {73, 392, 266}, 0, {558, 822}, {30, 230, 121, 255} }},
-	{{ {34, 405, 266}, 0, {349, 780}, {15, 221, 121, 255} }},
-	{{ {17, 461, 268}, 0, {256, 515}, {249, 225, 123, 255} }},
-	{{ {17, 491, 266}, 0, {251, 365}, {193, 8, 110, 255} }},
-	{{ {23, 431, 266}, 0, {289, 658}, {197, 234, 110, 255} }},
-	{{ {49, 385, 262}, 0, {430, 879}, {227, 203, 112, 255} }},
-	{{ {67, 371, 258}, 0, {526, 942}, {247, 191, 109, 255} }},
-	{{ {88, 365, 254}, 0, {630, 969}, {20, 193, 109, 255} }},
-	{{ {108, 368, 250}, 0, {738, 958}, {40, 194, 103, 255} }},
-	{{ {73, 392, 266}, 0, {558, 822}, {30, 230, 121, 255} }},
-	{{ {88, 365, 254}, 0, {630, 969}, {20, 193, 109, 255} }},
-	{{ {119, 396, 256}, 0, {777, 816}, {39, 214, 113, 255} }},
-	{{ {128, 378, 245}, 0, {842, 908}, {63, 196, 93, 255} }},
-	{{ {146, 396, 242}, 0, {934, 822}, {63, 9, 110, 255} }},
-	{{ {133, 469, 259}, 0, {840, 474}, {58, 248, 113, 255} }},
-	{{ {83, 452, 271}, 0, {603, 539}, {13, 0, 126, 255} }},
-	{{ {105, 508, 266}, 0, {694, 296}, {29, 13, 123, 255} }},
-	{{ {135, 536, 253}, 0, {856, 159}, {56, 17, 113, 255} }},
-	{{ {105, 577, 255}, 0, {717, -30}, {39, 44, 113, 255} }},
-	{{ {72, 527, 270}, 0, {539, 204}, {254, 20, 125, 255} }},
-};
-
-Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_3[] = {
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_3 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(6, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(12, 13, 10, 0),
-	gsSP1Triangle(10, 13, 14, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_3 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(4, 1, 5, 0),
-	gsSP1Triangle(6, 3, 4, 0),
-	gsSP1Triangle(3, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(8, 6, 9, 0),
-	gsSP1Triangle(6, 10, 9, 0),
-	gsSP1Triangle(6, 4, 10, 0),
-	gsSP1Triangle(10, 4, 11, 0),
-	gsSP1Triangle(9, 10, 12, 0),
-	gsSP1Triangle(13, 8, 9, 0),
-	gsSP1Triangle(14, 8, 13, 0),
-	gsSP1Triangle(8, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_3 + 32, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(6, 7, 3, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(9, 8, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(8, 11, 7, 0),
-	gsSP1Triangle(3, 7, 1, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4[200] = {
-	{{ {-60, 751, 268}, 0, {528, 1534}, {226, 137, 33, 255} }},
-	{{ {-67, 756, 221}, 0, {516, 1462}, {176, 161, 28, 255} }},
-	{{ {-35, 746, 230}, 0, {499, 1499}, {247, 143, 58, 255} }},
-	{{ {-98, 768, 251}, 0, {540, 1481}, {164, 169, 249, 255} }},
-	{{ {-74, 775, 305}, 0, {564, 1569}, {207, 178, 88, 255} }},
-	{{ {-114, 798, 283}, 0, {565, 1494}, {151, 203, 48, 255} }},
-	{{ {-77, 816, 330}, 0, {594, 1543}, {205, 211, 107, 255} }},
-	{{ {-30, 812, 334}, 0, {612, 1587}, {23, 209, 116, 255} }},
-	{{ {-28, 772, 310}, 0, {595, 1635}, {30, 174, 93, 255} }},
-	{{ {10, 793, 296}, 0, {631, 1646}, {89, 198, 70, 255} }},
-	{{ {-17, 754, 271}, 0, {609, 1698}, {47, 148, 47, 255} }},
-	{{ {-60, 751, 268}, 0, {582, 1714}, {226, 137, 33, 255} }},
-	{{ {-74, 775, 305}, 0, {564, 1659}, {207, 178, 88, 255} }},
-	{{ {-35, 746, 230}, 0, {605, 1758}, {247, 143, 58, 255} }},
-	{{ {3, 755, 231}, 0, {631, 1743}, {60, 193, 93, 255} }},
-	{{ {15, 775, 260}, 0, {638, 1695}, {95, 182, 41, 255} }},
-	{{ {15, 775, 260}, 0, {638, 1695}, {95, 182, 41, 255} }},
-	{{ {3, 755, 231}, 0, {631, 1743}, {60, 193, 93, 255} }},
-	{{ {19, 783, 223}, 0, {655, 1733}, {64, 190, 88, 255} }},
-	{{ {22, 799, 255}, 0, {654, 1682}, {119, 228, 33, 255} }},
-	{{ {20, 825, 268}, 0, {663, 1645}, {121, 250, 38, 255} }},
-	{{ {10, 793, 296}, 0, {631, 1646}, {89, 198, 70, 255} }},
-	{{ {18, 853, 272}, 0, {677, 1613}, {123, 4, 33, 255} }},
-	{{ {7, 827, 314}, 0, {641, 1604}, {93, 234, 84, 255} }},
-	{{ {5, 881, 312}, 0, {665, 1550}, {102, 23, 72, 255} }},
-	{{ {15, 881, 274}, 0, {688, 1575}, {123, 32, 250, 255} }},
-	{{ {15, 868, 263}, 0, {688, 1600}, {100, 54, 200, 255} }},
-	{{ {8, 906, 274}, 0, {694, 1536}, {119, 38, 231, 255} }},
-	{{ {-6, 931, 289}, 0, {687, 1485}, {104, 62, 39, 255} }},
-	{{ {-18, 935, 304}, 0, {674, 1477}, {55, 76, 86, 255} }},
-	{{ {-28, 963, 271}, 0, {680, 1421}, {65, 106, 26, 255} }},
-	{{ {-14, 945, 263}, 0, {694, 1440}, {104, 59, 212, 255} }},
-	{{ {-26, 957, 255}, 0, {690, 1413}, {86, 67, 190, 255} }},
-	{{ {-28, 963, 271}, 0, {680, 1421}, {65, 106, 26, 255} }},
-	{{ {-14, 945, 263}, 0, {694, 1440}, {104, 59, 212, 255} }},
-	{{ {-43, 970, 249}, 0, {682, 1383}, {254, 101, 178, 255} }},
-	{{ {-47, 970, 256}, 0, {678, 1390}, {155, 76, 15, 255} }},
-	{{ {-50, 963, 251}, 0, {674, 1382}, {132, 247, 231, 255} }},
-	{{ {-43, 965, 246}, 0, {676, 1374}, {9, 247, 130, 255} }},
-	{{ {-41, 970, 249}, 0, {680, 1372}, {56, 92, 188, 255} }},
-	{{ {-26, 938, 251}, 0, {658, 1346}, {46, 11, 138, 255} }},
-	{{ {-13, 945, 263}, 0, {668, 1328}, {106, 33, 194, 255} }},
-	{{ {-13, 896, 248}, 0, {635, 1300}, {72, 51, 165, 255} }},
-	{{ {8, 906, 274}, 0, {656, 1273}, {118, 39, 228, 255} }},
-	{{ {-6, 931, 289}, 0, {676, 1290}, {109, 60, 26, 255} }},
-	{{ {15, 881, 274}, 0, {646, 1244}, {123, 32, 252, 255} }},
-	{{ {15, 868, 263}, 0, {635, 1239}, {102, 52, 201, 255} }},
-	{{ {-12, 858, 213}, 0, {599, 1274}, {36, 101, 187, 255} }},
-	{{ {15, 868, 263}, 0, {635, 1239}, {102, 52, 201, 255} }},
-	{{ {12, 860, 249}, 0, {624, 1240}, {86, 73, 197, 255} }},
-	{{ {-12, 858, 213}, 0, {599, 1274}, {36, 101, 187, 255} }},
-	{{ {11, 850, 231}, 0, {610, 1240}, {24, 111, 198, 255} }},
-	{{ {15, 843, 214}, 0, {598, 1231}, {16, 118, 211, 255} }},
-	{{ {23, 839, 198}, 0, {587, 1218}, {19, 126, 2, 255} }},
-	{{ {-3, 842, 187}, 0, {578, 1253}, {7, 125, 237, 255} }},
-	{{ {-43, 840, 182}, 0, {567, 1304}, {249, 125, 237, 255} }},
-	{{ {-47, 854, 203}, 0, {583, 1319}, {240, 93, 170, 255} }},
-	{{ {-84, 843, 210}, 0, {569, 1369}, {179, 40, 163, 255} }},
-	{{ {-71, 827, 199}, 0, {556, 1355}, {205, 115, 19, 255} }},
-	{{ {-81, 817, 204}, 0, {550, 1376}, {195, 41, 104, 255} }},
-	{{ {-106, 808, 229}, 0, {552, 1424}, {149, 232, 191, 255} }},
-	{{ {-79, 787, 211}, 0, {532, 1416}, {174, 249, 97, 255} }},
-	{{ {-98, 768, 251}, 0, {540, 1481}, {164, 169, 249, 255} }},
-	{{ {-67, 756, 221}, 0, {516, 1462}, {176, 161, 28, 255} }},
-	{{ {-118, 832, 248}, 0, {570, 1435}, {134, 2, 219, 255} }},
-	{{ {-106, 808, 229}, 0, {552, 1424}, {149, 232, 191, 255} }},
-	{{ {-98, 768, 251}, 0, {540, 1481}, {164, 169, 249, 255} }},
-	{{ {-84, 843, 210}, 0, {569, 1369}, {179, 40, 163, 255} }},
-	{{ {-91, 873, 232}, 0, {595, 1381}, {181, 61, 174, 255} }},
-	{{ {-117, 862, 267}, 0, {592, 1439}, {133, 32, 247, 255} }},
-	{{ {-114, 798, 283}, 0, {565, 1494}, {151, 203, 48, 255} }},
-	{{ {-112, 836, 305}, 0, {590, 1483}, {153, 238, 72, 255} }},
-	{{ {-77, 816, 330}, 0, {594, 1543}, {205, 211, 107, 255} }},
-	{{ {-71, 867, 337}, 0, {620, 1512}, {213, 11, 119, 255} }},
-	{{ {-30, 812, 334}, 0, {612, 1587}, {23, 209, 116, 255} }},
-	{{ {-27, 862, 338}, 0, {636, 1547}, {35, 6, 122, 255} }},
-	{{ {7, 827, 314}, 0, {641, 1604}, {93, 234, 84, 255} }},
-	{{ {10, 793, 296}, 0, {631, 1646}, {89, 198, 70, 255} }},
-	{{ {5, 881, 312}, 0, {665, 1550}, {102, 23, 72, 255} }},
-	{{ {-26, 902, 328}, 0, {655, 1509}, {42, 44, 112, 255} }},
-	{{ {-18, 935, 304}, 0, {674, 1477}, {55, 76, 86, 255} }},
-	{{ {-26, 902, 328}, 0, {655, 1509}, {42, 44, 112, 255} }},
-	{{ {5, 881, 312}, 0, {665, 1550}, {102, 23, 72, 255} }},
-	{{ {-46, 934, 310}, 0, {657, 1460}, {230, 89, 87, 255} }},
-	{{ {-37, 962, 273}, 0, {672, 1412}, {219, 102, 66, 255} }},
-	{{ {-28, 963, 271}, 0, {680, 1421}, {65, 106, 26, 255} }},
-	{{ {-47, 970, 256}, 0, {678, 1390}, {155, 76, 15, 255} }},
-	{{ {-47, 949, 265}, 0, {663, 1396}, {139, 49, 2, 255} }},
-	{{ {-50, 963, 251}, 0, {674, 1382}, {132, 247, 231, 255} }},
-	{{ {-44, 940, 254}, 0, {657, 1374}, {197, 21, 145, 255} }},
-	{{ {-43, 965, 246}, 0, {676, 1374}, {9, 247, 130, 255} }},
-	{{ {-26, 938, 251}, 0, {658, 1346}, {46, 11, 138, 255} }},
-	{{ {-38, 911, 244}, 0, {638, 1343}, {7, 44, 137, 255} }},
-	{{ {-13, 896, 248}, 0, {635, 1300}, {72, 51, 165, 255} }},
-	{{ {-52, 886, 230}, 0, {613, 1337}, {250, 74, 153, 255} }},
-	{{ {-12, 858, 213}, 0, {599, 1274}, {36, 101, 187, 255} }},
-	{{ {-52, 886, 230}, 0, {613, 1337}, {250, 74, 153, 255} }},
-	{{ {-12, 858, 213}, 0, {599, 1274}, {36, 101, 187, 255} }},
-	{{ {-47, 854, 203}, 0, {583, 1319}, {240, 93, 170, 255} }},
-	{{ {-91, 873, 232}, 0, {595, 1381}, {181, 61, 174, 255} }},
-	{{ {-84, 843, 210}, 0, {569, 1369}, {179, 40, 163, 255} }},
-	{{ {-62, 926, 257}, 0, {642, 1386}, {184, 76, 184, 255} }},
-	{{ {-102, 895, 270}, 0, {613, 1424}, {149, 68, 242, 255} }},
-	{{ {-117, 862, 267}, 0, {592, 1439}, {133, 32, 247, 255} }},
-	{{ {-100, 874, 309}, 0, {610, 1472}, {155, 39, 67, 255} }},
-	{{ {-112, 836, 305}, 0, {590, 1483}, {153, 238, 72, 255} }},
-	{{ {-71, 867, 337}, 0, {620, 1512}, {213, 11, 119, 255} }},
-	{{ {-60, 905, 329}, 0, {640, 1484}, {218, 55, 108, 255} }},
-	{{ {-27, 862, 338}, 0, {636, 1547}, {35, 6, 122, 255} }},
-	{{ {-26, 902, 328}, 0, {655, 1509}, {42, 44, 112, 255} }},
-	{{ {-46, 934, 310}, 0, {657, 1460}, {230, 89, 87, 255} }},
-	{{ {-84, 910, 301}, 0, {630, 1448}, {162, 71, 49, 255} }},
-	{{ {-64, 933, 286}, 0, {648, 1424}, {171, 92, 22, 255} }},
-	{{ {-84, 910, 301}, 0, {630, 1448}, {162, 71, 49, 255} }},
-	{{ {-46, 934, 310}, 0, {657, 1460}, {230, 89, 87, 255} }},
-	{{ {-37, 962, 273}, 0, {672, 1412}, {219, 102, 66, 255} }},
-	{{ {-47, 949, 265}, 0, {663, 1396}, {139, 49, 2, 255} }},
-	{{ {-62, 926, 257}, 0, {642, 1386}, {184, 76, 184, 255} }},
-	{{ {-44, 940, 254}, 0, {657, 1374}, {197, 21, 145, 255} }},
-	{{ {-38, 911, 244}, 0, {638, 1343}, {7, 44, 137, 255} }},
-	{{ {-52, 886, 230}, 0, {613, 1337}, {250, 74, 153, 255} }},
-	{{ {-102, 895, 270}, 0, {613, 1424}, {149, 68, 242, 255} }},
-	{{ {-100, 874, 309}, 0, {610, 1472}, {155, 39, 67, 255} }},
-	{{ {-60, 905, 329}, 0, {640, 1484}, {218, 55, 108, 255} }},
-	{{ {10, 793, 296}, 0, {631, 1646}, {89, 198, 70, 255} }},
-	{{ {-17, 754, 271}, 0, {609, 1698}, {47, 148, 47, 255} }},
-	{{ {15, 775, 260}, 0, {638, 1695}, {95, 182, 41, 255} }},
-	{{ {20, 879, 274}, 0, {698, 1863}, {145, 37, 49, 255} }},
-	{{ {15, 868, 263}, 0, {698, 1889}, {138, 46, 6, 255} }},
-	{{ {18, 853, 272}, 0, {712, 1893}, {157, 248, 79, 255} }},
-	{{ {23, 876, 244}, 0, {681, 1900}, {183, 88, 200, 255} }},
-	{{ {29, 897, 271}, 0, {685, 1843}, {158, 77, 24, 255} }},
-	{{ {43, 905, 257}, 0, {668, 1842}, {185, 75, 182, 255} }},
-	{{ {46, 911, 266}, 0, {670, 1824}, {194, 109, 19, 255} }},
-	{{ {58, 917, 252}, 0, {656, 1823}, {37, 84, 168, 255} }},
-	{{ {50, 899, 251}, 0, {660, 1853}, {235, 41, 138, 255} }},
-	{{ {60, 898, 254}, 0, {651, 1852}, {91, 52, 184, 255} }},
-	{{ {61, 915, 253}, 0, {653, 1826}, {123, 31, 243, 255} }},
-	{{ {56, 912, 264}, 0, {642, 1821}, {57, 100, 54, 255} }},
-	{{ {46, 911, 266}, 0, {642, 1801}, {206, 112, 34, 255} }},
-	{{ {42, 898, 283}, 0, {624, 1804}, {221, 79, 93, 255} }},
-	{{ {29, 897, 271}, 0, {621, 1781}, {158, 77, 25, 255} }},
-	{{ {20, 879, 274}, 0, {601, 1781}, {146, 37, 51, 255} }},
-	{{ {42, 898, 283}, 0, {624, 1804}, {221, 79, 93, 255} }},
-	{{ {20, 879, 274}, 0, {601, 1781}, {146, 37, 51, 255} }},
-	{{ {37, 877, 294}, 0, {606, 1814}, {206, 24, 114, 255} }},
-	{{ {18, 853, 272}, 0, {576, 1807}, {157, 251, 80, 255} }},
-	{{ {38, 835, 294}, 0, {584, 1857}, {226, 213, 116, 255} }},
-	{{ {20, 825, 268}, 0, {560, 1857}, {164, 219, 80, 255} }},
-	{{ {22, 799, 255}, 0, {550, 1916}, {173, 188, 69, 255} }},
-	{{ {40, 797, 272}, 0, {569, 1915}, {4, 168, 92, 255} }},
-	{{ {35, 782, 249}, 0, {561, 1951}, {246, 142, 56, 255} }},
-	{{ {19, 783, 223}, 0, {547, 1984}, {64, 190, 88, 255} }},
-	{{ {42, 777, 221}, 0, {567, 2002}, {24, 242, 124, 255} }},
-	{{ {67, 789, 241}, 0, {586, 1976}, {77, 161, 34, 255} }},
-	{{ {60, 784, 216}, 0, {585, 2014}, {48, 5, 118, 255} }},
-	{{ {73, 800, 210}, 0, {606, 2015}, {77, 255, 101, 255} }},
-	{{ {83, 811, 246}, 0, {605, 1957}, {119, 214, 16, 255} }},
-	{{ {82, 827, 227}, 0, {622, 1972}, {121, 12, 219, 255} }},
-	{{ {73, 800, 210}, 0, {606, 2015}, {77, 255, 101, 255} }},
-	{{ {73, 817, 205}, 0, {624, 2009}, {51, 62, 99, 255} }},
-	{{ {82, 827, 227}, 0, {622, 1972}, {121, 12, 219, 255} }},
-	{{ {66, 855, 222}, 0, {646, 1948}, {65, 74, 176, 255} }},
-	{{ {59, 831, 201}, 0, {643, 2001}, {25, 124, 16, 255} }},
-	{{ {23, 838, 198}, 0, {674, 1999}, {246, 91, 168, 255} }},
-	{{ {56, 876, 240}, 0, {655, 1896}, {33, 77, 160, 255} }},
-	{{ {23, 876, 244}, 0, {681, 1900}, {183, 88, 200, 255} }},
-	{{ {15, 843, 214}, 0, {684, 1975}, {233, 114, 204, 255} }},
-	{{ {11, 850, 231}, 0, {692, 1948}, {34, 107, 196, 255} }},
-	{{ {12, 860, 249}, 0, {696, 1915}, {147, 63, 237, 255} }},
-	{{ {15, 868, 263}, 0, {698, 1889}, {138, 46, 6, 255} }},
-	{{ {43, 905, 257}, 0, {668, 1842}, {185, 75, 182, 255} }},
-	{{ {50, 899, 251}, 0, {660, 1853}, {235, 41, 138, 255} }},
-	{{ {60, 898, 254}, 0, {651, 1852}, {91, 52, 184, 255} }},
-	{{ {80, 858, 247}, 0, {633, 1915}, {115, 46, 226, 255} }},
-	{{ {60, 898, 254}, 0, {651, 1852}, {91, 52, 184, 255} }},
-	{{ {71, 883, 271}, 0, {633, 1860}, {116, 46, 26, 255} }},
-	{{ {80, 858, 247}, 0, {633, 1915}, {115, 46, 226, 255} }},
-	{{ {56, 912, 264}, 0, {642, 1821}, {57, 100, 54, 255} }},
-	{{ {61, 915, 253}, 0, {653, 1826}, {123, 31, 243, 255} }},
-	{{ {61, 887, 288}, 0, {622, 1836}, {60, 48, 101, 255} }},
-	{{ {83, 844, 267}, 0, {615, 1908}, {119, 255, 45, 255} }},
-	{{ {65, 850, 291}, 0, {605, 1870}, {63, 248, 110, 255} }},
-	{{ {37, 877, 294}, 0, {606, 1814}, {206, 24, 114, 255} }},
-	{{ {42, 898, 283}, 0, {624, 1804}, {221, 79, 93, 255} }},
-	{{ {38, 835, 294}, 0, {584, 1857}, {226, 213, 116, 255} }},
-	{{ {67, 807, 272}, 0, {590, 1923}, {59, 181, 84, 255} }},
-	{{ {40, 797, 272}, 0, {569, 1915}, {4, 168, 92, 255} }},
-	{{ {67, 789, 241}, 0, {586, 1976}, {77, 161, 34, 255} }},
-	{{ {35, 782, 249}, 0, {561, 1951}, {246, 142, 56, 255} }},
-	{{ {83, 811, 246}, 0, {605, 1957}, {119, 214, 16, 255} }},
-	{{ {83, 811, 246}, 0, {605, 1957}, {119, 214, 16, 255} }},
-	{{ {82, 827, 227}, 0, {622, 1972}, {121, 12, 219, 255} }},
-	{{ {83, 844, 267}, 0, {615, 1908}, {119, 255, 45, 255} }},
-	{{ {80, 858, 247}, 0, {633, 1915}, {115, 46, 226, 255} }},
-	{{ {66, 855, 222}, 0, {646, 1948}, {65, 74, 176, 255} }},
-	{{ {56, 876, 240}, 0, {655, 1896}, {33, 77, 160, 255} }},
-	{{ {71, 883, 271}, 0, {633, 1860}, {116, 46, 26, 255} }},
-	{{ {65, 850, 291}, 0, {605, 1870}, {63, 248, 110, 255} }},
-	{{ {67, 807, 272}, 0, {590, 1923}, {59, 181, 84, 255} }},
-};
-
-Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_4[] = {
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(6, 4, 7, 0),
-	gsSP1Triangle(4, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(8, 12, 11, 0),
-	gsSP1Triangle(10, 11, 13, 0),
-	gsSP1Triangle(10, 13, 14, 0),
-	gsSP1Triangle(10, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(5, 0, 4, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(8, 6, 9, 0),
-	gsSP1Triangle(9, 6, 10, 0),
-	gsSP1Triangle(8, 9, 11, 0),
-	gsSP1Triangle(12, 8, 11, 0),
-	gsSP1Triangle(13, 8, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(14, 12, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(6, 3, 7, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 11, 9, 0),
-	gsSP1Triangle(11, 13, 10, 0),
-	gsSP1Triangle(13, 14, 10, 0),
-	gsSP1Triangle(10, 14, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(4, 5, 2, 0),
-	gsSP1Triangle(5, 6, 2, 0),
-	gsSP1Triangle(2, 6, 7, 0),
-	gsSP1Triangle(2, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(5, 0, 6, 0),
-	gsSP1Triangle(0, 2, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(11, 12, 14, 0),
-	gsSP1Triangle(15, 11, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 80, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 96, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(0, 3, 5, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(3, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(15, 11, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 112, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 5, 0, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(8, 5, 7, 0),
-	gsSP1Triangle(9, 0, 5, 0),
-	gsSP1Triangle(9, 1, 0, 0),
-	gsSP1Triangle(9, 10, 1, 0),
-	gsSP1Triangle(1, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 127, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 8, 5, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(11, 10, 7, 0),
-	gsSP1Triangle(12, 11, 7, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 143, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(11, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 159, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(3, 5, 6, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 5, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(11, 7, 10, 0),
-	gsSP1Triangle(12, 6, 7, 0),
-	gsSP1Triangle(12, 13, 6, 0),
-	gsSP1Triangle(13, 14, 6, 0),
-	gsSP1Triangle(14, 15, 6, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 175, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 1, 3, 0),
-	gsSP1Triangle(5, 6, 1, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 7, 5, 0),
-	gsSP1Triangle(9, 8, 5, 0),
-	gsSP1Triangle(9, 5, 3, 0),
-	gsSP1Triangle(8, 10, 7, 0),
-	gsSP1Triangle(7, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(11, 13, 15, 0),
-	gsSP1Triangle(11, 15, 6, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_4 + 191, 9, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 2, 3, 0),
-	gsSP1Triangle(7, 8, 2, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx cappy_CapManHero__HeadMT_mesh_layer_1_vtx_5[46] = {
-	{{ {-169, 449, 235}, 0, {1062, 574}, {174, 242, 96, 255} }},
-	{{ {-160, 420, 237}, 0, {1010, 710}, {177, 236, 97, 255} }},
-	{{ {-146, 396, 242}, 0, {934, 822}, {225, 223, 119, 255} }},
-	{{ {-176, 478, 233}, 0, {1090, 427}, {215, 237, 119, 255} }},
-	{{ {-133, 469, 259}, 0, {840, 474}, {198, 248, 113, 255} }},
-	{{ {-119, 396, 256}, 0, {777, 816}, {208, 216, 111, 255} }},
-	{{ {-128, 378, 245}, 0, {842, 908}, {193, 196, 93, 255} }},
-	{{ {-108, 368, 250}, 0, {738, 958}, {216, 194, 103, 255} }},
-	{{ {-73, 392, 266}, 0, {558, 822}, {250, 210, 118, 255} }},
-	{{ {-88, 365, 254}, 0, {630, 969}, {236, 193, 109, 255} }},
-	{{ {-67, 371, 258}, 0, {526, 942}, {9, 191, 109, 255} }},
-	{{ {-49, 385, 262}, 0, {430, 879}, {29, 203, 112, 255} }},
-	{{ {-34, 405, 266}, 0, {349, 780}, {12, 13, 126, 255} }},
-	{{ {-50, 470, 273}, 0, {426, 468}, {15, 255, 126, 255} }},
-	{{ {-17, 461, 268}, 0, {256, 515}, {13, 28, 123, 255} }},
-	{{ {-23, 431, 266}, 0, {289, 658}, {59, 234, 110, 255} }},
-	{{ {-50, 470, 273}, 0, {426, 468}, {15, 255, 126, 255} }},
-	{{ {-17, 461, 268}, 0, {256, 515}, {13, 28, 123, 255} }},
-	{{ {-21, 523, 265}, 0, {276, 216}, {245, 27, 124, 255} }},
-	{{ {-17, 491, 266}, 0, {251, 365}, {63, 8, 110, 255} }},
-	{{ {-72, 527, 270}, 0, {539, 204}, {3, 18, 126, 255} }},
-	{{ {-45, 575, 259}, 0, {404, -34}, {236, 42, 118, 255} }},
-	{{ {-31, 551, 261}, 0, {328, 80}, {42, 34, 115, 255} }},
-	{{ {-82, 605, 250}, 0, {599, -174}, {217, 19, 119, 255} }},
-	{{ {-105, 577, 255}, 0, {717, -30}, {220, 46, 113, 255} }},
-	{{ {-103, 609, 245}, 0, {706, -194}, {226, 72, 101, 255} }},
-	{{ {-125, 605, 240}, 0, {824, -175}, {205, 67, 95, 255} }},
-	{{ {-146, 592, 236}, 0, {932, -116}, {189, 251, 108, 255} }},
-	{{ {-135, 536, 253}, 0, {856, 159}, {202, 22, 113, 255} }},
-	{{ {-162, 572, 233}, 0, {1017, -19}, {214, 243, 119, 255} }},
-	{{ {-172, 545, 231}, 0, {1072, 111}, {216, 238, 119, 255} }},
-	{{ {-176, 511, 232}, 0, {1095, 274}, {216, 240, 120, 255} }},
-	{{ {-176, 511, 232}, 0, {1095, 274}, {216, 240, 120, 255} }},
-	{{ {-133, 469, 259}, 0, {840, 474}, {198, 248, 113, 255} }},
-	{{ {-135, 536, 253}, 0, {856, 159}, {202, 22, 113, 255} }},
-	{{ {-176, 478, 233}, 0, {1090, 427}, {215, 237, 119, 255} }},
-	{{ {-105, 508, 266}, 0, {694, 296}, {232, 9, 124, 255} }},
-	{{ {-83, 452, 271}, 0, {603, 539}, {242, 242, 125, 255} }},
-	{{ {-119, 396, 256}, 0, {777, 816}, {208, 216, 111, 255} }},
-	{{ {-73, 392, 266}, 0, {558, 822}, {250, 210, 118, 255} }},
-	{{ {-50, 470, 273}, 0, {426, 468}, {15, 255, 126, 255} }},
-	{{ {-72, 527, 270}, 0, {539, 204}, {3, 18, 126, 255} }},
-	{{ {-105, 577, 255}, 0, {717, -30}, {220, 46, 113, 255} }},
-	{{ {-82, 605, 250}, 0, {599, -174}, {217, 19, 119, 255} }},
-	{{ {-45, 575, 259}, 0, {404, -34}, {236, 42, 118, 255} }},
-	{{ {-63, 593, 254}, 0, {496, -123}, {16, 54, 114, 255} }},
-};
-
-Gfx cappy_CapManHero__HeadMT_mesh_layer_1_tri_5[] = {
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_5 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(4, 2, 5, 0),
-	gsSP1Triangle(2, 6, 5, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(5, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(8, 11, 12, 0),
-	gsSP1Triangle(8, 12, 13, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_5 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(0, 2, 4, 0),
-	gsSP1Triangle(5, 4, 2, 0),
-	gsSP1Triangle(5, 2, 6, 0),
-	gsSP1Triangle(7, 4, 5, 0),
-	gsSP1Triangle(8, 4, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(11, 12, 8, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(cappy_CapManHero__HeadMT_mesh_layer_1_vtx_5 + 32, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(2, 1, 4, 0),
-	gsSP1Triangle(1, 5, 4, 0),
-	gsSP1Triangle(6, 5, 1, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(5, 7, 8, 0),
-	gsSP1Triangle(5, 8, 9, 0),
-	gsSP1Triangle(5, 9, 4, 0),
-	gsSP1Triangle(10, 4, 9, 0),
-	gsSP1Triangle(2, 4, 10, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSPEndDisplayList(),
-};
-
-
-Gfx mat_cappy_HeadMT_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(cappy_HeadMT_f3d_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_cappy_BodyMT_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(cappy_BodyMT_f3d_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_cappy_EyesMT_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(cappy_EyesMT_f3d_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_cappy_EyePupilLeftMT_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsDPSetTextureLUT(G_TT_RGBA16),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(cappy_EyePupilLeftMT_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, cappy_CapManHeroEyePupil_emm_5_pal_rgba16),
-	gsDPSetTile(0, 0, 0, 256, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadTLUTCmd(5, 128),
-	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b_LOAD_BLOCK, 1, cappy_CapManHeroEyePupil_emm_5_ci8),
-	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 511, 512),
-	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 4, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_cappy_EyePupilLeftMT_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetTextureLUT(G_TT_NONE),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_cappy_HairMT_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(cappy_HairMT_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, cappy_hair_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 252),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_cappy_EyePupilRightMT_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsDPSetTextureLUT(G_TT_RGBA16),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(cappy_EyePupilRightMT_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, cappy_CapManHeroEyePupil_emm_5_pal_rgba16),
-	gsDPSetTile(0, 0, 0, 256, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadTLUTCmd(5, 128),
-	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b_LOAD_BLOCK, 1, cappy_CapManHeroEyePupil_emm_5_ci8),
-	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 511, 512),
-	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 4, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_cappy_EyePupilRightMT_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetTextureLUT(G_TT_NONE),
-	gsSPEndDisplayList(),
-};
-
-Gfx cappy_CapManHero__HeadMT_mesh_layer_1[] = {
-	gsSPDisplayList(mat_cappy_HeadMT_f3d),
-	gsSPDisplayList(cappy_CapManHero__HeadMT_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_cappy_BodyMT_f3d),
-	gsSPDisplayList(cappy_CapManHero__HeadMT_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_cappy_EyesMT_f3d),
-	gsSPDisplayList(cappy_CapManHero__HeadMT_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_cappy_EyePupilLeftMT_f3d),
-	gsSPDisplayList(cappy_CapManHero__HeadMT_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_revert_cappy_EyePupilLeftMT_f3d),
-	gsSPDisplayList(mat_cappy_HairMT_f3d),
-	gsSPDisplayList(cappy_CapManHero__HeadMT_mesh_layer_1_tri_4),
-	gsSPDisplayList(mat_cappy_EyePupilRightMT_f3d),
-	gsSPDisplayList(cappy_CapManHero__HeadMT_mesh_layer_1_tri_5),
-	gsSPDisplayList(mat_revert_cappy_EyePupilRightMT_f3d),
-	gsSPEndDisplayList(),
-};
-
-Gfx cappy_material_revert_render_settings[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_LIGHTING),
-	gsSPClearGeometryMode(G_TEXTURE_GEN),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 0),
-	gsDPSetEnvColor(255, 255, 255, 255),
-	gsDPSetAlphaCompare(G_AC_NONE),
-	gsSPEndDisplayList(),
-};
-
diff --git a/actors/group0.c b/actors/group0.c
index 02ed44be..609837eb 100644
--- a/actors/group0.c
+++ b/actors/group0.c
@@ -30,11 +30,3 @@
 #include "src/s2d_engine/config.h"
 #include FONT_C_FILE
 #endif
-
-#include "mario/anims/data.inc.c"
-#include "mario/anims/table.inc.c"
-#include "ragdoll_mario/anims/data.inc.c"
-#include "ragdoll_mario/anims/table.inc.c"
-#include "ragdoll_mario/model.inc.c"
-#include "supergoomb/model.inc.c"
-#include "cappy/model.inc.c"
\ No newline at end of file
diff --git a/actors/group0.h b/actors/group0.h
index cf8ce71f..f64ccc7b 100644
--- a/actors/group0.h
+++ b/actors/group0.h
@@ -331,16 +331,4 @@ extern const Gfx white_particle_small_dl_end[];
 extern const Gfx white_particle_small_dl[];
 extern const Gfx white_particle_small_unused_dl[];
 
-
-#include "mario/anim_header.h"
-
-#include "ragdoll_mario/anim_header.h"
-#include "mario/geo_header.h"
-
-#include "ragdoll_mario/geo_header.h"
-
-#include "supergoomb/geo_header.h"
-
-#include "cappy/geo_header.h"
-
 #endif
diff --git a/actors/group0_geo.c b/actors/group0_geo.c
index b6e1d111..1f3209d6 100644
--- a/actors/group0_geo.c
+++ b/actors/group0_geo.c
@@ -16,7 +16,3 @@
 #include "water_splash/geo.inc.c"
 #include "sparkle_animation/geo.inc.c"
 #include "mario/geo.inc.c"
-
-#include "ragdoll_mario/geo.inc.c"
-#include "supergoomb/geo.inc.c"
-#include "cappy/geo.inc.c"
\ No newline at end of file
diff --git a/actors/group10.c b/actors/group10.c
index 713ffa77..5ab6a7c1 100644
--- a/actors/group10.c
+++ b/actors/group10.c
@@ -20,7 +20,3 @@ UNUSED static const u64 binid_1 = 1;
 #include "yoshi/anims/data.inc.c"
 #include "yoshi/anims/table.inc.c"
 UNUSED static const u64 binid_2 = 2;
-
-#include "moneybag/model.inc.c"
-#include "moneybag/anims/data.inc.c"
-#include "moneybag/anims/table.inc.c"
\ No newline at end of file
diff --git a/actors/group10.h b/actors/group10.h
index e7075ebb..6a518be2 100644
--- a/actors/group10.h
+++ b/actors/group10.h
@@ -94,20 +94,4 @@ extern const Gfx yoshi_seg5_dl_05022408[];
 extern const Gfx yoshi_seg5_dl_05022608[];
 extern const struct Animation *const yoshi_seg5_anims_05024100[];
 
-// moneybag
-extern const GeoLayout moneybag_geo_000000[];
-extern const GeoLayout moneybag_geo_000078[];
-extern const GeoLayout moneybag_geo[];
-extern const Gfx moneybag_seg6_dl_06005300[];
-extern const Gfx moneybag_seg6_dl_06005358[];
-extern const Gfx moneybag_seg6_dl_060053B8[];
-extern const Gfx moneybag_seg6_dl_06005590[];
-extern const Gfx moneybag_seg6_dl_06005618[];
-extern const Gfx moneybag_seg6_dl_06005688[];
-extern const Gfx moneybag_seg6_dl_06005708[];
-extern const Gfx moneybag_seg6_dl_06005750[];
-extern const Gfx moneybag_seg6_dl_06005980[];
-extern const Gfx moneybag_seg6_dl_060059F0[];
-extern const struct Animation *const moneybag_seg6_anims_06005E5C[];
-
 #endif
diff --git a/actors/group10_geo.c b/actors/group10_geo.c
index 3bce48f0..7383d746 100644
--- a/actors/group10_geo.c
+++ b/actors/group10_geo.c
@@ -10,4 +10,3 @@
 #include "bird/geo.inc.c"
 #include "peach/geo.inc.c"
 #include "yoshi/geo.inc.c"
-#include "moneybag/geo.inc.c"
\ No newline at end of file
diff --git a/actors/group16.c b/actors/group16.c
index dcaaf9f3..50338e05 100644
--- a/actors/group16.c
+++ b/actors/group16.c
@@ -13,5 +13,7 @@
 #include "chillychief/anims/table.inc.c"
 UNUSED static const u64 binid_0 = 0;
 
-
+#include "moneybag/model.inc.c"
+#include "moneybag/anims/data.inc.c"
+#include "moneybag/anims/table.inc.c"
 UNUSED static const u64 binid_1 = 1;
diff --git a/actors/group16.h b/actors/group16.h
index ec892550..5ebea5df 100644
--- a/actors/group16.h
+++ b/actors/group16.h
@@ -19,6 +19,20 @@ extern const GeoLayout chilly_chief_geo[];
 extern const GeoLayout chilly_chief_big_geo[];
 extern const struct Animation *const chilly_chief_seg6_anims_06003994[];
 
-
+// moneybag
+extern const GeoLayout moneybag_geo_000000[];
+extern const GeoLayout moneybag_geo_000078[];
+extern const GeoLayout moneybag_geo[];
+extern const Gfx moneybag_seg6_dl_06005300[];
+extern const Gfx moneybag_seg6_dl_06005358[];
+extern const Gfx moneybag_seg6_dl_060053B8[];
+extern const Gfx moneybag_seg6_dl_06005590[];
+extern const Gfx moneybag_seg6_dl_06005618[];
+extern const Gfx moneybag_seg6_dl_06005688[];
+extern const Gfx moneybag_seg6_dl_06005708[];
+extern const Gfx moneybag_seg6_dl_06005750[];
+extern const Gfx moneybag_seg6_dl_06005980[];
+extern const Gfx moneybag_seg6_dl_060059F0[];
+extern const struct Animation *const moneybag_seg6_anims_06005E5C[];
 
 #endif
diff --git a/actors/group16_geo.c b/actors/group16_geo.c
index f37a24ae..114eb979 100644
--- a/actors/group16_geo.c
+++ b/actors/group16_geo.c
@@ -8,4 +8,4 @@
 #include "group16.h"
 
 #include "chillychief/geo.inc.c"
-
+#include "moneybag/geo.inc.c"
diff --git a/actors/mario/anim_header.h b/actors/mario/anim_header.h
deleted file mode 100644
index fe301e8b..00000000
--- a/actors/mario/anim_header.h
+++ /dev/null
@@ -1 +0,0 @@
-extern const struct Animation *const mario_anims[];
diff --git a/actors/mario/anims/anim_Action.inc.c b/actors/mario/anims/anim_Action.inc.c
deleted file mode 100644
index dbad5687..00000000
--- a/actors/mario/anims/anim_Action.inc.c
+++ /dev/null
@@ -1,1399 +0,0 @@
-static const s16 mario_anim_Action_values[] = {
-	0x0000, 0xFFF4, 0xFFED, 0xFFEC, 0xFFEC, 0xFFED, 0xFFF7, 0x0004, 0x0013, 
-	0x0022, 0x002C, 0x003A, 0x0046, 0x0055, 0x0067, 0x0074, 0x007D, 0x0082, 
-	0x008A, 0x008C, 0x008C, 0x008C, 0x008B, 0x008A, 0x0087, 0x0082, 0x007D, 
-	0x0076, 0x006E, 0x0069, 0x0064, 0x0061, 0x005D, 0x005A, 0x0057, 0x0054, 
-	0x0052, 0x0050, 0x004F, 0x004F, 0x004E, 0x004E, 0x004F, 0x0050, 0x0050, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0050, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0050, 0x0000, 0xFFC8, 0xFFB3, 0xFFA0, 0xFF8E, 0xFF7D, 
-	0xFF6A, 0xFF58, 0xFF49, 0xFF3A, 0xFF30, 0xFF22, 0xFF18, 0xFF14, 0xFF0E, 
-	0xFF07, 0xFF01, 0xFEF7, 0xFEE8, 0xFEDB, 0xFECE, 0xFEC2, 0xFEB6, 0xFEAC, 
-	0xFEA2, 0xFE9A, 0xFE91, 0xFE87, 0xFE7D, 0xFE71, 0xFE65, 0xFE59, 0xFE4F, 
-	0xFE46, 0xFE3E, 0xFE37, 0xFE30, 0xFE2B, 0xFE25, 0xFE1F, 0xFE1B, 0xFE18, 
-	0xFE15, 0xFE13, 0xFE12, 0x00BF, 0x00C5, 0x00C8, 0x00C6, 0x00C2, 0x00B9, 
-	0x00AB, 0x009C, 0x008B, 0x0075, 0x0058, 0x0047, 0x0038, 0x002D, 0x002C, 
-	0x002A, 0x002E, 0x0030, 0x0039, 0x003D, 0x0040, 0x0040, 0x0042, 0x0047, 
-	0x004A, 0x004C, 0x004E, 0x004D, 0x004F, 0x004F, 0x004D, 0x004D, 0x004C, 
-	0x004A, 0x0049, 0x0046, 0x0044, 0x0043, 0x0043, 0x0044, 0x0044, 0x0044, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0043, 0x0000, 0xFFFF, 0xFFFF, 
-	0x0000, 0xFC4E, 0xFAB0, 0xF833, 0xF5C8, 0xF4C0, 0xF281, 0xEFCA, 0xECE6, 
-	0xEA48, 0xE90E, 0xE7E5, 0xE5F3, 0xE40C, 0xE1C8, 0xDF51, 0xDAF7, 0xD812, 
-	0xD87A, 0xD969, 0xDAD9, 0xDD62, 0xE077, 0xE351, 0xE646, 0xEA1D, 0xEE94, 
-	0xF3E6, 0xF7DC, 0xF901, 0xF8FD, 0xF94A, 0xFA18, 0xFB8E, 0xFD0D, 0xFE42, 
-	0xFE80, 0xFEC3, 0xFED1, 0xFF00, 0xFF54, 0xFF8D, 0xFFF2, 0x006F, 0x009C, 
-	0x00C1, 0x00C2, 0x00AD, 0x0099, 0x0085, 0x007D, 0x0086, 0x0096, 0x00A3, 
-	0x00A2, 0x00A1, 0x009F, 0x009C, 0x0098, 0x0094, 0x0090, 0x008B, 0x0085, 
-	0x007F, 0x0078, 0x0071, 0x0069, 0x0061, 0x0058, 0x004F, 0x0046, 0x003D, 
-	0x0034, 0x002B, 0x0021, 0x0017, 0x0012, 0x0010, 0x000F, 0x000D, 0x000B, 
-	0x0009, 0x0006, 0x0003, 0xFFFD, 0xFFFD, 0xFFFB, 0xFFF8, 0xFFF5, 0xFFF2, 
-	0xFFEF, 0xFFEC, 0xFFE9, 0xFFE6, 0xFFE3, 0xFFE0, 0xFFDD, 0xFFDA, 0xFFD6, 
-	0xFFD3, 0xFFD0, 0xFFCC, 0xFFC8, 0xFFC6, 0xFFC2, 0xFFBF, 0xFFBC, 0xFFB9, 
-	0xFFB6, 0xFFB3, 0xFFB0, 0xFFAC, 0xFFA9, 0xFFA6, 0xFFA3, 0xFF9F, 0xFF9C, 
-	0xFF9C, 0xFF99, 0xFF95, 0xFF92, 0xFF8E, 0xFF8B, 0xFF87, 0xFF84, 0xFF81, 
-	0xFF7D, 0xFF79, 0xFF76, 0xFF72, 0xFF6E, 0xFF6B, 0xFF67, 0xFF64, 0xFF60, 
-	0xFF5D, 0xFF59, 0xFF55, 0xFF51, 0xFF4E, 0xFF4A, 0xFF46, 0xFF42, 0xFF3E, 
-	0xFF3B, 0xFF36, 0xFF33, 0xFF30, 0xFF2E, 0xFF2A, 0xFF26, 0xFF22, 0xFF1E, 
-	0xFF19, 0xFF15, 0xFF10, 0xFF0C, 0xFF07, 0xFF02, 0xFEFD, 0xFEF8, 0xFEF4, 
-	0xFEEF, 0xFEEB, 0xFEE7, 0xFEE2, 0xFEDD, 0xFED8, 0xFED4, 0xFED0, 0xFECB, 
-	0xFEC6, 0xFEC1, 0xFEBC, 0xFEB7, 0xFEB4, 0xFEB1, 0xFEAF, 0xFEAC, 0xFEA9, 
-	0xFEA6, 0xFEA2, 0xFE9E, 0xFE9A, 0xFE96, 0xFE93, 0xFE8F, 0xFE8B, 0xFE87, 
-	0xFE84, 0xFE80, 0xFE7C, 0xFE78, 0xFE73, 0xFE70, 0xFE6C, 0xFE68, 0xFE64, 
-	0xFE60, 0xFE5C, 0xFE58, 0xFE54, 0xFE50, 0xFE4C, 0xFE48, 0xFE43, 0xFE43, 
-	0xFE43, 0xFE43, 0xFE43, 0xFE43, 0xFE43, 0xFE43, 0xFE44, 0xFE44, 0xFE44, 
-	0xFE44, 0xFE44, 0xFE44, 0xFE44, 0xFE44, 0xFE44, 0xFE43, 0xFE43, 0xFE43, 
-	0xFE43, 0xFE43, 0xFE43, 0xFE43, 0xFE43, 0xFE43, 0xFE43, 0xFE43, 0xFE43, 
-	0xFE44, 0xFE43, 0xFE44, 0xFE44, 0xFE44, 0xFE44, 0xFE44, 0xFE44, 0xFE44, 
-	0xFE44, 0xFE44, 0xFE44, 0xFE44, 0xFE44, 0xFE45, 0xFFFF, 0xFFD5, 0x0002, 
-	0xFF80, 0xFD9E, 0xFBED, 0xFE23, 0x0168, 0x0524, 0x091D, 0x0B81, 0x0C0F, 
-	0x0C55, 0x0C83, 0x0CD4, 0x0D98, 0x0D66, 0x0FB1, 0x1514, 0x1939, 0x1C32, 
-	0x1E69, 0x2045, 0x21E1, 0x22F9, 0x23A4, 0x2392, 0x2311, 0x2275, 0x20F3, 
-	0x1F7D, 0x1E18, 0x1CCA, 0x1B5A, 0x1A00, 0x18C1, 0x1745, 0x1573, 0x1350, 
-	0x1205, 0x114A, 0x10D5, 0x1099, 0x1077, 0x106D, 0x1071, 0x1073, 0x1081, 
-	0x107F, 0x106B, 0x106E, 0x1079, 0x1086, 0x1097, 0x10A4, 0x10AE, 0x10B5, 
-	0x10B5, 0x10B5, 0x10B5, 0x10B4, 0x10B4, 0x10B3, 0x10B3, 0x10B3, 0x10B1, 
-	0x10AF, 0x10AD, 0x10AB, 0x10A8, 0x10A5, 0x10A0, 0x109D, 0x109D, 0x109C, 
-	0x109B, 0x109A, 0x109B, 0x109C, 0x109D, 0x109E, 0x109F, 0x10A0, 0x10A1, 
-	0x10A3, 0x10A5, 0x10A8, 0x10A9, 0x10AB, 0x10AD, 0x10AF, 0x10B0, 0x10B2, 
-	0x10B4, 0x10B5, 0x10B7, 0x10B8, 0x10BB, 0x10BC, 0x10BE, 0x10C0, 0x10C2, 
-	0x10C4, 0x10C6, 0x10C7, 0x10C9, 0x10CB, 0x10CD, 0x10CE, 0x10D0, 0x10D1, 
-	0x10D3, 0x10D4, 0x10D6, 0x10D7, 0x10D9, 0x10DB, 0x10DD, 0x10DE, 0x10E0, 
-	0x10E2, 0x10E4, 0x10E6, 0x10E7, 0x10E9, 0x10EB, 0x10ED, 0x10EF, 0x10F1, 
-	0x10F3, 0x10F5, 0x10F6, 0x10F8, 0x10FA, 0x10FC, 0x10FE, 0x1100, 0x1102, 
-	0x1104, 0x1106, 0x1108, 0x110A, 0x110C, 0x110E, 0x1110, 0x1112, 0x1114, 
-	0x1116, 0x1117, 0x1119, 0x111B, 0x111D, 0x111F, 0x1121, 0x1123, 0x1125, 
-	0x1127, 0x1129, 0x112B, 0x112D, 0x112F, 0x1130, 0x1132, 0x1133, 0x1135, 
-	0x1137, 0x1139, 0x1139, 0x113A, 0x113B, 0x113C, 0x113D, 0x113F, 0x1140, 
-	0x1141, 0x1143, 0x1145, 0x1147, 0x1149, 0x114B, 0x114E, 0x1150, 0x1153, 
-	0x1156, 0x1159, 0x115C, 0x115E, 0x1161, 0x1164, 0x1167, 0x116A, 0x116D, 
-	0x1170, 0x1173, 0x1176, 0x1178, 0x117B, 0x117E, 0x1181, 0x1184, 0x1187, 
-	0x118A, 0x118D, 0x1190, 0x1193, 0x1196, 0x1197, 0x1197, 0x1197, 0x1198, 
-	0x1198, 0x1199, 0x1199, 0x1199, 0x119A, 0x119B, 0x119C, 0x119D, 0x119E, 
-	0x119F, 0x11A1, 0x11A2, 0x11A4, 0x11A5, 0x11A6, 0x11A8, 0x11A9, 0x11AA, 
-	0x11AB, 0x11AC, 0x11AD, 0x11AE, 0x11B0, 0x11B0, 0x11B1, 0x11B2, 0x11B3, 
-	0x11B4, 0x11B4, 0x11B5, 0x11B5, 0x11B6, 0x11B7, 0x11B9, 0x11BA, 0x11BB, 
-	0x11BC, 0x11BD, 0x11BE, 0x8000, 0x8483, 0x8117, 0x7E61, 0x7EB5, 0x7F52, 
-	0x7FDF, 0x8074, 0x803D, 0x7EDB, 0x7DD8, 0x8230, 0x89FD, 0x8F7F, 0x8E20, 
-	0x8C4F, 0x8AAA, 0x88B1, 0x8786, 0x8985, 0x8DF5, 0x9470, 0x9ADF, 0xA013, 
-	0xA538, 0xAB12, 0xB17A, 0xB86F, 0xBD4B, 0xBF9F, 0xC087, 0xC0E4, 0xC109, 
-	0xC166, 0xC14E, 0xC097, 0xBEE5, 0xBD7B, 0xBCF7, 0xBCD4, 0xBCEA, 0xBD18, 
-	0xBD52, 0xBD88, 0xBDB2, 0xBDBE, 0xBDB8, 0xBDA7, 0xBD8A, 0xBD74, 0xBD77, 
-	0xBD7B, 0xBD82, 0xBD88, 0xBD89, 0xBD88, 0xBD86, 0xBD84, 0xBD82, 0xBD7F, 
-	0xBD7B, 0xBD77, 0xBD72, 0xBD6D, 0xBD67, 0xBD61, 0xBD5A, 0xBD53, 0xBD4C, 
-	0xBD44, 0xBD3C, 0xBD34, 0xBD2E, 0xBD28, 0xBD21, 0xBD1B, 0xBD16, 0xBD15, 
-	0xBD14, 0xBD12, 0xBD11, 0xBD0F, 0xBD0E, 0xBD0C, 0xBD09, 0xBD08, 0xBD07, 
-	0xBD05, 0xBD03, 0xBD01, 0xBCFE, 0xBCFC, 0xBCFA, 0xBCF8, 0xBCF6, 0xBCF4, 
-	0xBCF2, 0xBCEF, 0xBCED, 0xBCEB, 0xBCE8, 0xBCE5, 0xBCE3, 0xBCE1, 0xBCDF, 
-	0xBCDD, 0xBCDB, 0xBCD8, 0xBCD6, 0xBCD4, 0xBCD2, 0xBCD0, 0xBCCE, 0xBCCC, 
-	0xBCCA, 0xBCC8, 0xBCC5, 0xBCC5, 0xBCC4, 0xBCC1, 0xBCBF, 0xBCBD, 0xBCBB, 
-	0xBCB8, 0xBCB6, 0xBCB3, 0xBCB1, 0xBCAF, 0xBCAC, 0xBCAA, 0xBCA7, 0xBCA5, 
-	0xBCA2, 0xBCA0, 0xBC9D, 0xBC9B, 0xBC98, 0xBC96, 0xBC93, 0xBC91, 0xBC8E, 
-	0xBC8B, 0xBC89, 0xBC86, 0xBC84, 0xBC81, 0xBC7F, 0xBC7D, 0xBC7C, 0xBC7A, 
-	0xBC77, 0xBC75, 0xBC71, 0xBC6E, 0xBC6B, 0xBC68, 0xBC65, 0xBC62, 0xBC5F, 
-	0xBC5C, 0xBC58, 0xBC55, 0xBC52, 0xBC50, 0xBC4D, 0xBC4A, 0xBC46, 0xBC43, 
-	0xBC41, 0xBC3D, 0xBC3A, 0xBC37, 0xBC34, 0xBC31, 0xBC2E, 0xBC2B, 0xBC29, 
-	0xBC28, 0xBC26, 0xBC24, 0xBC22, 0xBC1F, 0xBC1C, 0xBC1A, 0xBC17, 0xBC14, 
-	0xBC12, 0xBC0F, 0xBC0D, 0xBC0A, 0xBC07, 0xBC04, 0xBC01, 0xBBFF, 0xBBFC, 
-	0xBBFA, 0xBBF7, 0xBBF4, 0xBBF1, 0xBBEE, 0xBBEB, 0xBBE8, 0xBBE6, 0xBBE3, 
-	0xBBDF, 0xBBDC, 0xBBDC, 0xBBDC, 0xBBDD, 0xBBDD, 0xBBDD, 0xBBDE, 0xBBDF, 
-	0xBBE0, 0xBBE0, 0xBBE0, 0xBBE0, 0xBBE1, 0xBBE1, 0xBBE1, 0xBBE1, 0xBBE1, 
-	0xBBE1, 0xBBE1, 0xBBE1, 0xBBE2, 0xBBE2, 0xBBE2, 0xBBE2, 0xBBE2, 0xBBE3, 
-	0xBBE3, 0xBBE3, 0xBBE4, 0xBBE4, 0xBBE4, 0xBBE5, 0xBBE5, 0xBBE5, 0xBBE6, 
-	0xBBE6, 0xBBE7, 0xBBE7, 0xBBE7, 0xBBE7, 0xBBE8, 0xBBE8, 0xBBE9, 0xFFFF, 
-	0x07DC, 0x070B, 0x015E, 0xF5A9, 0xE870, 0xE3CD, 0xE485, 0xE96E, 0xECA3, 
-	0xEADB, 0xECF7, 0xF25D, 0xFABC, 0x06C3, 0x14C0, 0x18F9, 0x186B, 0x10D6, 
-	0x0B5C, 0x0808, 0x06E4, 0x0660, 0x057C, 0x042D, 0x022B, 0x0016, 0xFDFD, 
-	0xFF46, 0x017E, 0x0442, 0x0563, 0x0577, 0x03E8, 0x0304, 0x01BF, 0x006C, 
-	0xFEEF, 0xFDC6, 0xFD14, 0xFCAF, 0xFC4C, 0xFBB8, 0xFB0E, 0xFADD, 0xFAB3, 
-	0xFAB1, 0xFAC2, 0xFABC, 0xFAC3, 0xFAC5, 0xFABD, 0xFAB0, 0xFAA5, 0xFAA7, 
-	0xFAA8, 0xFAA8, 0xFAAB, 0xFAAF, 0xFAB2, 0xFAB6, 0xFAB9, 0xFABD, 0xFAC2, 
-	0xFAC7, 0xFACC, 0xFAD1, 0xFAD7, 0xFADD, 0xFAE3, 0xFAE9, 0xFAF0, 0xFAF8, 
-	0xFB03, 0xFB0C, 0xFB15, 0xFB1A, 0xFB1B, 0xFB1C, 0xFB1E, 0xFB20, 0xFB22, 
-	0xFB25, 0xFB28, 0xFB2F, 0xFB2E, 0xFB2F, 0xFB33, 0xFB36, 0xFB39, 0xFB3B, 
-	0xFB3E, 0xFB41, 0xFB44, 0xFB47, 0xFB49, 0xFB4C, 0xFB50, 0xFB53, 0xFB56, 
-	0xFB59, 0xFB5C, 0xFB5F, 0xFB62, 0xFB65, 0xFB68, 0xFB6C, 0xFB6F, 0xFB72, 
-	0xFB75, 0xFB78, 0xFB7C, 0xFB7F, 0xFB82, 0xFB86, 0xFB89, 0xFB8C, 0xFB8E, 
-	0xFB91, 0xFB94, 0xFB98, 0xFB9C, 0xFB9F, 0xFBA2, 0xFBA6, 0xFBA9, 0xFBAD, 
-	0xFBB0, 0xFBB4, 0xFBB8, 0xFBBB, 0xFBBF, 0xFBC2, 0xFBC6, 0xFBC9, 0xFBCD, 
-	0xFBD1, 0xFBD5, 0xFBD8, 0xFBDC, 0xFBE0, 0xFBE4, 0xFBE8, 0xFBEB, 0xFBEF, 
-	0xFBF3, 0xFBF7, 0xFBFA, 0xFBFD, 0xFC01, 0xFC06, 0xFC0A, 0xFC0E, 0xFC12, 
-	0xFC16, 0xFC1A, 0xFC1F, 0xFC24, 0xFC29, 0xFC2E, 0xFC33, 0xFC37, 0xFC3C, 
-	0xFC40, 0xFC44, 0xFC49, 0xFC4E, 0xFC54, 0xFC58, 0xFC5D, 0xFC62, 0xFC67, 
-	0xFC6B, 0xFC71, 0xFC76, 0xFC7A, 0xFC7D, 0xFC7E, 0xFC81, 0xFC85, 0xFC88, 
-	0xFC8B, 0xFC8F, 0xFC93, 0xFC96, 0xFC9A, 0xFC9D, 0xFCA1, 0xFCA4, 0xFCA8, 
-	0xFCAB, 0xFCAF, 0xFCB3, 0xFCB7, 0xFCBA, 0xFCBD, 0xFCC1, 0xFCC5, 0xFCC9, 
-	0xFCCC, 0xFCD0, 0xFCD3, 0xFCD7, 0xFCDB, 0xFCDE, 0xFCE2, 0xFCE3, 0xFCE4, 
-	0xFCE4, 0xFCE4, 0xFCE5, 0xFCE5, 0xFCE6, 0xFCE6, 0xFCE7, 0xFCE7, 0xFCE7, 
-	0xFCE8, 0xFCE8, 0xFCE8, 0xFCE9, 0xFCE9, 0xFCE9, 0xFCEA, 0xFCEA, 0xFCEA, 
-	0xFCEA, 0xFCEB, 0xFCEB, 0xFCEB, 0xFCEC, 0xFCEC, 0xFCED, 0xFCED, 0xFCED, 
-	0xFCED, 0xFCEE, 0xFCEE, 0xFCEF, 0xFCEF, 0xFCF0, 0xFCF0, 0xFCF0, 0xFCF1, 
-	0xFCF1, 0xFCF2, 0xFCF2, 0xFCF3, 0xFFFF, 0xFD62, 0xF9E2, 0xF9C2, 0xFD64, 
-	0x0191, 0x04E6, 0x0925, 0x0C5F, 0x0C46, 0x09E7, 0x0F99, 0x167A, 0x1AF0, 
-	0x1938, 0x14A8, 0x0E47, 0x08F4, 0x0926, 0x0890, 0x07EB, 0x07FB, 0x0788, 
-	0x055F, 0x026C, 0xFF60, 0xFCF0, 0xFB22, 0xF896, 0xFA00, 0xFBDD, 0xFD87, 
-	0xFF08, 0x00B5, 0x0208, 0x0327, 0x04C6, 0x071F, 0x0A4C, 0x0C9E, 0x0DE4, 
-	0x0EBA, 0x0F87, 0x1012, 0x1049, 0x1057, 0x1056, 0x1040, 0x103F, 0x1057, 
-	0x105D, 0x1053, 0x1048, 0x1038, 0x102B, 0x1023, 0x101E, 0x101F, 0x101F, 
-	0x1020, 0x1021, 0x1022, 0x1023, 0x1024, 0x1024, 0x1025, 0x1028, 0x102A, 
-	0x102C, 0x102F, 0x1033, 0x1038, 0x103B, 0x1038, 0x1036, 0x1036, 0x1035, 
-	0x1034, 0x1033, 0x1032, 0x1030, 0x102E, 0x102D, 0x102A, 0x1027, 0x1026, 
-	0x1023, 0x1021, 0x101F, 0x101C, 0x101A, 0x1018, 0x1016, 0x1013, 0x1011, 
-	0x100F, 0x100D, 0x100A, 0x1007, 0x1004, 0x1001, 0x0FFF, 0x0FFC, 0x0FFA, 
-	0x0FF7, 0x0FF5, 0x0FF2, 0x0FF0, 0x0FED, 0x0FEB, 0x0FE9, 0x0FE7, 0x0FE5, 
-	0x0FE3, 0x0FE0, 0x0FDE, 0x0FDB, 0x0FDA, 0x0FD8, 0x0FD6, 0x0FD3, 0x0FD0, 
-	0x0FCD, 0x0FCA, 0x0FC8, 0x0FC5, 0x0FC3, 0x0FC0, 0x0FBD, 0x0FBA, 0x0FB7, 
-	0x0FB5, 0x0FB2, 0x0FAF, 0x0FAC, 0x0FA9, 0x0FA6, 0x0FA3, 0x0FA1, 0x0F9E, 
-	0x0F9B, 0x0F98, 0x0F95, 0x0F92, 0x0F8F, 0x0F8C, 0x0F89, 0x0F87, 0x0F84, 
-	0x0F82, 0x0F7F, 0x0F7C, 0x0F79, 0x0F75, 0x0F72, 0x0F6F, 0x0F6C, 0x0F68, 
-	0x0F65, 0x0F62, 0x0F5E, 0x0F5B, 0x0F58, 0x0F55, 0x0F52, 0x0F4F, 0x0F4C, 
-	0x0F4A, 0x0F48, 0x0F45, 0x0F42, 0x0F40, 0x0F3D, 0x0F3A, 0x0F38, 0x0F35, 
-	0x0F32, 0x0F30, 0x0F2D, 0x0F29, 0x0F26, 0x0F22, 0x0F1E, 0x0F1B, 0x0F17, 
-	0x0F13, 0x0F0F, 0x0F0B, 0x0F08, 0x0F04, 0x0F00, 0x0EFC, 0x0EF8, 0x0EF4, 
-	0x0EF0, 0x0EEC, 0x0EE8, 0x0EE5, 0x0EE1, 0x0EDD, 0x0ED9, 0x0ED5, 0x0ED2, 
-	0x0ECE, 0x0ECA, 0x0EC6, 0x0EC5, 0x0EC4, 0x0EC4, 0x0EC4, 0x0EC3, 0x0EC2, 
-	0x0EC2, 0x0EC2, 0x0EC1, 0x0EC0, 0x0EBF, 0x0EBE, 0x0EBC, 0x0EBA, 0x0EB9, 
-	0x0EB7, 0x0EB5, 0x0EB3, 0x0EB1, 0x0EAF, 0x0EAE, 0x0EAC, 0x0EAA, 0x0EA9, 
-	0x0EA8, 0x0EA6, 0x0EA5, 0x0EA4, 0x0EA4, 0x0EA3, 0x0EA1, 0x0EA1, 0x0EA0, 
-	0x0EA0, 0x0E9F, 0x0E9E, 0x0E9D, 0x0E9B, 0x0E9A, 0x0E98, 0x0E97, 0x0E95, 
-	0x0E95, 0x0E93, 0x0000, 0xF259, 0xF66E, 0xF908, 0xF72D, 0xF561, 0xF34D, 
-	0xF1D2, 0xF30E, 0xF67B, 0xFABE, 0xFB76, 0xFBCB, 0x02C0, 0x1281, 0x1DEE, 
-	0x2890, 0x2E1E, 0x2E43, 0x29D7, 0x23F5, 0x1D8B, 0x18D7, 0x1655, 0x143D, 
-	0x0F4C, 0x09CA, 0x0352, 0xFF60, 0xFD63, 0xFC1F, 0xFC09, 0xFBFE, 0xFB74, 
-	0xFB47, 0xFB72, 0xFCCC, 0xFE4D, 0xFED3, 0xFF07, 0xFEED, 0xFEB0, 0xFE70, 
-	0xFE26, 0xFDF8, 0xFDDF, 0xFDE1, 0xFDF8, 0xFE20, 0xFE3B, 0xFE3F, 0xFE39, 
-	0xFE2D, 0xFE23, 0xFE23, 0xFE25, 0xFE28, 0xFE2A, 0xFE2D, 0xFE30, 0xFE34, 
-	0xFE3A, 0xFE40, 0xFE47, 0xFE4E, 0xFE56, 0xFE5E, 0xFE67, 0xFE70, 0xFE7A, 
-	0xFE83, 0xFE8D, 0xFE94, 0xFE9B, 0xFEA3, 0xFEAB, 0xFEB0, 0xFEB2, 0xFEB3, 
-	0xFEB5, 0xFEB7, 0xFEB9, 0xFEBB, 0xFEBD, 0xFEC1, 0xFEC2, 0xFEC3, 0xFEC6, 
-	0xFEC9, 0xFECC, 0xFECE, 0xFED1, 0xFED4, 0xFED7, 0xFEDA, 0xFEDC, 0xFEDF, 
-	0xFEE2, 0xFEE4, 0xFEE7, 0xFEEB, 0xFEEE, 0xFEF2, 0xFEF4, 0xFEF7, 0xFEF9, 
-	0xFEFC, 0xFEFF, 0xFF01, 0xFF04, 0xFF06, 0xFF09, 0xFF0B, 0xFF0D, 0xFF10, 
-	0xFF13, 0xFF16, 0xFF16, 0xFF18, 0xFF1A, 0xFF1D, 0xFF20, 0xFF23, 0xFF26, 
-	0xFF29, 0xFF2C, 0xFF2E, 0xFF32, 0xFF35, 0xFF38, 0xFF3B, 0xFF3E, 0xFF41, 
-	0xFF44, 0xFF46, 0xFF49, 0xFF4D, 0xFF50, 0xFF53, 0xFF56, 0xFF59, 0xFF5C, 
-	0xFF5F, 0xFF62, 0xFF65, 0xFF68, 0xFF6B, 0xFF6D, 0xFF6E, 0xFF70, 0xFF74, 
-	0xFF77, 0xFF7B, 0xFF7F, 0xFF83, 0xFF86, 0xFF8A, 0xFF8D, 0xFF91, 0xFF95, 
-	0xFF99, 0xFF9D, 0xFFA0, 0xFFA3, 0xFFA7, 0xFFAA, 0xFFAF, 0xFFB2, 0xFFB5, 
-	0xFFB8, 0xFFBC, 0xFFBF, 0xFFC3, 0xFFC7, 0xFFCB, 0xFFCE, 0xFFD0, 0xFFD1, 
-	0xFFD3, 0xFFD6, 0xFFD9, 0xFFDC, 0xFFDF, 0xFFE2, 0xFFE5, 0xFFE8, 0xFFEB, 
-	0xFFEE, 0xFFF1, 0xFFF4, 0xFFF7, 0xFFFB, 0xFFFE, 0x0002, 0x0006, 0x0008, 
-	0x000C, 0x000F, 0x0012, 0x0015, 0x0019, 0x001C, 0x001F, 0x0023, 0x0026, 
-	0x002A, 0x002A, 0x002A, 0x0029, 0x0028, 0x0028, 0x0027, 0x0026, 0x0025, 
-	0x0024, 0x0024, 0x0024, 0x0023, 0x0023, 0x0023, 0x0023, 0x0023, 0x0023, 
-	0x0023, 0x0022, 0x0022, 0x0022, 0x0022, 0x0022, 0x0021, 0x0021, 0x0020, 
-	0x0020, 0x001F, 0x001F, 0x001F, 0x001E, 0x001D, 0x001D, 0x001C, 0x001B, 
-	0x001B, 0x001A, 0x001A, 0x001A, 0x0019, 0x0019, 0x0018, 0x0017, 0x0000, 
-	0xFD42, 0x00C5, 0x0A26, 0x18FF, 0x2717, 0x2F3E, 0x346C, 0x36C8, 0x3A2E, 
-	0x3E27, 0x3FD8, 0x3FCD, 0x3F0C, 0x3BD4, 0x3255, 0x2D66, 0x2776, 0x236C, 
-	0x1D63, 0x191B, 0x13A5, 0x0CAF, 0x056B, 0xFFB6, 0x03A4, 0x063E, 0x087C, 
-	0x0730, 0x05A4, 0x037A, 0x0222, 0x013E, 0x015C, 0x0086, 0x0002, 0x0001, 
-	0x0057, 0x010D, 0x0167, 0x0172, 0x019F, 0x01D7, 0x020F, 0x0220, 0x0224, 
-	0x0222, 0x0222, 0x0235, 0x023A, 0x0243, 0x0243, 0x0243, 0x0243, 0x0242, 
-	0x0243, 0x0244, 0x0243, 0x0242, 0x0242, 0x0241, 0x0241, 0x0241, 0x0242, 
-	0x0242, 0x0242, 0x0242, 0x0242, 0x0242, 0x0242, 0x0242, 0x0242, 0x0240, 
-	0x023D, 0x023B, 0x0239, 0x0239, 0x0238, 0x0238, 0x0238, 0x0238, 0x0237, 
-	0x0237, 0x0236, 0x0234, 0x0234, 0x0234, 0x0233, 0x0233, 0x0232, 0x0232, 
-	0x0232, 0x0231, 0x0231, 0x0230, 0x0230, 0x022F, 0x022F, 0x022E, 0x022E, 
-	0x022D, 0x022D, 0x022C, 0x022C, 0x022B, 0x022B, 0x022A, 0x0229, 0x0228, 
-	0x0228, 0x0227, 0x0226, 0x0225, 0x0224, 0x0223, 0x0223, 0x0222, 0x0222, 
-	0x0221, 0x0220, 0x021F, 0x021E, 0x021D, 0x021D, 0x021C, 0x021B, 0x021A, 
-	0x021A, 0x0219, 0x0218, 0x0217, 0x0217, 0x0216, 0x0215, 0x0214, 0x0214, 
-	0x0213, 0x0212, 0x0211, 0x0211, 0x0210, 0x020F, 0x020E, 0x020D, 0x020C, 
-	0x020B, 0x020A, 0x0209, 0x0208, 0x0207, 0x0206, 0x0205, 0x0204, 0x0203, 
-	0x0203, 0x0202, 0x0201, 0x01FF, 0x01FE, 0x01FD, 0x01FC, 0x01FB, 0x01FA, 
-	0x01F9, 0x01F8, 0x01F7, 0x01F5, 0x01F4, 0x01F2, 0x01F1, 0x01F0, 0x01EF, 
-	0x01ED, 0x01EC, 0x01EA, 0x01EA, 0x01E9, 0x01E9, 0x01E8, 0x01E7, 0x01E6, 
-	0x01E6, 0x01E5, 0x01E4, 0x01E3, 0x01E3, 0x01E2, 0x01E1, 0x01E1, 0x01E0, 
-	0x01E0, 0x01DF, 0x01DE, 0x01DD, 0x01DD, 0x01DC, 0x01DC, 0x01DB, 0x01DA, 
-	0x01D9, 0x01D9, 0x01D8, 0x01D8, 0x01D7, 0x01D6, 0x01D6, 0x01D6, 0x01D5, 
-	0x01D5, 0x01D4, 0x01D4, 0x01D3, 0x01D3, 0x01D2, 0x01D1, 0x01D1, 0x01D1, 
-	0x01D1, 0x01D1, 0x01D0, 0x01D0, 0x01D0, 0x01D0, 0x01D0, 0x01D0, 0x01D0, 
-	0x01CF, 0x01CF, 0x01CF, 0x01CF, 0x01CF, 0x01CE, 0x01CE, 0x01CE, 0x01CD, 
-	0x01CD, 0x01CC, 0x01CC, 0x01CC, 0x01CB, 0x01CB, 0x01CA, 0x01CA, 0x01CA, 
-	0x01C9, 0x01C9, 0x01C9, 0x01C8, 0x0000, 0x026D, 0x0509, 0x04B0, 0xFF9B, 
-	0xF722, 0xED70, 0xE3D0, 0xDC59, 0xDA3D, 0xDE63, 0xDEEF, 0xE0CF, 0xE32A, 
-	0xE250, 0xDA6C, 0xD94A, 0xD796, 0xD74C, 0xD804, 0xD8E7, 0xD980, 0xDAC7, 
-	0xDE00, 0xE30A, 0xEBBD, 0xF4ED, 0xFD0A, 0x04CD, 0x0647, 0x06AB, 0x06F5, 
-	0x071E, 0x071A, 0x0761, 0x07A7, 0x0782, 0x06F2, 0x05E4, 0x04F6, 0x0492, 
-	0x0457, 0x03DA, 0x0385, 0x0373, 0x0361, 0x035F, 0x0367, 0x036B, 0x0368, 
-	0x035F, 0x035C, 0x035B, 0x0359, 0x0359, 0x0357, 0x0355, 0x0355, 0x0354, 
-	0x0354, 0x0353, 0x0353, 0x0352, 0x0353, 0x0353, 0x0353, 0x0353, 0x0354, 
-	0x0354, 0x0354, 0x0354, 0x0353, 0x0354, 0x0357, 0x035A, 0x035C, 0x035D, 
-	0x035E, 0x035E, 0x035F, 0x0360, 0x0360, 0x0360, 0x0362, 0x0364, 0x0363, 
-	0x0363, 0x0364, 0x0364, 0x0365, 0x0365, 0x0366, 0x0366, 0x0367, 0x0368, 
-	0x0368, 0x0369, 0x036A, 0x036B, 0x036C, 0x036D, 0x036E, 0x036F, 0x036F, 
-	0x0370, 0x0371, 0x0372, 0x0373, 0x0374, 0x0375, 0x0375, 0x0376, 0x0377, 
-	0x0377, 0x0378, 0x0379, 0x0379, 0x0379, 0x037A, 0x037B, 0x037B, 0x037D, 
-	0x037E, 0x037E, 0x037F, 0x0380, 0x0381, 0x0382, 0x0383, 0x0384, 0x0385, 
-	0x0386, 0x0387, 0x0388, 0x0389, 0x0389, 0x038A, 0x038B, 0x038C, 0x038D, 
-	0x038E, 0x038F, 0x0390, 0x0391, 0x0392, 0x0393, 0x0394, 0x0395, 0x0396, 
-	0x0397, 0x0398, 0x0399, 0x039A, 0x039B, 0x039C, 0x039D, 0x039F, 0x03A0, 
-	0x03A2, 0x03A3, 0x03A5, 0x03A6, 0x03A7, 0x03A9, 0x03AA, 0x03AB, 0x03AD, 
-	0x03AF, 0x03B0, 0x03B2, 0x03B3, 0x03B5, 0x03B6, 0x03B8, 0x03B9, 0x03BB, 
-	0x03BB, 0x03BB, 0x03BC, 0x03BD, 0x03BE, 0x03BF, 0x03C0, 0x03C1, 0x03C2, 
-	0x03C3, 0x03C4, 0x03C5, 0x03C6, 0x03C7, 0x03C8, 0x03C9, 0x03CA, 0x03CB, 
-	0x03CC, 0x03CC, 0x03CD, 0x03CE, 0x03CF, 0x03D0, 0x03D0, 0x03D1, 0x03D2, 
-	0x03D3, 0x03D4, 0x03D5, 0x03D5, 0x03D5, 0x03D5, 0x03D5, 0x03D5, 0x03D5, 
-	0x03D5, 0x03D5, 0x03D5, 0x03D6, 0x03D6, 0x03D6, 0x03D6, 0x03D7, 0x03D7, 
-	0x03D8, 0x03D9, 0x03D9, 0x03D9, 0x03DA, 0x03DA, 0x03DB, 0x03DB, 0x03DC, 
-	0x03DC, 0x03DC, 0x03DC, 0x03DC, 0x03DC, 0x03DC, 0x03DD, 0x03DD, 0x03DD, 
-	0x03DD, 0x03DD, 0x03DD, 0x03DD, 0x03DE, 0x03DE, 0x03DF, 0x03DF, 0x03DF, 
-	0x03DF, 0x03E0, 0xFFFF, 0x0185, 0x000D, 0x0210, 0x065B, 0x06FA, 0x02BA, 
-	0xFC02, 0xF5C3, 0xEF62, 0xE985, 0xE454, 0xE0C8, 0xDB10, 0xD379, 0xD41F, 
-	0xD251, 0xD344, 0xD6CF, 0xDDC1, 0xE362, 0xEAB9, 0xF1DD, 0xF7A3, 0xFC98, 
-	0xFBC4, 0xFC7C, 0xFFE9, 0x022A, 0x02B3, 0x0345, 0x0324, 0x033A, 0x03BC, 
-	0x03F1, 0x0436, 0x043B, 0x03E2, 0x03D8, 0x03B3, 0x039E, 0x03A0, 0x0388, 
-	0x0370, 0x0369, 0x0367, 0x0369, 0x0369, 0x0362, 0x0360, 0x035D, 0x035C, 
-	0x035C, 0x035C, 0x035D, 0x035C, 0x035C, 0x035C, 0x035D, 0x035D, 0x035D, 
-	0x035D, 0x035D, 0x035C, 0x035C, 0x035C, 0x035C, 0x035C, 0x035C, 0x035C, 
-	0x035C, 0x035C, 0x035D, 0x035F, 0x0360, 0x0361, 0x0361, 0x0361, 0x0361, 
-	0x0361, 0x0361, 0x0362, 0x0362, 0x0362, 0x0363, 0x0363, 0x0363, 0x0363, 
-	0x0363, 0x0364, 0x0364, 0x0364, 0x0364, 0x0364, 0x0364, 0x0364, 0x0365, 
-	0x0365, 0x0365, 0x0365, 0x0366, 0x0366, 0x0366, 0x0366, 0x0366, 0x0367, 
-	0x0367, 0x0367, 0x0367, 0x0368, 0x0368, 0x0368, 0x0369, 0x0369, 0x036A, 
-	0x036A, 0x036A, 0x036A, 0x036B, 0x036B, 0x036B, 0x036C, 0x036C, 0x036C, 
-	0x036D, 0x036D, 0x036D, 0x036D, 0x036E, 0x036E, 0x036E, 0x036F, 0x036F, 
-	0x036F, 0x0370, 0x0370, 0x0370, 0x0371, 0x0371, 0x0371, 0x0372, 0x0372, 
-	0x0372, 0x0373, 0x0373, 0x0373, 0x0374, 0x0374, 0x0375, 0x0375, 0x0376, 
-	0x0376, 0x0376, 0x0377, 0x0377, 0x0377, 0x0378, 0x0378, 0x0379, 0x0379, 
-	0x037A, 0x037A, 0x037A, 0x037B, 0x037B, 0x037C, 0x037C, 0x037D, 0x037D, 
-	0x037E, 0x037E, 0x037F, 0x037F, 0x0380, 0x0380, 0x0381, 0x0381, 0x0381, 
-	0x0381, 0x0382, 0x0382, 0x0382, 0x0383, 0x0383, 0x0383, 0x0384, 0x0384, 
-	0x0384, 0x0384, 0x0385, 0x0385, 0x0385, 0x0385, 0x0386, 0x0386, 0x0386, 
-	0x0386, 0x0386, 0x0387, 0x0387, 0x0387, 0x0387, 0x0388, 0x0388, 0x0388, 
-	0x0389, 0x0389, 0x0389, 0x0389, 0x0389, 0x0389, 0x038A, 0x038A, 0x038A, 
-	0x038A, 0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 
-	0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 0x038C, 0x038C, 
-	0x038C, 0x038C, 0x038C, 0x038C, 0x038C, 0x038D, 0x038D, 0x038D, 0x038D, 
-	0x038D, 0x038D, 0x038D, 0x038E, 0x0000, 0x4000, 0x0000, 0x227F, 0x26F3, 
-	0x3964, 0x4973, 0x4F09, 0x52AB, 0x58B3, 0x607B, 0x71D7, 0x0721, 0x099C, 
-	0x0A74, 0x84D1, 0x7C5E, 0xF630, 0xE48B, 0xD41C, 0xCDCC, 0xD2FB, 0xD4C8, 
-	0xD843, 0xDB6E, 0xDAC0, 0xD565, 0xCFBD, 0xCC0F, 0xC9C7, 0xC8FF, 0xC54C, 
-	0x4233, 0x3EDB, 0x3A15, 0x34E2, 0x2F8F, 0x2A5D, 0x256C, 0x20C6, 0x1CE7, 
-	0x1A16, 0x188B, 0x1997, 0x1B80, 0x1E59, 0x2214, 0x26A4, 0x2BE8, 0x31C2, 
-	0x37E3, 0x3E18, 0xC409, 0xC5E8, 0xC75C, 0xC84B, 0xC8A5, 0xC875, 0xC7D4, 
-	0xC6C9, 0xC563, 0xC3B2, 0xC1CA, 0xBFBC, 0x3D9D, 0x3B7A, 0x3965, 0x3770, 
-	0x35AD, 0x3429, 0x32F3, 0x3218, 0x31A1, 0x3192, 0x31EC, 0x32AA, 0x33C0, 
-	0x3526, 0x36CD, 0x38A4, 0x3A9D, 0x3CA5, 0x3EAA, 0xC099, 0xC263, 0xC3F4, 
-	0xC4AF, 0xC4A5, 0xC446, 0xC399, 0xC2A4, 0xC174, 0xC014, 0x3E93, 0x3CFF, 
-	0x3B67, 0x39D9, 0x3865, 0x3716, 0x35FA, 0x351B, 0x3481, 0x3434, 0x3435, 
-	0x3484, 0x351E, 0x35FD, 0x3716, 0x3861, 0x39CF, 0x3B53, 0x3CE0, 0x3E67, 
-	0x3FDA, 0xC12A, 0xC24C, 0xC332, 0xC3D4, 0xC42A, 0xC431, 0xC3E8, 0xC354, 
-	0xC27A, 0xC165, 0xC021, 0x3EBA, 0x3D3E, 0x3BBB, 0x3A40, 0x38DA, 0x3796, 
-	0x3680, 0x35A3, 0x3506, 0x34B1, 0x34A7, 0x34E6, 0x356E, 0x3638, 0x373C, 
-	0x386F, 0x39C7, 0x3B35, 0x3CAE, 0x3E23, 0x3F86, 0xC0C9, 0xC1E1, 0xC2C2, 
-	0xC362, 0xC3BB, 0xC3C8, 0xC38A, 0xC303, 0xC23A, 0xC137, 0xC006, 0x3EB3, 
-	0x3D4B, 0x3BDC, 0x3A74, 0x391F, 0x37EA, 0x36E0, 0x360D, 0x3577, 0x3525, 
-	0x351A, 0x3557, 0x35D8, 0x3698, 0x3790, 0x38B5, 0x39FC, 0x3B59, 0x3CC0, 
-	0x3E22, 0x3F72, 0xC0A4, 0xC1AB, 0xC27D, 0xC310, 0xC35E, 0xC364, 0xC323, 
-	0xC29C, 0xC1D7, 0xC0DB, 0xBFB5, 0x3E70, 0x3D17, 0x3BBA, 0x3A64, 0x3923, 
-	0x3803, 0x370E, 0x364D, 0x35C9, 0x3587, 0x3588, 0x35CE, 0x3654, 0x3715, 
-	0x3809, 0x3927, 0x3A64, 0x3BB3, 0x3D08, 0x3E56, 0xBF90, 0xC0AB, 0xC19B, 
-	0xC255, 0xC2D2, 0xC30C, 0xC302, 0xC2B4, 0xC225, 0xC15C, 0xC062, 0x3F42, 
-	0x3E06, 0x3CBC, 0x3B71, 0x3A2F, 0x3904, 0x37FB, 0x371E, 0x3675, 0x3608, 
-	0x35D9, 0x35EB, 0x363D, 0x36CC, 0x3791, 0x3884, 0x399C, 0x3ACE, 0x3C0F, 
-	0x3D52, 0x3E8B, 0xBFAE, 0xC0B0, 0xC186, 0xC228, 0xC28E, 0xC2B4, 0xC29A, 
-	0xC23F, 0xC1A9, 0xC0DE, 0xBFE6, 0x3ECE, 0x289C, 0x1CEE, 0x1608, 0x0977, 
-	0x00F1, 0xF91F, 0xF5E5, 0xF78E, 0xFBB7, 0x7B98, 0x7AD2, 0x78D4, 0x0194, 
-	0x056D, 0x6A5E, 0x59FC, 0x5458, 0x5445, 0x5455, 0x5AC8, 0x616C, 0x67BF, 
-	0x6B75, 0x6F21, 0x753B, 0x7AB9, 0x7EC4, 0x8026, 0x82F5, 0xFF0E, 0x01A5, 
-	0x0395, 0x0498, 0x046C, 0x0393, 0x032D, 0x039E, 0x050A, 0x0726, 0x0862, 
-	0x06DE, 0x04AC, 0x0378, 0x0337, 0x0365, 0x0317, 0x01CD, 0xFEB9, 0xFA4D, 
-	0x8A6E, 0x8BC3, 0x8CD5, 0x8D8E, 0x8DE2, 0x8DD5, 0x8D71, 0x8CB5, 0x8BA8, 
-	0x8A50, 0x88B4, 0x86E2, 0xFB0F, 0xFD0A, 0xFEFB, 0x00D2, 0x027A, 0x03E8, 
-	0x0510, 0x05E9, 0x066C, 0x0694, 0x0665, 0x05DB, 0x04EA, 0x03AA, 0x022C, 
-	0x0082, 0xFEB9, 0xFCE2, 0xFB12, 0x86A3, 0x8830, 0x8985, 0x8A22, 0x8A1C, 
-	0x89CB, 0x8939, 0x8869, 0x8762, 0x862D, 0xFB28, 0xFC94, 0xFE06, 0xFF70, 
-	0x00C5, 0x01F5, 0x02F7, 0x03C1, 0x044C, 0x0493, 0x0496, 0x0452, 0x03CC, 
-	0x0307, 0x020B, 0x00E1, 0xFF95, 0xFE35, 0xFCCE, 0xFB70, 0xFA26, 0x8701, 
-	0x87FD, 0x88C3, 0x894E, 0x8997, 0x899E, 0x8961, 0x88E5, 0x882C, 0x873E, 
-	0x8622, 0xFB1A, 0xFC6E, 0xFDCB, 0xFF23, 0x0069, 0x018E, 0x0289, 0x0350, 
-	0x03DC, 0x0428, 0x0432, 0x03FA, 0x0381, 0x02CC, 0x01E1, 0x00CB, 0xFF92, 
-	0xFE45, 0xFCEF, 0xFB9F, 0xFA62, 0x86BA, 0x87AE, 0x8870, 0x88FA, 0x8946, 
-	0x8952, 0x891F, 0x88AE, 0x8803, 0x8725, 0x861A, 0xFB10, 0xFC51, 0xFD9B, 
-	0xFEE1, 0x0017, 0x012F, 0x021E, 0x02DC, 0x0362, 0x03AB, 0x03B4, 0x037E, 
-	0x030A, 0x025C, 0x017C, 0x0072, 0xFF48, 0xFE0A, 0xFCC6, 0xFB87, 0xFA5B, 
-	0x86B1, 0x8797, 0x884B, 0x88CA, 0x890D, 0x8912, 0x88DB, 0x8869, 0x87C0, 
-	0x86E6, 0x85E4, 0xFB3C, 0xFC70, 0xFDAA, 0xFEDF, 0x0003, 0x0108, 0x01E5, 
-	0x0291, 0x0308, 0x0343, 0x0340, 0x0302, 0x0288, 0x01D8, 0x00FA, 0xFFF5, 
-	0xFED6, 0xFDA7, 0xFC74, 0xFB49, 0x85CC, 0x86C3, 0x8793, 0x8831, 0x889B, 
-	0x88CA, 0x88C0, 0x887B, 0x8801, 0x8752, 0x8676, 0xFA88, 0xFBA3, 0xFCCD, 
-	0xFDFA, 0xFF1F, 0x0030, 0x0122, 0x01EB, 0x0285, 0x02E9, 0x0314, 0x0305, 
-	0x02BD, 0x023E, 0x018E, 0x00B3, 0xFFB5, 0xFEA1, 0xFD81, 0xFC5D, 0xFB45, 
-	0x85BB, 0x869D, 0x8756, 0x87E0, 0x8837, 0x8857, 0x8840, 0x87F3, 0x8772, 
-	0x86C1, 0x85E7, 0xFB11, 0xB5C4, 0xC273, 0xC2E7, 0xC709, 0xD4E5, 0xDFC8, 
-	0xE032, 0xDAD9, 0xCA8C, 0x35EC, 0x3089, 0x3BD0, 0xC6C4, 0xCAE4, 0x4399, 
-	0x2DF8, 0x213F, 0x1E31, 0x231D, 0x234D, 0x2282, 0x1FAA, 0x189E, 0x0ED7, 
-	0x0662, 0x0136, 0xFE25, 0xFCA9, 0xFABD, 0x7913, 0x7700, 0x750E, 0x73BA, 
-	0x743C, 0x74A8, 0x75E4, 0x76EC, 0x7742, 0x76F3, 0x7686, 0x7814, 0x79A8, 
-	0x79EA, 0x795B, 0x788C, 0x7821, 0x77A6, 0x77B4, 0x77AA, 0xF6D7, 0xF67D, 
-	0xF642, 0xF62C, 0xF640, 0xF682, 0xF6E7, 0xF767, 0xF7F9, 0xF88B, 0xF90D, 
-	0xF974, 0x79B8, 0x79E2, 0x79F2, 0x79ED, 0x79D8, 0x79B6, 0x7996, 0x7980, 
-	0x797B, 0x798C, 0x79B1, 0x79E1, 0x7A0A, 0x7A3A, 0x7A64, 0x7A7E, 0x7A83, 
-	0x7A70, 0x7A46, 0xFA09, 0xF9C0, 0xF972, 0xF94A, 0xF94F, 0xF963, 0xF988, 
-	0xF9B9, 0xF9EE, 0xFA21, 0x7A4E, 0x7A6F, 0x7A81, 0x7A86, 0x7A7D, 0x7A6C, 
-	0x7A55, 0x7A3E, 0x7A2D, 0x7A23, 0x7A24, 0x7A2D, 0x7A3F, 0x7A55, 0x7A6B, 
-	0x7A7D, 0x7A86, 0x7A82, 0x7A71, 0x7A53, 0x7A2A, 0xF9FC, 0xF9CD, 0xF9A4, 
-	0xF984, 0xF974, 0xF973, 0xF983, 0xF9A3, 0xF9CE, 0xF9FE, 0xFA2E, 0x7A5A, 
-	0x7A7B, 0x7A91, 0x7A99, 0x7A95, 0x7A88, 0x7A76, 0x7A64, 0x7A54, 0x7A4B, 
-	0x7A4B, 0x7A53, 0x7A63, 0x7A78, 0x7A8D, 0x7A9D, 0x7AA6, 0x7AA4, 0x7A96, 
-	0x7A7C, 0x7A59, 0xFA2F, 0xFA04, 0xF9DE, 0xF9C1, 0xF9B0, 0xF9B0, 0xF9BE, 
-	0xF9DB, 0xFA02, 0xFA2E, 0xFA5B, 0x7A84, 0x7AA4, 0x7ABA, 0x7AC4, 0x7AC3, 
-	0x7ABA, 0x7AAC, 0x7A9D, 0x7A90, 0x7A89, 0x7A8A, 0x7A92, 0x7AA1, 0x7AB4, 
-	0x7AC7, 0x7AD6, 0x7ADE, 0x7ADB, 0x7ACE, 0x7AB6, 0x7A96, 0xFA6F, 0xFA48, 
-	0xFA24, 0xFA09, 0xF9FB, 0xF9FA, 0xFA08, 0xFA23, 0xFA47, 0xFA70, 0xFA99, 
-	0x7ABE, 0x7ADA, 0x7AED, 0x7AF5, 0x7AF4, 0x7AEB, 0x7ADE, 0x7AD0, 0x7AC4, 
-	0x7ABE, 0x7ABF, 0x7AC7, 0x7AD3, 0x7AE2, 0x7AF0, 0x7AF9, 0x7AFB, 0x7AF6, 
-	0x7AE5, 0x7ACC, 0xFAAA, 0xFA85, 0xFA60, 0xFA41, 0xFA2A, 0xFA1F, 0xFA20, 
-	0xFA2F, 0xFA48, 0xFA6A, 0xFA8E, 0x7AB2, 0x7AD2, 0x7AE9, 0x7AF6, 0x7AF9, 
-	0x7AF6, 0x7AEB, 0x7ADD, 0x7AD0, 0x7AC6, 0x7AC1, 0x7AC2, 0x7AC8, 0x7AD4, 
-	0x7AE0, 0x7AEB, 0x7AF1, 0x7AF1, 0x7AE6, 0x7AD3, 0x7AB8, 0xFA97, 0xFA75, 
-	0xFA54, 0xFA38, 0xFA25, 0xFA1E, 0xFA23, 0xFA33, 0xFA4C, 0xFA6C, 0xFA8E, 
-	0x7AAE, 0xF56C, 0x0102, 0xE125, 0xEF6B, 0x03E8, 0x1C0D, 0x36F2, 0x5260, 
-	0x6987, 0x6D16, 0x7DCF, 0x9347, 0x954B, 0x96A9, 0xA8C5, 0xC0F2, 0xC909, 
-	0xCF2E, 0xC8CB, 0xBD89, 0xB08F, 0xA46B, 0x97F1, 0x8B58, 0x7F41, 0x777F, 
-	0x739C, 0xF2BF, 0x87BA, 0x9E82, 0xAED1, 0xB8F2, 0xBFE2, 0xC72C, 0xCE1C, 
-	0xD17B, 0xD449, 0xD5A3, 0xD5CA, 0xD838, 0xDAF6, 0xDB3F, 0xD86C, 0xD385, 
-	0xCDAC, 0xC905, 0xC638, 0xBFBF, 0xB9BA, 0xB536, 0xB374, 0xB1F4, 0xB0CE, 
-	0xB00D, 0xAFA8, 0xAF8C, 0xAFB8, 0xB035, 0xB0F7, 0xB1FA, 0xB336, 0xB498, 
-	0xB5FD, 0xB755, 0xB890, 0xB9A2, 0xBA8A, 0xBB34, 0xBB9B, 0xBBB8, 0xBB89, 
-	0xBB0C, 0xBA62, 0xB99F, 0xB89D, 0xB768, 0xB60A, 0xB491, 0xB308, 0xB17E, 
-	0xB002, 0xAEA1, 0xAD6B, 0xACD9, 0xACDE, 0xAD27, 0xADAC, 0xAE67, 0xAF51, 
-	0xB061, 0xB188, 0xB2BE, 0xB3F4, 0xB521, 0xB638, 0xB730, 0xB801, 0xB8A3, 
-	0xB912, 0xB94A, 0xB948, 0xB90E, 0xB89E, 0xB7FB, 0xB72C, 0xB637, 0xB524, 
-	0xB3FE, 0xB2D0, 0xB1A4, 0xB086, 0xAF80, 0xAE9F, 0xADEB, 0xAD6C, 0xAD28, 
-	0xAD22, 0xAD59, 0xADCA, 0xAE72, 0xAF48, 0xB042, 0xB157, 0xB27B, 0xB3A2, 
-	0xB4C3, 0xB5D1, 0xB6C4, 0xB793, 0xB836, 0xB8A9, 0xB8E7, 0xB8EF, 0xB8BF, 
-	0xB85A, 0xB7C4, 0xB702, 0xB61A, 0xB516, 0xB3FD, 0xB2DB, 0xB1BA, 0xB0A5, 
-	0xAFA8, 0xAECD, 0xAE1C, 0xAD9E, 0xAD58, 0xAD4B, 0xAD7A, 0xADE1, 0xAE7C, 
-	0xAF45, 0xB032, 0xB139, 0xB250, 0xB36B, 0xB480, 0xB585, 0xB670, 0xB738, 
-	0xB7D7, 0xB847, 0xB884, 0xB88B, 0xB85D, 0xB7FB, 0xB768, 0xB6AB, 0xB5CA, 
-	0xB4CC, 0xB3BD, 0xB2A4, 0xB18E, 0xB084, 0xAF92, 0xAEC2, 0xAE1D, 0xADA8, 
-	0xAD6A, 0xAD64, 0xAD96, 0xADFF, 0xAE98, 0xAF5D, 0xB044, 0xB144, 0xB252, 
-	0xB363, 0xB46E, 0xB567, 0xB646, 0xB703, 0xB797, 0xB7FC, 0xB82F, 0xB82D, 
-	0xB7F8, 0xB791, 0xB6FD, 0xB640, 0xB562, 0xB46B, 0xB362, 0xB255, 0xB14C, 
-	0xB052, 0xAF72, 0xAEB4, 0xAE21, 0xADBE, 0xAD8F, 0xAD97, 0xADD4, 0xAE45, 
-	0xAEE3, 0xAFAA, 0xB08F, 0xB188, 0xB28E, 0xB394, 0xB492, 0xB57C, 0xB64C, 
-	0xB6F8, 0xB77B, 0xB7D0, 0xB7F4, 0xB7E7, 0xB7A7, 0xB739, 0xB6A0, 0xB5E3, 
-	0xB507, 0xB416, 0xB31A, 0xB21A, 0xB122, 0xB03A, 0xAF6D, 0xAEC3, 0xAE43, 
-	0xADF2, 0xADD3, 0xADE8, 0xAE30, 0xAEA7, 0xAF48, 0xB00C, 0xB0EC, 0xFC2C, 
-	0xD4DD, 0xDBC2, 0xEEBD, 0xF138, 0xF32E, 0xFA31, 0x0477, 0x181C, 0x2837, 
-	0x2669, 0x1B36, 0xFC2C, 0xE5E8, 0xDE62, 0xEA07, 0xEE8A, 0xE8F1, 0xE591, 
-	0xE56D, 0xE604, 0xE847, 0xECEE, 0xF3A3, 0xFAC3, 0x08A1, 0x18F9, 0x57EB, 
-	0x2D80, 0x2B87, 0x2456, 0x19B7, 0x0C45, 0xFE07, 0xF51F, 0xF0A5, 0xEE44, 
-	0xEBA6, 0xE991, 0xE7DA, 0xE6CC, 0xE639, 0xE5C0, 0xE555, 0xE61B, 0xE870, 
-	0xEBFF, 0xF06B, 0xF4C5, 0xF8F7, 0xFA22, 0xFAC1, 0xFAF4, 0xFAC6, 0xFA3F, 
-	0xF972, 0xF867, 0xF71B, 0xF5A5, 0xF415, 0xF27A, 0xF0DC, 0xEF30, 0xED82, 
-	0xEBE1, 0xEA5F, 0xE917, 0xE80A, 0xE745, 0xE6CD, 0xE6A5, 0xE6CE, 0xE74E, 
-	0xE82D, 0xE93E, 0xEA80, 0xEBE8, 0xED67, 0xEEE7, 0xF05B, 0xF1AF, 0xF2D9, 
-	0xF3D1, 0xF43F, 0xF431, 0xF3F9, 0xF38D, 0xF2F1, 0xF22C, 0xF141, 0xF037, 
-	0xEF19, 0xEDF1, 0xECC9, 0xEBAF, 0xEAAC, 0xE9D0, 0xE921, 0xE8A6, 0xE867, 
-	0xE867, 0xE8A5, 0xE91E, 0xE9CC, 0xEAA8, 0xEBA5, 0xECB9, 0xEDD8, 0xEEFA, 
-	0xF00D, 0xF10B, 0xF1E8, 0xF29F, 0xF32D, 0xF38B, 0xF3BB, 0xF3BC, 0xF38D, 
-	0xF32C, 0xF2A0, 0xF1EB, 0xF10F, 0xF016, 0xEF08, 0xEDEE, 0xECD4, 0xEBC4, 
-	0xEAC9, 0xE9F0, 0xE941, 0xE8C4, 0xE87E, 0xE873, 0xE8A1, 0xE908, 0xE9A1, 
-	0xEA66, 0xEB4D, 0xEC4D, 0xED5B, 0xEE69, 0xEF6D, 0xF05D, 0xF132, 0xF1E4, 
-	0xF26D, 0xF2CB, 0xF2FE, 0xF2FD, 0xF2D2, 0xF278, 0xF1F3, 0xF149, 0xF07B, 
-	0xEF8F, 0xEE90, 0xED83, 0xEC73, 0xEB6F, 0xEA7F, 0xE9AE, 0xE906, 0xE88E, 
-	0xE848, 0xE83B, 0xE864, 0xE8C2, 0xE94F, 0xEA06, 0xEADE, 0xEBCC, 0xECC7, 
-	0xEDC4, 0xEEB7, 0xEF97, 0xF05F, 0xF107, 0xF18D, 0xF1E4, 0xF212, 0xF213, 
-	0xF1E7, 0xF18F, 0xF10D, 0xF066, 0xEF9E, 0xEEBD, 0xEDCA, 0xECCD, 0xEBD0, 
-	0xEADF, 0xEA03, 0xE946, 0xE8B1, 0xE84A, 0xE814, 0xE814, 0xE847, 0xE8AC, 
-	0xE93F, 0xE9F9, 0xEAD1, 0xEBBB, 0xECAA, 0xED9B, 0xEE82, 0xEF57, 0xF012, 
-	0xF0AE, 0xF122, 0xF170, 0xF194, 0xF18F, 0xF15E, 0xF104, 0xF082, 0xEFE1, 
-	0xEF21, 0xEE49, 0xED63, 0xEC79, 0xEB92, 0xEAB6, 0xE9F3, 0xE94E, 0xE8CF, 
-	0xE87D, 0xE85B, 0xE86B, 0xE8AC, 0xE918, 0xE9B0, 0xEA66, 0xEB37, 0xEC18, 
-	0xED02, 0xEDE7, 0xEEC0, 0xEF86, 0xF031, 0xF0BC, 0xF124, 0xF163, 0xF17C, 
-	0xF16C, 0xF133, 0xF0D3, 0xF051, 0xEFAD, 0xEEF1, 0x05D0, 0xFEA9, 0x30C2, 
-	0x3267, 0x2ED6, 0x2617, 0x1F89, 0x1E7E, 0x1963, 0xFEAB, 0xFD0C, 0x1ABE, 
-	0x2DB6, 0x3573, 0x2144, 0x081E, 0xFA98, 0xED25, 0xE901, 0xE764, 0xE652, 
-	0xE364, 0xDFB7, 0xDB56, 0xD64E, 0xD533, 0xD5A4, 0x5993, 0xEC6D, 0x0208, 
-	0x109F, 0x173C, 0x174B, 0x11A6, 0x08E7, 0x01A1, 0xFCC5, 0xF9E5, 0xF8C7, 
-	0xF6A3, 0xF419, 0xF503, 0xFB6D, 0x0588, 0x1133, 0x1A78, 0x1FC9, 0x20D1, 
-	0x1E42, 0x1A01, 0x187C, 0x174E, 0x1686, 0x1621, 0x1613, 0x164E, 0x16D0, 
-	0x1792, 0x1888, 0x19A6, 0x1AE1, 0x1C2A, 0x1D6C, 0x1E98, 0x1FA5, 0x2088, 
-	0x213F, 0x21C3, 0x2210, 0x2224, 0x21FA, 0x2197, 0x2104, 0x2076, 0x1FBE, 
-	0x1EDD, 0x1DDF, 0x1CC5, 0x1B96, 0x1A60, 0x1930, 0x1812, 0x1715, 0x169D, 
-	0x16A0, 0x16DB, 0x1747, 0x17DF, 0x189A, 0x1971, 0x1A5A, 0x1B49, 0x1C34, 
-	0x1D14, 0x1DE0, 0x1E93, 0x1F27, 0x1F98, 0x1FE5, 0x200D, 0x200F, 0x1FEA, 
-	0x1F9F, 0x1F2E, 0x1E9B, 0x1DE9, 0x1D1F, 0x1C43, 0x1B5C, 0x1A73, 0x1992, 
-	0x18C2, 0x180D, 0x177B, 0x1714, 0x16DD, 0x16D7, 0x1702, 0x175C, 0x17E2, 
-	0x1889, 0x194E, 0x1A24, 0x1B02, 0x1BE0, 0x1CB4, 0x1D76, 0x1E21, 0x1EB0, 
-	0x1F1F, 0x1F6C, 0x1F95, 0x1F99, 0x1F7A, 0x1F35, 0x1ECF, 0x1E48, 0x1DA5, 
-	0x1CEB, 0x1C1F, 0x1B48, 0x1A70, 0x199D, 0x18DB, 0x1831, 0x17A7, 0x1745, 
-	0x170D, 0x1703, 0x1727, 0x1777, 0x17F0, 0x188A, 0x193E, 0x1A03, 0x1AD2, 
-	0x1B9F, 0x1C64, 0x1D19, 0x1DB9, 0x1E3E, 0x1EA5, 0x1EEC, 0x1F12, 0x1F16, 
-	0x1EF7, 0x1EB7, 0x1E56, 0x1DD7, 0x1D40, 0x1C92, 0x1BD5, 0x1B0E, 0x1A46, 
-	0x1983, 0x18D1, 0x1835, 0x17B6, 0x175B, 0x172A, 0x1725, 0x174B, 0x179A, 
-	0x180E, 0x189F, 0x1949, 0x1A01, 0x1AC0, 0x1B7D, 0x1C31, 0x1CD6, 0x1D66, 
-	0x1DDD, 0x1E37, 0x1E74, 0x1E91, 0x1E8D, 0x1E6A, 0x1E26, 0x1DC5, 0x1D48, 
-	0x1CB3, 0x1C0C, 0x1B5A, 0x1AA1, 0x19E7, 0x1936, 0x1893, 0x1806, 0x1799, 
-	0x1750, 0x172E, 0x1731, 0x175D, 0x17AD, 0x1821, 0x18AF, 0x1952, 0x1A02, 
-	0x1AB7, 0x1B67, 0x1C0F, 0x1CA8, 0x1D2C, 0x1D98, 0x1DE9, 0x1E1C, 0x1E32, 
-	0x1E28, 0x1DFF, 0x1DBB, 0x1D59, 0x1CE0, 0x1C4F, 0x1BAF, 0x1B01, 0x1A4E, 
-	0x199C, 0x18F5, 0x185E, 0x17E1, 0x1780, 0x1743, 0x172B, 0x1738, 0x176A, 
-	0x17BF, 0x1832, 0x18BF, 0x195C, 0x0A05, 0xF69F, 0xDC8B, 0xD319, 0xCA9F, 
-	0xBE0D, 0xAE4E, 0x9C92, 0x8941, 0x7432, 0x5F15, 0x5C9F, 0x6648, 0x6C37, 
-	0x75BA, 0x7ED4, 0x854F, 0x8243, 0x98F1, 0xBAFC, 0xCF1F, 0xD8E2, 0xDF41, 
-	0xE3EA, 0xE705, 0xDDAB, 0xDA52, 0xDC28, 0xDFA8, 0xE482, 0xE9FB, 0xEF0D, 
-	0xF248, 0xF45F, 0xFC4B, 0x0666, 0x1121, 0x1D76, 0x2B47, 0x3864, 0x3F51, 
-	0x40C2, 0x3F83, 0x3DB4, 0x3A29, 0x34A1, 0x3246, 0x3647, 0x3972, 0x39B4, 
-	0x3A0F, 0x3A66, 0x3AC7, 0x3B29, 0x3B8A, 0x3BEC, 0x3C4E, 0x3C9C, 0x3CDF, 
-	0x3D13, 0x3D35, 0x3D48, 0x3D59, 0x3D69, 0x3D7B, 0x3D8D, 0x3D9A, 0x3DAB, 
-	0x3DBE, 0x3DD5, 0x3DEE, 0x3E0A, 0x3E0F, 0x3E08, 0x3E05, 0x3E03, 0x3E01, 
-	0x3E01, 0x3E00, 0x3DFF, 0x3DFE, 0x3DFD, 0x3DFC, 0x3DFB, 0x3DF9, 0x3DF8, 
-	0x3DF8, 0x3DF6, 0x3DF6, 0x3DF5, 0x3DF5, 0x3DF4, 0x3DF4, 0x3DF3, 0x3DF2, 
-	0x3DF1, 0x3DF0, 0x3DEF, 0x3DEE, 0x3DED, 0x3DEC, 0x3DEB, 0x3DEA, 0x3DE9, 
-	0x3DE9, 0x3DE7, 0x3DE6, 0x3DE5, 0x3DE4, 0x3DE3, 0x3DE1, 0x3DE0, 0x3DDF, 
-	0x3DDE, 0x3DDC, 0x3DDB, 0x3DDA, 0x3DDA, 0x3DD8, 0x3DD8, 0x3DD7, 0x3DD6, 
-	0x3DD5, 0x3DD4, 0x3DD3, 0x3DD3, 0x3DD2, 0x3DD1, 0x3DD0, 0x3DCF, 0x3DCF, 
-	0x3DCD, 0x3DCD, 0x3DCC, 0x3DCB, 0x3DCA, 0x3DC9, 0x3DC8, 0x3DC7, 0x3DC6, 
-	0x3DC5, 0x3DC4, 0x3DC3, 0x3DC2, 0x3DC1, 0x3DBF, 0x3DBE, 0x3DBD, 0x3DBB, 
-	0x3DBA, 0x3DB8, 0x3DB7, 0x3DB7, 0x3DB6, 0x3DB5, 0x3DB4, 0x3DB3, 0x3DB2, 
-	0x3DB1, 0x3DAF, 0x3DAE, 0x3DAD, 0x3DAC, 0x3DAB, 0x3DAA, 0x3DA8, 0x3DA7, 
-	0x3DA5, 0x3DA4, 0x3DA2, 0x3DA1, 0x3D9F, 0x3D9D, 0x3D9C, 0x3D9A, 0x3D98, 
-	0x3D98, 0x3D97, 0x3D95, 0x3D94, 0x3D93, 0x3D92, 0x3D91, 0x3D90, 0x3D8F, 
-	0x3D8E, 0x3D8D, 0x3D8C, 0x3D8B, 0x3D8A, 0x3D89, 0x3D88, 0x3D87, 0x3D86, 
-	0x3D85, 0x3D84, 0x3D83, 0x3D82, 0x3D81, 0x3D80, 0x3D7F, 0x3D7E, 0x3D7D, 
-	0x3D7B, 0x3D7A, 0x3D79, 0x3D79, 0x3D78, 0x3D76, 0x3D76, 0x3D75, 0x3D74, 
-	0x3D74, 0x3D73, 0x3D72, 0x3D72, 0x3D71, 0x3D71, 0x3D70, 0x3D70, 0x3D70, 
-	0x3D70, 0x3D6F, 0x3D6F, 0x3D6F, 0x3D6E, 0x3D6E, 0x3D6E, 0x3D6E, 0x3D6D, 
-	0x3D6D, 0x3D6C, 0x3D6C, 0x3D6B, 0x3D6A, 0x3D6A, 0x3D69, 0x3D68, 0x3D68, 
-	0x3D67, 0x3D67, 0x3D66, 0x3D65, 0x3D65, 0x3D64, 0x3D64, 0x3D64, 0x3D63, 
-	0x3D63, 0x3D62, 0xFC13, 0x14BE, 0x12D2, 0x072C, 0xFFC3, 0x001B, 0x0246, 
-	0x0953, 0x1364, 0x1BCF, 0x1B1B, 0x0D97, 0xFA2E, 0xEF95, 0xDF85, 0xD5B7, 
-	0xD070, 0xCDF9, 0xCCB7, 0xD302, 0xDC6F, 0xE5B3, 0xEEFA, 0xF7A3, 0xFCF2, 
-	0x0210, 0x0CA2, 0x172C, 0x18EC, 0x198D, 0x1950, 0x177C, 0x141E, 0x0F00, 
-	0x057A, 0xFE89, 0xF96F, 0xF5B4, 0xF30F, 0xF3A9, 0xF8EA, 0x0022, 0x07ED, 
-	0x10EE, 0x1A03, 0x20B0, 0x2459, 0x23D9, 0x2198, 0x201C, 0x1F00, 0x1E1C, 
-	0x1D67, 0x1CC3, 0x1C11, 0x1B4C, 0x1A78, 0x19AA, 0x18E7, 0x1837, 0x17A5, 
-	0x1733, 0x16CA, 0x1662, 0x15F0, 0x1574, 0x14F6, 0x1468, 0x13C6, 0x130C, 
-	0x123A, 0x1150, 0x1085, 0x106D, 0x1061, 0x1057, 0x1050, 0x104D, 0x1047, 
-	0x1042, 0x103E, 0x1039, 0x1034, 0x102E, 0x1026, 0x1022, 0x101F, 0x101A, 
-	0x1014, 0x1012, 0x100E, 0x100C, 0x1008, 0x1002, 0x0FFB, 0x0FF5, 0x0FEF, 
-	0x0FE9, 0x0FE4, 0x0FDE, 0x0FD9, 0x0FD5, 0x0FD1, 0x0FCA, 0x0FC3, 0x0FBE, 
-	0x0FB7, 0x0FB1, 0x0FAC, 0x0FA5, 0x0FA1, 0x0F9B, 0x0F96, 0x0F92, 0x0F8E, 
-	0x0F8A, 0x0F87, 0x0F83, 0x0F7E, 0x0F7B, 0x0F76, 0x0F72, 0x0F6E, 0x0F6A, 
-	0x0F67, 0x0F63, 0x0F60, 0x0F5D, 0x0F59, 0x0F55, 0x0F51, 0x0F4D, 0x0F49, 
-	0x0F45, 0x0F42, 0x0F3E, 0x0F3B, 0x0F37, 0x0F33, 0x0F30, 0x0F2C, 0x0F28, 
-	0x0F24, 0x0F20, 0x0F1D, 0x0F19, 0x0F15, 0x0F12, 0x0F0C, 0x0F07, 0x0F01, 
-	0x0EFC, 0x0EF9, 0x0EF6, 0x0EF2, 0x0EEF, 0x0EEB, 0x0EE6, 0x0EE2, 0x0EDE, 
-	0x0ED9, 0x0ED5, 0x0ED1, 0x0ECD, 0x0EC9, 0x0EC5, 0x0EC0, 0x0EBB, 0x0EB5, 
-	0x0EB0, 0x0EAA, 0x0EA4, 0x0E9F, 0x0E99, 0x0E92, 0x0E8C, 0x0E88, 0x0E84, 
-	0x0E7D, 0x0E77, 0x0E71, 0x0E6D, 0x0E68, 0x0E62, 0x0E5D, 0x0E59, 0x0E54, 
-	0x0E50, 0x0E4B, 0x0E45, 0x0E3F, 0x0E3A, 0x0E34, 0x0E2F, 0x0E2A, 0x0E25, 
-	0x0E20, 0x0E1B, 0x0E15, 0x0E0E, 0x0E08, 0x0E01, 0x0DFB, 0x0DF3, 0x0DEE, 
-	0x0DEA, 0x0DE5, 0x0DDF, 0x0DDA, 0x0DD6, 0x0DD2, 0x0DCE, 0x0DC8, 0x0DC3, 
-	0x0DBD, 0x0DB8, 0x0DB3, 0x0DAF, 0x0DA9, 0x0DA6, 0x0D9F, 0x0D9C, 0x0D97, 
-	0x0D93, 0x0D8F, 0x0D8C, 0x0D89, 0x0D85, 0x0D82, 0x0D7C, 0x0D78, 0x0D72, 
-	0x0D6E, 0x0D69, 0x0D65, 0x0D5F, 0x0D5A, 0x0D55, 0x0D51, 0x0D4C, 0x0D46, 
-	0x0D41, 0x0D3D, 0x0D39, 0x0D35, 0x0D31, 0x0D2E, 0x0D2A, 0x0D26, 0x0D23, 
-	0xF057, 0xEC08, 0xD895, 0xD5B5, 0xDF82, 0xEB2B, 0xF5BE, 0xFC1F, 0xFD23, 
-	0xF46D, 0xE4EA, 0xE6D1, 0xED6E, 0xF145, 0xF2C8, 0xEDC6, 0xF2A7, 0x0685, 
-	0xFBA2, 0xE255, 0xD65B, 0xD10F, 0xCF1F, 0xD097, 0xD4DC, 0xDDAC, 0xE734, 
-	0xF288, 0xFC20, 0x05AD, 0x0F91, 0x1A24, 0x2538, 0x2F63, 0x32D6, 0x317B, 
-	0x30BA, 0x2F6E, 0x2DB6, 0x2B26, 0x2721, 0x2104, 0x1E7E, 0x1B80, 0x1787, 
-	0x1316, 0x10F1, 0x1465, 0x174A, 0x1732, 0x1747, 0x1797, 0x1810, 0x1898, 
-	0x1923, 0x19B0, 0x1A3B, 0x1AB6, 0x1B1E, 0x1B69, 0x1B8F, 0x1B96, 0x1B9B, 
-	0x1BA0, 0x1BA6, 0x1BAB, 0x1BA1, 0x1B9A, 0x1B92, 0x1B89, 0x1B81, 0x1B76, 
-	0x1B54, 0x1B41, 0x1B42, 0x1B44, 0x1B45, 0x1B42, 0x1B3F, 0x1B39, 0x1B37, 
-	0x1B36, 0x1B37, 0x1B36, 0x1B36, 0x1B34, 0x1B33, 0x1B32, 0x1B2F, 0x1B2D, 
-	0x1B2B, 0x1B29, 0x1B25, 0x1B21, 0x1B1C, 0x1B18, 0x1B14, 0x1B10, 0x1B0E, 
-	0x1B0B, 0x1B08, 0x1B05, 0x1B02, 0x1AFE, 0x1AFA, 0x1AF8, 0x1AF6, 0x1AF4, 
-	0x1AF2, 0x1AF1, 0x1AEF, 0x1AF0, 0x1AF2, 0x1AF4, 0x1AF6, 0x1AF8, 0x1AF9, 
-	0x1AF8, 0x1AF9, 0x1AF9, 0x1AF8, 0x1AF8, 0x1AF8, 0x1AF7, 0x1AF7, 0x1AF6, 
-	0x1AF6, 0x1AF5, 0x1AF5, 0x1AF5, 0x1AF5, 0x1AF5, 0x1AF4, 0x1AF4, 0x1AF5, 
-	0x1AF7, 0x1AF8, 0x1AF9, 0x1AFA, 0x1AFB, 0x1AFD, 0x1AFE, 0x1B01, 0x1B03, 
-	0x1B05, 0x1B08, 0x1B0B, 0x1B0C, 0x1B11, 0x1B11, 0x1B12, 0x1B13, 0x1B13, 
-	0x1B13, 0x1B14, 0x1B14, 0x1B16, 0x1B18, 0x1B19, 0x1B1A, 0x1B1C, 0x1B1D, 
-	0x1B1E, 0x1B20, 0x1B22, 0x1B24, 0x1B27, 0x1B29, 0x1B2C, 0x1B2F, 0x1B31, 
-	0x1B33, 0x1B36, 0x1B38, 0x1B3B, 0x1B3C, 0x1B3E, 0x1B3D, 0x1B3D, 0x1B3C, 
-	0x1B3B, 0x1B3B, 0x1B3B, 0x1B3B, 0x1B3A, 0x1B3A, 0x1B39, 0x1B37, 0x1B36, 
-	0x1B35, 0x1B33, 0x1B32, 0x1B31, 0x1B2F, 0x1B2D, 0x1B2C, 0x1B2B, 0x1B2A, 
-	0x1B28, 0x1B26, 0x1B22, 0x1B1E, 0x1B1B, 0x1B1B, 0x1B1C, 0x1B1C, 0x1B1B, 
-	0x1B18, 0x1B16, 0x1B16, 0x1B14, 0x1B12, 0x1B0E, 0x1B0B, 0x1B08, 0x1B05, 
-	0x1B00, 0x1AFC, 0x1AF9, 0x1AF5, 0x1AEE, 0x1AE9, 0x1AE5, 0x1AE0, 0x1ADC, 
-	0x1AD8, 0x1AD5, 0x1AD1, 0x1ACE, 0x1AC9, 0x1AC7, 0x1AC2, 0x1AC0, 0x1ABE, 
-	0x1ABC, 0x1AB8, 0x1AB5, 0x1AB3, 0x1AB0, 0x1AAE, 0x1AAB, 0x1AA8, 0x1AA7, 
-	0x1AA3, 0x1AA0, 0x1A9E, 0x1A9C, 0x1A9A, 0x1A97, 0x1A95, 0x0000, 0xBFFF, 
-	0x0000, 0xC454, 0x4647, 0xCEE7, 0xDC51, 0xF3D4, 0x0609, 0x10C2, 0x2414, 
-	0x39E8, 0x44BD, 0x4E35, 0xD2EF, 0xD146, 0xDFFB, 0xEE2C, 0xFE2B, 0x11AF, 
-	0x29A9, 0x3244, 0x3558, 0x32C9, 0x2D48, 0x283E, 0x29AC, 0x2C2B, 0x2F7D, 
-	0x33E0, 0x3897, 0x3E4A, 0x4612, 0x4E66, 0x5935, 0xE50C, 0xF002, 0xF5AF, 
-	0xF901, 0xFB29, 0xFDB1, 0x0044, 0x0030, 0xFCB3, 0xFAC6, 0xFA60, 0xF90F, 
-	0xF844, 0xF809, 0xF7FF, 0xF817, 0xF825, 0xF820, 0xF809, 0xF800, 0xF7FB, 
-	0xF7F4, 0xF7F1, 0xF7EE, 0xF7E9, 0xF7E6, 0xF7E4, 0xF7E2, 0xF7E0, 0xF7DF, 
-	0xF7E1, 0xF7E3, 0xF7E6, 0xF7E7, 0xF7E9, 0xF7EB, 0xF7ED, 0xF7EE, 0xF7EF, 
-	0xF7ED, 0xF7ED, 0xF7F4, 0xF7FA, 0xF801, 0xF806, 0xF808, 0xF80B, 0xF80D, 
-	0xF811, 0xF812, 0xF814, 0xF817, 0xF81B, 0xF81B, 0xF81C, 0xF81E, 0xF820, 
-	0xF822, 0xF824, 0xF827, 0xF829, 0xF82C, 0xF82E, 0xF830, 0xF832, 0xF835, 
-	0xF837, 0xF83A, 0xF83D, 0xF840, 0xF843, 0xF845, 0xF847, 0xF84A, 0xF84D, 
-	0xF84F, 0xF851, 0xF854, 0xF856, 0xF859, 0xF85B, 0xF85D, 0xF85E, 0xF861, 
-	0xF863, 0xF864, 0xF865, 0xF868, 0xF86A, 0xF86C, 0xF86F, 0xF871, 0xF874, 
-	0xF876, 0xF878, 0xF87B, 0xF87E, 0xF880, 0xF883, 0xF885, 0xF888, 0xF88B, 
-	0xF88D, 0xF890, 0xF893, 0xF895, 0xF898, 0xF89B, 0xF89D, 0xF8A0, 0xF8A2, 
-	0xF8A4, 0xF8A6, 0xF8A8, 0xF8AA, 0xF8AB, 0xF8AD, 0xF8AF, 0xF8B3, 0xF8B6, 
-	0xF8B9, 0xF8BC, 0xF8C0, 0xF8C4, 0xF8C9, 0xF8CE, 0xF8D2, 0xF8D7, 0xF8DC, 
-	0xF8E0, 0xF8E4, 0xF8E9, 0xF8ED, 0xF8F1, 0xF8F6, 0xF8FB, 0xF8FF, 0xF904, 
-	0xF909, 0xF90E, 0xF912, 0xF917, 0xF91C, 0xF91F, 0xF920, 0xF921, 0xF922, 
-	0xF923, 0xF926, 0xF928, 0xF92B, 0xF92D, 0xF930, 0xF933, 0xF936, 0xF939, 
-	0xF93C, 0xF93F, 0xF942, 0xF945, 0xF947, 0xF94A, 0xF94E, 0xF951, 0xF954, 
-	0xF956, 0xF958, 0xF95B, 0xF95D, 0xF960, 0xF961, 0xF963, 0xF966, 0xF968, 
-	0xF96A, 0xF96B, 0xF96C, 0xF96D, 0xF96E, 0xF96F, 0xF96F, 0xF96E, 0xF96F, 
-	0xF970, 0xF971, 0xF972, 0xF973, 0xF975, 0xF977, 0xF979, 0xF97B, 0xF97D, 
-	0xF97F, 0xF980, 0xF982, 0xF984, 0xF985, 0xF986, 0xF987, 0xF988, 0xF989, 
-	0xF98A, 0xF98A, 0xF98B, 0xF98C, 0xF98D, 0xF98D, 0xF98E, 0xF98F, 0xF990, 
-	0xF991, 0xF992, 0xF994, 0xF995, 0xF996, 0xF997, 0xF998, 0xF999, 0x642D, 
-	0x020B, 0x938F, 0x99B3, 0x9EB5, 0x9DBC, 0x946A, 0x8F62, 0x90EE, 0x9335, 
-	0x9B73, 0xEDAF, 0xFD6D, 0x04D2, 0x0262, 0xFBFE, 0xF867, 0xF991, 0x0087, 
-	0x0030, 0xFDF3, 0xFC63, 0xFC56, 0xFC6B, 0xFBA3, 0xF973, 0xF80C, 0xF6C9, 
-	0xF686, 0xF49C, 0xF200, 0xF0BD, 0x8FF1, 0x9110, 0x945E, 0x9882, 0x9AB4, 
-	0x9A4C, 0x98BF, 0x967F, 0x951A, 0x94B7, 0x93A9, 0x92D5, 0x9273, 0x9258, 
-	0x9258, 0x9260, 0x9240, 0x9235, 0x921D, 0x9218, 0x9217, 0x9214, 0x9215, 
-	0x9213, 0x920F, 0x9210, 0x9211, 0x9211, 0x9212, 0x9212, 0x9211, 0x9212, 
-	0x9212, 0x9213, 0x9214, 0x9214, 0x9214, 0x9214, 0x9214, 0x9214, 0x9217, 
-	0x921F, 0x9226, 0x922B, 0x922E, 0x922F, 0x9231, 0x9232, 0x9234, 0x9235, 
-	0x9237, 0x9239, 0x923E, 0x923D, 0x923E, 0x9240, 0x9242, 0x9244, 0x9245, 
-	0x9247, 0x9248, 0x924A, 0x924C, 0x924D, 0x924F, 0x9251, 0x9253, 0x9255, 
-	0x9256, 0x9258, 0x925A, 0x925C, 0x925E, 0x9260, 0x9262, 0x9264, 0x9266, 
-	0x9268, 0x926A, 0x926D, 0x926F, 0x9272, 0x9274, 0x9276, 0x9278, 0x9279, 
-	0x927C, 0x927E, 0x9280, 0x9283, 0x9285, 0x9287, 0x928A, 0x928B, 0x928E, 
-	0x9290, 0x9292, 0x9295, 0x9297, 0x9299, 0x929B, 0x929E, 0x92A0, 0x92A3, 
-	0x92A5, 0x92A8, 0x92AA, 0x92AC, 0x92AF, 0x92B1, 0x92B4, 0x92B6, 0x92B8, 
-	0x92BB, 0x92BE, 0x92BF, 0x92C2, 0x92C5, 0x92C9, 0x92CC, 0x92CE, 0x92D0, 
-	0x92D3, 0x92D6, 0x92D9, 0x92DE, 0x92E1, 0x92E5, 0x92E9, 0x92EC, 0x92EF, 
-	0x92F3, 0x92F6, 0x92FA, 0x92FE, 0x9302, 0x9306, 0x930A, 0x930E, 0x9312, 
-	0x9316, 0x931A, 0x931F, 0x9321, 0x9323, 0x9324, 0x9326, 0x9328, 0x932A, 
-	0x932C, 0x932F, 0x9331, 0x9333, 0x9336, 0x9338, 0x933A, 0x933C, 0x933F, 
-	0x9341, 0x9343, 0x9345, 0x9347, 0x9349, 0x934C, 0x934E, 0x9350, 0x9352, 
-	0x9354, 0x9356, 0x9358, 0x9359, 0x935C, 0x935E, 0x9360, 0x9361, 0x9362, 
-	0x9363, 0x9364, 0x9365, 0x9367, 0x9368, 0x9369, 0x936A, 0x936B, 0x936C, 
-	0x936C, 0x936D, 0x936E, 0x936F, 0x936F, 0x9371, 0x9372, 0x9373, 0x9373, 
-	0x9374, 0x9375, 0x9376, 0x9377, 0x9377, 0x9378, 0x9379, 0x937A, 0x937B, 
-	0x937C, 0x937D, 0x937E, 0x937F, 0x9380, 0x9381, 0x9382, 0x9383, 0x9384, 
-	0x9385, 0x9386, 0x9387, 0x9388, 0x9389, 0x938A, 0xF723, 0x9375, 0x10DC, 
-	0x06EC, 0xF9DB, 0xEB1E, 0xED46, 0xF829, 0x05A2, 0x0AD9, 0x099D, 0x898E, 
-	0x8C02, 0x91E5, 0x98BB, 0xA12D, 0x9445, 0x892E, 0x79A8, 0x6EBC, 0x6763, 
-	0x6293, 0x5F29, 0x5BB7, 0x58D1, 0x5479, 0x50AB, 0x4E64, 0x5032, 0x4E81, 
-	0x4DDE, 0x4E1B, 0xCDF0, 0xCD0E, 0xCD67, 0xCDED, 0xCDD7, 0xCCFD, 0xCC16, 
-	0xCBC2, 0xCB22, 0xCB25, 0xCB91, 0xCBA4, 0xCBCF, 0xCBDC, 0xCBE0, 0xCBD7, 
-	0xCBB0, 0xCBA9, 0xCBA2, 0xCBA1, 0xCBA3, 0xCBA5, 0xCBA7, 0xCBA8, 0xCBA7, 
-	0xCBAA, 0xCBAC, 0xCBAD, 0xCBAF, 0xCBAF, 0xCBAF, 0xCBAE, 0xCBAD, 0xCBAD, 
-	0xCBAC, 0xCBAB, 0xCBAA, 0xCBA9, 0xCBA9, 0xCBA9, 0xCBAB, 0xCBAE, 0xCBAF, 
-	0xCBB0, 0xCBB0, 0xCBB0, 0xCBB0, 0xCBB0, 0xCBB0, 0xCBB0, 0xCBB0, 0xCBB1, 
-	0xCBB2, 0xCBB2, 0xCBB3, 0xCBB3, 0xCBB4, 0xCBB4, 0xCBB4, 0xCBB4, 0xCBB4, 
-	0xCBB4, 0xCBB4, 0xCBB4, 0xCBB5, 0xCBB5, 0xCBB5, 0xCBB5, 0xCBB5, 0xCBB4, 
-	0xCBB4, 0xCBB4, 0xCBB5, 0xCBB6, 0xCBB6, 0xCBB7, 0xCBB7, 0xCBB7, 0xCBB8, 
-	0xCBB9, 0xCBB9, 0xCBBA, 0xCBBB, 0xCBBC, 0xCBBC, 0xCBBD, 0xCBBE, 0xCBBF, 
-	0xCBC0, 0xCBC1, 0xCBC2, 0xCBC2, 0xCBC3, 0xCBC3, 0xCBC4, 0xCBC5, 0xCBC5, 
-	0xCBC6, 0xCBC6, 0xCBC7, 0xCBC7, 0xCBC8, 0xCBC8, 0xCBC9, 0xCBCA, 0xCBCA, 
-	0xCBCB, 0xCBCB, 0xCBCC, 0xCBCC, 0xCBCD, 0xCBCE, 0xCBCF, 0xCBD0, 0xCBD2, 
-	0xCBD3, 0xCBD4, 0xCBD5, 0xCBD6, 0xCBD7, 0xCBD7, 0xCBD7, 0xCBD7, 0xCBD7, 
-	0xCBD8, 0xCBD9, 0xCBD9, 0xCBDA, 0xCBDB, 0xCBDB, 0xCBDB, 0xCBDC, 0xCBDC, 
-	0xCBDD, 0xCBDE, 0xCBDE, 0xCBDF, 0xCBE0, 0xCBE1, 0xCBE1, 0xCBE2, 0xCBE3, 
-	0xCBE3, 0xCBE4, 0xCBE4, 0xCBE5, 0xCBE6, 0xCBE7, 0xCBE8, 0xCBE8, 0xCBE9, 
-	0xCBE9, 0xCBE9, 0xCBEA, 0xCBEA, 0xCBEA, 0xCBEA, 0xCBEB, 0xCBEB, 0xCBEB, 
-	0xCBEB, 0xCBEC, 0xCBEC, 0xCBEC, 0xCBEC, 0xCBEC, 0xCBED, 0xCBED, 0xCBED, 
-	0xCBED, 0xCBEE, 0xCBEF, 0xCBEF, 0xCBEF, 0xCBEF, 0xCBF0, 0xCBF0, 0xCBF1, 
-	0xCBF1, 0xCBF2, 0xCBF3, 0xCBF5, 0xCBF5, 0xCBF5, 0xCBF5, 0xCBF5, 0xCBF5, 
-	0xCBF4, 0xCBF4, 0xCBF4, 0xCBF4, 0xCBF4, 0xCBF3, 0xCBF3, 0xCBF2, 0xCBF2, 
-	0xCBF2, 0xCBF2, 0xCBF2, 0xCBF2, 0xCBF2, 0xCBF2, 0xCBF3, 0xCBF3, 0xCBF4, 
-	0xCBF4, 0xCBF5, 0xCBF5, 0xCBF6, 0xCBF6, 0xCBF6, 0xCBF6, 0xCBF6, 0xCBF6, 
-	0xCBF7, 0xFF38, 0x157A, 0x123A, 0x0EE7, 0xFBD4, 0xEB0A, 0xDD9C, 0xC743, 
-	0xADE5, 0x9FC9, 0x1042, 0x0890, 0x10D5, 0x202B, 0x2912, 0x338F, 0x3E05, 
-	0xCC14, 0xCF5A, 0xD5ED, 0xD6C8, 0xDD0E, 0xEF75, 0x003B, 0x0C03, 0x1582, 
-	0x1997, 0x19C3, 0x19D2, 0x1856, 0x16E7, 0xF951, 0xCE19, 0xC5ED, 0xC995, 
-	0xCE0E, 0xD1CA, 0xD41D, 0xD380, 0xCDC2, 0xCAAB, 0xCAD1, 0xCA02, 0xC9AF, 
-	0xC995, 0xC98D, 0xC98F, 0xC98F, 0xC974, 0xC96D, 0xC962, 0xC95F, 0xC95F, 
-	0xC95E, 0xC960, 0xC95F, 0xC95D, 0xC95F, 0xC960, 0xC961, 0xC961, 0xC961, 
-	0xC961, 0xC961, 0xC961, 0xC961, 0xC961, 0xC961, 0xC961, 0xC960, 0xC960, 
-	0xC960, 0xC962, 0xC967, 0xC969, 0xC96C, 0xC96D, 0xC96D, 0xC96E, 0xC96E, 
-	0xC96F, 0xC970, 0xC970, 0xC972, 0xC974, 0xC974, 0xC974, 0xC975, 0xC976, 
-	0xC977, 0xC978, 0xC978, 0xC979, 0xC97A, 0xC97A, 0xC97B, 0xC97C, 0xC97D, 
-	0xC97D, 0xC97E, 0xC97F, 0xC97F, 0xC980, 0xC981, 0xC982, 0xC983, 0xC984, 
-	0xC985, 0xC986, 0xC987, 0xC988, 0xC989, 0xC98A, 0xC98C, 0xC98D, 0xC98E, 
-	0xC98F, 0xC990, 0xC991, 0xC992, 0xC994, 0xC995, 0xC996, 0xC997, 0xC998, 
-	0xC999, 0xC99A, 0xC99C, 0xC99D, 0xC99E, 0xC99F, 0xC9A0, 0xC9A1, 0xC9A2, 
-	0xC9A4, 0xC9A5, 0xC9A6, 0xC9A7, 0xC9A8, 0xC9A9, 0xC9AA, 0xC9AC, 0xC9AD, 
-	0xC9AE, 0xC9B0, 0xC9B1, 0xC9B3, 0xC9B4, 0xC9B5, 0xC9B7, 0xC9B9, 0xC9BA, 
-	0xC9BB, 0xC9BC, 0xC9BD, 0xC9BE, 0xC9C0, 0xC9C2, 0xC9C4, 0xC9C5, 0xC9C7, 
-	0xC9C9, 0xC9CA, 0xC9CC, 0xC9CD, 0xC9CF, 0xC9D1, 0xC9D3, 0xC9D5, 0xC9D7, 
-	0xC9D9, 0xC9DA, 0xC9DC, 0xC9DE, 0xC9E0, 0xC9E2, 0xC9E3, 0xC9E4, 0xC9E5, 
-	0xC9E6, 0xC9E7, 0xC9E8, 0xC9E9, 0xC9EA, 0xC9EB, 0xC9EC, 0xC9ED, 0xC9EE, 
-	0xC9EF, 0xC9F0, 0xC9F1, 0xC9F2, 0xC9F3, 0xC9F4, 0xC9F5, 0xC9F6, 0xC9F7, 
-	0xC9F8, 0xC9F9, 0xC9FA, 0xC9FB, 0xC9FC, 0xC9FD, 0xC9FE, 0xC9FF, 0xC9FF, 
-	0xCA00, 0xCA01, 0xCA01, 0xCA02, 0xCA02, 0xCA03, 0xCA04, 0xCA05, 0xCA06, 
-	0xCA06, 0xCA06, 0xCA06, 0xCA06, 0xCA07, 0xCA07, 0xCA07, 0xCA08, 0xCA08, 
-	0xCA09, 0xCA08, 0xCA09, 0xCA09, 0xCA09, 0xCA09, 0xCA0A, 0xCA0A, 0xCA0B, 
-	0xCA0B, 0xCA0C, 0xCA0C, 0xCA0D, 0xCA0E, 0xCA0E, 0xCA0F, 0xCA0F, 0xCA10, 
-	0xCA10, 0xCA11, 0xCA11, 0xCA12, 0xCA12, 0xCA13, 0xCA13, 0xCA14, 0xF6FF, 
-	0xEBC4, 0xF940, 0x0836, 0x0B0B, 0x0D13, 0x1853, 0x1DB2, 0x2211, 0x285A, 
-	0x52BE, 0x55A6, 0x5B94, 0x6272, 0x5F9C, 0x595F, 0x5952, 0x1F65, 0x1CA0, 
-	0x1856, 0x1BDA, 0x24C8, 0x2D7E, 0x2FB0, 0x2E97, 0x2A62, 0x2397, 0x1C60, 
-	0x1782, 0x2193, 0x2D84, 0x368A, 0x305C, 0x22EB, 0x1762, 0x0C76, 0x053B, 
-	0x015A, 0xFEA0, 0x0039, 0x061C, 0x082D, 0x087C, 0x0A33, 0x0B41, 0x0B78, 
-	0x0B7E, 0x0B71, 0x0B98, 0x0BA4, 0x0BC8, 0x0BD5, 0x0BDA, 0x0BE0, 0x0BE1, 
-	0x0BE3, 0x0BE8, 0x0BE9, 0x0BEA, 0x0BEA, 0x0BEA, 0x0BEA, 0x0BE9, 0x0BE7, 
-	0x0BE5, 0x0BE4, 0x0BE3, 0x0BE2, 0x0BE1, 0x0BE1, 0x0BE1, 0x0BE3, 0x0BE2, 
-	0x0BDB, 0x0BD3, 0x0BCB, 0x0BC5, 0x0BC1, 0x0BBE, 0x0BBA, 0x0BB6, 0x0BB5, 
-	0x0BB3, 0x0BB2, 0x0BAE, 0x0BAE, 0x0BAD, 0x0BAB, 0x0BAA, 0x0BA9, 0x0BA8, 
-	0x0BA7, 0x0BA5, 0x0BA3, 0x0BA2, 0x0BA0, 0x0B9E, 0x0B9C, 0x0B9A, 0x0B98, 
-	0x0B96, 0x0B93, 0x0B91, 0x0B8E, 0x0B8D, 0x0B8B, 0x0B89, 0x0B87, 0x0B86, 
-	0x0B84, 0x0B82, 0x0B81, 0x0B7F, 0x0B7D, 0x0B7B, 0x0B7A, 0x0B78, 0x0B77, 
-	0x0B76, 0x0B74, 0x0B72, 0x0B70, 0x0B6F, 0x0B6D, 0x0B6B, 0x0B6A, 0x0B68, 
-	0x0B66, 0x0B65, 0x0B63, 0x0B62, 0x0B60, 0x0B5E, 0x0B5C, 0x0B5B, 0x0B59, 
-	0x0B57, 0x0B55, 0x0B54, 0x0B52, 0x0B50, 0x0B4E, 0x0B4D, 0x0B4C, 0x0B4A, 
-	0x0B49, 0x0B48, 0x0B47, 0x0B45, 0x0B41, 0x0B3D, 0x0B39, 0x0B35, 0x0B32, 
-	0x0B2D, 0x0B28, 0x0B22, 0x0B1B, 0x0B15, 0x0B0E, 0x0B07, 0x0B01, 0x0AFB, 
-	0x0AF6, 0x0AF0, 0x0AEA, 0x0AE4, 0x0ADE, 0x0AD7, 0x0AD1, 0x0ACB, 0x0AC4, 
-	0x0ABE, 0x0AB8, 0x0AB2, 0x0AAE, 0x0AAD, 0x0AAC, 0x0AAB, 0x0AAA, 0x0AA7, 
-	0x0AA4, 0x0AA1, 0x0A9E, 0x0A9C, 0x0A99, 0x0A97, 0x0A94, 0x0A91, 0x0A8E, 
-	0x0A8B, 0x0A88, 0x0A85, 0x0A82, 0x0A7F, 0x0A7B, 0x0A79, 0x0A76, 0x0A74, 
-	0x0A71, 0x0A6F, 0x0A6C, 0x0A6B, 0x0A69, 0x0A67, 0x0A65, 0x0A63, 0x0A62, 
-	0x0A61, 0x0A5F, 0x0A5E, 0x0A5C, 0x0A5B, 0x0A5A, 0x0A59, 0x0A58, 0x0A58, 
-	0x0A57, 0x0A57, 0x0A56, 0x0A56, 0x0A55, 0x0A52, 0x0A51, 0x0A50, 0x0A50, 
-	0x0A50, 0x0A4F, 0x0A4E, 0x0A4E, 0x0A4E, 0x0A4E, 0x0A4D, 0x0A4B, 0x0A4B, 
-	0x0A4B, 0x0A4A, 0x0A4A, 0x0A4A, 0x0A4A, 0x0A48, 0x0A47, 0x0A45, 0x0A44, 
-	0x0A43, 0x0A42, 0x0A40, 0x0A3F, 0x0A3F, 0x0A3D, 0xEA3E, 0xD4DA, 0xD95D, 
-	0xF420, 0xFEED, 0xF63C, 0xF11C, 0xEB0A, 0xE058, 0xD388, 0x448F, 0x2BD5, 
-	0x1E4C, 0x18FB, 0x1428, 0x1305, 0x1D48, 0xA959, 0xB2E1, 0xBAEF, 0xC175, 
-	0xC9F5, 0xDD57, 0xEDC4, 0xFBDB, 0x0A87, 0x14C1, 0x1BEB, 0x2395, 0x232A, 
-	0x1DED, 0x0034, 0xD3D5, 0xCA99, 0xCAC2, 0xCCC1, 0xCDF1, 0xCDB0, 0xCD17, 
-	0xCBC0, 0xCA4C, 0xCA84, 0xCB2E, 0xCBA5, 0xCC04, 0xCC14, 0xCC16, 0xCC0F, 
-	0xCC0B, 0xCC0C, 0xCC12, 0xCC13, 0xCC14, 0xCC16, 0xCC17, 0xCC18, 0xCC19, 
-	0xCC1A, 0xCC1B, 0xCC1C, 0xCC1C, 0xCC1C, 0xCC1C, 0xCC1B, 0xCC1A, 0xCC1A, 
-	0xCC1A, 0xCC1A, 0xCC19, 0xCC19, 0xCC19, 0xCC19, 0xCC19, 0xCC18, 0xCC17, 
-	0xCC16, 0xCC15, 0xCC14, 0xCC13, 0xCC13, 0xCC12, 0xCC12, 0xCC12, 0xCC12, 
-	0xCC12, 0xCC12, 0xCC12, 0xCC13, 0xCC13, 0xCC13, 0xCC13, 0xCC13, 0xCC13, 
-	0xCC13, 0xCC13, 0xCC13, 0xCC13, 0xCC14, 0xCC13, 0xCC13, 0xCC12, 0xCC12, 
-	0xCC11, 0xCC11, 0xCC11, 0xCC12, 0xCC12, 0xCC12, 0xCC12, 0xCC12, 0xCC12, 
-	0xCC13, 0xCC13, 0xCC13, 0xCC14, 0xCC14, 0xCC14, 0xCC15, 0xCC15, 0xCC16, 
-	0xCC16, 0xCC16, 0xCC17, 0xCC17, 0xCC17, 0xCC18, 0xCC18, 0xCC18, 0xCC19, 
-	0xCC19, 0xCC19, 0xCC1A, 0xCC1A, 0xCC1A, 0xCC1B, 0xCC1B, 0xCC1B, 0xCC1B, 
-	0xCC1C, 0xCC1C, 0xCC1C, 0xCC1D, 0xCC1D, 0xCC1E, 0xCC1E, 0xCC1F, 0xCC1F, 
-	0xCC20, 0xCC20, 0xCC20, 0xCC1F, 0xCC1F, 0xCC1E, 0xCC1E, 0xCC1D, 0xCC1C, 
-	0xCC1B, 0xCC19, 0xCC18, 0xCC17, 0xCC16, 0xCC14, 0xCC13, 0xCC12, 0xCC11, 
-	0xCC10, 0xCC0F, 0xCC0E, 0xCC0D, 0xCC0C, 0xCC0A, 0xCC09, 0xCC08, 0xCC07, 
-	0xCC06, 0xCC05, 0xCC06, 0xCC06, 0xCC07, 0xCC07, 0xCC07, 0xCC07, 0xCC06, 
-	0xCC06, 0xCC06, 0xCC05, 0xCC05, 0xCC05, 0xCC05, 0xCC04, 0xCC04, 0xCC03, 
-	0xCC03, 0xCC02, 0xCC02, 0xCC02, 0xCC01, 0xCC01, 0xCC01, 0xCC01, 0xCC00, 
-	0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 
-	0xCC00, 0xCC00, 0xCC00, 0xCC01, 0xCC01, 0xCC01, 0xCC01, 0xCC01, 0xCC01, 
-	0xCC01, 0xCC01, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 
-	0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC01, 0xCC01, 0xCC01, 
-	0xCC01, 0xCC02, 0xCC02, 0xCC02, 0xCC01, 0x3995, 0x2B69, 0x36B2, 0xC976, 
-	0x2B7B, 0x1925, 0x1C4E, 0x1979, 0x1D4A, 0x196A, 0x0C23, 0x078C, 0x0673, 
-	0x0330, 0xFD9E, 0xF36A, 0xE1A5, 0xD55E, 0xCAE8, 0xC194, 0xBFFC, 0xBE8B, 
-	0xBC56, 0xBB0F, 0xBBA3, 0xBBD4, 0xBB4A, 0xBAA5, 0xBBB2, 0xC091, 0xC2D1, 
-	0xC564, 0xC4F0, 0xC308, 0xBF93, 0xBE0C, 0xBC9D, 0xBA62, 0xB90F, 0xBB8F, 
-	0xBD3D, 0xBD0A, 0xBD1A, 0xBD3B, 0xBD52, 0xBD57, 0xBD56, 0xBD56, 0xBD5C, 
-	0xBD5E, 0xBD60, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 
-	0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 
-	0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD62, 0xBD61, 0xBD60, 
-	0xBD60, 0xBD60, 0xBD60, 0xBD5F, 0xBD5F, 0xBD5F, 0xBD5F, 0xBD5F, 0xBD5F, 
-	0xBD5F, 0xBD5F, 0xBD5F, 0xBD5F, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 
-	0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 
-	0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 
-	0xBD60, 0xBD60, 0xBD60, 0xBD61, 0xBD61, 0xBD61, 0xBD61, 0xBD61, 0xBD61, 
-	0xBD61, 0xBD61, 0xBD61, 0xBD61, 0xBD61, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 
-	0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 
-	0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD64, 0xBD64, 
-	0xBD64, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD62, 0xBD62, 0xBD61, 
-	0xBD61, 0xBD60, 0xBD5F, 0xBD5F, 0xBD5E, 0xBD5E, 0xBD5D, 0xBD5D, 0xBD5C, 
-	0xBD5C, 0xBD5B, 0xBD5A, 0xBD5A, 0xBD59, 0xBD59, 0xBD58, 0xBD58, 0xBD57, 
-	0xBD57, 0xBD57, 0xBD57, 0xBD57, 0xBD57, 0xBD57, 0xBD57, 0xBD56, 0xBD56, 
-	0xBD56, 0xBD56, 0xBD56, 0xBD56, 0xBD56, 0xBD56, 0xBD56, 0xBD55, 0xBD55, 
-	0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD54, 
-	0xBD54, 0xBD54, 0xBD54, 0xBD55, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 
-	0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD55, 
-	0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD56, 
-	0xBD56, 0xBD56, 0xBD56, 0xBD55, 0xBD56, 0x0BA1, 0xF7EF, 0xDBB6, 0xA088, 
-	0xE67D, 0xFFE3, 0x00D1, 0xFF3E, 0x096E, 0x16FC, 0x2174, 0x1A27, 0x08CB, 
-	0xFD41, 0xF453, 0xE917, 0xE0CD, 0xE1F9, 0xEB45, 0xF7DF, 0xFF4D, 0x00F1, 
-	0x011F, 0xFE60, 0x009F, 0x0326, 0x059D, 0x07B9, 0x08B2, 0x0690, 0xFE28, 
-	0xF66E, 0xF1A7, 0xEFE8, 0xF204, 0xF77F, 0xFD89, 0x00A2, 0x010A, 0xFC07, 
-	0xF8FD, 0xF8E8, 0xF915, 0xF927, 0xF935, 0xF935, 0xF935, 0xF935, 0xF939, 
-	0xF939, 0xF93D, 0xF93C, 0xF93B, 0xF93B, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 
-	0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93B, 0xF93C, 0xF93C, 
-	0xF93C, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93C, 0xF93C, 0xF93B, 0xF93B, 
-	0xF93B, 0xF93B, 0xF93B, 0xF93A, 0xF93B, 0xF93B, 0xF93A, 0xF93A, 0xF93A, 
-	0xF93A, 0xF93A, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 
-	0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 
-	0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 
-	0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93C, 
-	0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 
-	0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 
-	0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 
-	0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 
-	0xF93B, 0xF93B, 0xF93A, 0xF93A, 0xF93A, 0xF93A, 0xF939, 0xF939, 0xF939, 
-	0xF938, 0xF938, 0xF938, 0xF937, 0xF937, 0xF937, 0xF936, 0xF936, 0xF936, 
-	0xF935, 0xF936, 0xF936, 0xF936, 0xF936, 0xF936, 0xF935, 0xF935, 0xF935, 
-	0xF935, 0xF935, 0xF935, 0xF935, 0xF935, 0xF935, 0xF935, 0xF935, 0xF935, 
-	0xF934, 0xF935, 0xF935, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 
-	0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 
-	0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 
-	0xF934, 0xF934, 0xF935, 0xF5F4, 0xE9E6, 0xCDE4, 0x22F8, 0xBCC4, 0xE9B8, 
-	0x06A6, 0x184A, 0x1F18, 0x14D0, 0xFCBA, 0xF253, 0xFB92, 0xFA8C, 0xF4C2, 
-	0xEA28, 0xEEA6, 0xF264, 0xF524, 0xF427, 0xECCB, 0xE387, 0xD9B0, 0xD78F, 
-	0xD7D9, 0xD57E, 0xD2BD, 0xD0E8, 0xD075, 0xD8B0, 0xE03A, 0xE576, 0xEC81, 
-	0xF56C, 0x00F1, 0x0BD7, 0x1215, 0x1465, 0x1555, 0x155E, 0x140D, 0x1457, 
-	0x1452, 0x1390, 0x12F5, 0x12DF, 0x12DF, 0x12DF, 0x12BC, 0x12B5, 0x12A3, 
-	0x129D, 0x129B, 0x129A, 0x129A, 0x1299, 0x1298, 0x1298, 0x1298, 0x1299, 
-	0x1299, 0x1299, 0x1299, 0x1299, 0x1299, 0x1299, 0x1298, 0x1297, 0x1296, 
-	0x1294, 0x1293, 0x1293, 0x1294, 0x1296, 0x129A, 0x129F, 0x12A2, 0x12A4, 
-	0x12A6, 0x12A9, 0x12AA, 0x12A9, 0x12AA, 0x12A9, 0x12A9, 0x12A9, 0x12A8, 
-	0x12A8, 0x12A7, 0x12A6, 0x12A5, 0x12A5, 0x12A4, 0x12A4, 0x12A4, 0x12A4, 
-	0x12A4, 0x12A4, 0x12A4, 0x12A4, 0x12A4, 0x12A5, 0x12A5, 0x12A5, 0x12A5, 
-	0x12A4, 0x12A4, 0x12A3, 0x12A3, 0x12A2, 0x12A2, 0x12A2, 0x12A1, 0x12A1, 
-	0x12A1, 0x12A0, 0x129F, 0x129F, 0x129E, 0x129E, 0x129E, 0x129D, 0x129D, 
-	0x129C, 0x129B, 0x129B, 0x129A, 0x129A, 0x1299, 0x1298, 0x1298, 0x1297, 
-	0x1296, 0x1296, 0x1295, 0x1294, 0x1294, 0x1293, 0x1292, 0x1292, 0x1291, 
-	0x1291, 0x1290, 0x128F, 0x128F, 0x128E, 0x128E, 0x128D, 0x128D, 0x128F, 
-	0x1290, 0x1291, 0x1292, 0x1293, 0x1295, 0x1299, 0x129C, 0x12A0, 0x12A3, 
-	0x12A7, 0x12AA, 0x12AE, 0x12B1, 0x12B4, 0x12B7, 0x12BA, 0x12BD, 0x12C1, 
-	0x12C4, 0x12C7, 0x12CB, 0x12CE, 0x12D1, 0x12D5, 0x12D8, 0x12DA, 0x12DA, 
-	0x12DA, 0x12DA, 0x12DB, 0x12DB, 0x12DC, 0x12DD, 0x12DD, 0x12DE, 0x12DE, 
-	0x12DE, 0x12DF, 0x12E0, 0x12E1, 0x12E2, 0x12E3, 0x12E3, 0x12E4, 0x12E5, 
-	0x12E5, 0x12E6, 0x12E6, 0x12E7, 0x12E7, 0x12E8, 0x12E8, 0x12E9, 0x12E9, 
-	0x12E9, 0x12E8, 0x12E9, 0x12E9, 0x12E9, 0x12E9, 0x12E9, 0x12EA, 0x12EA, 
-	0x12EB, 0x12EB, 0x12EB, 0x12EA, 0x12EA, 0x12E9, 0x12E9, 0x12E8, 0x12E8, 
-	0x12E8, 0x12E8, 0x12E7, 0x12E6, 0x12E5, 0x12E5, 0x12E4, 0x12E3, 0x12E3, 
-	0x12E2, 0x12E2, 0x12E3, 0x12E2, 0x12E1, 0x12E1, 0x12E0, 0x12DF, 0x12DE, 
-	0x12DF, 0x12DF, 0x12E0, 0x3ADB, 0x3086, 0x3D87, 0x3B8F, 0x3520, 0x36CD, 
-	0x3BEB, 0x424D, 0x487B, 0x536E, 0x5BB6, 0x634E, 0xD6E7, 0x4C7C, 0x4217, 
-	0x3826, 0x38FE, 0x3D8A, 0x37D2, 0x3F7C, 0x466C, 0x43EA, 0x40FC, 0x3E7A, 
-	0x3A6F, 0x33F9, 0x318D, 0x311D, 0x2F4D, 0x32D7, 0x3678, 0x385F, 0x392F, 
-	0x39E3, 0x39D7, 0x3ABE, 0x3DFC, 0x4553, 0xCDC1, 0xD4F3, 0xD68D, 0xD754, 
-	0xD908, 0xDA9C, 0xDB20, 0xDB78, 0xDB68, 0xDB29, 0xDB11, 0xDAE6, 0xDA34, 
-	0xD9BB, 0xD97D, 0xD971, 0xD96E, 0xD97C, 0xD98E, 0xD996, 0xD99A, 0xD99C, 
-	0xD99C, 0xD99A, 0xD997, 0xD992, 0xD98B, 0xD982, 0xD979, 0xD96F, 0xD964, 
-	0xD958, 0xD94C, 0xD942, 0xD933, 0xD91C, 0xD908, 0xD8F6, 0xD8ED, 0xD8EC, 
-	0xD8EB, 0xD8E9, 0xD8E5, 0xD8DC, 0xD8D6, 0xD8BA, 0xD8A7, 0xD8A7, 0xD8A5, 
-	0xD89C, 0xD893, 0xD889, 0xD881, 0xD878, 0xD870, 0xD867, 0xD85D, 0xD854, 
-	0xD84B, 0xD841, 0xD836, 0xD82C, 0xD821, 0xD816, 0xD80B, 0xD801, 0xD7F6, 
-	0xD7EC, 0xD7E1, 0xD7D7, 0xD7CD, 0xD7C2, 0xD7B7, 0xD7AC, 0xD7A2, 0xD797, 
-	0xD78B, 0xD77F, 0xD775, 0xD772, 0xD767, 0xD75C, 0xD750, 0xD745, 0xD739, 
-	0xD72D, 0xD721, 0xD717, 0xD709, 0xD6FD, 0xD6F0, 0xD6E4, 0xD6D8, 0xD6CB, 
-	0xD6BE, 0xD6B3, 0xD6A6, 0xD69A, 0xD68C, 0xD67F, 0xD674, 0xD666, 0xD658, 
-	0xD649, 0xD63C, 0xD631, 0xD622, 0xD614, 0xD606, 0xD5FD, 0xD5F3, 0xD5E5, 
-	0xD5D7, 0xD5C8, 0xD5BA, 0xD5AB, 0xD59C, 0xD58D, 0xD57C, 0xD56B, 0xD55A, 
-	0xD549, 0xD536, 0xD529, 0xD519, 0xD50B, 0xD4FB, 0xD4EA, 0xD4D8, 0xD4C7, 
-	0xD4B8, 0xD4A8, 0xD497, 0xD487, 0xD477, 0xD465, 0xD453, 0xD445, 0xD43A, 
-	0xD434, 0xD42B, 0xD420, 0xD413, 0xD406, 0xD3F9, 0xD3EC, 0xD3DD, 0xD3D1, 
-	0xD3C5, 0xD3B6, 0xD3AB, 0xD39D, 0xD38F, 0xD381, 0xD373, 0xD365, 0xD359, 
-	0xD34D, 0xD33E, 0xD330, 0xD322, 0xD314, 0xD307, 0xD2FA, 0xD2EC, 0xD2DE, 
-	0xD2D0, 0xD2C1, 0xD2BE, 0xD2BD, 0xD2BD, 0xD2BB, 0xD2BB, 0xD2BA, 0xD2B8, 
-	0xD2B7, 0xD2B7, 0xD2B6, 0xD2B4, 0xD2B3, 0xD2B2, 0xD2B1, 0xD2AF, 0xD2AE, 
-	0xD2AC, 0xD2AA, 0xD2A9, 0xD2A7, 0xD2A6, 0xD2A4, 0xD2A2, 0xD29F, 0xD29E, 
-	0xD29D, 0xD29B, 0xD29B, 0xD29B, 0xD29A, 0xD298, 0xD298, 0xD298, 0xD296, 
-	0xD294, 0xD293, 0xD292, 0xD291, 0xD28F, 0xD28E, 0xD28C, 0xD28A, 0xD289, 
-	0xD288, 0x2FED, 0xFA99, 0xFE75, 0xFC48, 0xF647, 0xF37A, 0xF12C, 0xEFD4, 
-	0xF004, 0xF49E, 0x06C4, 0x1AA9, 0x59BB, 0x15B5, 0x0025, 0xF81D, 0xF946, 
-	0xFA9A, 0xEE78, 0xEEEC, 0xEE71, 0xED76, 0xED5F, 0xEE10, 0xF03D, 0xF4EE, 
-	0xF95B, 0xFB93, 0xFDD5, 0xFFA4, 0x0155, 0x046A, 0x078D, 0x0AE1, 0x0EAE, 
-	0x1213, 0x1550, 0x1800, 0x680E, 0x6852, 0x6AC0, 0x6CC7, 0x6E06, 0x6EC2, 
-	0x6EE0, 0x6EA4, 0x6E42, 0x6E1E, 0x6E24, 0x6DFD, 0x6B85, 0x69C3, 0x68AA, 
-	0x682C, 0x682F, 0x6864, 0x68B0, 0x6901, 0x6946, 0x6984, 0x69BF, 0x69FA, 
-	0x6A35, 0x6A71, 0x6AAD, 0x6AEB, 0x6B2A, 0x6B6A, 0x6BAC, 0x6BEF, 0x6C34, 
-	0x6C7B, 0x6CC4, 0x6D08, 0x6D4B, 0x6D8F, 0x6DAC, 0x6DBD, 0x6DCB, 0x6DD7, 
-	0x6DDE, 0x6DE5, 0x6DEB, 0x6DB7, 0x6DB2, 0x6DBB, 0x6DC7, 0x6DD0, 0x6DD4, 
-	0x6DD8, 0x6DDC, 0x6DDF, 0x6DE1, 0x6DE4, 0x6DE6, 0x6DE8, 0x6DEA, 0x6DEB, 
-	0x6DEC, 0x6DEC, 0x6DEC, 0x6DED, 0x6DED, 0x6DEE, 0x6DEE, 0x6DEE, 0x6DEE, 
-	0x6DEE, 0x6DEE, 0x6DED, 0x6DED, 0x6DED, 0x6DEE, 0x6DEE, 0x6DED, 0x6DEC, 
-	0x6DEA, 0x6DED, 0x6DED, 0x6DED, 0x6DEB, 0x6DE9, 0x6DE8, 0x6DE7, 0x6DE5, 
-	0x6DE3, 0x6DE2, 0x6DE0, 0x6DDE, 0x6DDC, 0x6DDA, 0x6DD8, 0x6DD5, 0x6DD2, 
-	0x6DD0, 0x6DCE, 0x6DCB, 0x6DC8, 0x6DC5, 0x6DC3, 0x6DC0, 0x6DBC, 0x6DB9, 
-	0x6DB6, 0x6DB3, 0x6DB0, 0x6DAC, 0x6DAB, 0x6DAB, 0x6DA8, 0x6DA3, 0x6DA0, 
-	0x6D9C, 0x6D99, 0x6D95, 0x6D92, 0x6D8D, 0x6D89, 0x6D85, 0x6D81, 0x6D7D, 
-	0x6D78, 0x6D74, 0x6D71, 0x6D6E, 0x6D6A, 0x6D66, 0x6D63, 0x6D61, 0x6D5E, 
-	0x6D5A, 0x6D57, 0x6D54, 0x6D4F, 0x6D4C, 0x6D48, 0x6D44, 0x6D44, 0x6D42, 
-	0x6D3F, 0x6D3B, 0x6D38, 0x6D35, 0x6D31, 0x6D2D, 0x6D27, 0x6D25, 0x6D21, 
-	0x6D1C, 0x6D17, 0x6D14, 0x6D10, 0x6D0C, 0x6D08, 0x6D03, 0x6CFE, 0x6CFA, 
-	0x6CF6, 0x6CF2, 0x6CED, 0x6CE9, 0x6CE5, 0x6CE2, 0x6CDF, 0x6CDA, 0x6CD5, 
-	0x6CD6, 0x6CD9, 0x6CDB, 0x6CDC, 0x6CDD, 0x6CDF, 0x6CE0, 0x6CE2, 0x6CE3, 
-	0x6CE4, 0x6CE5, 0x6CE6, 0x6CE6, 0x6CE4, 0x6CE3, 0x6CE1, 0x6CE0, 0x6CDE, 
-	0x6CDD, 0x6CDC, 0x6CDB, 0x6CDA, 0x6CD9, 0x6CD9, 0x6CDB, 0x6CDB, 0x6CDA, 
-	0x6CDB, 0x6CDC, 0x6CDD, 0x6CDC, 0x6CDD, 0x6CDE, 0x6CDF, 0x6CDE, 0x6CDE, 
-	0x6CDC, 0x6CDC, 0x6CDA, 0x6CD9, 0x6CD8, 0x6CD7, 0x6CD7, 0x6CD6, 0x410B, 
-	0x3887, 0x2093, 0x2BD1, 0x3770, 0x39F2, 0x32EC, 0x279F, 0x1B59, 0x08AC, 
-	0xF0D7, 0xD6A2, 0x30FC, 0xA3EE, 0xB86C, 0xC866, 0xD7C2, 0xEE2F, 0xFAC0, 
-	0xFAFB, 0xFE8E, 0x073A, 0x0AB6, 0x0BD6, 0x0EF6, 0x15AA, 0x1AA2, 0x1C7A, 
-	0x1BC5, 0x1993, 0x184B, 0x17FC, 0x19B6, 0x1DDB, 0x2432, 0x2E08, 0x3C7A, 
-	0x4F98, 0xDE93, 0xE8CD, 0xEC32, 0xEE4F, 0xF050, 0xF206, 0xF294, 0xF2BB, 
-	0xF291, 0xF278, 0xF29D, 0xF27B, 0xF125, 0xF03C, 0xEFB4, 0xEF8D, 0xEF9F, 
-	0xEFCF, 0xF00D, 0xF03E, 0xF06A, 0xF093, 0xF0BB, 0xF0E3, 0xF10A, 0xF133, 
-	0xF15B, 0xF182, 0xF1AC, 0xF1D6, 0xF201, 0xF22D, 0xF25A, 0xF288, 0xF2B5, 
-	0xF2DC, 0xF308, 0xF333, 0xF345, 0xF353, 0xF35E, 0xF368, 0xF36C, 0xF36E, 
-	0xF373, 0xF351, 0xF34B, 0xF354, 0xF361, 0xF366, 0xF369, 0xF36C, 0xF36F, 
-	0xF371, 0xF371, 0xF374, 0xF375, 0xF376, 0xF376, 0xF376, 0xF377, 0xF378, 
-	0xF375, 0xF378, 0xF378, 0xF379, 0xF378, 0xF377, 0xF375, 0xF377, 0xF378, 
-	0xF376, 0xF375, 0xF372, 0xF372, 0xF370, 0xF36E, 0xF36B, 0xF36B, 0xF36E, 
-	0xF36D, 0xF36C, 0xF369, 0xF366, 0xF366, 0xF364, 0xF362, 0xF363, 0xF361, 
-	0xF35E, 0xF35C, 0xF35D, 0xF35B, 0xF359, 0xF356, 0xF354, 0xF351, 0xF350, 
-	0xF34E, 0xF34B, 0xF34B, 0xF349, 0xF347, 0xF343, 0xF341, 0xF341, 0xF33D, 
-	0xF339, 0xF336, 0xF337, 0xF337, 0xF336, 0xF331, 0xF32D, 0xF32D, 0xF32B, 
-	0xF32A, 0xF329, 0xF322, 0xF31C, 0xF319, 0xF315, 0xF310, 0xF30E, 0xF30C, 
-	0xF307, 0xF304, 0xF301, 0xF2FB, 0xF2F7, 0xF2F4, 0xF2EF, 0xF2E9, 0xF2E7, 
-	0xF2E1, 0xF2DB, 0xF2D5, 0xF2D5, 0xF2D5, 0xF2D7, 0xF2D9, 0xF2DB, 0xF2DA, 
-	0xF2DA, 0xF2DA, 0xF2DA, 0xF2D8, 0xF2D7, 0xF2D8, 0xF2D7, 0xF2D9, 0xF2D8, 
-	0xF2D9, 0xF2DA, 0xF2DB, 0xF2DA, 0xF2DC, 0xF2DC, 0xF2DA, 0xF2DD, 0xF2DB, 
-	0xF2DB, 0xF2DE, 0xF2DF, 0xF2E1, 0xF2E2, 0xF2E1, 0xF2E0, 0xF2E7, 0xF2ED, 
-	0xF2F4, 0xF2F9, 0xF300, 0xF305, 0xF30B, 0xF310, 0xF316, 0xF31D, 0xF323, 
-	0xF329, 0xF32F, 0xF335, 0xF33A, 0xF33F, 0xF343, 0xF348, 0xF34D, 0xF352, 
-	0xF357, 0xF35D, 0xF364, 0xF36A, 0xF372, 0xF377, 0xF37D, 0xF385, 0xF38B, 
-	0xF392, 0xF396, 0xF39B, 0xF3A1, 0xF3A8, 0xF3AC, 0xF3B0, 0xF3B6, 0xF3BB, 
-	0xF3C0, 0xF3C4, 0xF3C9, 0xF3CD, 0xF3D2, 0xF3D7, 0x0B32, 0xF4B7, 0x3FA0, 
-	0xCFDD, 0xDFF3, 0x2E03, 0x38BA, 0x4161, 0x4E19, 0x59BA, 0x6462, 0x6F0D, 
-	0x7DBA, 0x9A4B, 0xF63A, 0x0CC8, 0xFEB9, 0xDEB1, 0xD7F8, 0xCF16, 0xB7B8, 
-	0xA7B7, 0xA781, 0xA28E, 0x97B4, 0x9211, 0x9228, 0x94B6, 0x92E1, 0x9298, 
-	0x9356, 0x98A3, 0x9715, 0x94E1, 0x905C, 0x8742, 0x7D6C, 0x7530, 0x6753, 
-	0x593F, 0x4CE7, 0x49C4, 0x4AD4, 0x4B44, 0x4ACA, 0x47B5, 0x4591, 0x455C, 
-	0x4500, 0x441D, 0x41E1, 0x41CF, 0x4247, 0x4689, 0x495B, 0x4B09, 0x4BAA, 
-	0x4B7A, 0x4AEB, 0x4A33, 0x498F, 0x4904, 0x4888, 0x4813, 0x47A0, 0x472E, 
-	0x46BC, 0x464C, 0x45DC, 0x456C, 0x44FB, 0x4488, 0x4413, 0x439D, 0x4324, 
-	0x42AC, 0x423D, 0x41CC, 0x415E, 0x412E, 0x4109, 0x40E9, 0x40CD, 0x40BA, 
-	0x40AA, 0x4097, 0x40EC, 0x40F4, 0x40DC, 0x40BE, 0x40AA, 0x409C, 0x408E, 
-	0x4082, 0x4077, 0x406F, 0x4063, 0x405A, 0x404F, 0x4048, 0x4040, 0x4039, 
-	0x4032, 0x402D, 0x4024, 0x401D, 0x4017, 0x4010, 0x400C, 0x4006, 0x4000, 
-	0x3FFB, 0x3FF8, 0x3FF3, 0x3FF0, 0x3FE9, 0x3FE5, 0x3FE3, 0x3FE1, 0x3FDE, 
-	0x3FD3, 0x3FCF, 0x3FCB, 0x3FCA, 0x3FC9, 0x3FC6, 0x3FC3, 0x3FC2, 0x3FBF, 
-	0x3FBE, 0x3FBE, 0x3FBC, 0x3FB8, 0x3FB7, 0x3FB7, 0x3FB9, 0x3FBA, 0x3FBA, 
-	0x3FB9, 0x3FB8, 0x3FB9, 0x3FB9, 0x3FB9, 0x3FB9, 0x3FBB, 0x3FBC, 0x3FBD, 
-	0x3FBF, 0x3FC1, 0x3FC2, 0x3FBF, 0x3FBB, 0x3FBB, 0x3FC1, 0x3FC4, 0x3FC3, 
-	0x3FC5, 0x3FC7, 0x3FC7, 0x3FCF, 0x3FD5, 0x3FD8, 0x3FDB, 0x3FE0, 0x3FE4, 
-	0x3FE7, 0x3FEB, 0x3FED, 0x3FF1, 0x3FF6, 0x3FFB, 0x3FFE, 0x4003, 0x4009, 
-	0x400C, 0x4012, 0x401A, 0x4020, 0x4021, 0x4020, 0x401C, 0x4017, 0x4015, 
-	0x4015, 0x4014, 0x4013, 0x4012, 0x4012, 0x4016, 0x4014, 0x4013, 0x4013, 
-	0x4013, 0x4011, 0x400F, 0x400D, 0x400D, 0x400D, 0x400D, 0x400D, 0x400A, 
-	0x400C, 0x400C, 0x400A, 0x4007, 0x4004, 0x4003, 0x4005, 0x4006, 0x3FFC, 
-	0x3FF3, 0x3FEA, 0x3FE3, 0x3FD9, 0x3FD0, 0x3FC9, 0x3FBF, 0x3FB7, 0x3FAE, 
-	0x3FA7, 0x3F9F, 0x3F98, 0x3F94, 0x3F8F, 0x3F8B, 0x3F87, 0x3F83, 0x3F7E, 
-	0x3F79, 0x3F74, 0x3F6E, 0x3F67, 0x3F5F, 0x3F54, 0x3F4D, 0x3F47, 0x3F3C, 
-	0x3F35, 0x3F2C, 0x3F27, 0x3F21, 0x3F1A, 0x3F10, 0x3F0C, 0x3F07, 0x3F01, 
-	0x3EFC, 0x3EF7, 0x3EF2, 0x3EEE, 0x3EE9, 0x3EE4, 0x3EDF, 0x3920, 0x21F8, 
-	0x1709, 0x0B81, 0xFD51, 0xF727, 0xF728, 0xFA83, 0x0051, 0x0E6E, 0x26C6, 
-	0x3318, 0x20BA, 0x1E40, 0x0ABC, 0xFB0A, 0x0375, 0x105C, 0x08CC, 0x1191, 
-	0x1AD4, 0x18B5, 0x166A, 0x1655, 0x15D8, 0x14AD, 0x157A, 0x1626, 0x163A, 
-	0x1809, 0x1A70, 0x1D62, 0x1FFE, 0x236E, 0x2679, 0x2609, 0x2045, 0x1A11, 
-	0x18B6, 0x1C32, 0x1AE9, 0x199D, 0x1995, 0x19B0, 0x19C8, 0x199B, 0x194E, 
-	0x190B, 0x18EE, 0x18EB, 0x197F, 0x19CF, 0x19FE, 0x1A18, 0x1A12, 0x1A09, 
-	0x19FC, 0x19E2, 0x19C7, 0x19AC, 0x1990, 0x1972, 0x1952, 0x1930, 0x190C, 
-	0x18E6, 0x18BE, 0x1894, 0x1869, 0x183C, 0x180D, 0x17DE, 0x17AA, 0x1771, 
-	0x1739, 0x1705, 0x16EF, 0x16E3, 0x16DA, 0x16D2, 0x16CA, 0x16C1, 0x16B7, 
-	0x16B9, 0x16AD, 0x16A7, 0x169D, 0x1690, 0x1686, 0x167B, 0x1672, 0x1669, 
-	0x1662, 0x1659, 0x164F, 0x1646, 0x163E, 0x1635, 0x162B, 0x1622, 0x161A, 
-	0x1610, 0x1606, 0x15FD, 0x15F4, 0x15EB, 0x15E2, 0x15D9, 0x15D1, 0x15C8, 
-	0x15BE, 0x15B6, 0x15AD, 0x15A4, 0x159B, 0x1592, 0x158B, 0x1585, 0x157C, 
-	0x1573, 0x156B, 0x1562, 0x1559, 0x1550, 0x1547, 0x153F, 0x1535, 0x152C, 
-	0x1522, 0x1519, 0x1510, 0x1506, 0x14FD, 0x14F6, 0x14EC, 0x14E3, 0x14D9, 
-	0x14D0, 0x14C8, 0x14BE, 0x14B3, 0x14AA, 0x14A0, 0x1498, 0x148E, 0x1484, 
-	0x147B, 0x1473, 0x146A, 0x145F, 0x1458, 0x144D, 0x1443, 0x1438, 0x142E, 
-	0x1422, 0x1419, 0x140D, 0x1402, 0x13F7, 0x13EB, 0x13E2, 0x13D7, 0x13CE, 
-	0x13C3, 0x13B7, 0x13AC, 0x13A0, 0x1395, 0x138B, 0x1380, 0x1375, 0x136A, 
-	0x135F, 0x1354, 0x134A, 0x1342, 0x133C, 0x1335, 0x132C, 0x1322, 0x1319, 
-	0x130F, 0x1305, 0x12FB, 0x12F4, 0x12EA, 0x12DF, 0x12D8, 0x12CD, 0x12C3, 
-	0x12B8, 0x12AE, 0x12A3, 0x129B, 0x1292, 0x1288, 0x127D, 0x1273, 0x126A, 
-	0x1260, 0x1256, 0x124B, 0x1240, 0x1237, 0x122D, 0x1227, 0x1222, 0x121E, 
-	0x1219, 0x1216, 0x1211, 0x120C, 0x1208, 0x1204, 0x1200, 0x11FC, 0x11F7, 
-	0x11F4, 0x11F1, 0x11EE, 0x11EB, 0x11E8, 0x11E5, 0x11E1, 0x11DE, 0x11DA, 
-	0x11D6, 0x11D2, 0x11CB, 0x11C6, 0x11C3, 0x11BE, 0x11BA, 0x11B8, 0x11B3, 
-	0x11AF, 0x11AC, 0x11A9, 0x11A4, 0x11A1, 0x119E, 0x119B, 0x1197, 0x1194, 
-	0x1191, 0x118E, 0x118A, 0x1187, 0x1183, 0xD6B6, 0xE3CB, 0x1F4A, 0x1C4B, 
-	0x1127, 0x0807, 0x0000, 0xF818, 0xF131, 0xEAFB, 0xF436, 0x4194, 0x49FE, 
-	0x288F, 0x070F, 0x08BA, 0x0567, 0x00B7, 0xF7C7, 0xFE9C, 0xFB7E, 0xF6C0, 
-	0xF78F, 0xFA62, 0xFE0C, 0xFF1C, 0xFF6F, 0xFEDD, 0x0163, 0x034D, 0x06FF, 
-	0x0B1D, 0x0C8D, 0x0AE9, 0x0514, 0xF982, 0xF359, 0xF1E1, 0xF3E5, 0xF64C, 
-	0xF55C, 0xF536, 0xF3E1, 0xF3D5, 0xF49F, 0xF5DB, 0xF73C, 0xF834, 0xF82C, 
-	0xF880, 0xFBE1, 0xFE1A, 0xFF74, 0x0002, 0xFFE5, 0xFF7C, 0xFEF1, 0xFE73, 
-	0xFE0B, 0xFDB1, 0xFD5C, 0xFD0A, 0xFCB9, 0xFC68, 0xFC19, 0xFBCB, 0xFB7D, 
-	0xFB2F, 0xFADF, 0xFA8F, 0xFA3E, 0xF9EC, 0xF99A, 0xF950, 0xF907, 0xF8BE, 
-	0xF89C, 0xF883, 0xF86B, 0xF857, 0xF848, 0xF839, 0xF82A, 0xF86B, 0xF872, 
-	0xF860, 0xF84D, 0xF83F, 0xF834, 0xF82A, 0xF821, 0xF818, 0xF80F, 0xF807, 
-	0xF7FF, 0xF7F7, 0xF7EF, 0xF7E9, 0xF7E3, 0xF7DE, 0xF7D8, 0xF7D2, 0xF7CD, 
-	0xF7C7, 0xF7C2, 0xF7BD, 0xF7B7, 0xF7B3, 0xF7B0, 0xF7AD, 0xF7A9, 0xF7A4, 
-	0xF79F, 0xF79A, 0xF797, 0xF793, 0xF791, 0xF78A, 0xF787, 0xF784, 0xF781, 
-	0xF77F, 0xF77D, 0xF77A, 0xF778, 0xF779, 0xF777, 0xF775, 0xF774, 0xF773, 
-	0xF772, 0xF771, 0xF771, 0xF772, 0xF771, 0xF772, 0xF771, 0xF772, 0xF774, 
-	0xF774, 0xF774, 0xF775, 0xF775, 0xF778, 0xF779, 0xF779, 0xF77A, 0xF779, 
-	0xF778, 0xF779, 0xF77D, 0xF77E, 0xF781, 0xF783, 0xF785, 0xF788, 0xF78B, 
-	0xF78F, 0xF791, 0xF794, 0xF797, 0xF79C, 0xF7A0, 0xF7A2, 0xF7A4, 0xF7A7, 
-	0xF7AA, 0xF7AD, 0xF7B1, 0xF7B4, 0xF7B8, 0xF7BC, 0xF7BE, 0xF7C3, 0xF7C7, 
-	0xF7CB, 0xF7CB, 0xF7C9, 0xF7C9, 0xF7CC, 0xF7CD, 0xF7CD, 0xF7CF, 0xF7D1, 
-	0xF7D2, 0xF7D6, 0xF7D8, 0xF7D9, 0xF7DC, 0xF7DF, 0xF7E0, 0xF7E2, 0xF7E3, 
-	0xF7E5, 0xF7E8, 0xF7EC, 0xF7ED, 0xF7EF, 0xF7F1, 0xF7F4, 0xF7F6, 0xF7F8, 
-	0xF7F9, 0xF7FB, 0xF7FE, 0xF801, 0xF7FF, 0xF7FC, 0xF7F9, 0xF7F8, 0xF7F5, 
-	0xF7F2, 0xF7F0, 0xF7EE, 0xF7ED, 0xF7EB, 0xF7EA, 0xF7E8, 0xF7E8, 0xF7EA, 
-	0xF7EB, 0xF7EC, 0xF7EE, 0xF7EF, 0xF7F1, 0xF7F1, 0xF7F3, 0xF7F4, 0xF7F5, 
-	0xF7F4, 0xF7F2, 0xF7F1, 0xF7F1, 0xF7EF, 0xF7EE, 0xF7ED, 0xF7EC, 0xF7EB, 
-	0xF7EA, 0xF7E9, 0xF7E9, 0xF7E9, 0xF7EA, 0xF7EA, 0xF7EB, 0xF7EC, 0xF7ED, 
-	0xF7ED, 0xF7EE, 0xD3BB, 0xF8F5, 0xE801, 0xD296, 0xABB1, 0x97D1, 0x95F5, 
-	0x9B23, 0xA53C, 0xAEE6, 0xB680, 0xBD25, 0xBB0D, 0xC823, 0xD3B9, 0xD690, 
-	0xC327, 0xBA59, 0xB2BD, 0x33A4, 0x2DD9, 0x2757, 0x22CA, 0xA04B, 0x9F4F, 
-	0x1EA1, 0x2345, 0x2D32, 0x477D, 0x361E, 0x2FD5, 0x2DE5, 0x2AAF, 0x29AD, 
-	0x2DE5, 0x3104, 0x2B1B, 0x2A67, 0x31E1, 0x4C2C, 0xEFC4, 0x056F, 0x0419, 
-	0x058F, 0x046E, 0x0258, 0xF6AC, 0x2511, 0x2768, 0x26DE, 0x22AD, 0x23C5, 
-	0x259C, 0x26C0, 0x27F1, 0x2A88, 0x2CFD, 0x2E3C, 0x2F0C, 0x2FA4, 0x301E, 
-	0x3083, 0x30DA, 0x3124, 0x315F, 0x318F, 0x31BB, 0x31E2, 0x3208, 0x322D, 
-	0x3250, 0x3276, 0x3290, 0x3288, 0x3289, 0x3294, 0x32AE, 0x32D3, 0x32FB, 
-	0x3320, 0x333D, 0x3355, 0x3376, 0x336B, 0x3361, 0x337E, 0x3393, 0x33A9, 
-	0x33BF, 0x33D1, 0x33E6, 0x33FB, 0x3410, 0x3424, 0x3439, 0x3449, 0x345C, 
-	0x346D, 0x347F, 0x348E, 0x349E, 0x34AF, 0x34BE, 0x34D0, 0x34E0, 0x34EF, 
-	0x34FC, 0x350D, 0x351A, 0x3527, 0x3533, 0x3541, 0x354C, 0x355B, 0x3568, 
-	0x3574, 0x357D, 0x358A, 0x3590, 0x359B, 0x35A6, 0x35AE, 0x35B5, 0x35BE, 
-	0x35CA, 0x35CF, 0x35D9, 0x35E4, 0x35EC, 0x35F5, 0x3600, 0x3607, 0x3610, 
-	0x3616, 0x361E, 0x3622, 0x3628, 0x362F, 0x3633, 0x363A, 0x3641, 0x3648, 
-	0x3650, 0x3654, 0x365A, 0x3661, 0x3665, 0x3671, 0x3675, 0x3678, 0x367F, 
-	0x3683, 0x3683, 0x368B, 0x3691, 0x3694, 0x369B, 0x369B, 0x369F, 0x36A4, 
-	0x36A7, 0x36A8, 0x36A9, 0x36AE, 0x36B3, 0x36B7, 0x36BA, 0x36BE, 0x36BF, 
-	0x36C2, 0x36C4, 0x36C6, 0x36CA, 0x36CB, 0x36CB, 0x36CE, 0x36D5, 0x36DE, 
-	0x36E1, 0x36E2, 0x36E8, 0x36EF, 0x36F2, 0x36F5, 0x36FA, 0x3700, 0x3703, 
-	0x3706, 0x370A, 0x370E, 0x3712, 0x3716, 0x371D, 0x3720, 0x3726, 0x3728, 
-	0x372C, 0x3730, 0x3736, 0x373A, 0x373D, 0x3741, 0x3745, 0x374A, 0x374F, 
-	0x3751, 0x3757, 0x375D, 0x3764, 0x376A, 0x376F, 0x3774, 0x377C, 0x3780, 
-	0x3785, 0x378B, 0x3791, 0x3796, 0x379C, 0x37A1, 0x37A5, 0x37A9, 0x37AD, 
-	0x37B0, 0x37B4, 0x37B8, 0x37BB, 0x37BF, 0x37C3, 0x37C6, 0x37CC, 0x37D4, 
-	0x37D6, 0x37DD, 0x37E1, 0x37E6, 0x37ED, 0x37F1, 0x37F5, 0x37F8, 0x37FE, 
-	0x3805, 0x380A, 0x380E, 0x3812, 0x3816, 0x381A, 0x381D, 0x3821, 0x3825, 
-	0xE57F, 0x0133, 0xFFA1, 0xEB40, 0xE8D7, 0xF6FF, 0x04FF, 0x11A9, 0x1C5B, 
-	0x2042, 0x2105, 0x2021, 0x1CD0, 0x2864, 0x2BB1, 0x2EA8, 0x2ED0, 0x2C25, 
-	0x2A5E, 0x5997, 0x5AFA, 0x5CEA, 0x62DC, 0x18CE, 0x1AB1, 0x59F4, 0x50CE, 
-	0x4B19, 0x45EC, 0x472F, 0x4C1C, 0x5313, 0x5AF4, 0x5FBB, 0x5E00, 0x5B78, 
-	0x5997, 0x54E5, 0x4C6C, 0x4612, 0x3A8F, 0x3A1E, 0x3A43, 0x3AB8, 0x3AFD, 
-	0x3C09, 0x3DEF, 0x4196, 0x41A7, 0x41A1, 0x4141, 0x411E, 0x410D, 0x4107, 
-	0x4115, 0x413D, 0x4170, 0x419B, 0x41BF, 0x41DF, 0x41FD, 0x421A, 0x4238, 
-	0x4255, 0x4272, 0x428E, 0x42AB, 0x42C7, 0x42E4, 0x4301, 0x431F, 0x433E, 
-	0x435B, 0x4374, 0x438D, 0x43A6, 0x43B5, 0x43C3, 0x43D1, 0x43DE, 0x43EA, 
-	0x43F5, 0x4403, 0x4402, 0x4406, 0x4410, 0x4419, 0x4425, 0x4430, 0x443C, 
-	0x4447, 0x4453, 0x445D, 0x4469, 0x4474, 0x447F, 0x448A, 0x4495, 0x44A0, 
-	0x44AB, 0x44B6, 0x44C2, 0x44CE, 0x44D8, 0x44E3, 0x44EE, 0x44F9, 0x4505, 
-	0x450F, 0x451A, 0x4524, 0x452E, 0x4539, 0x4544, 0x454F, 0x4559, 0x4562, 
-	0x456B, 0x4575, 0x457F, 0x4589, 0x4592, 0x459D, 0x45A8, 0x45B1, 0x45BB, 
-	0x45C6, 0x45D0, 0x45DA, 0x45E5, 0x45EF, 0x45F9, 0x4602, 0x460A, 0x4614, 
-	0x461E, 0x4628, 0x4631, 0x463A, 0x4644, 0x464E, 0x4659, 0x4662, 0x466A, 
-	0x4674, 0x467D, 0x4687, 0x4690, 0x469A, 0x46A4, 0x46AB, 0x46B5, 0x46BE, 
-	0x46C9, 0x46D3, 0x46DD, 0x46E5, 0x46EE, 0x46F8, 0x4703, 0x470D, 0x4715, 
-	0x471E, 0x4726, 0x4730, 0x473A, 0x4744, 0x474E, 0x4756, 0x4760, 0x4768, 
-	0x4771, 0x477B, 0x4782, 0x478B, 0x4795, 0x479D, 0x47A4, 0x47AE, 0x47B6, 
-	0x47BF, 0x47C9, 0x47D1, 0x47DB, 0x47E5, 0x47EB, 0x47F4, 0x47FE, 0x4806, 
-	0x480F, 0x4819, 0x4824, 0x482E, 0x4837, 0x483F, 0x4847, 0x4851, 0x485C, 
-	0x4863, 0x486C, 0x4876, 0x4880, 0x488B, 0x4895, 0x489C, 0x48A6, 0x48AF, 
-	0x48B5, 0x48BC, 0x48C2, 0x48C9, 0x48D0, 0x48D7, 0x48DF, 0x48E5, 0x48EB, 
-	0x48F2, 0x48F8, 0x48FD, 0x4902, 0x4906, 0x490A, 0x490E, 0x4913, 0x4917, 
-	0x491B, 0x4920, 0x4925, 0x492B, 0x4931, 0x493A, 0x493F, 0x4945, 0x494D, 
-	0x4952, 0x4958, 0x495E, 0x4963, 0x4968, 0x496F, 0x4975, 0x497A, 0x497F, 
-	0x4984, 0x4989, 0x498E, 0x4992, 0x4997, 0x499C, 0x49A0, 0xEEE0, 0xF8EB, 
-	0xE9B5, 0xE9D6, 0xFF6A, 0x0B34, 0x0ED3, 0x1415, 0x1D85, 0x2404, 0x2608, 
-	0x2248, 0x1DE9, 0x32AC, 0x42EF, 0x49C9, 0x3D4B, 0x3BC7, 0x45AF, 0xD3C6, 
-	0xD24A, 0xCD0F, 0xC80D, 0x42C5, 0x3F5C, 0xBF5F, 0xC388, 0xCC82, 0xE5C5, 
-	0xD480, 0xCFE0, 0xCF20, 0xCDC0, 0xCF0D, 0xD3D4, 0xD834, 0xD705, 0xD750, 
-	0xDF4F, 0xFB7D, 0x9F3A, 0xB4F6, 0xB3A0, 0xB51B, 0xB3F5, 0xB164, 0xA544, 
-	0xD396, 0xD5DF, 0xD555, 0xD151, 0xD291, 0xD486, 0xD5B9, 0xD6E6, 0xD976, 
-	0xDBDF, 0xDD11, 0xDDD7, 0xDE64, 0xDED4, 0xDF2F, 0xDF7C, 0xDFBC, 0xDFEC, 
-	0xE011, 0xE032, 0xE04E, 0xE06A, 0xE083, 0xE09B, 0xE0B7, 0xE0C5, 0xE0B0, 
-	0xE0A7, 0xE0A7, 0xE0BE, 0xE0E1, 0xE108, 0xE12B, 0xE147, 0xE15C, 0xE17C, 
-	0xE16F, 0xE163, 0xE17F, 0xE192, 0xE1A5, 0xE1BA, 0xE1C9, 0xE1DD, 0xE1F0, 
-	0xE203, 0xE216, 0xE228, 0xE237, 0xE248, 0xE257, 0xE267, 0xE274, 0xE282, 
-	0xE291, 0xE29E, 0xE2AE, 0xE2BC, 0xE2C9, 0xE2D4, 0xE2E4, 0xE2EF, 0xE2FA, 
-	0xE305, 0xE310, 0xE319, 0xE327, 0xE331, 0xE33C, 0xE343, 0xE34F, 0xE353, 
-	0xE35D, 0xE366, 0xE36C, 0xE371, 0xE378, 0xE382, 0xE385, 0xE38E, 0xE397, 
-	0xE39D, 0xE3A4, 0xE3AD, 0xE3B2, 0xE3B9, 0xE3BE, 0xE3C3, 0xE3C6, 0xE3C9, 
-	0xE3CF, 0xE3D1, 0xE3D7, 0xE3DB, 0xE3E1, 0xE3E6, 0xE3E8, 0xE3ED, 0xE3F1, 
-	0xE3F3, 0xE3FE, 0xE400, 0xE402, 0xE406, 0xE408, 0xE407, 0xE40D, 0xE410, 
-	0xE412, 0xE416, 0xE414, 0xE416, 0xE418, 0xE419, 0xE418, 0xE417, 0xE41A, 
-	0xE41D, 0xE41F, 0xE420, 0xE421, 0xE420, 0xE421, 0xE420, 0xE421, 0xE422, 
-	0xE421, 0xE41F, 0xE420, 0xE425, 0xE42D, 0xE42F, 0xE42F, 0xE433, 0xE438, 
-	0xE43A, 0xE43B, 0xE43E, 0xE443, 0xE444, 0xE446, 0xE449, 0xE44B, 0xE44D, 
-	0xE450, 0xE455, 0xE456, 0xE45B, 0xE45B, 0xE45D, 0xE460, 0xE464, 0xE466, 
-	0xE467, 0xE46A, 0xE46C, 0xE470, 0xE472, 0xE474, 0xE479, 0xE47E, 0xE485, 
-	0xE48B, 0xE490, 0xE494, 0xE49C, 0xE4A0, 0xE4A5, 0xE4AB, 0xE4B1, 0xE4B5, 
-	0xE4BB, 0xE4C0, 0xE4C4, 0xE4C8, 0xE4CB, 0xE4CE, 0xE4D2, 0xE4D6, 0xE4D9, 
-	0xE4DC, 0xE4E0, 0xE4E3, 0xE4E9, 0xE4F0, 0xE4F2, 0xE4F9, 0xE4FD, 0xE502, 
-	0xE508, 0xE50C, 0xE510, 0xE513, 0xE519, 0xE51F, 0xE524, 0xE529, 0xE52D, 
-	0xE530, 0xE534, 0xE537, 0xE53B, 0xE53E, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 
-	0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 
-	0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 
-	0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 
-	0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 
-	0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 
-	0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 
-	0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 
-	0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 
-	0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 
-	0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 
-	0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 
-	0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 
-	0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 
-	0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 
-	0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 
-	0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 
-	0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 
-	0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 
-	0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 
-	0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 
-	0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 
-	0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 
-	0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 
-	0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 
-	0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 
-	0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x1B6E, 0xB65A, 
-	0xCA7C, 0xDC76, 0xEE55, 0x03E6, 0xA1FD, 0xC23E, 0xE123, 0xED94, 0x0B2A, 
-	0x2000, 0xB074, 0xC261, 0x004C, 0xF943, 0xFE52, 0x0804, 0x0BEC, 0x0E94, 
-	0x10DD, 0x163E, 0x1D69, 0x242F, 0x2A59, 0x3044, 0x3675, 0x3E16, 0x4856, 
-	0x5259, 0xE020, 0xED81, 0xF935, 0x01E3, 0x0774, 0x0BA2, 0x0D31, 0x0EA6, 
-	0x0D47, 0x0AD0, 0x0722, 0x0330, 0xFF51, 0xF77E, 0xEE0F, 0xE3F7, 0xDA5A, 
-	0xD185, 0xCB71, 0xC8B9, 0xC89D, 0xC905, 0xC999, 0xCA2E, 0xCAD4, 0xCB7C, 
-	0xCC62, 0xCDD4, 0xCFCA, 0xD23B, 0xD518, 0xD84F, 0xDBC6, 0xDF5F, 0xE2F5, 
-	0xE661, 0xE976, 0xEC0D, 0xEE05, 0xEF47, 0xEFC1, 0xEF6C, 0xEE45, 0xEC62, 
-	0xE9DA, 0xE6D1, 0xE370, 0xDFDD, 0xDC41, 0xD8C3, 0xD583, 0xD29B, 0xD01B, 
-	0xCE10, 0xCD0A, 0xCD28, 0xCD9A, 0xCE85, 0xCFE4, 0xD1AF, 0xD3DB, 0xD659, 
-	0xD914, 0xDBF7, 0xDEE4, 0xE1BB, 0xE45A, 0xE6A2, 0xE876, 0xE9BD, 0xEA68, 
-	0xEA6D, 0xE9CE, 0xE892, 0xE6C9, 0xE48A, 0xE1F2, 0xDF23, 0xDC3C, 0xD95D, 
-	0xD6A4, 0xD427, 0xD1F9, 0xD029, 0xCEC2, 0xCDD1, 0xCDDA, 0xCE3C, 0xCF0C, 
-	0xD046, 0xD1E1, 0xD3D4, 0xD611, 0xD884, 0xDB19, 0xDDB6, 0xE03D, 0xE292, 
-	0xE498, 0xE634, 0xE752, 0xE7E3, 0xE7E0, 0xE749, 0xE625, 0xE484, 0xE27B, 
-	0xE025, 0xDD9E, 0xDB04, 0xD873, 0xD605, 0xD3CF, 0xD1E3, 0xD04C, 0xCF16, 
-	0xCE9D, 0xCED5, 0xCF6C, 0xD062, 0xD1B4, 0xD357, 0xD53F, 0xD75B, 0xD99B, 
-	0xDBE5, 0xDE21, 0xE039, 0xE20E, 0xE38C, 0xE49F, 0xE53A, 0xE551, 0xE4E5, 
-	0xE3F8, 0xE29B, 0xE0E1, 0xDEDC, 0xDCA6, 0xDA5A, 0xD811, 0xD5E2, 0xD3E0, 
-	0xD21D, 0xD0A8, 0xCF8A, 0xCF56, 0xCFA3, 0xD047, 0xD13C, 0xD27D, 0xD3FE, 
-	0xD5B3, 0xD78E, 0xD97B, 0xDB67, 0xDD3C, 0xDEE4, 0xE04A, 0xE15C, 0xE20A, 
-	0xE24D, 0xE220, 0xE187, 0xE089, 0xDF32, 0xDD93, 0xDBC2, 0xD9D4, 0xD7DF, 
-	0xD5F7, 0xD42F, 0xD296, 0xD139, 0xD023, 0xCF7A, 0xCFB2, 0xD039, 0xD109, 
-	0xD21D, 0xD36D, 0xD4ED, 0xD690, 0xD843, 0xD9F7, 0xDB99, 0xDD15, 0xDE5A, 
-	0xDF56, 0xDFFF, 0xE04A, 0xE036, 0xDFC3, 0xDEF8, 0xDDDF, 0xDC86, 0xDAFF, 
-	0xD95D, 0xD7B1, 0xD60E, 0xD484, 0xD321, 0xD1F3, 0xD102, 0xD054, 0xCFEE, 
-	0xCFD5, 0xD008, 0xD085, 0xD148, 0xD24B, 0xD385, 0xD4ED, 0xD674, 0xD80C, 
-	0xD9A5, 0xDB2D, 0xDC92, 0xDDC4, 0xFFFF, 0xEEE5, 0x94C8, 0x8D5F, 0x8707, 
-	0x81B2, 0x77E3, 0x0B50, 0x06ED, 0x03F5, 0x045F, 0x0960, 0x175D, 0x583F, 
-	0x4B3B, 0x4821, 0x4D6B, 0x5103, 0x4F98, 0x5302, 0x5890, 0x604D, 0x693F, 
-	0x7324, 0x7DE0, 0x8988, 0x94A0, 0x9E6A, 0xA680, 0xAD6C, 0xB034, 0xCE8E, 
-	0xCED9, 0xD02D, 0xD248, 0xD4A2, 0xD6D3, 0xD846, 0xD88F, 0xD98B, 0xD9F3, 
-	0xDA07, 0xDAFA, 0xDBE3, 0xDC83, 0xDD4F, 0xDE94, 0xE0D3, 0xE3A5, 0xE52D, 
-	0xE5A2, 0xE5CB, 0xE5AF, 0xE57D, 0xE532, 0xE4D9, 0xE480, 0xE418, 0xE37A, 
-	0xE2AD, 0xE1BC, 0xE0B6, 0xDFA9, 0xDEA5, 0xDDB7, 0xDCE7, 0xDC3C, 0xDBB7, 
-	0xDB56, 0xDB12, 0xDAE6, 0xDACE, 0xDAC6, 0xDAD1, 0xDAF4, 0xDB34, 0xDB9E, 
-	0xDC35, 0xDCF0, 0xDDCD, 0xDEC2, 0xDFC2, 0xE0BE, 0xE1A6, 0xE26C, 0xE2E6, 
-	0xE2DF, 0xE2AC, 0xE249, 0xE1BC, 0xE10C, 0xE043, 0xDF6D, 0xDE94, 0xDDC5, 
-	0xDD08, 0xDC65, 0xDBDE, 0xDB75, 0xDB29, 0xDAF7, 0xDADC, 0xDAD6, 0xDAE6, 
-	0xDB0E, 0xDB4F, 0xDBAC, 0xDC27, 0xDCBE, 0xDD6E, 0xDE31, 0xDEFE, 0xDFCA, 
-	0xE089, 0xE131, 0xE1B8, 0xE215, 0xE214, 0xE1E9, 0xE192, 0xE114, 0xE077, 
-	0xDFC2, 0xDF00, 0xDE3B, 0xDD7C, 0xDCCC, 0xDC32, 0xDBB1, 0xDB4B, 0xDAFF, 
-	0xDACC, 0xDAB0, 0xDAAB, 0xDABC, 0xDAE5, 0xDB27, 0xDB83, 0xDBF9, 0xDC88, 
-	0xDD2C, 0xDDDE, 0xDE96, 0xDF4A, 0xDFF1, 0xE080, 0xE0F1, 0xE121, 0xE106, 
-	0xE0C8, 0xE064, 0xDFE1, 0xDF48, 0xDE9F, 0xDDEF, 0xDD41, 0xDC9D, 0xDC08, 
-	0xDB89, 0xDB20, 0xDACE, 0xDA96, 0xDA75, 0xDA6B, 0xDA78, 0xDA9C, 0xDAD7, 
-	0xDB28, 0xDB91, 0xDC11, 0xDCA3, 0xDD41, 0xDDE5, 0xDE85, 0xDF19, 0xDF9C, 
-	0xE006, 0xE01E, 0xDFFD, 0xDFBB, 0xDF5D, 0xDEE7, 0xDE5F, 0xDDCD, 0xDD37, 
-	0xDCA4, 0xDC1C, 0xDBA2, 0xDB3B, 0xDAE8, 0xDAAC, 0xDA85, 0xDA73, 0xDA78, 
-	0xDA92, 0xDAC2, 0xDB09, 0xDB64, 0xDBD3, 0xDC51, 0xDCDB, 0xDD6C, 0xDDFA, 
-	0xDE81, 0xDEF8, 0xDF5A, 0xDF98, 0xDF83, 0xDF50, 0xDF03, 0xDEA1, 0xDE2D, 
-	0xDDAF, 0xDD2B, 0xDCAA, 0xDC31, 0xDBC3, 0xDB64, 0xDB18, 0xDAE0, 0xDABC, 
-	0xDAAC, 0xDAB1, 0xDAC9, 0xDAF6, 0xDB37, 0xDB8A, 0xDBEE, 0xDC5F, 0xDCDA, 
-	0xDD5A, 0xDDD8, 0xDE4F, 0xDEB9, 0xDF10, 0xDF51, 0xDF78, 0xDF82, 0xDF6F, 
-	0xDF41, 0xDEFA, 0xDE9F, 0xDE33, 0xDDBD, 0xDD43, 0xDCC9, 0xDC56, 0xDBED, 
-	0xDB93, 0xDB4A, 0x8000, 0x8615, 0xFF79, 0x0342, 0x0C67, 0x1D25, 0x2B0A, 
-	0xB87E, 0xBCA2, 0xB483, 0xAA34, 0x98D7, 0x8C34, 0x0397, 0x030B, 0x2DD8, 
-	0x244E, 0x2883, 0x269E, 0x2220, 0x1B8A, 0x1451, 0x0E9F, 0x0A11, 0x0643, 
-	0x02AB, 0x005B, 0xFEF5, 0xFC98, 0xF8AB, 0xF4E9, 0x6BEA, 0x6248, 0x58FC, 
-	0x51A0, 0x4C87, 0x47C6, 0x4805, 0x4A7D, 0x4D05, 0x4E2F, 0x4E8D, 0x4EB7, 
-	0x4F1D, 0x531E, 0x5818, 0x5D3E, 0x6160, 0x64A6, 0x6627, 0x6677, 0x667C, 
-	0x663E, 0x65E8, 0x6593, 0x6538, 0x64E5, 0x64B3, 0x6458, 0x63D1, 0x6318, 
-	0x6228, 0x6102, 0x5FAA, 0x5E2B, 0x5C98, 0x5B06, 0x5990, 0x5851, 0x575E, 
-	0x56C7, 0x5696, 0x56D0, 0x5774, 0x587A, 0x59D0, 0x5B5A, 0x5CFD, 0x5EA7, 
-	0x603E, 0x61AF, 0x62F0, 0x63F9, 0x64CB, 0x656E, 0x65CD, 0x65C5, 0x65AC, 
-	0x6571, 0x6511, 0x6487, 0x63D3, 0x62F4, 0x61ED, 0x60C5, 0x5F86, 0x5E43, 
-	0x5D0D, 0x5BF8, 0x5B17, 0x5A78, 0x5A27, 0x5A2B, 0x5A80, 0x5B23, 0x5C0A, 
-	0x5D26, 0x5E65, 0x5FB2, 0x60FB, 0x622F, 0x6344, 0x6432, 0x64F5, 0x658F, 
-	0x6602, 0x6650, 0x6651, 0x663A, 0x6604, 0x65AB, 0x652F, 0x648C, 0x63C5, 
-	0x62DB, 0x61D4, 0x60BC, 0x5FA1, 0x5E93, 0x5DA3, 0x5CE0, 0x5C58, 0x5C16, 
-	0x5C1C, 0x5C6D, 0x5D02, 0x5DD2, 0x5ED0, 0x5FEB, 0x6112, 0x6236, 0x6348, 
-	0x643E, 0x6510, 0x65BE, 0x6648, 0x66AD, 0x66DA, 0x66CD, 0x66A7, 0x6663, 
-	0x65FF, 0x657A, 0x64D4, 0x6411, 0x6333, 0x6247, 0x6156, 0x606B, 0x5F99, 
-	0x5EEC, 0x5E6F, 0x5E2A, 0x5E25, 0x5E62, 0x5EDD, 0x5F8C, 0x6063, 0x6157, 
-	0x625A, 0x635D, 0x6453, 0x6534, 0x65F9, 0x669E, 0x6721, 0x6782, 0x679B, 
-	0x6789, 0x675E, 0x6716, 0x66B3, 0x6634, 0x659C, 0x64EE, 0x6430, 0x6369, 
-	0x62A6, 0x61F0, 0x6152, 0x60DB, 0x6090, 0x6079, 0x6096, 0x60E6, 0x6164, 
-	0x6209, 0x62CC, 0x63A0, 0x6478, 0x654C, 0x6611, 0x66C2, 0x675B, 0x67D9, 
-	0x683A, 0x6875, 0x6864, 0x683A, 0x67F9, 0x679D, 0x6729, 0x669F, 0x6601, 
-	0x6556, 0x64A4, 0x63F3, 0x634D, 0x62BD, 0x624A, 0x61FD, 0x61DA, 0x61E3, 
-	0x6218, 0x6275, 0x62F4, 0x638C, 0x6434, 0x64E3, 0x658F, 0x6632, 0x66C4, 
-	0x6743, 0x67AA, 0x67FA, 0x6833, 0x6853, 0x685A, 0x684A, 0x6823, 0x67E4, 
-	0x678D, 0x6720, 0x669F, 0x660C, 0x656C, 0x64C6, 0x6422, 0x6388, 0x6301, 
-	0x0000, 0xD7F9, 0x2561, 0x16BD, 0x913A, 0x80B0, 0x7023, 0x585D, 0x419F, 
-	0x2579, 0x1653, 0xFC67, 0xDB5C, 0xC402, 0xAD83, 0x831C, 0x7C65, 0x7C53, 
-	0x7125, 0x6A6D, 0x6757, 0x6634, 0x64FB, 0x5DFE, 0x5729, 0x51C8, 0x4D91, 
-	0x4936, 0x4273, 0x3BD1, 0x353A, 0x2F92, 0x2BAC, 0x289E, 0x2693, 0x2562, 
-	0x2525, 0x22AE, 0x2066, 0x2130, 0x21C0, 0x23D8, 0x25CB, 0x27A1, 0x2B84, 
-	0x3170, 0x38A2, 0x4037, 0x47D5, 0x4CE4, 0x4F0C, 0x4F25, 0x4ED5, 0x4E5E, 
-	0x4DDA, 0x4D47, 0x4CAC, 0x4BCD, 0x4A6E, 0x489A, 0x465E, 0x43D2, 0x4111, 
-	0x3E3B, 0x3B70, 0x38CF, 0x3670, 0x346A, 0x32C8, 0x3196, 0x30D7, 0x308F, 
-	0x30C0, 0x316C, 0x328A, 0x3416, 0x3605, 0x3849, 0x3AD1, 0x3D84, 0x4046, 
-	0x42F4, 0x4571, 0x47A5, 0x4978, 0x4A63, 0x4A48, 0x49D9, 0x48FC, 0x47B8, 
-	0x4619, 0x442E, 0x420B, 0x3FC8, 0x3D7D, 0x3B44, 0x3934, 0x3760, 0x35D9, 
-	0x34AA, 0x33D9, 0x336B, 0x3367, 0x33C6, 0x3489, 0x35AA, 0x3721, 0x38E4, 
-	0x3AE2, 0x3D08, 0x3F3F, 0x4170, 0x4382, 0x455F, 0x46F3, 0x4831, 0x4905, 
-	0x48FB, 0x489C, 0x47DA, 0x46BB, 0x454A, 0x4395, 0x41AD, 0x3FA9, 0x3D9D, 
-	0x3BA0, 0x39C7, 0x3824, 0x36C4, 0x35B4, 0x34FA, 0x349C, 0x349B, 0x34F7, 
-	0x35AD, 0x36B8, 0x3810, 0x39AA, 0x3B76, 0x3D63, 0x3F5C, 0x414C, 0x431E, 
-	0x44BE, 0x461B, 0x4728, 0x478F, 0x4758, 0x46CB, 0x45E9, 0x44BB, 0x434C, 
-	0x41AC, 0x3FED, 0x3E22, 0x3C5F, 0x3AB7, 0x3938, 0x37F2, 0x36F0, 0x3639, 
-	0x35D2, 0x35BF, 0x35FF, 0x3691, 0x3770, 0x3895, 0x39F6, 0x3B86, 0x3D35, 
-	0x3EF0, 0x40A7, 0x4246, 0x43BB, 0x44F5, 0x45E9, 0x4613, 0x45C9, 0x4534, 
-	0x4459, 0x4341, 0x41F8, 0x408B, 0x3F0B, 0x3D88, 0x3C13, 0x3AB9, 0x3989, 
-	0x388F, 0x37D1, 0x3758, 0x3727, 0x373E, 0x379E, 0x3842, 0x3925, 0x3A3F, 
-	0x3B85, 0x3CEB, 0x3E62, 0x3FDA, 0x4143, 0x428E, 0x43AD, 0x4493, 0x4524, 
-	0x44F2, 0x447C, 0x43C8, 0x42DD, 0x41C3, 0x4089, 0x3F3B, 0x3DE8, 0x3C9E, 
-	0x3B6A, 0x3A59, 0x3976, 0x38C7, 0x3854, 0x3820, 0x382D, 0x387A, 0x3903, 
-	0x39C5, 0x3AB7, 0x3BD1, 0x3D07, 0x3E4C, 0x3F93, 0x40CF, 0x41F1, 0x42ED, 
-	0x43BA, 0x444F, 0x44A5, 0x44BB, 0x448E, 0x4421, 0x437A, 0x429E, 0x4198, 
-	0x4071, 0x3F38, 0x3DF9, 0x3CC2, 0x3B9F, 0x3A9D, 0x39C4, 0xFFFF, 0x1C49, 
-	0x5AC0, 0x65CF, 0x0BFA, 0xF86F, 0xF0F1, 0xF7B5, 0x051B, 0x0CAE, 0x07E8, 
-	0x14C0, 0x13E9, 0x1586, 0x2181, 0x1E44, 0x0D99, 0x038D, 0x08CD, 0x0A9E, 
-	0x0A16, 0x06E1, 0x03B8, 0x0054, 0xFE67, 0xFE90, 0x0375, 0x0B6B, 0x121D, 
-	0x1167, 0x0E22, 0x09EB, 0x05C7, 0x01F2, 0xFE9A, 0xFB0E, 0xF6AA, 0xF55B, 
-	0xF631, 0xF611, 0xF5C7, 0xF518, 0xF343, 0xF142, 0xEE52, 0xEC51, 0xEB89, 
-	0xEB0C, 0xEBE8, 0xED1F, 0xEDA4, 0xEDA9, 0xED62, 0xECFC, 0xEC93, 0xEC2A, 
-	0xEBD3, 0xEBB1, 0xEB7F, 0xEB4A, 0xEB21, 0xEB13, 0xEB2A, 0xEB6D, 0xEBDA, 
-	0xEC6A, 0xED11, 0xEDBD, 0xEE5D, 0xEEE0, 0xEF3A, 0xEF63, 0xEF58, 0xEF19, 
-	0xEEB0, 0xEE28, 0xED8C, 0xECEF, 0xEC65, 0xEBF9, 0xEBB5, 0xEB9B, 0xEBA5, 
-	0xEBCB, 0xEC00, 0xEC32, 0xEC28, 0xEC1C, 0xEC04, 0xEBE6, 0xEBCB, 0xEBBC, 
-	0xEBC3, 0xEBE4, 0xEC21, 0xEC79, 0xECE3, 0xED57, 0xEDC8, 0xEE2B, 0xEE75, 
-	0xEE9D, 0xEEA6, 0xEE87, 0xEE48, 0xEDEF, 0xED87, 0xED1A, 0xECB5, 0xEC61, 
-	0xEC24, 0xEC02, 0xEBFA, 0xEC06, 0xEC1F, 0xEC3D, 0xEC59, 0xEC5A, 0xEC52, 
-	0xEC41, 0xEC2E, 0xEC1E, 0xEC18, 0xEC24, 0xEC46, 0xEC7F, 0xECCC, 0xED28, 
-	0xED8C, 0xEDEC, 0xEE40, 0xEE7E, 0xEEA1, 0xEEA6, 0xEE8C, 0xEE57, 0xEE0C, 
-	0xEDB5, 0xED5A, 0xED05, 0xECBE, 0xEC89, 0xEC6A, 0xEC5F, 0xEC65, 0xEC75, 
-	0xEC88, 0xEC94, 0xEC92, 0xEC8B, 0xEC83, 0xEC7D, 0xEC7F, 0xEC8E, 0xECAD, 
-	0xECDF, 0xED21, 0xED70, 0xEDC5, 0xEE19, 0xEE65, 0xEE9F, 0xEEC2, 0xEECD, 
-	0xEEBE, 0xEE97, 0xEE5D, 0xEE18, 0xEDCD, 0xED84, 0xED44, 0xED13, 0xECF2, 
-	0xECE3, 0xECE1, 0xECE8, 0xECF3, 0xECF9, 0xECF9, 0xECF7, 0xECF5, 0xECF9, 
-	0xED04, 0xED1B, 0xED3F, 0xED6F, 0xEDAA, 0xEDEB, 0xEE2E, 0xEE6B, 0xEE9E, 
-	0xEEC2, 0xEED3, 0xEED1, 0xEEBB, 0xEE95, 0xEE62, 0xEE28, 0xEDEE, 0xEDB9, 
-	0xED8C, 0xED6A, 0xED55, 0xED4C, 0xED4B, 0xED4E, 0xED57, 0xED56, 0xED55, 
-	0xED54, 0xED57, 0xED60, 0xED72, 0xED8D, 0xEDB2, 0xEDDF, 0xEE12, 0xEE45, 
-	0xEE75, 0xEE9D, 0xEEB9, 0xEEC6, 0xEEC3, 0xEEB0, 0xEE8F, 0xEE64, 0xEE33, 
-	0xEE00, 0xEDCF, 0xEDA5, 0xED84, 0xED6C, 0xED5C, 0xED55, 0xED53, 0xED53, 
-	0xED54, 0xED55, 0xED54, 0xED53, 0xED53, 0xED57, 0xED60, 0xED71, 0xED8B, 
-	0xEDAE, 0xEDD8, 0xEE07, 0xEE36, 0xEE63, 0xFFFF, 0xE593, 0x39E4, 0x2D47, 
-	0xC269, 0xDABA, 0xF169, 0x0910, 0x13FA, 0x14E4, 0x1D29, 0x1E5A, 0x1C1C, 
-	0x243B, 0x1DFE, 0x015A, 0xF94E, 0xF8EF, 0xF572, 0xF5F3, 0xF73B, 0xF8CC, 
-	0xFC7A, 0xFFF7, 0x039C, 0x0740, 0x0902, 0x06FF, 0xFF11, 0xFFC1, 0xFE10, 
-	0xFDD6, 0x0050, 0x044E, 0x09BB, 0x1048, 0x17DE, 0x19D1, 0x17A5, 0x160B, 
-	0x162A, 0x17A4, 0x1953, 0x1A36, 0x166E, 0x1048, 0x0911, 0x01D9, 0xFA7E, 
-	0xF74B, 0xF6C7, 0xF69D, 0xF70F, 0xF7BB, 0xF88B, 0xF972, 0xFA57, 0xFB2F, 
-	0xFC81, 0xFE45, 0x006F, 0x02E7, 0x0592, 0x0851, 0x0B06, 0x0D91, 0x0FDA, 
-	0x11CD, 0x135E, 0x1482, 0x1536, 0x1577, 0x1546, 0x14A4, 0x1392, 0x1215, 
-	0x1037, 0x0E08, 0x0B98, 0x08FC, 0x0653, 0x03BA, 0x0151, 0xFF31, 0xFD6E, 
-	0xFC61, 0xFC76, 0xFCE1, 0xFDB6, 0xFEED, 0x007E, 0x0256, 0x0464, 0x0691, 
-	0x08C6, 0x0AE9, 0x0CE4, 0x0EA5, 0x101C, 0x1140, 0x1207, 0x1271, 0x1277, 
-	0x121D, 0x1164, 0x1051, 0x0EEB, 0x0D3C, 0x0B55, 0x0947, 0x0728, 0x050E, 
-	0x0313, 0x0149, 0xFFC5, 0xFE95, 0xFDC7, 0xFDC9, 0xFE24, 0xFEDF, 0xFFF3, 
-	0x0157, 0x02FB, 0x04CF, 0x06BE, 0x08B5, 0x0A9C, 0x0C61, 0x0DF3, 0x0F44, 
-	0x1049, 0x10FB, 0x1157, 0x115B, 0x1106, 0x105B, 0x0F5F, 0x0E1B, 0x0C98, 
-	0x0AE4, 0x0910, 0x0731, 0x055B, 0x03A1, 0x0217, 0x00CD, 0xFFCF, 0xFF64, 
-	0xFF9B, 0x0022, 0x00FB, 0x021C, 0x037B, 0x0509, 0x06B4, 0x086A, 0x0A18, 
-	0x0BAC, 0x0D19, 0x0E50, 0x0F46, 0x0FF6, 0x1058, 0x106C, 0x1030, 0x0FA6, 
-	0x0ED5, 0x0DC2, 0x0C76, 0x0AFC, 0x0965, 0x07C2, 0x0621, 0x0499, 0x0339, 
-	0x020E, 0x0123, 0x00EE, 0x0134, 0x01C1, 0x0290, 0x0399, 0x04D0, 0x0628, 
-	0x0792, 0x08FE, 0x0A5E, 0x0BA3, 0x0CC1, 0x0DAC, 0x0E5D, 0x0ECF, 0x0EFD, 
-	0x0EE7, 0x0E8E, 0x0DF4, 0x0D20, 0x0C17, 0x0AE6, 0x0996, 0x0836, 0x06D5, 
-	0x0582, 0x044B, 0x033E, 0x0266, 0x01DB, 0x0209, 0x0278, 0x0321, 0x03FE, 
-	0x0505, 0x062B, 0x0763, 0x08A1, 0x09D6, 0x0AF5, 0x0BF5, 0x0CCA, 0x0D6D, 
-	0x0DD9, 0x0E0B, 0x0DFF, 0x0DB9, 0x0D39, 0x0C85, 0x0BA3, 0x0A9C, 0x097B, 
-	0x084A, 0x0718, 0x05F0, 0x04E0, 0x03F3, 0x0333, 0x02A7, 0x0255, 0x0241, 
-	0x026A, 0x02CF, 0x036C, 0x043A, 0x0530, 0x0644, 0x0769, 0x0894, 0x09B7, 
-	0x0AC7, 0x0BB9, 0x0C83, 0x0000, 0xEF63, 0xE7FE, 0xCA7C, 0x2371, 0x3CB6, 
-	0x4819, 0x5063, 0x582F, 0x6694, 0x758B, 0x65FC, 0x6203, 0x6268, 0x6917, 
-	0x739D, 0x7B5A, 0x8230, 0x8F3C, 0xDFE4, 0xEF3B, 0xF32A, 0xF394, 0xF181, 
-	0xF1E0, 0xF1A9, 0xF009, 0xEDFD, 0xEB09, 0xE463, 0xDB6B, 0xD29C, 0xCF31, 
-	0xCC11, 0xC991, 0xC7C9, 0xCB23, 0xCB19, 0xC9F7, 0xCAB4, 0xCC25, 0xCECC, 
-	0xD195, 0xD3ED, 0xD463, 0xD430, 0xD3DF, 0xD3F2, 0xD3EE, 0xD4D6, 0xD580, 
-	0xD56D, 0xD58D, 0xD5C0, 0xD603, 0xD64C, 0xD68F, 0xD68C, 0xD68A, 0xD686, 
-	0xD684, 0xD682, 0xD680, 0xD67E, 0xD67B, 0xD679, 0xD677, 0xD676, 0xD674, 
-	0xD672, 0xD670, 0xD66F, 0xD66E, 0xD66D, 0xD66B, 0xD669, 0xD667, 0xD666, 
-	0xD666, 0xD663, 0xD660, 0xD65D, 0xD65B, 0xD658, 0xD656, 0xD633, 0xD631, 
-	0xD630, 0xD630, 0xD62F, 0xD62E, 0xD62E, 0xD62D, 0xD62C, 0xD62C, 0xD62B, 
-	0xD62B, 0xD62A, 0xD629, 0xD629, 0xD628, 0xD627, 0xD627, 0xD626, 0xD626, 
-	0xD625, 0xD625, 0xD624, 0xD623, 0xD623, 0xD622, 0xD622, 0xD621, 0xD620, 
-	0xD620, 0xD61F, 0xD61B, 0xD615, 0xD614, 0xD613, 0xD612, 0xD612, 0xD611, 
-	0xD611, 0xD611, 0xD610, 0xD611, 0xD611, 0xD611, 0xD612, 0xD612, 0xD613, 
-	0xD614, 0xD615, 0xD616, 0xD617, 0xD618, 0xD618, 0xD619, 0xD619, 0xD618, 
-	0xD618, 0xD618, 0xD617, 0xD617, 0xD616, 0xD615, 0xD60E, 0xD60D, 0xD60A, 
-	0xD608, 0xD608, 0xD607, 0xD607, 0xD607, 0xD606, 0xD606, 0xD605, 0xD605, 
-	0xD605, 0xD605, 0xD605, 0xD604, 0xD604, 0xD602, 0xD601, 0xD600, 0xD600, 
-	0xD5FD, 0xD5FA, 0xD5F7, 0xD5F4, 0xD5F0, 0xD5EC, 0xD5E8, 0xD5E3, 0xD5DE, 
-	0xD5D3, 0xD5D0, 0xD5CE, 0xD5CC, 0xD5CB, 0xD5C9, 0xD5C7, 0xD5C5, 0xD5C4, 
-	0xD5C3, 0xD5C1, 0xD5BF, 0xD5BE, 0xD5BC, 0xD5BA, 0xD5B8, 0xD5B6, 0xD5B4, 
-	0xD5B2, 0xD5B1, 0xD5AF, 0xD5AD, 0xD5AB, 0xD5A9, 0xD5A7, 0xD5A5, 0xD5A3, 
-	0xD5A1, 0xD59F, 0xD59C, 0xD59B, 0xD59C, 0xD59D, 0xD59E, 0xD59E, 0xD59F, 
-	0xD59F, 0xD5A0, 0xD5A0, 0xD5A0, 0xD5A0, 0xD5A1, 0xD5A1, 0xD5A2, 0xD5A2, 
-	0xD5A2, 0xD5A3, 0xD5A4, 0xD5A4, 0xD5A5, 0xD5A5, 0xD5A6, 0xD5A6, 0xD5A7, 
-	0xD5A7, 0xD5A7, 0xD5A7, 0xD5A8, 0xD5A8, 0xD5A8, 0xD5A8, 0xD5A8, 0xD5A8, 
-	0xD5A8, 0xD5A8, 0xD5A9, 0xD5A9, 0xD5A9, 0xD5A9, 0xD5A9, 0xD5A9, 0xD5AA, 
-	0xC8A9, 0xB480, 0xADB4, 0xB4C3, 0xE6CA, 0xFB0A, 0xF629, 0xEE6B, 0xE752, 
-	0xE66D, 0xED26, 0xF1AF, 0x0139, 0x1001, 0x1469, 0x1157, 0x105C, 0x1AA9, 
-	0x32F3, 0x323B, 0x21D0, 0x139B, 0x0887, 0xFFD0, 0xF81E, 0xF1F6, 0xED05, 
-	0xE925, 0xE8D4, 0xEAF3, 0xEBB5, 0xEED8, 0xF29D, 0xF755, 0xFCD7, 0x02BA, 
-	0x0436, 0x0582, 0x04F1, 0x03CA, 0x04B5, 0x05F2, 0x073D, 0x0827, 0x07EE, 
-	0x0810, 0x0841, 0x0849, 0x0848, 0x08B0, 0x08FD, 0x08F5, 0x0902, 0x0916, 
-	0x0931, 0x0950, 0x096C, 0x096C, 0x096A, 0x0969, 0x0968, 0x0967, 0x0966, 
-	0x0965, 0x0964, 0x0963, 0x0963, 0x0962, 0x0961, 0x0960, 0x0960, 0x095F, 
-	0x095F, 0x095E, 0x095D, 0x095D, 0x095C, 0x095B, 0x095A, 0x0959, 0x0958, 
-	0x0957, 0x0956, 0x0955, 0x0955, 0x0946, 0x0944, 0x0944, 0x0944, 0x0944, 
-	0x0944, 0x0943, 0x0943, 0x0943, 0x0943, 0x0942, 0x0942, 0x0942, 0x0942, 
-	0x0941, 0x0941, 0x0941, 0x0941, 0x0940, 0x0940, 0x0940, 0x0940, 0x093F, 
-	0x093F, 0x093F, 0x093F, 0x093E, 0x093E, 0x093E, 0x093E, 0x093D, 0x093B, 
-	0x0938, 0x0938, 0x0938, 0x0938, 0x0938, 0x0937, 0x0937, 0x0937, 0x0937, 
-	0x0937, 0x0937, 0x0937, 0x0938, 0x0938, 0x0938, 0x0939, 0x0939, 0x0939, 
-	0x093A, 0x093A, 0x093A, 0x093A, 0x093A, 0x093A, 0x093A, 0x093A, 0x093A, 
-	0x093A, 0x0939, 0x0939, 0x0935, 0x0935, 0x0934, 0x0933, 0x0933, 0x0933, 
-	0x0933, 0x0932, 0x0932, 0x0932, 0x0931, 0x0932, 0x0932, 0x0932, 0x0932, 
-	0x0931, 0x0931, 0x0931, 0x0930, 0x092F, 0x0930, 0x092E, 0x092D, 0x092B, 
-	0x092A, 0x0928, 0x0927, 0x0925, 0x0923, 0x0921, 0x091C, 0x091B, 0x091A, 
-	0x0919, 0x0919, 0x0918, 0x0917, 0x0916, 0x0916, 0x0915, 0x0914, 0x0914, 
-	0x0913, 0x0912, 0x0911, 0x0910, 0x090F, 0x090F, 0x090E, 0x090D, 0x090D, 
-	0x090C, 0x090B, 0x090A, 0x0909, 0x0908, 0x0907, 0x0906, 0x0906, 0x0904, 
-	0x0904, 0x0905, 0x0905, 0x0905, 0x0905, 0x0906, 0x0906, 0x0906, 0x0906, 
-	0x0906, 0x0906, 0x0906, 0x0906, 0x0907, 0x0907, 0x0907, 0x0907, 0x0908, 
-	0x0908, 0x0908, 0x0908, 0x0908, 0x0909, 0x0909, 0x0909, 0x0909, 0x0909, 
-	0x0909, 0x0909, 0x0909, 0x0909, 0x0909, 0x090A, 0x0000, 0x0498, 0xFA20, 
-	0x13A6, 0xD8CD, 0xE930, 0xF166, 0xF992, 0xFD9A, 0xF32A, 0xE0CE, 0xEA4B, 
-	0xF374, 0xFC09, 0x0179, 0x019F, 0xFD60, 0xFCD5, 0x0C73, 0x64B8, 0x7A10, 
-	0x817F, 0x870D, 0x8978, 0x8ADC, 0x8CBF, 0x9074, 0x94BA, 0x99FB, 0x9F8D, 
-	0xA4DC, 0xAA47, 0xAC0A, 0xADDB, 0xB032, 0xB361, 0xAFDD, 0xAEC4, 0xAF4B, 
-	0xAF10, 0xAF36, 0xAEED, 0xAE93, 0xAE9A, 0xAEEA, 0xAEC6, 0xAE9E, 0xAE92, 
-	0xAE91, 0xAEDF, 0xAF38, 0xAF32, 0xAF2E, 0xAF29, 0xAF2A, 0xAF2D, 0xAF33, 
-	0xAF33, 0xAF32, 0xAF32, 0xAF31, 0xAF30, 0xAF30, 0xAF2F, 0xAF2F, 0xAF2E, 
-	0xAF2E, 0xAF2D, 0xAF2D, 0xAF2C, 0xAF2C, 0xAF2C, 0xAF2B, 0xAF2B, 0xAF2B, 
-	0xAF2A, 0xAF29, 0xAF29, 0xAF29, 0xAF29, 0xAF28, 0xAF27, 0xAF26, 0xAF26, 
-	0xAF25, 0xAF1F, 0xAF1C, 0xAF1B, 0xAF1B, 0xAF1B, 0xAF1B, 0xAF1A, 0xAF1A, 
-	0xAF1A, 0xAF1A, 0xAF1A, 0xAF1A, 0xAF1A, 0xAF19, 0xAF19, 0xAF19, 0xAF19, 
-	0xAF19, 0xAF18, 0xAF18, 0xAF18, 0xAF18, 0xAF18, 0xAF17, 0xAF17, 0xAF17, 
-	0xAF17, 0xAF17, 0xAF17, 0xAF17, 0xAF17, 0xAF16, 0xAF15, 0xAF14, 0xAF14, 
-	0xAF14, 0xAF14, 0xAF13, 0xAF13, 0xAF13, 0xAF13, 0xAF13, 0xAF13, 0xAF13, 
-	0xAF13, 0xAF14, 0xAF14, 0xAF14, 0xAF14, 0xAF14, 0xAF15, 0xAF15, 0xAF15, 
-	0xAF15, 0xAF15, 0xAF15, 0xAF15, 0xAF15, 0xAF15, 0xAF15, 0xAF15, 0xAF15, 
-	0xAF13, 0xAF12, 0xAF12, 0xAF11, 0xAF11, 0xAF11, 0xAF11, 0xAF11, 0xAF11, 
-	0xAF11, 0xAF11, 0xAF10, 0xAF10, 0xAF10, 0xAF11, 0xAF10, 0xAF10, 0xAF10, 
-	0xAF0F, 0xAF10, 0xAF10, 0xAF0F, 0xAF0E, 0xAF0E, 0xAF0D, 0xAF0C, 0xAF0B, 
-	0xAF0A, 0xAF09, 0xAF08, 0xAF04, 0xAF04, 0xAF03, 0xAF02, 0xAF02, 0xAF02, 
-	0xAF01, 0xAF01, 0xAF00, 0xAF00, 0xAEFF, 0xAEFF, 0xAEFF, 0xAEFE, 0xAEFE, 
-	0xAEFD, 0xAEFD, 0xAEFC, 0xAEFC, 0xAEFC, 0xAEFB, 0xAEFB, 0xAEFA, 0xAEFA, 
-	0xAEF9, 0xAEF9, 0xAEF8, 0xAEF8, 0xAEF7, 0xAEF7, 0xAEF6, 0xAEF6, 0xAEF6, 
-	0xAEF7, 0xAEF7, 0xAEF7, 0xAEF7, 0xAEF7, 0xAEF8, 0xAEF8, 0xAEF8, 0xAEF8, 
-	0xAEF8, 0xAEF8, 0xAEF8, 0xAEF8, 0xAEF8, 0xAEF8, 0xAEF8, 0xAEF9, 0xAEF9, 
-	0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 
-	0xAEF9, 0xAEF9, 0xAEFA, 
-};
-
-static const u16 mario_anim_Action_indices[] = {
-	0x008A, 0x0000, 0x002D, 0x008A, 0x00C0, 0x00B7, 0x0001, 0x0177, 0x0001, 
-	0x0178, 0x0001, 0x0179, 0x00F9, 0x017A, 0x00F9, 0x0273, 0x00F8, 0x036C, 
-	0x00F8, 0x0464, 0x00FA, 0x055C, 0x00F9, 0x0656, 0x00F8, 0x074F, 0x00FA, 
-	0x0847, 0x00F5, 0x0941, 0x0001, 0x0A36, 0x0001, 0x0A37, 0x0001, 0x0A38, 
-	0x00FA, 0x0A39, 0x00FA, 0x0B33, 0x00FA, 0x0C2D, 0x00FA, 0x0D27, 0x00FA, 
-	0x0E21, 0x00FA, 0x0F1B, 0x00FA, 0x1015, 0x00FA, 0x110F, 0x00FA, 0x1209, 
-	0x0001, 0x1303, 0x0001, 0x1304, 0x0001, 0x1305, 0x00FA, 0x1306, 0x00FA, 
-	0x1400, 0x00F7, 0x14FA, 0x00FA, 0x15F1, 0x00FA, 0x16EB, 0x00F2, 0x17E5, 
-	0x00EA, 0x18D7, 0x00DF, 0x19C1, 0x00F3, 0x1AA0, 0x00FA, 0x1B93, 0x00FA, 
-	0x1C8D, 0x00FA, 0x1D87, 0x0001, 0x1E81, 0x0001, 0x1E82, 0x0001, 0x1E83, 
-	0x00FA, 0x1E84, 0x00FA, 0x1F7E, 0x00F9, 0x2078, 0x00FA, 0x2171, 0x00FA, 
-	0x226B, 0x00FA, 0x2365, 0x00F9, 0x245F, 0x00F9, 0x2558, 0x00FA, 0x2651, 
-	0x00FA, 0x274B, 0x00FA, 0x2845, 0x00FA, 0x293F, 0x00FA, 0x2A39, 0x00FA, 
-	0x2B33, 0x00FA, 0x2C2D, 0x00F9, 0x2D27, 0x00F0, 0x2E20, 0x00F0, 0x2F10, 
-	
-};
-
-static const struct Animation mario_anim_Action = {
-	0,
-	0,
-	0,
-	1,
-	250,
-	ANIMINDEX_NUMPARTS(mario_anim_Action_indices),
-	mario_anim_Action_values,
-	mario_anim_Action_indices,
-	0,
-};
-
diff --git a/actors/mario/anims/anim_jujujujmp.inc.c b/actors/mario/anims/anim_jujujujmp.inc.c
deleted file mode 100644
index 9f5f9bef..00000000
--- a/actors/mario/anims/anim_jujujujmp.inc.c
+++ /dev/null
@@ -1,47 +0,0 @@
-static const s16 mario_anim_jujujujmp_values[] = {
-	0x0000, 0xFFFC, 0x00AA, 0x00B1, 0x0000, 0x0005, 0xBFFF, 0xCBC4, 0x7FB4, 
-	0x826D, 0x0000, 0x0575, 0x2424, 0x2AE0, 0xF06E, 0xE722, 0x2B04, 0x221D, 
-	0x0C27, 0xAE6A, 0x2076, 0x5B78, 0x3F30, 0xF28F, 0xF213, 0xDD82, 0x28DC, 
-	0x2B1D, 0x337C, 0x258D, 0xEB08, 0xE3D4, 0x6078, 0x63E6, 0x4506, 0x3932, 
-	0xFC53, 0x562F, 0x5CD9, 0xDA0A, 0xEBBF, 0xE5F3, 0xF3D5, 0xA60F, 0x9935, 
-	0xD906, 0xC3EF, 0xD539, 0xD5B1, 0x4562, 0x50E7, 0xD8CB, 0xD764, 0xED21, 
-	0xE9D9, 0x36FE, 0x38DD, 0xE573, 0xA3BB, 0xA571, 0xC4B8, 0xD775, 0x20C0, 
-	0xD0A4, 0xE76D, 0xF7CE, 0x0B54, 0x7D61, 0x7EE4, 0x70A1, 0x76ED, 0x0D9A, 
-	0x1012, 0xE086, 0xDA1F, 0xCEAD, 0xD25B, 0x0571, 0x1B81, 0xFD3A, 0x0776, 
-	0x0E3F, 0x0A34, 0x77EA, 0x742E, 0x3434, 0x2FCA, 0x92A6, 0x9744, 0x06DA, 
-	0x0DDB, 0xD126, 0xD53E, 0xE8CA, 0x18BC, 0xE100, 0xE8CA, 0xBC38, 0x18BC, 
-	0x0C58, 0xE100, 0xB73C, 0xFFB4, 0xFFFD, 0xFF5E, 0xFFB4, 0xF63A, 0xFFFD, 
-	0xFF19, 0xFF5E, 0xF8D0, 0xBFFF, 0xB8DF, 0x0000, 0xEFD6, 0xC000, 0xBF51, 
-	
-};
-
-static const u16 mario_anim_jujujujmp_indices[] = {
-	0x0002, 0x0000, 0x0002, 0x0002, 0x0002, 0x0004, 0x0002, 0x0006, 0x0002, 
-	0x0008, 0x0002, 0x000A, 0x0002, 0x000C, 0x0002, 0x000E, 0x0002, 0x0010, 
-	0x0002, 0x0012, 0x0002, 0x0014, 0x0002, 0x0016, 0x0002, 0x0018, 0x0002, 
-	0x001A, 0x0002, 0x001C, 0x0002, 0x001E, 0x0002, 0x0020, 0x0002, 0x0022, 
-	0x0001, 0x0024, 0x0001, 0x0025, 0x0001, 0x0026, 0x0002, 0x0027, 0x0002, 
-	0x0029, 0x0002, 0x002B, 0x0002, 0x002D, 0x0002, 0x002F, 0x0002, 0x0031, 
-	0x0002, 0x0033, 0x0002, 0x0035, 0x0002, 0x0037, 0x0002, 0x0039, 0x0002, 
-	0x003B, 0x0002, 0x003D, 0x0002, 0x003F, 0x0002, 0x0041, 0x0002, 0x0043, 
-	0x0002, 0x0045, 0x0002, 0x0047, 0x0002, 0x0049, 0x0002, 0x004B, 0x0002, 
-	0x004D, 0x0002, 0x004F, 0x0002, 0x0051, 0x0002, 0x0053, 0x0002, 0x0055, 
-	0x0002, 0x0057, 0x0002, 0x0059, 0x0002, 0x005B, 0x0001, 0x005D, 0x0001, 
-	0x005E, 0x0001, 0x005F, 0x0002, 0x0060, 0x0002, 0x0062, 0x0002, 0x0064, 
-	0x0001, 0x0066, 0x0001, 0x0067, 0x0001, 0x0068, 0x0002, 0x0069, 0x0002, 
-	0x006B, 0x0002, 0x006D, 0x0002, 0x006F, 0x0002, 0x0071, 0x0002, 0x0073, 
-	
-};
-
-static const struct Animation mario_anim_jujujujmp = {
-	1,
-	0,
-	0,
-	1,
-	2,
-	ANIMINDEX_NUMPARTS(mario_anim_jujujujmp_indices),
-	mario_anim_jujujujmp_values,
-	mario_anim_jujujujmp_indices,
-	0,
-};
-
diff --git a/actors/mario/anims/data.inc.c b/actors/mario/anims/data.inc.c
deleted file mode 100644
index d4cc4397..00000000
--- a/actors/mario/anims/data.inc.c
+++ /dev/null
@@ -1,2 +0,0 @@
-#include "anim_jujujujmp.inc.c"
-#include "anim_Action.inc.c"
diff --git a/actors/mario/anims/table.inc.c b/actors/mario/anims/table.inc.c
deleted file mode 100644
index 8a843f5f..00000000
--- a/actors/mario/anims/table.inc.c
+++ /dev/null
@@ -1,4 +0,0 @@
-const struct Animation *const mario_anims[] = {
-	&mario_anim_Action,
-	NULL,
-};
diff --git a/actors/mario/geo.inc.c b/actors/mario/geo.inc.c
index f26c66d3..736d31f0 100644
--- a/actors/mario/geo.inc.c
+++ b/actors/mario/geo.inc.c
@@ -1,1013 +1,1825 @@
-#include "src/game/envfx_snow.h"
-
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_1___eye_half_v3_001_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_7___eye_X_v3_001_3),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_armature_002_switch_option_002[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-		GEO_OPEN_NODE(),
-			GEO_NODE_START(),
-			GEO_OPEN_NODE(),
-				GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_layer_1),
-			GEO_CLOSE_NODE(),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_right_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_left_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh_layer_1),
-		GEO_OPEN_NODE(),
-			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_left_hand_peace_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_left_hand_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_left_hand_wing_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh_layer_1),
-		GEO_OPEN_NODE(),
-			GEO_DISPLAY_LIST(LAYER_ALPHA, mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_1___eye_half_v3_001_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_7___eye_X_v3_001_3),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_armature_002_switch_option_002[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-		GEO_OPEN_NODE(),
-			GEO_NODE_START(),
-			GEO_OPEN_NODE(),
-				GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_layer_1),
-			GEO_CLOSE_NODE(),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6),
-			GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_right_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh_layer_1),
-		GEO_OPEN_NODE(),
-			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_peace_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_wing_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh_layer_1),
-		GEO_OPEN_NODE(),
-			GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_layer_1_mat_override_face_1___eye_half_v3_001_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_layer_1_mat_override_face_7___eye_X_v3_001_3),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt1[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-		GEO_OPEN_NODE(),
-			GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_mesh_layer_1),
-			GEO_OPEN_NODE(),
-				GEO_ASM(0, geo_move_mario_part_from_parent),
-				GEO_ASM(0, geo_mario_tilt_torso),
-				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_000_offset_001_mesh_layer_1),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ASM(0, geo_mario_head_rotation),
-							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-							GEO_OPEN_NODE(),
-								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-								GEO_OPEN_NODE(),
-									GEO_NODE_START(),
-									GEO_OPEN_NODE(),
-										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-										GEO_OPEN_NODE(),
-											GEO_NODE_START(),
-											GEO_OPEN_NODE(),
-												GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_layer_1),
-											GEO_CLOSE_NODE(),
-											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1),
-											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2),
-											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3),
-											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4),
-											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5),
-											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6),
-											GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7),
-										GEO_CLOSE_NODE(),
-									GEO_CLOSE_NODE(),
-									GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_armature_002_switch_option_002),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_001_mesh_layer_4),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_002_mesh_layer_4),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_003_mesh_layer_1),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_004_mesh_layer_1),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(1, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_003_mesh_layer_1),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_right_hand_open_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_006_mesh_layer_1),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_007_mesh_layer_1),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(0, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_004_mesh_layer_1),
-												GEO_CLOSE_NODE(),
-												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_open_armature),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_peace_armature),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_cap_armature),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_wing_cap_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_009_mesh_layer_1),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_010_mesh_layer_1),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_000_offset_011_mesh_layer_1),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_012_mesh_layer_1),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_013_mesh_layer_1),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-							GEO_OPEN_NODE(),
-								GEO_ASM(2, geo_mario_hand_foot_scaler),
-								GEO_SCALE(LAYER_FORCE, 65536),
-								GEO_OPEN_NODE(),
-									GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_005_mesh_layer_1),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_armature_002_switch_option_002[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-		GEO_OPEN_NODE(),
-			GEO_NODE_START(),
-			GEO_OPEN_NODE(),
-				GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_metal_v3_001_0),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_right_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh_layer_1_mat_override_metal_v3_001_0),
-		GEO_OPEN_NODE(),
-			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_peace_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_wing_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_mat_override_metal_v3_001_0),
-		GEO_OPEN_NODE(),
-			GEO_DISPLAY_LIST(LAYER_ALPHA, mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_mat_override_metal_v3_001_0),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt2[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-		GEO_OPEN_NODE(),
-			GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_mesh_layer_1_mat_override_metal_v3_001_0),
-			GEO_OPEN_NODE(),
-				GEO_ASM(0, geo_move_mario_part_from_parent),
-				GEO_ASM(0, geo_mario_tilt_torso),
-				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_000_offset_001_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ASM(0, geo_mario_head_rotation),
-							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-							GEO_OPEN_NODE(),
-								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-								GEO_OPEN_NODE(),
-									GEO_NODE_START(),
-									GEO_OPEN_NODE(),
-										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-										GEO_OPEN_NODE(),
-											GEO_NODE_START(),
-											GEO_OPEN_NODE(),
-												GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_layer_1_mat_override_metal_v3_001_0),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-									GEO_CLOSE_NODE(),
-									GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_armature_002_switch_option_002),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_001_mesh_layer_4_mat_override_metal_v3_001_0),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_002_mesh_layer_4_mat_override_metal_v3_001_0),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_003_mesh_layer_1_mat_override_metal_v3_001_0),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_004_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(1, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_003_mesh_layer_1_mat_override_metal_v3_001_0),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_right_hand_open_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_006_mesh_layer_1_mat_override_metal_v3_001_0),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_007_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(0, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_004_mesh_layer_1_mat_override_metal_v3_001_0),
-												GEO_CLOSE_NODE(),
-												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_open_armature),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_peace_armature),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_cap_armature),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_wing_cap_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_009_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_010_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_000_offset_011_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_012_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_013_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-							GEO_OPEN_NODE(),
-								GEO_ASM(2, geo_mario_hand_foot_scaler),
-								GEO_SCALE(LAYER_FORCE, 65536),
-								GEO_OPEN_NODE(),
-									GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_005_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_armature_002_switch_option_002[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-		GEO_OPEN_NODE(),
-			GEO_NODE_START(),
-			GEO_OPEN_NODE(),
-				GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_metal_v3_001_0),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_right_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_right_hand_open_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_002_switch_option_left_hand_open_mesh_layer_1_mat_override_metal_v3_001_0),
-		GEO_OPEN_NODE(),
-			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_peace_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_004_switch_option_left_hand_peace_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_005_switch_option_left_hand_cap_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_wing_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_mat_override_metal_v3_001_0),
-		GEO_OPEN_NODE(),
-			GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_mat_override_metal_v3_001_0),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt3[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-		GEO_OPEN_NODE(),
-			GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_mesh_layer_1_mat_override_metal_v3_001_0),
-			GEO_OPEN_NODE(),
-				GEO_ASM(0, geo_move_mario_part_from_parent),
-				GEO_ASM(0, geo_mario_tilt_torso),
-				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_000_offset_001_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ASM(0, geo_mario_head_rotation),
-							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-							GEO_OPEN_NODE(),
-								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-								GEO_OPEN_NODE(),
-									GEO_NODE_START(),
-									GEO_OPEN_NODE(),
-										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-										GEO_OPEN_NODE(),
-											GEO_NODE_START(),
-											GEO_OPEN_NODE(),
-												GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_mesh_layer_1_mat_override_metal_v3_001_0),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-									GEO_CLOSE_NODE(),
-									GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_armature_002_switch_option_002),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_001_mesh_layer_4_mat_override_metal_v3_001_0),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_002_mesh_layer_4_mat_override_metal_v3_001_0),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_003_mesh_layer_1_mat_override_metal_v3_001_0),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_004_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(1, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_003_mesh_layer_1_mat_override_metal_v3_001_0),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_right_hand_open_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_006_mesh_layer_1_mat_override_metal_v3_001_0),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_000_offset_007_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(0, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_004_mesh_layer_1_mat_override_metal_v3_001_0),
-												GEO_CLOSE_NODE(),
-												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_open_armature),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_peace_armature),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_cap_armature),
-										GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_wing_cap_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_009_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_010_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_000_offset_011_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_000_offset_012_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_000_offset_013_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-							GEO_OPEN_NODE(),
-								GEO_ASM(2, geo_mario_hand_foot_scaler),
-								GEO_SCALE(LAYER_FORCE, 65536),
-								GEO_OPEN_NODE(),
-									GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_000_displaylist_005_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_layer_1_mat_override_face_1___eye_half_v3_001_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_layer_1_mat_override_face_7___eye_X_v3_001_3),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
+// Normal Mario Geo
+
+// 0x170002E0
+const GeoLayout mario_geo_face_and_wings[] = {
+   GEO_ASM(0, geo_mario_head_rotation),
+   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+   GEO_OPEN_NODE(),
+      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+      GEO_OPEN_NODE(),
+         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_front),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_half_closed),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_closed),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_right), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_left), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_up), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_down), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_on_eyes_dead),
+         GEO_CLOSE_NODE(),
+         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_front),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_half_closed),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_closed),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_right), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_left), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_up), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_down), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_cap_off_eyes_dead),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // left
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // right
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x1700041C
+const GeoLayout mario_geo_left_hand[] = {
+   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_left_hand_closed),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17000494
+const GeoLayout mario_geo_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace), // here we go hand
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// The body loads all the parts with some shared dls to apply the solid color of the dl that has it, the same rule applies to the medium and low poly geos
+
+// 0x1700053C
+const GeoLayout mario_geo_body[] = {
+   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_butt), // starts sharing solid color with mario_torso (blue)
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_torso),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_geo_face_and_wings), // stops sharing because faces has its own dl
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_left_arm), // starts sharing solid color with mario_left_forearm (red)
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_geo_left_hand), // stops sharing because hand has its solid color (white)
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_arm), // starts sharing solid color of his dl with mario_right_forearm (red)
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_geo_right_hand), // stops sharing because hand has its solid color (white)
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_left_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_left_foot), // stops sharing because foot has its solid color (brown)
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_right_foot), // stops sharing because foot has its solid color (brown)
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x170006F8
+const GeoLayout mario_geo_medium_poly_left_hand[] = {
+   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_left_hand_closed),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17000770
+const GeoLayout mario_geo_medium_poly_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace), // here we go hand
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17000818
+const GeoLayout mario_geo_medium_poly_body[] = {
+   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_butt), // starts sharing solid color with mario_torso (blue)
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_medium_poly_torso),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_geo_face_and_wings), // stops sharing because faces has its own dl - medium poly mario uses high poly face
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_left_arm), // starts sharing solid color with mario_left_forearm (red)
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_geo_medium_poly_left_hand), // stops sharing because hand has its solid color (white)
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_arm), // starts sharing solid color of his dl with mario_right_forearm (red)
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_geo_medium_poly_right_hand), // stops sharing because hand has its solid color (white)
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_left_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_medium_poly_left_foot), // stops sharing because foot has its solid color (brown)
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_right_foot), // stops sharing because foot has its solid color (brown)
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x170009D4
+const GeoLayout mario_geo_low_poly_face_and_wings[] = {
+   GEO_ASM(0, geo_mario_head_rotation),
+   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+   GEO_OPEN_NODE(),
+      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+      GEO_OPEN_NODE(),
+         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_front),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_half_closed),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_closed),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_right), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_left), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_up), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_down), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_on_eyes_dead),
+         GEO_CLOSE_NODE(),
+         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_front),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_half_closed),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_closed),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_right), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_left), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_up), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_down), // unused
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_cap_off_eyes_dead),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // left
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_cap_wings), // right
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17000B10
+const GeoLayout mario_geo_low_poly_left_hand[] = {
+   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_left_hand_closed),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17000B88
+const GeoLayout mario_geo_low_poly_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace), // here we go hand
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_cap),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17000C30
+const GeoLayout mario_geo_low_poly_body[] = {
+   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_butt), // starts sharing solid color with mario_torso (blue)
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_low_poly_torso),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_geo_low_poly_face_and_wings), // stops sharing because faces has its own dl
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_left_arm), // starts sharing solid color with mario_left_forearm (red)
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_geo_low_poly_left_hand), // stops sharing because hand has its solid color (white)
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_arm), // starts sharing solid color of his dl with mario_right_forearm (red)
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_geo_low_poly_right_hand), // stops sharing because hand has its solid color (white)
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_left_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_low_poly_left_foot), // stops sharing because foot has its solid color (brown)
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_thigh), // starts sharing solid color of his dl with mario_left_leg (blue)
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_right_foot), // stops sharing because foot has its solid color (brown)
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// Vanish Mario Geo
+
+// 0x17000DEC
+const GeoLayout mario_vanish_geo_face_and_wings[] = {
+   GEO_ASM(0, geo_mario_head_rotation),
+   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+   GEO_OPEN_NODE(),
+      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+      GEO_OPEN_NODE(),
+         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_front),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_half_closed),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_closed),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_right), // unused
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_left), // unused
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_up), // unused
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_down), // unused
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_on_eyes_dead),
+         GEO_CLOSE_NODE(),
+         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_front),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_half_closed),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_closed),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_right), // unused
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_left), // unused
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_up), // unused
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_down), // unused
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_off_eyes_dead),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17000F28
+const GeoLayout mario_vanish_geo_left_hand[] = {
+   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_left_hand_closed),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
 };
+
+// 0x17000FA0
+const GeoLayout mario_vanish_geo_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace), // here we go hand
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// Same rule body as Normal Mario
+
+// 0x17001048
+const GeoLayout mario_vanish_geo_body[] = {
+   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_butt),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_torso),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_vanish_geo_face_and_wings),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_left_arm),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_vanish_geo_left_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_arm),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_vanish_geo_right_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_left_thigh),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_left_foot),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_thigh),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_right_foot),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17001204
+const GeoLayout mario_vanish_geo_medium_poly_left_hand[] = {
+   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_left_hand_closed),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x1700127C
+const GeoLayout mario_vanish_geo_medium_poly_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace), // here we go hand
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17001324
+const GeoLayout mario_vanish_geo_medium_poly_body[] = {
+   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_butt),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_medium_poly_torso),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_vanish_geo_face_and_wings),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_left_arm),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_vanish_geo_medium_poly_left_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_arm),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_vanish_geo_medium_poly_right_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_left_thigh),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_medium_poly_left_foot),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_thigh),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_right_foot),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x170014E0
+const GeoLayout mario_vanish_geo_low_poly_face_and_wings[] = {
+   GEO_ASM(0, geo_mario_head_rotation),
+   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+   GEO_OPEN_NODE(),
+      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+      GEO_OPEN_NODE(),
+         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_front),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_half_closed),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_closed),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_right),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_left),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_up),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_down),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_on_eyes_dead),
+         GEO_CLOSE_NODE(),
+         GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_front),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_half_closed),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_closed),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_right),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_left),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_up),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_down),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_cap_off_eyes_dead),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_cap_wings_transparent),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x1700161C
+const GeoLayout mario_vanish_geo_low_poly_left_hand[] = {
+   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_left_hand_closed),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17001694
+const GeoLayout mario_vanish_geo_low_poly_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace), // here we go hand
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_cap),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_right_hand_cap_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x1700173C
+const GeoLayout mario_vanish_geo_low_poly_body[] = {
+   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_butt),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_low_poly_torso),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_vanish_geo_low_poly_face_and_wings),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_left_arm),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_vanish_geo_low_poly_left_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_arm),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_vanish_geo_low_poly_right_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_left_thigh),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_low_poly_left_foot),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_thigh),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_right_foot),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// Metal Mario Geo
+
+// 0x170018F8
+const GeoLayout mario_metal_geo_face_and_wings[] = {
+   GEO_ASM(0, geo_mario_head_rotation),
+   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+   GEO_OPEN_NODE(),
+      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_cap_on_shared_dl),
+         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_cap_off_shared_dl),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings), // left
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings), // right
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x170019A4
+const GeoLayout mario_metal_geo_left_hand[] = {
+   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_left_hand_closed_shared_dl),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_closed_shared_dl),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17001A1C
+const GeoLayout mario_metal_geo_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// A difference from Normal Mario is that the dls after the butt and left thigh shares the metal texture of it, same rule applies to the medium and low poly geos
+
+// 0x17001AC4
+const GeoLayout mario_metal_geo_body[] = {
+   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_butt), // starts sharing metal texture with the dls below
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_metal_torso_shared_dl),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_metal_geo_face_and_wings), // unlike normal mario geo, these dls still share the metal texture
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_left_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_metal_geo_left_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_metal_geo_right_hand), // stop sharing because the wing metal cap of it
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_left_thigh), // starts sharing metal texture with the dls below
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_left_foot_shared_dl),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_right_thigh_shared_dl),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_right_foot),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17001C80
+const GeoLayout mario_metal_geo_medium_poly_left_hand[] = {
+   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_medium_poly_left_hand_closed_shared_dl),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17001CF8
+const GeoLayout mario_metal_geo_medium_poly_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_medium_poly_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17001DA0
+const GeoLayout mario_metal_geo_medium_poly_body[] = {
+   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_medium_poly_butt),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_metal_medium_poly_torso),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_metal_geo_face_and_wings),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_left_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_metal_geo_medium_poly_left_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_metal_geo_medium_poly_right_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_medium_poly_left_thigh),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_medium_poly_left_foot_shared_dl),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_medium_poly_right_thigh_shared_dl),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_medium_poly_right_foot),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17001F5C
+const GeoLayout mario_metal_geo_low_poly_face_and_wings[] = {
+   GEO_ASM(0, geo_mario_head_rotation),
+   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+   GEO_OPEN_NODE(),
+      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_cap_on),
+         GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_cap_off),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_cap_wings),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17002008
+const GeoLayout mario_metal_geo_low_poly_left_hand[] = {
+   GEO_SWITCH_CASE(1, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_low_poly_left_hand_closed_shared_dl),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_left_hand_open_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17002080
+const GeoLayout mario_metal_geo_low_poly_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17002128
+const GeoLayout mario_metal_geo_low_poly_body[] = {
+   GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_low_poly_butt),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_metal_low_poly_torso),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_metal_geo_low_poly_face_and_wings),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_left_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_metal_geo_low_poly_left_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_metal_geo_low_poly_right_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_metal_low_poly_left_thigh),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_low_poly_left_foot_shared_dl),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_low_poly_right_thigh_shared_dl),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_metal_low_poly_right_foot),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// Metal Vanish Mario Geo
+
+// 0x170022E4
+const GeoLayout mario_metal_vanish_geo_face_and_wings[] = {
+   GEO_ASM(0, geo_mario_head_rotation),
+   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+   GEO_OPEN_NODE(),
+      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_on_shared_dl),
+         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_off_shared_dl),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17002390
+const GeoLayout mario_metal_vanish_geo_left_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_left_hand_closed_shared_dl),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_closed_shared_dl),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17002408
+const GeoLayout mario_metal_vanish_geo_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// Same rules as Metal Mario
+
+// 0x170024B0
+const GeoLayout mario_metal_vanish_geo_body[] = {
+   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_butt),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_metal_torso_shared_dl),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_metal_vanish_geo_face_and_wings),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_left_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_metal_vanish_geo_left_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_metal_vanish_geo_right_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_left_thigh),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_left_foot_shared_dl),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_right_thigh_shared_dl),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_right_foot),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x1700266C
+const GeoLayout mario_metal_vanish_geo_medium_poly_left_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_medium_poly_left_hand_closed_shared_dl),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_medium_poly_left_hand_closed_shared_dl),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x170026E4
+const GeoLayout mario_metal_vanish_geo_medium_poly_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_medium_poly_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x1700278C
+const GeoLayout mario_metal_vanish_geo_medium_poly_body[] = {
+   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_medium_poly_butt),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_metal_medium_poly_torso),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_metal_vanish_geo_face_and_wings),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_left_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_metal_vanish_geo_medium_poly_left_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_medium_poly_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+                        GEO_OPEN_NODE(),
+                           GEO_BRANCH(1, mario_metal_vanish_geo_medium_poly_right_hand),
+                        GEO_CLOSE_NODE(),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_medium_poly_left_thigh),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_medium_poly_left_foot_shared_dl),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_medium_poly_right_thigh_shared_dl),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_medium_poly_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_medium_poly_right_foot),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17002958
+const GeoLayout mario_metal_vanish_geo_low_poly_face_and_wings[] = {
+   GEO_ASM(0, geo_mario_head_rotation),
+   GEO_ROTATION_NODE(0x00, 0, 0, 0),
+   GEO_OPEN_NODE(),
+      GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_cap_on),
+         GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_cap_off),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, -126, 22, -40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_TRANSLATE_ROTATE(0, 142, -51, 126, -22, 40, -135),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_cap_wings_transparent),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17002A04
+const GeoLayout mario_metal_vanish_geo_low_poly_left_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(1, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_low_poly_left_hand_closed_shared_dl),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_left_hand_open_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_low_poly_left_hand_closed_shared_dl),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17002A7C
+const GeoLayout mario_metal_vanish_geo_low_poly_right_hand[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_hand),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, NULL),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mario_hand_foot_scaler),
+         GEO_SCALE(0x00, 65536),
+         GEO_OPEN_NODE(),
+            GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_right_hand_closed),
+         GEO_CLOSE_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_open),
+      GEO_OPEN_NODE(),
+         GEO_HELD_OBJECT(0x00, 0, 0, 0, geo_switch_mario_hand_grab_pos),
+      GEO_CLOSE_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_right_hand_peace_shared_dl), // here we go hand
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, mario_metal_right_hand_cap_shared_dl),
+      GEO_OPEN_NODE(),
+         GEO_DISPLAY_LIST(LAYER_ALPHA, mario_metal_right_hand_cap_shared_dl_wings),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17002B24
+const GeoLayout mario_metal_vanish_geo_low_poly_body[] = {
+   GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, NULL),
+   GEO_OPEN_NODE(),
+      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_low_poly_butt),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_move_mario_part_from_parent),
+         GEO_ASM(0, geo_mario_tilt_torso),
+         GEO_ROTATION_NODE(0x00, 0, 0, 0),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, mario_metal_low_poly_torso),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 87, 0, 0, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_face_and_wings),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, -10, 79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_left_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_left_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_left_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, -10, -79, NULL),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_arm_shared_dl),
+                  GEO_OPEN_NODE(),
+                     GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, mario_low_poly_right_forearm_shared_dl),
+                     GEO_OPEN_NODE(),
+                        GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_right_hand),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, 42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_metal_low_poly_left_thigh),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_left_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, mario_low_poly_left_foot_shared_dl),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+         GEO_ANIMATED_PART(LAYER_TRANSPARENT, 13, -8, -42, NULL),
+         GEO_OPEN_NODE(),
+            GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, mario_low_poly_right_thigh_shared_dl),
+            GEO_OPEN_NODE(),
+               GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, mario_low_poly_right_leg_shared_dl),
+               GEO_OPEN_NODE(),
+                  GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, NULL),
+                  GEO_OPEN_NODE(),
+                     GEO_ASM(2, geo_mario_hand_foot_scaler),
+                     GEO_SCALE(0x00, 65536),
+                     GEO_OPEN_NODE(),
+                        GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_metal_low_poly_right_foot),
+                     GEO_CLOSE_NODE(),
+                  GEO_CLOSE_NODE(),
+               GEO_CLOSE_NODE(),
+            GEO_CLOSE_NODE(),
+         GEO_CLOSE_NODE(),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// High Poly
+
+// 0x17002CE0
+const GeoLayout mario_geo_load_body[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
+   GEO_OPEN_NODE(),
+      GEO_BRANCH(1, mario_geo_body),
+      GEO_BRANCH(1, mario_vanish_geo_body),
+      GEO_BRANCH(1, mario_metal_geo_body),
+      GEO_BRANCH(1, mario_metal_vanish_geo_body),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// Medium Poly
+
+// 0x17002D14
+const GeoLayout mario_geo_load_medium_poly_body[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
+   GEO_OPEN_NODE(),
+      GEO_BRANCH(1, mario_geo_medium_poly_body),
+      GEO_BRANCH(1, mario_vanish_geo_medium_poly_body),
+      GEO_BRANCH(1, mario_metal_geo_medium_poly_body),
+      GEO_BRANCH(1, mario_metal_vanish_geo_medium_poly_body),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// Low Poly
+
+// 0x17002D48
+const GeoLayout mario_geo_load_low_poly_body[] = {
+   GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
+   GEO_OPEN_NODE(),
+      GEO_BRANCH(1, mario_geo_low_poly_body),
+      GEO_BRANCH(1, mario_vanish_geo_low_poly_body),
+      GEO_BRANCH(1, mario_metal_geo_low_poly_body),
+      GEO_BRANCH(1, mario_metal_vanish_geo_low_poly_body),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// 0x17002D7C
+const GeoLayout mario_geo_render_body[] = {
+   GEO_NODE_START(),
+   GEO_OPEN_NODE(),
+      GEO_RENDER_RANGE(-2048, 600),
+      GEO_OPEN_NODE(),
+         GEO_BRANCH(1, mario_geo_load_body),
+      GEO_CLOSE_NODE(),
+      GEO_RENDER_RANGE(600, 1600),
+      GEO_OPEN_NODE(),
+         GEO_BRANCH(1, mario_geo_load_medium_poly_body),
+      GEO_CLOSE_NODE(),
+      GEO_RENDER_RANGE(1600, 32767),
+      GEO_OPEN_NODE(),
+         GEO_BRANCH(1, mario_geo_load_low_poly_body),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_RETURN(),
+};
+
+// This last geo is used to load all of Mario Geo in the Level Scripts
+
+// 0x17002DD4
 const GeoLayout mario_geo[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_SHADOW(1, 180, 100),
-		GEO_OPEN_NODE(),
-			GEO_SCALE(LAYER_FORCE, 16384),
-			GEO_OPEN_NODE(),
-				GEO_ASM(0, geo_mirror_mario_backface_culling),
-				GEO_ASM(0, geo_mirror_mario_set_alpha),
-				GEO_SWITCH_CASE(0, geo_switch_mario_stand_run),
-				GEO_OPEN_NODE(),
-					GEO_NODE_START(),
-					GEO_OPEN_NODE(),
-						GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
-						GEO_OPEN_NODE(),
-							GEO_NODE_START(),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-								GEO_OPEN_NODE(),
-									GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_mesh_layer_1),
-									GEO_OPEN_NODE(),
-										GEO_ASM(0, geo_move_mario_part_from_parent),
-										GEO_ASM(0, geo_mario_tilt_torso),
-										GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, mario_000_offset_001_mesh_layer_1),
-											GEO_OPEN_NODE(),
-												GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-												GEO_OPEN_NODE(),
-													GEO_ASM(0, geo_mario_head_rotation),
-													GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-													GEO_OPEN_NODE(),
-														GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-														GEO_OPEN_NODE(),
-															GEO_NODE_START(),
-															GEO_OPEN_NODE(),
-																GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-																GEO_OPEN_NODE(),
-																	GEO_NODE_START(),
-																	GEO_OPEN_NODE(),
-																		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_mesh_layer_1),
-																	GEO_CLOSE_NODE(),
-																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1),
-																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2),
-																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3),
-																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4),
-																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5),
-																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6),
-																	GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7),
-																GEO_CLOSE_NODE(),
-															GEO_CLOSE_NODE(),
-															GEO_BRANCH(1, mario_armature_002_switch_option_002),
-														GEO_CLOSE_NODE(),
-														GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
-														GEO_OPEN_NODE(),
-															GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-															GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-															GEO_OPEN_NODE(),
-																GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_001_mesh_layer_4),
-															GEO_CLOSE_NODE(),
-														GEO_CLOSE_NODE(),
-														GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
-														GEO_OPEN_NODE(),
-															GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-															GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-															GEO_OPEN_NODE(),
-																GEO_DISPLAY_LIST(LAYER_ALPHA, mario_000_displaylist_002_mesh_layer_4),
-															GEO_CLOSE_NODE(),
-														GEO_CLOSE_NODE(),
-													GEO_CLOSE_NODE(),
-												GEO_CLOSE_NODE(),
-												GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-												GEO_OPEN_NODE(),
-													GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_003_mesh_layer_1),
-													GEO_OPEN_NODE(),
-														GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_004_mesh_layer_1),
-														GEO_OPEN_NODE(),
-															GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-															GEO_OPEN_NODE(),
-																GEO_NODE_START(),
-																GEO_OPEN_NODE(),
-																	GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-																	GEO_OPEN_NODE(),
-																		GEO_ASM(1, geo_mario_hand_foot_scaler),
-																		GEO_SCALE(LAYER_FORCE, 65536),
-																		GEO_OPEN_NODE(),
-																			GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_003_mesh_layer_1),
-																		GEO_CLOSE_NODE(),
-																	GEO_CLOSE_NODE(),
-																GEO_CLOSE_NODE(),
-																GEO_BRANCH(1, mario_right_hand_open_armature),
-															GEO_CLOSE_NODE(),
-														GEO_CLOSE_NODE(),
-													GEO_CLOSE_NODE(),
-												GEO_CLOSE_NODE(),
-												GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-												GEO_OPEN_NODE(),
-													GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_006_mesh_layer_1),
-													GEO_OPEN_NODE(),
-														GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, mario_000_offset_007_mesh_layer_1),
-														GEO_OPEN_NODE(),
-															GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-															GEO_OPEN_NODE(),
-																GEO_NODE_START(),
-																GEO_OPEN_NODE(),
-																	GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-																	GEO_OPEN_NODE(),
-																		GEO_ASM(0, geo_mario_hand_foot_scaler),
-																		GEO_SCALE(LAYER_FORCE, 65536),
-																		GEO_OPEN_NODE(),
-																			GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_004_mesh_layer_1),
-																		GEO_CLOSE_NODE(),
-																		GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-																	GEO_CLOSE_NODE(),
-																GEO_CLOSE_NODE(),
-																GEO_BRANCH(1, mario_left_hand_open_armature),
-																GEO_BRANCH(1, mario_left_hand_peace_armature),
-																GEO_BRANCH(1, mario_left_hand_cap_armature),
-																GEO_BRANCH(1, mario_left_hand_wing_cap_armature),
-															GEO_CLOSE_NODE(),
-														GEO_CLOSE_NODE(),
-													GEO_CLOSE_NODE(),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_009_mesh_layer_1),
-											GEO_OPEN_NODE(),
-												GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_010_mesh_layer_1),
-												GEO_OPEN_NODE(),
-													GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, mario_000_offset_011_mesh_layer_1),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, mario_000_offset_012_mesh_layer_1),
-											GEO_OPEN_NODE(),
-												GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, mario_000_offset_013_mesh_layer_1),
-												GEO_OPEN_NODE(),
-													GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-													GEO_OPEN_NODE(),
-														GEO_ASM(2, geo_mario_hand_foot_scaler),
-														GEO_SCALE(LAYER_FORCE, 65536),
-														GEO_OPEN_NODE(),
-															GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_000_displaylist_005_mesh_layer_1),
-														GEO_CLOSE_NODE(),
-													GEO_CLOSE_NODE(),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-							GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt1),
-							GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt2),
-							GEO_BRANCH(1, mario_002_switch_opt0_001_switch_opt3),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ASM(1, geo_mirror_mario_backface_culling),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, mario_material_revert_render_settings),
-		GEO_DISPLAY_LIST(LAYER_ALPHA, mario_material_revert_render_settings),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, mario_material_revert_render_settings),
-	GEO_CLOSE_NODE(),
-	GEO_END(),
+   GEO_SHADOW(SHADOW_CIRCLE_PLAYER, 0xB4, 100),
+   GEO_OPEN_NODE(),
+      GEO_SCALE(0x00, 16384),
+      GEO_OPEN_NODE(),
+         GEO_ASM(0, geo_mirror_mario_backface_culling),
+         GEO_ASM(0, geo_mirror_mario_set_alpha),
+         GEO_SWITCH_CASE(0, geo_switch_mario_stand_run),
+         GEO_OPEN_NODE(),
+            GEO_BRANCH(1, mario_geo_load_body),
+            GEO_BRANCH(1, mario_geo_render_body),
+         GEO_CLOSE_NODE(),
+         GEO_ASM(1, geo_mirror_mario_backface_culling),
+      GEO_CLOSE_NODE(),
+   GEO_CLOSE_NODE(),
+   GEO_END(),
 };
diff --git a/actors/mario/geo_header.h b/actors/mario/geo_header.h
deleted file mode 100644
index a2cbbf99..00000000
--- a/actors/mario/geo_header.h
+++ /dev/null
@@ -1,224 +0,0 @@
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7[];
-extern const GeoLayout mario_armature_002_switch_option_002[];
-extern const GeoLayout mario_right_hand_open_armature[];
-extern const GeoLayout mario_left_hand_open_armature[];
-extern const GeoLayout mario_left_hand_peace_armature[];
-extern const GeoLayout mario_left_hand_cap_armature[];
-extern const GeoLayout mario_left_hand_wing_cap_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_armature_002_switch_option_002[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_right_hand_open_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_open_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_peace_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_cap_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_jump_mario_left_hand_wing_cap_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt1[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_armature_002_switch_option_002[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_right_hand_open_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_open_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_peace_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_cap_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt2_jump_mario_left_hand_wing_cap_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt2[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_armature_002_switch_option_002[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_right_hand_open_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_open_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_peace_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_cap_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt3_jump_mario_left_hand_wing_cap_armature[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt3[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6[];
-extern const GeoLayout mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7[];
-extern const GeoLayout mario_geo[];
-extern Lights1 mario_body_v3_lights;
-extern Lights1 mario_cap_v3_lights;
-extern Lights1 mario_face_0___eye_open_v3_001_lights;
-extern Lights1 mario_mustache_v3_001_lights;
-extern Lights1 mario_hair_v3_001_lights;
-extern Lights1 mario_sideburns_v3_001_lights;
-extern Lights1 mario_face_1___eye_half_v3_001_lights;
-extern Lights1 mario_face_2___eye_closed_v3_001_lights;
-extern Lights1 mario_face_7___eye_X_v3_001_lights;
-extern Lights1 mario_gloves_v3_001_lights;
-extern Lights1 mario_shoes_v3_001_lights;
-extern u8 mario_mario_button_rgba16[];
-extern u8 mario_metal_rgba16[];
-extern u8 mario_mario_cap_rgba16[];
-extern u8 mario_mario_face_1_rgba16[];
-extern u8 mario_mario_mustache_rgba16[];
-extern u8 mario_mario_sideburn_rgba16[];
-extern u8 mario_mario_face_2_rgba16[];
-extern u8 mario_mario_face_3_rgba16[];
-extern u8 mario_mario_face_4_rgba16[];
-extern u8 mario_wing_2_rgba16[];
-extern u8 mario_wing1_rgba16[];
-extern Vtx mario_000_offset_mesh_layer_1_vtx_0[76];
-extern Gfx mario_000_offset_mesh_layer_1_tri_0[];
-extern Vtx mario_000_offset_001_mesh_layer_1_vtx_0[118];
-extern Gfx mario_000_offset_001_mesh_layer_1_tri_0[];
-extern Vtx mario_000_offset_001_mesh_layer_1_vtx_1[23];
-extern Gfx mario_000_offset_001_mesh_layer_1_tri_1[];
-extern Vtx mario_000_displaylist_mesh_layer_1_vtx_0[99];
-extern Gfx mario_000_displaylist_mesh_layer_1_tri_0[];
-extern Vtx mario_000_displaylist_mesh_layer_1_vtx_1[27];
-extern Gfx mario_000_displaylist_mesh_layer_1_tri_1[];
-extern Vtx mario_000_displaylist_mesh_layer_1_vtx_2[28];
-extern Gfx mario_000_displaylist_mesh_layer_1_tri_2[];
-extern Vtx mario_000_displaylist_mesh_layer_1_vtx_3[12];
-extern Gfx mario_000_displaylist_mesh_layer_1_tri_3[];
-extern Vtx mario_000_displaylist_mesh_layer_1_vtx_4[57];
-extern Gfx mario_000_displaylist_mesh_layer_1_tri_4[];
-extern Vtx mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0[103];
-extern Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0[];
-extern Vtx mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_1[30];
-extern Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1[];
-extern Vtx mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_2[12];
-extern Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2[];
-extern Vtx mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3[92];
-extern Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3[];
-extern Vtx mario_000_displaylist_001_mesh_layer_4_vtx_0[4];
-extern Gfx mario_000_displaylist_001_mesh_layer_4_tri_0[];
-extern Vtx mario_000_displaylist_001_mesh_layer_4_vtx_1[4];
-extern Gfx mario_000_displaylist_001_mesh_layer_4_tri_1[];
-extern Vtx mario_000_displaylist_002_mesh_layer_4_vtx_0[4];
-extern Gfx mario_000_displaylist_002_mesh_layer_4_tri_0[];
-extern Vtx mario_000_displaylist_002_mesh_layer_4_vtx_1[4];
-extern Gfx mario_000_displaylist_002_mesh_layer_4_tri_1[];
-extern Vtx mario_000_offset_003_mesh_layer_1_vtx_0[31];
-extern Gfx mario_000_offset_003_mesh_layer_1_tri_0[];
-extern Vtx mario_000_offset_004_mesh_layer_1_vtx_0[16];
-extern Gfx mario_000_offset_004_mesh_layer_1_tri_0[];
-extern Vtx mario_000_displaylist_003_mesh_layer_1_vtx_0[46];
-extern Gfx mario_000_displaylist_003_mesh_layer_1_tri_0[];
-extern Vtx mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0[58];
-extern Gfx mario_002_switch_option_right_hand_open_mesh_layer_1_tri_0[];
-extern Vtx mario_000_offset_006_mesh_layer_1_vtx_0[28];
-extern Gfx mario_000_offset_006_mesh_layer_1_tri_0[];
-extern Vtx mario_000_offset_007_mesh_layer_1_vtx_0[16];
-extern Gfx mario_000_offset_007_mesh_layer_1_tri_0[];
-extern Vtx mario_000_displaylist_004_mesh_layer_1_vtx_0[36];
-extern Gfx mario_000_displaylist_004_mesh_layer_1_tri_0[];
-extern Vtx mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0[57];
-extern Gfx mario_002_switch_option_left_hand_open_mesh_layer_1_tri_0[];
-extern Vtx mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0[73];
-extern Gfx mario_004_switch_option_left_hand_peace_mesh_layer_1_tri_0[];
-extern Vtx mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0[59];
-extern Gfx mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_0[];
-extern Vtx mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_1[36];
-extern Gfx mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_1[];
-extern Vtx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0[59];
-extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_0[];
-extern Vtx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_1[36];
-extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_1[];
-extern Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_0[8];
-extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_0[];
-extern Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_1[8];
-extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_1[];
-extern Vtx mario_000_offset_009_mesh_layer_1_vtx_0[22];
-extern Gfx mario_000_offset_009_mesh_layer_1_tri_0[];
-extern Vtx mario_000_offset_010_mesh_layer_1_vtx_0[12];
-extern Gfx mario_000_offset_010_mesh_layer_1_tri_0[];
-extern Vtx mario_000_offset_011_mesh_layer_1_vtx_0[29];
-extern Gfx mario_000_offset_011_mesh_layer_1_tri_0[];
-extern Vtx mario_000_offset_012_mesh_layer_1_vtx_0[22];
-extern Gfx mario_000_offset_012_mesh_layer_1_tri_0[];
-extern Vtx mario_000_offset_013_mesh_layer_1_vtx_0[12];
-extern Gfx mario_000_offset_013_mesh_layer_1_tri_0[];
-extern Vtx mario_000_displaylist_005_mesh_layer_1_vtx_0[28];
-extern Gfx mario_000_displaylist_005_mesh_layer_1_tri_0[];
-extern Gfx mat_mario_body_v3[];
-extern Gfx mat_mario_metal_v3_001[];
-extern Gfx mat_revert_mario_metal_v3_001[];
-extern Gfx mat_mario_cap_v3[];
-extern Gfx mat_mario_face_0___eye_open_v3_001[];
-extern Gfx mat_mario_mustache_v3_001[];
-extern Gfx mat_mario_hair_v3_001[];
-extern Gfx mat_mario_sideburns_v3_001[];
-extern Gfx mat_mario_face_1___eye_half_v3_001[];
-extern Gfx mat_mario_face_2___eye_closed_v3_001[];
-extern Gfx mat_mario_face_7___eye_X_v3_001[];
-extern Gfx mat_mario_wing_2_v3_001[];
-extern Gfx mat_revert_mario_wing_2_v3_001[];
-extern Gfx mat_mario_wing_1_v3_001[];
-extern Gfx mat_revert_mario_wing_1_v3_001[];
-extern Gfx mat_mario_gloves_v3_001[];
-extern Gfx mat_mario_shoes_v3_001[];
-extern Gfx mario_000_offset_mesh_layer_1[];
-extern Gfx mario_000_offset_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_offset_001_mesh_layer_1[];
-extern Gfx mario_000_offset_001_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_displaylist_mesh_layer_1[];
-extern Gfx mario_000_displaylist_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_displaylist_mesh_layer_1_mat_override_face_1___eye_half_v3_001_1[];
-extern Gfx mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2[];
-extern Gfx mario_000_displaylist_mesh_layer_1_mat_override_face_7___eye_X_v3_001_3[];
-extern Gfx mario_002_switch_option_head__no_cap__mesh_layer_1[];
-extern Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_1___eye_half_v3_001_1[];
-extern Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2[];
-extern Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_7___eye_X_v3_001_3[];
-extern Gfx mario_000_displaylist_001_mesh_layer_4[];
-extern Gfx mario_000_displaylist_001_mesh_layer_4_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_displaylist_002_mesh_layer_4[];
-extern Gfx mario_000_displaylist_002_mesh_layer_4_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_offset_003_mesh_layer_1[];
-extern Gfx mario_000_offset_003_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_offset_004_mesh_layer_1[];
-extern Gfx mario_000_offset_004_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_displaylist_003_mesh_layer_1[];
-extern Gfx mario_000_displaylist_003_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_002_switch_option_right_hand_open_mesh_layer_1[];
-extern Gfx mario_002_switch_option_right_hand_open_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_offset_006_mesh_layer_1[];
-extern Gfx mario_000_offset_006_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_offset_007_mesh_layer_1[];
-extern Gfx mario_000_offset_007_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_displaylist_004_mesh_layer_1[];
-extern Gfx mario_000_displaylist_004_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_002_switch_option_left_hand_open_mesh_layer_1[];
-extern Gfx mario_002_switch_option_left_hand_open_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_004_switch_option_left_hand_peace_mesh_layer_1[];
-extern Gfx mario_004_switch_option_left_hand_peace_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_005_switch_option_left_hand_cap_mesh_layer_1[];
-extern Gfx mario_005_switch_option_left_hand_cap_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1[];
-extern Gfx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4[];
-extern Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_offset_009_mesh_layer_1[];
-extern Gfx mario_000_offset_009_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_offset_010_mesh_layer_1[];
-extern Gfx mario_000_offset_010_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_offset_011_mesh_layer_1[];
-extern Gfx mario_000_offset_011_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_offset_012_mesh_layer_1[];
-extern Gfx mario_000_offset_012_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_offset_013_mesh_layer_1[];
-extern Gfx mario_000_offset_013_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_000_displaylist_005_mesh_layer_1[];
-extern Gfx mario_000_displaylist_005_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx mario_material_revert_render_settings[];
diff --git a/actors/mario/model.inc.c b/actors/mario/model.inc.c
index b7b3c67c..a25a3b7f 100644
--- a/actors/mario/model.inc.c
+++ b/actors/mario/model.inc.c
@@ -1,7413 +1,6825 @@
-Lights1 mario_body_v3_lights = gdSPDefLights1(
-	0x0, 0x0, 0x7F,
-	0x0, 0x0, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 mario_cap_v3_lights = gdSPDefLights1(
-	0x7F, 0x0, 0x0,
-	0xFF, 0x0, 0x0, 0x28, 0x28, 0x28);
-
-Lights1 mario_face_0___eye_open_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 mario_mustache_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 mario_hair_v3_001_lights = gdSPDefLights1(
-	0x36, 0x1, 0x0,
-	0x73, 0x6, 0x0, 0x28, 0x28, 0x28);
-
-Lights1 mario_sideburns_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 mario_face_1___eye_half_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 mario_face_2___eye_closed_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 mario_face_7___eye_X_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 mario_gloves_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 mario_shoes_v3_001_lights = gdSPDefLights1(
-	0x35, 0x8, 0x3,
-	0x72, 0x1C, 0xE, 0x28, 0x28, 0x28);
-
-Gfx mario_mario_button_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 mario_mario_button_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0x41, 0xf7, 0x01, 0xf7, 0x01, 0xf7, 0x01, 
-	0xf7, 0x01, 0xf6, 0xc1, 0xf7, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0x01, 0xf7, 0x01, 0xf7, 0x41, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x41, 0xf7, 0x01, 0xf7, 0x41, 
-	0xf7, 0x01, 0xf7, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0x81, 0xf7, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x41, 0xf7, 0x01, 0xf7, 0x41, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0x41, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 0xf7, 0x01, 
-	0xf7, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0x41, 0xf7, 0x41, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 
-	0xf6, 0xc1, 0xf7, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x41, 0xf7, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0x41, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x41, 0xf7, 0x41, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0x01, 
-	0xf7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x01, 0xf7, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf6, 0xc1, 
-	0xf7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 0xf7, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf6, 0xc1, 
-	0xf7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf6, 0x81, 0xf6, 0x81, 
-	0xf7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x01, 
-	0xf7, 0x03, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf6, 0x01, 0xf6, 0x41, 
-	0xf6, 0xc1, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x01, 
-	0xf6, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf5, 0xc1, 0xf5, 0xc1, 
-	0xf6, 0x81, 0xf7, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 0xf6, 0xc1, 
-	0xf6, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xed, 0x41, 0xe5, 0x01, 
-	0xf5, 0xc1, 0xf6, 0xc1, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 0xf6, 0xc1, 
-	0xf6, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xe5, 0x01, 0xdc, 0x81, 
-	0xdd, 0x01, 0xf6, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 0xf6, 0x81, 
-	0xf6, 0x81, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xe5, 0x01, 0xdc, 0x81, 
-	0xdc, 0xc1, 0xed, 0x81, 0xf6, 0xc1, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf6, 0xc1, 0xed, 0x81, 
-	0xf6, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xed, 0xc1, 0xdc, 0x81, 
-	0xd4, 0x81, 0xcc, 0x81, 0xdd, 0x41, 0xf7, 0x01, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf6, 0xc1, 0xe5, 0x81, 0xdd, 0x01, 
-	0xf6, 0x07, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe5, 0x41, 
-	0xdc, 0x81, 0xcc, 0x81, 0xc4, 0x81, 0xdd, 0x41, 
-	0xf6, 0xc1, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x01, 
-	0xee, 0x01, 0xdd, 0x41, 0xd4, 0xc1, 0xdd, 0x41, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe5, 0x41, 
-	0xe4, 0xc1, 0xd4, 0x81, 0xc4, 0x41, 0xbc, 0x41, 
-	0xcc, 0xc1, 0xe6, 0x01, 0xf7, 0x41, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf6, 0x81, 0xdd, 0x81, 
-	0xcc, 0xc1, 0xcc, 0x81, 0xd4, 0x81, 0xe5, 0x81, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xed, 0xc1, 
-	0xe4, 0xc1, 0xe4, 0xc1, 0xd4, 0x81, 0xbc, 0x01, 
-	0xb4, 0x01, 0xc4, 0x81, 0xd5, 0x01, 0xee, 0x01, 
-	0xf7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x01, 0xee, 0x41, 
-	0xdd, 0x81, 0xd5, 0x41, 0xcc, 0xc1, 0xc4, 0x81, 
-	0xc4, 0x81, 0xcc, 0x81, 0xdc, 0xc1, 0xf6, 0x05, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf5, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 0xd4, 0x81, 
-	0xbc, 0x01, 0xb4, 0x01, 0xb4, 0x01, 0xbc, 0x41, 
-	0xc4, 0x81, 0xcc, 0xc1, 0xd5, 0x01, 0xd5, 0x41, 
-	0xd5, 0x01, 0xcc, 0xc1, 0xc4, 0x81, 0xbc, 0x41, 
-	0xb4, 0x01, 0xb4, 0x41, 0xbc, 0x41, 0xc4, 0x81, 
-	0xd4, 0x81, 0xdc, 0xc1, 0xf5, 0xc1, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xed, 0x41, 0xe4, 0xc1, 0xe4, 0xc1, 
-	0xd4, 0x81, 0xc4, 0x41, 0xbc, 0x01, 0xb3, 0xc1, 
-	0xab, 0xc1, 0xab, 0xc1, 0xb3, 0xc1, 0xb4, 0x01, 
-	0xb3, 0xc1, 0xb3, 0xc1, 0xb4, 0x01, 0xb4, 0x01, 
-	0xbc, 0x41, 0xcc, 0x81, 0xd4, 0xc1, 0xdc, 0xc1, 
-	0xe5, 0x01, 0xed, 0x41, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xed, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 
-	0xe4, 0xc1, 0xdc, 0xc1, 0xd4, 0x81, 0xcc, 0x81, 
-	0xc4, 0x41, 0xbc, 0x41, 0xbc, 0x41, 0xbc, 0x41, 
-	0xbc, 0x41, 0xc4, 0x81, 0xcc, 0x81, 0xd4, 0xc1, 
-	0xdd, 0x01, 0xe5, 0x01, 0xed, 0x01, 0xed, 0x01, 
-	0xec, 0xc1, 0xf5, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xed, 0xc1, 0xed, 0x41, 
-	0xe4, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 
-	0xdc, 0xc1, 0xdc, 0xc1, 0xdc, 0xc1, 0xdc, 0xc1, 
-	0xe5, 0x01, 0xe5, 0x01, 0xed, 0x41, 0xed, 0x41, 
-	0xf5, 0x41, 0xf5, 0x41, 0xed, 0x01, 0xf5, 0x81, 
-	0xf5, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xed, 0xc1, 0xdc, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 
-	0xe4, 0xc1, 0xe5, 0x01, 0xed, 0x01, 0xed, 0x01, 
-	0xed, 0x01, 0xed, 0x41, 0xf5, 0x41, 0xed, 0x01, 
-	0xed, 0x01, 0xed, 0x01, 0xf6, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xed, 0xc1, 0xe5, 0x01, 0xe5, 0x01, 
-	0xe4, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 
-	0xe4, 0xc1, 0xe4, 0xc1, 0xec, 0xc1, 0xed, 0x41, 
-	0xed, 0x41, 0xf5, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xed, 0xc1, 0xe5, 0x01, 0xed, 0x41, 0xed, 0x41, 
-	0xed, 0x41, 0xed, 0x41, 0xf5, 0xc1, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx mario_metal_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 mario_metal_rgba16[] = {
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x01, 0x08, 0x43, 0x10, 0x43, 0x08, 0x43, 
-	0x08, 0x43, 0x08, 0x43, 0x18, 0x85, 0x10, 0x83, 
-	0x08, 0x43, 0x08, 0x01, 0x00, 0x03, 0x08, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x03, 0x08, 0x41, 0x08, 0x43, 
-	0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x10, 0x43, 
-	0x10, 0x85, 0x10, 0x43, 0x18, 0x85, 0x10, 0x85, 
-	0x10, 0x43, 0x10, 0x43, 0x10, 0x85, 0x21, 0x07, 
-	0x31, 0x49, 0x31, 0x4b, 0x31, 0x47, 0x31, 0x49, 
-	0x29, 0x07, 0x20, 0xc7, 0x18, 0x83, 0x10, 0x43, 
-	0x08, 0x41, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x43, 0x10, 0x85, 0x18, 0xc7, 
-	0x21, 0x07, 0x18, 0xc7, 0x10, 0x83, 0x18, 0x85, 
-	0x18, 0x85, 0x18, 0x87, 0x18, 0x87, 0x10, 0x87, 
-	0x08, 0x45, 0x10, 0x87, 0x10, 0x87, 0x10, 0x43, 
-	0x00, 0x03, 0x08, 0x43, 0x00, 0x03, 0x08, 0x43, 
-	0x00, 0x01, 0x10, 0x43, 0x08, 0x43, 0x10, 0xc5, 
-	0x20, 0x85, 0x19, 0x07, 0x20, 0xc5, 0x29, 0x07, 
-	0x29, 0x05, 0x20, 0xc5, 0x10, 0x43, 0x10, 0x43, 
-	0x08, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x43, 0x10, 0x45, 0x21, 0x49, 
-	0x39, 0x8d, 0x31, 0x8b, 0x31, 0x4b, 0x29, 0x49, 
-	0x18, 0x87, 0x10, 0x83, 0x08, 0x43, 0x08, 0x01, 
-	0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 0x00, 0x41, 
-	0x00, 0x01, 0x08, 0x03, 0x10, 0x03, 0x08, 0x03, 
-	0x00, 0x01, 0x08, 0x43, 0x00, 0x41, 0x00, 0x03, 
-	0x00, 0x01, 0x00, 0x01, 0x08, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x08, 0x41, 
-	0x00, 0x01, 0x10, 0x83, 0x10, 0x43, 0x10, 0x83, 
-	0x20, 0x85, 0x20, 0x85, 0x10, 0x83, 0x08, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x08, 0x43, 
-	0x29, 0x4b, 0x63, 0x19, 0x62, 0x95, 0x41, 0xcd, 
-	0x28, 0xc7, 0x28, 0xc9, 0x18, 0x83, 0x08, 0x43, 
-	0x08, 0x43, 0x10, 0x41, 0x08, 0x03, 0x10, 0x01, 
-	0x08, 0x01, 0x08, 0x01, 0x08, 0x43, 0x10, 0x03, 
-	0x18, 0x03, 0x20, 0x85, 0x10, 0x01, 0x08, 0x01, 
-	0x08, 0x01, 0x08, 0x03, 0x20, 0x43, 0x10, 0x43, 
-	0x10, 0x03, 0x08, 0x01, 0x00, 0x01, 0x08, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x08, 0x43, 0x08, 0x43, 
-	0x00, 0x01, 0x10, 0x43, 0x28, 0xc5, 0x31, 0x09, 
-	0x20, 0x85, 0x08, 0x43, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x43, 0x21, 0x09, 0x4a, 0x51, 
-	0x62, 0xd3, 0x72, 0xd7, 0x5a, 0x13, 0x69, 0xd3, 
-	0x49, 0x4f, 0x28, 0x87, 0x10, 0x41, 0x08, 0x01, 
-	0x08, 0x01, 0x08, 0x01, 0x08, 0x01, 0x08, 0x01, 
-	0x10, 0x01, 0x08, 0x03, 0x10, 0x01, 0x18, 0x03, 
-	0x20, 0x45, 0x48, 0x89, 0x28, 0x43, 0x08, 0x01, 
-	0x10, 0x03, 0x10, 0x41, 0x18, 0x03, 0x10, 0x03, 
-	0x10, 0x01, 0x08, 0x01, 0x10, 0x01, 0x08, 0x01, 
-	0x10, 0x01, 0x08, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x10, 0x41, 0x08, 0x41, 0x08, 0x43, 
-	0x08, 0x41, 0x08, 0x01, 0x08, 0x43, 0x20, 0x83, 
-	0x31, 0x09, 0x38, 0xc9, 0x20, 0x87, 0x00, 0x41, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x18, 0x85, 0x52, 0x95, 0x83, 0x5b, 0x82, 0x97, 
-	0x7a, 0x57, 0x93, 0x61, 0x9b, 0xa5, 0x93, 0xa5, 
-	0x6a, 0x17, 0x40, 0xcb, 0x10, 0x43, 0x08, 0x01, 
-	0x08, 0x01, 0x00, 0x01, 0x08, 0x01, 0x08, 0x01, 
-	0x08, 0x01, 0x10, 0x03, 0x10, 0x01, 0x08, 0x03, 
-	0x10, 0x43, 0x20, 0x03, 0x08, 0x43, 0x08, 0x01, 
-	0x08, 0x01, 0x08, 0x43, 0x18, 0x03, 0x10, 0x43, 
-	0x08, 0x01, 0x10, 0x01, 0x08, 0x01, 0x08, 0x01, 
-	0x10, 0x01, 0x10, 0x03, 0x10, 0x41, 0x00, 0x01, 
-	0x08, 0x03, 0x18, 0x81, 0x18, 0x83, 0x21, 0x03, 
-	0x31, 0x05, 0x18, 0x81, 0x08, 0x43, 0x18, 0xc3, 
-	0x31, 0x09, 0x39, 0x8b, 0x31, 0x07, 0x39, 0x0b, 
-	0x18, 0x85, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x28, 0xc7, 
-	0x62, 0x13, 0x8a, 0x57, 0x92, 0x59, 0x91, 0xd3, 
-	0xac, 0x27, 0xbd, 0x33, 0xb4, 0xad, 0x9c, 0x27, 
-	0x49, 0x51, 0x10, 0x01, 0x00, 0x03, 0x08, 0x01, 
-	0x08, 0x41, 0x08, 0x01, 0x00, 0x01, 0x08, 0x01, 
-	0x08, 0x01, 0x08, 0x01, 0x08, 0x01, 0x08, 0x03, 
-	0x08, 0x01, 0x00, 0x01, 0x08, 0x03, 0x08, 0x03, 
-	0x08, 0x01, 0x00, 0x41, 0x00, 0x03, 0x00, 0x01, 
-	0x08, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x01, 0x00, 0x01, 0x08, 0x41, 0x08, 0x01, 
-	0x28, 0xc7, 0x6a, 0xd1, 0x52, 0x0b, 0x39, 0x87, 
-	0x31, 0x03, 0x39, 0x45, 0x41, 0xc9, 0x31, 0x85, 
-	0x41, 0xc9, 0x5a, 0x8d, 0x41, 0x8b, 0x21, 0x07, 
-	0x51, 0x8f, 0x39, 0x0b, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x01, 0x39, 0x4d, 0x79, 0xd7, 
-	0x92, 0x13, 0xa3, 0x13, 0xab, 0x93, 0xb3, 0xdf, 
-	0xb4, 0xad, 0xa4, 0x6b, 0x6a, 0x9d, 0x39, 0x4d, 
-	0x18, 0x45, 0x20, 0x87, 0x39, 0x0d, 0x28, 0x87, 
-	0x41, 0x4f, 0x20, 0x85, 0x10, 0x03, 0x00, 0x01, 
-	0x08, 0x01, 0x10, 0x41, 0x00, 0x03, 0x08, 0x01, 
-	0x00, 0x01, 0x00, 0x43, 0x08, 0x03, 0x10, 0x03, 
-	0x00, 0x41, 0x00, 0x03, 0x08, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x01, 0x10, 0x81, 0x18, 0xc3, 
-	0x20, 0xc3, 0x49, 0xc9, 0x52, 0x4b, 0x52, 0x4b, 
-	0x5a, 0x8d, 0x7b, 0x53, 0x94, 0x15, 0x83, 0x95, 
-	0x41, 0x87, 0x4a, 0x47, 0x4a, 0x47, 0x20, 0x85, 
-	0x18, 0x85, 0x49, 0x4d, 0x41, 0x09, 0x08, 0x43, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x43, 0x41, 0x0b, 0x8a, 0x17, 0x9a, 0x5b, 
-	0xb4, 0x19, 0xc4, 0x9d, 0xab, 0xa1, 0x9b, 0xa5, 
-	0x49, 0x91, 0x28, 0x89, 0x08, 0x43, 0x08, 0x01, 
-	0x20, 0x87, 0x82, 0xe1, 0xb4, 0xb1, 0x93, 0xa3, 
-	0x93, 0x63, 0x82, 0xdd, 0x38, 0x87, 0x31, 0x0b, 
-	0x20, 0x87, 0x10, 0x83, 0x08, 0x01, 0x08, 0x43, 
-	0x20, 0x47, 0x20, 0xcb, 0x10, 0x89, 0x10, 0x87, 
-	0x08, 0x45, 0x08, 0x03, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x41, 0x20, 0xc3, 0x28, 0xc3, 
-	0x31, 0x05, 0x41, 0xc7, 0x62, 0xcd, 0x8b, 0xd5, 
-	0x6b, 0x11, 0x5a, 0x8d, 0x8c, 0x13, 0x8b, 0xd5, 
-	0x7b, 0x53, 0x52, 0x09, 0x39, 0xc7, 0x18, 0xc3, 
-	0x08, 0x41, 0x21, 0x09, 0x6a, 0x11, 0x51, 0x8b, 
-	0x08, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x08, 0x43, 
-	0x49, 0x0b, 0x81, 0xd9, 0x92, 0x19, 0xb4, 0x25, 
-	0xbc, 0x25, 0xa3, 0x65, 0x9a, 0xa1, 0x72, 0x9b, 
-	0x5a, 0x13, 0x49, 0xd3, 0x31, 0x0d, 0x18, 0x43, 
-	0x59, 0xd7, 0xb4, 0xaf, 0xc5, 0x75, 0xbc, 0xab, 
-	0xac, 0xab, 0x9b, 0x63, 0x92, 0xdd, 0x61, 0xd3, 
-	0x18, 0x85, 0x10, 0x01, 0x08, 0x43, 0x10, 0x83, 
-	0x18, 0x87, 0x18, 0x85, 0x10, 0x85, 0x08, 0x45, 
-	0x08, 0x41, 0x08, 0x03, 0x08, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x43, 0x00, 0x01, 0x08, 0x43, 
-	0x00, 0x01, 0x00, 0x01, 0x18, 0x81, 0x20, 0xc5, 
-	0x29, 0x43, 0x52, 0x0b, 0x93, 0xd7, 0x94, 0x57, 
-	0x94, 0x15, 0x8b, 0xd3, 0x7b, 0x91, 0x9c, 0x97, 
-	0xa4, 0x97, 0x73, 0x0d, 0x21, 0x45, 0x10, 0x83, 
-	0x00, 0x03, 0x08, 0x41, 0x31, 0x4b, 0x6a, 0x11, 
-	0x41, 0x49, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x30, 0xc9, 
-	0x81, 0xd7, 0x9a, 0x5f, 0xa3, 0x25, 0xb3, 0xe5, 
-	0xa2, 0xa3, 0x9a, 0xa3, 0xac, 0xab, 0x94, 0xab, 
-	0x94, 0xa9, 0x83, 0xa3, 0x72, 0x9b, 0x7a, 0x19, 
-	0x92, 0xdf, 0xb4, 0x2b, 0xc4, 0x9f, 0xab, 0x4d, 
-	0xa3, 0x19, 0x92, 0x9f, 0x79, 0x93, 0x40, 0xc7, 
-	0x4a, 0x0d, 0x39, 0x8d, 0x41, 0xcd, 0x52, 0x93, 
-	0x31, 0x8d, 0x18, 0x85, 0x10, 0x83, 0x10, 0x83, 
-	0x08, 0x01, 0x21, 0x07, 0x29, 0x07, 0x21, 0x07, 
-	0x08, 0x43, 0x00, 0x01, 0x08, 0x01, 0x08, 0x43, 
-	0x18, 0xc5, 0x18, 0x83, 0x31, 0x47, 0x5a, 0x8b, 
-	0x42, 0x07, 0x41, 0xc5, 0x39, 0x87, 0x5a, 0x4b, 
-	0x83, 0xd5, 0x94, 0x53, 0x94, 0x53, 0xac, 0xdb, 
-	0xa4, 0x97, 0x94, 0x53, 0x52, 0x8d, 0x10, 0x43, 
-	0x10, 0x83, 0x00, 0x41, 0x08, 0x03, 0x29, 0x07, 
-	0x6a, 0x15, 0x20, 0xc7, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x10, 0x43, 0x61, 0x0f, 
-	0x92, 0x5f, 0xb3, 0xa9, 0xab, 0x1f, 0xab, 0x11, 
-	0xa3, 0x21, 0xb4, 0xaf, 0xad, 0xb5, 0xad, 0x75, 
-	0xad, 0xb5, 0xb5, 0x73, 0xa3, 0xa9, 0x92, 0x5f, 
-	0x9a, 0x61, 0xbc, 0x2b, 0xc4, 0xdd, 0xbc, 0x53, 
-	0xb3, 0xdf, 0x9a, 0x19, 0x79, 0x4f, 0x79, 0x8f, 
-	0x9c, 0xa5, 0x7b, 0xdb, 0x73, 0x19, 0x63, 0x17, 
-	0x42, 0x11, 0x10, 0x83, 0x10, 0x85, 0x18, 0x43, 
-	0x31, 0x4b, 0x52, 0x91, 0x41, 0xcd, 0x19, 0x05, 
-	0x08, 0x43, 0x18, 0x43, 0x20, 0x43, 0x18, 0x85, 
-	0x42, 0x0f, 0x51, 0xcb, 0x20, 0xc5, 0x31, 0x45, 
-	0x21, 0x43, 0x20, 0xc3, 0x19, 0x05, 0x10, 0x83, 
-	0x21, 0x03, 0x62, 0xcf, 0x9c, 0x95, 0xac, 0xdb, 
-	0xbd, 0x61, 0xad, 0x1d, 0x94, 0x57, 0x39, 0x89, 
-	0x39, 0x09, 0x30, 0x87, 0x08, 0x43, 0x10, 0x43, 
-	0x41, 0x8f, 0x59, 0x91, 0x00, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x28, 0x87, 0x79, 0x0f, 
-	0x9a, 0xa3, 0xa3, 0x65, 0xa2, 0x9f, 0xa2, 0x9f, 
-	0xab, 0xe7, 0xad, 0x35, 0xa5, 0x73, 0xa5, 0x75, 
-	0xad, 0x75, 0xbd, 0x73, 0xab, 0x67, 0x9a, 0x19, 
-	0xab, 0x57, 0xab, 0xa3, 0xbc, 0x69, 0xb3, 0xe5, 
-	0x9a, 0x61, 0x91, 0x53, 0x89, 0x93, 0x9a, 0xdf, 
-	0x93, 0x61, 0x73, 0x59, 0x5a, 0x93, 0x73, 0x5b, 
-	0x39, 0xcf, 0x10, 0x83, 0x08, 0x43, 0x08, 0x43, 
-	0x39, 0x8b, 0x41, 0xcb, 0x39, 0x89, 0x18, 0x85, 
-	0x31, 0x49, 0x29, 0x07, 0x28, 0x87, 0x08, 0x41, 
-	0x20, 0xc7, 0x28, 0xc7, 0x08, 0x83, 0x00, 0x03, 
-	0x00, 0x01, 0x00, 0x01, 0x10, 0x83, 0x28, 0x87, 
-	0x39, 0x07, 0x31, 0x47, 0x83, 0x93, 0x9c, 0x99, 
-	0xac, 0xdf, 0xa4, 0x9f, 0x94, 0x99, 0x62, 0xcf, 
-	0x51, 0x89, 0x39, 0x09, 0x08, 0x03, 0x08, 0x43, 
-	0x10, 0x83, 0x51, 0x91, 0x18, 0x47, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x03, 0x48, 0x87, 0x81, 0x4f, 
-	0x81, 0xdb, 0x92, 0x5d, 0x92, 0x5f, 0x72, 0x5b, 
-	0x8b, 0xe5, 0x94, 0xb1, 0x94, 0xad, 0x94, 0xf1, 
-	0x94, 0xf1, 0x94, 0x69, 0x92, 0x61, 0x9a, 0x5d, 
-	0xaa, 0xdb, 0x9a, 0x9f, 0xab, 0xa9, 0xab, 0xa7, 
-	0xab, 0x65, 0x91, 0xdb, 0x91, 0x99, 0x9a, 0xe1, 
-	0x79, 0x95, 0x49, 0x0b, 0x28, 0xc5, 0x18, 0xc7, 
-	0x10, 0x83, 0x00, 0x01, 0x08, 0x03, 0x18, 0x87, 
-	0x59, 0x8b, 0x82, 0x8f, 0x82, 0x91, 0x72, 0x13, 
-	0x7a, 0x95, 0x93, 0x5b, 0x8b, 0x1d, 0x41, 0x4d, 
-	0x20, 0xc5, 0x29, 0x07, 0x10, 0x85, 0x08, 0x01, 
-	0x00, 0x43, 0x00, 0x01, 0x10, 0x43, 0x30, 0xc9, 
-	0x41, 0x09, 0x52, 0x07, 0x6b, 0x0d, 0x94, 0x17, 
-	0x94, 0x9b, 0x9c, 0x9d, 0x94, 0x5b, 0x8b, 0xd3, 
-	0x7b, 0x4d, 0x49, 0xc9, 0x08, 0x83, 0x08, 0x01, 
-	0x08, 0x43, 0x28, 0x87, 0x20, 0x87, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x03, 0x58, 0xc9, 0x89, 0xd3, 
-	0x69, 0x93, 0x28, 0x89, 0x30, 0xc9, 0x18, 0x87, 
-	0x49, 0x91, 0x4a, 0x17, 0x31, 0xd3, 0x39, 0xd5, 
-	0x5a, 0x59, 0x39, 0x51, 0x28, 0xc9, 0x51, 0x51, 
-	0x51, 0x11, 0x69, 0xd5, 0x61, 0x95, 0x82, 0x5b, 
-	0x9a, 0xe5, 0x91, 0x97, 0x81, 0x0d, 0x70, 0xc9, 
-	0x70, 0xcd, 0x68, 0xcf, 0x41, 0x09, 0x18, 0x85, 
-	0x08, 0x43, 0x08, 0x03, 0x00, 0x43, 0x10, 0x45, 
-	0x38, 0x89, 0x61, 0x4d, 0x61, 0x4d, 0x61, 0x51, 
-	0x82, 0x59, 0x93, 0x5b, 0x8a, 0xdb, 0x31, 0x09, 
-	0x00, 0x01, 0x08, 0x43, 0x10, 0x43, 0x08, 0x43, 
-	0x08, 0x83, 0x18, 0x45, 0x20, 0x87, 0x29, 0x07, 
-	0x6a, 0x91, 0x9c, 0x99, 0xac, 0x99, 0xac, 0xdd, 
-	0xbd, 0x69, 0xac, 0xe1, 0xbd, 0xa7, 0xb5, 0x23, 
-	0xbc, 0xdd, 0x94, 0x5d, 0x41, 0x49, 0x20, 0xc7, 
-	0x08, 0x45, 0x20, 0x83, 0x10, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x03, 0x50, 0x87, 0x92, 0x17, 
-	0x51, 0x93, 0x08, 0x01, 0x08, 0x43, 0x08, 0x03, 
-	0x10, 0x45, 0x10, 0x45, 0x19, 0x0b, 0x10, 0x45, 
-	0x18, 0x45, 0x08, 0x45, 0x08, 0x43, 0x08, 0x43, 
-	0x10, 0x45, 0x08, 0x03, 0x10, 0x45, 0x41, 0x0d, 
-	0x93, 0x25, 0x92, 0x1b, 0x89, 0x4d, 0x70, 0xc9, 
-	0x78, 0xcf, 0x79, 0x11, 0x61, 0x11, 0x20, 0x85, 
-	0x10, 0x05, 0x00, 0x41, 0x08, 0x03, 0x08, 0x01, 
-	0x08, 0x03, 0x31, 0x05, 0x41, 0x45, 0x31, 0x07, 
-	0x20, 0x85, 0x28, 0xc7, 0x20, 0xc7, 0x10, 0x43, 
-	0x08, 0x01, 0x00, 0x41, 0x18, 0x87, 0x10, 0x83, 
-	0x20, 0x87, 0x59, 0x8f, 0x9b, 0xe3, 0x83, 0x5d, 
-	0x8b, 0x5b, 0xb5, 0x27, 0xc5, 0xab, 0xc5, 0xa5, 
-	0xc5, 0xa5, 0xc5, 0xa9, 0xc5, 0xa5, 0xc5, 0x65, 
-	0xc5, 0xeb, 0x94, 0x21, 0x82, 0xd9, 0x51, 0x8f, 
-	0x08, 0x83, 0x20, 0x85, 0x08, 0x03, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x03, 0x48, 0x45, 0x81, 0x53, 
-	0x49, 0x4f, 0x10, 0x85, 0x08, 0x45, 0x08, 0x43, 
-	0x10, 0x45, 0x28, 0x89, 0x20, 0xc9, 0x31, 0x09, 
-	0x28, 0x89, 0x18, 0x85, 0x10, 0x45, 0x08, 0x45, 
-	0x10, 0x89, 0x08, 0x85, 0x08, 0x03, 0x10, 0x43, 
-	0x31, 0x09, 0x82, 0x59, 0x92, 0x9f, 0x7a, 0x19, 
-	0x61, 0x51, 0x49, 0x0b, 0x40, 0xc9, 0x28, 0xc9, 
-	0x18, 0x45, 0x08, 0x43, 0x20, 0x43, 0x20, 0x43, 
-	0x18, 0xc7, 0x49, 0x8d, 0x41, 0xc7, 0x31, 0x07, 
-	0x10, 0x83, 0x10, 0x43, 0x10, 0x43, 0x00, 0x41, 
-	0x08, 0x01, 0x08, 0x45, 0x29, 0x07, 0x21, 0x49, 
-	0x41, 0x4b, 0x9b, 0xe3, 0xc5, 0xf5, 0xac, 0xe9, 
-	0xa4, 0x25, 0xb5, 0x6f, 0xc5, 0xb1, 0xce, 0x2d, 
-	0xce, 0x31, 0xce, 0x33, 0xce, 0x2f, 0xcd, 0xeb, 
-	0xbd, 0x6b, 0x9c, 0x65, 0xa4, 0x65, 0x51, 0xd1, 
-	0x10, 0x43, 0x10, 0x43, 0x08, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x38, 0x49, 0x81, 0x53, 
-	0x49, 0x0d, 0x08, 0x45, 0x10, 0x87, 0x10, 0x47, 
-	0x20, 0x87, 0x39, 0x0b, 0x39, 0xcf, 0x39, 0x8d, 
-	0x31, 0x8d, 0x31, 0x0f, 0x28, 0xcb, 0x10, 0x87, 
-	0x10, 0x47, 0x10, 0x85, 0x00, 0x03, 0x08, 0x43, 
-	0x39, 0x8b, 0x5a, 0x8f, 0x5a, 0x4f, 0x31, 0x49, 
-	0x20, 0xc7, 0x30, 0xc7, 0x28, 0xc7, 0x18, 0x85, 
-	0x18, 0x87, 0x20, 0x85, 0x28, 0xc7, 0x41, 0x47, 
-	0x52, 0x11, 0x62, 0x93, 0x31, 0xcb, 0x39, 0x8b, 
-	0x18, 0xc5, 0x20, 0x85, 0x10, 0x83, 0x08, 0x43, 
-	0x00, 0x01, 0x08, 0x43, 0x20, 0xc5, 0x41, 0xcd, 
-	0x52, 0x53, 0x94, 0xa5, 0xad, 0x2b, 0xad, 0x2d, 
-	0xb5, 0xb3, 0xce, 0x37, 0xd6, 0x7b, 0xd6, 0xbb, 
-	0xd6, 0xbb, 0xd6, 0xbb, 0xd6, 0xbb, 0xce, 0x35, 
-	0xb5, 0x6f, 0xac, 0xa9, 0xb5, 0x2f, 0x59, 0xcf, 
-	0x18, 0x87, 0x10, 0x41, 0x08, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x20, 0x47, 0x81, 0xd9, 
-	0x7a, 0x19, 0x18, 0x87, 0x08, 0x43, 0x08, 0x45, 
-	0x20, 0x89, 0x31, 0x91, 0x31, 0x4f, 0x21, 0x4d, 
-	0x21, 0x0f, 0x31, 0xd3, 0x29, 0x51, 0x31, 0x53, 
-	0x29, 0x0d, 0x10, 0x87, 0x08, 0x45, 0x18, 0xc9, 
-	0x39, 0x91, 0x52, 0x51, 0x5a, 0xd3, 0x39, 0x8b, 
-	0x21, 0x09, 0x39, 0x09, 0x39, 0x49, 0x39, 0x4b, 
-	0x29, 0x4f, 0x20, 0x87, 0x18, 0xc5, 0x31, 0x0b, 
-	0x6b, 0x17, 0x7b, 0x5b, 0x62, 0xd3, 0x4a, 0x4d, 
-	0x18, 0xc7, 0x20, 0xc5, 0x20, 0xc7, 0x18, 0xc5, 
-	0x18, 0xc5, 0x20, 0x85, 0x30, 0x87, 0x49, 0xcf, 
-	0x83, 0xe3, 0xad, 0x2f, 0xbd, 0xf5, 0xce, 0x39, 
-	0xd6, 0xbb, 0xd6, 0x7b, 0xce, 0x7b, 0xd6, 0x7b, 
-	0xce, 0xbb, 0xd6, 0x7b, 0xd6, 0xbb, 0xce, 0x7b, 
-	0xb5, 0x2f, 0xad, 0x2b, 0x83, 0xdf, 0x31, 0x09, 
-	0x08, 0x43, 0x10, 0x43, 0x00, 0x41, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x08, 0x03, 0x51, 0x51, 
-	0x8a, 0x9d, 0x41, 0x4b, 0x08, 0x41, 0x10, 0x45, 
-	0x21, 0x0d, 0x29, 0x51, 0x31, 0x95, 0x21, 0x91, 
-	0x18, 0xcd, 0x21, 0x93, 0x29, 0x91, 0x31, 0x95, 
-	0x31, 0x53, 0x29, 0x0d, 0x18, 0xcd, 0x29, 0x4f, 
-	0x29, 0x93, 0x29, 0x51, 0x5a, 0x93, 0x52, 0x51, 
-	0x31, 0x4d, 0x39, 0x4b, 0x31, 0x09, 0x29, 0x4d, 
-	0x21, 0x0b, 0x18, 0xc7, 0x10, 0x43, 0x31, 0x09, 
-	0x6a, 0x97, 0x82, 0xd5, 0x5a, 0x0f, 0x41, 0x8b, 
-	0x29, 0x49, 0x29, 0x09, 0x42, 0x4f, 0x31, 0x4b, 
-	0x29, 0x09, 0x20, 0xc7, 0x31, 0x4d, 0x72, 0xdd, 
-	0xac, 0xef, 0xc6, 0x3b, 0xce, 0x7b, 0xc6, 0x7b, 
-	0xc6, 0x7d, 0xbe, 0x7b, 0xc6, 0x7b, 0xce, 0x7b, 
-	0xc6, 0x7d, 0xce, 0x7b, 0xd6, 0xbb, 0xce, 0x79, 
-	0xac, 0xed, 0x84, 0x61, 0x39, 0x8b, 0x18, 0x45, 
-	0x08, 0x41, 0x08, 0x43, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x18, 0x45, 
-	0x49, 0x4f, 0x59, 0xcf, 0x31, 0x49, 0x10, 0x85, 
-	0x18, 0x87, 0x28, 0xcf, 0x29, 0x93, 0x31, 0x93, 
-	0x29, 0x51, 0x29, 0x8f, 0x29, 0x4f, 0x19, 0x0d, 
-	0x29, 0x51, 0x21, 0x51, 0x29, 0x95, 0x31, 0x93, 
-	0x31, 0xd7, 0x3a, 0x19, 0x52, 0x97, 0x42, 0x0d, 
-	0x31, 0x49, 0x29, 0x47, 0x20, 0x85, 0x21, 0x0b, 
-	0x52, 0x97, 0x31, 0x4d, 0x29, 0x09, 0x28, 0xc9, 
-	0x71, 0xd5, 0x81, 0xd3, 0x61, 0xd3, 0x72, 0x17, 
-	0x59, 0xd3, 0x39, 0x0b, 0x49, 0xcd, 0x42, 0x0f, 
-	0x52, 0x13, 0x39, 0x4f, 0x52, 0x99, 0x9c, 0xf1, 
-	0xa5, 0xf9, 0xa6, 0x3b, 0xad, 0xfb, 0xa5, 0xf9, 
-	0xae, 0x3b, 0xad, 0xfb, 0xb6, 0x39, 0xb6, 0x3b, 
-	0xc6, 0x7b, 0xc6, 0x7d, 0xd6, 0xbb, 0xbd, 0xf5, 
-	0x94, 0x67, 0x52, 0x93, 0x18, 0x85, 0x08, 0x43, 
-	0x08, 0x41, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x18, 0x85, 0x28, 0x87, 0x41, 0x89, 0x4a, 0x4d, 
-	0x21, 0x0b, 0x18, 0x89, 0x28, 0xcd, 0x29, 0x93, 
-	0x21, 0x51, 0x20, 0xcb, 0x21, 0x0b, 0x29, 0x91, 
-	0x39, 0xd7, 0x42, 0x59, 0x42, 0x1b, 0x42, 0x9b, 
-	0x4a, 0x5b, 0x4a, 0x9d, 0x6b, 0x21, 0x83, 0x5f, 
-	0x83, 0x5f, 0x6a, 0x55, 0x41, 0x8d, 0x4a, 0x17, 
-	0x4a, 0x53, 0x49, 0xcf, 0x51, 0xd1, 0x61, 0xd3, 
-	0x61, 0xd3, 0x61, 0xd3, 0x62, 0x59, 0x8b, 0xa5, 
-	0x94, 0x6d, 0x8b, 0xe5, 0x82, 0xdd, 0x7a, 0x9b, 
-	0x8a, 0xa1, 0x73, 0x23, 0x84, 0x6d, 0x85, 0x35, 
-	0x8d, 0x35, 0x85, 0x77, 0x85, 0x37, 0x85, 0x35, 
-	0x85, 0x37, 0x8d, 0x77, 0x9d, 0xb9, 0xae, 0x39, 
-	0xbe, 0x3b, 0xc6, 0x7d, 0xce, 0x79, 0x94, 0x67, 
-	0x42, 0x11, 0x18, 0x85, 0x10, 0x83, 0x18, 0x85, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x43, 0x20, 0x85, 0x39, 0x8b, 
-	0x4a, 0x0f, 0x31, 0x91, 0x29, 0x53, 0x29, 0x51, 
-	0x21, 0x51, 0x29, 0x53, 0x31, 0xd5, 0x63, 0x61, 
-	0xa5, 0x73, 0xa5, 0x73, 0xa5, 0x75, 0xad, 0xb3, 
-	0xb5, 0xb7, 0xb5, 0xf9, 0xbe, 0x37, 0xa5, 0x33, 
-	0xb5, 0xb5, 0xbd, 0x75, 0xa4, 0xf1, 0x83, 0xe5, 
-	0x42, 0x11, 0x59, 0xd7, 0x8b, 0x1f, 0x82, 0xe1, 
-	0x93, 0x65, 0x8b, 0x65, 0x83, 0xe7, 0x84, 0xb1, 
-	0x74, 0xf3, 0x74, 0xf5, 0x74, 0xb1, 0x6c, 0x71, 
-	0x6c, 0xb1, 0x64, 0x71, 0x5c, 0xb1, 0x5c, 0xb1, 
-	0x54, 0x71, 0x54, 0x6f, 0x4c, 0x31, 0x54, 0x6f, 
-	0x5c, 0xb1, 0x85, 0x37, 0x95, 0xb9, 0xa5, 0xf9, 
-	0xb6, 0x39, 0xac, 0xf1, 0x8b, 0xe3, 0x41, 0x8f, 
-	0x18, 0x43, 0x08, 0x83, 0x18, 0x85, 0x08, 0x43, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x08, 0x03, 0x18, 0x83, 
-	0x21, 0x07, 0x41, 0xcf, 0x39, 0xd1, 0x29, 0x4f, 
-	0x21, 0x4f, 0x3a, 0x1b, 0x31, 0xd7, 0x52, 0x9d, 
-	0xad, 0xb5, 0xc6, 0xbd, 0xc6, 0x7d, 0xce, 0xbb, 
-	0xc6, 0x7d, 0xce, 0xbd, 0xc6, 0xbd, 0xce, 0x7b, 
-	0xbe, 0x3b, 0xc6, 0x7d, 0xbd, 0xf9, 0xa4, 0xef, 
-	0x8c, 0x29, 0x73, 0xa5, 0x8c, 0xb1, 0x74, 0xb3, 
-	0x74, 0xb3, 0x6c, 0xf5, 0x64, 0xb1, 0x5c, 0xb3, 
-	0x5c, 0xb1, 0x4c, 0x31, 0x54, 0x6f, 0x4c, 0x2d, 
-	0x43, 0xef, 0x43, 0xeb, 0x3b, 0xad, 0x3b, 0xab, 
-	0x3b, 0x6b, 0x33, 0xab, 0x43, 0xad, 0x4c, 0x6f, 
-	0x6c, 0xb3, 0x85, 0x77, 0x95, 0xb9, 0xa5, 0xb7, 
-	0x94, 0x67, 0x49, 0xd3, 0x28, 0xc9, 0x10, 0x41, 
-	0x10, 0x43, 0x10, 0x43, 0x00, 0x41, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x18, 0x45, 0x20, 0xc7, 0x31, 0x49, 0x39, 0xcd, 
-	0x4a, 0x15, 0x42, 0x5b, 0x3a, 0x17, 0x39, 0xd7, 
-	0x84, 0x69, 0xbe, 0x7b, 0xce, 0x7b, 0xc6, 0xbd, 
-	0xce, 0x7d, 0xce, 0xbd, 0xc6, 0x7d, 0xce, 0xbd, 
-	0xbe, 0x7d, 0xb6, 0x3b, 0xb6, 0x3b, 0xad, 0xf9, 
-	0x9d, 0xf9, 0x8d, 0x77, 0x85, 0x35, 0x7c, 0xf5, 
-	0x64, 0xb3, 0x5c, 0x71, 0x54, 0x6f, 0x4c, 0x2f, 
-	0x4b, 0xed, 0x43, 0xad, 0x43, 0xed, 0x3b, 0x6b, 
-	0x3b, 0xa9, 0x43, 0x6b, 0x3b, 0x6b, 0x33, 0x69, 
-	0x3b, 0xab, 0x3b, 0xed, 0x54, 0x2f, 0x64, 0xb3, 
-	0x84, 0xf3, 0x7c, 0x27, 0x63, 0x63, 0x52, 0x97, 
-	0x31, 0x4b, 0x20, 0xc9, 0x18, 0x83, 0x10, 0x83, 
-	0x10, 0x41, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x01, 0x08, 0x43, 0x28, 0xc7, 
-	0x39, 0x4b, 0x42, 0x11, 0x41, 0xd1, 0x42, 0x51, 
-	0x5a, 0x57, 0x9c, 0xad, 0xbd, 0xf9, 0xbd, 0xf9, 
-	0xc6, 0x79, 0xc6, 0x7d, 0xce, 0x7b, 0xbe, 0xbd, 
-	0xbe, 0x3b, 0xae, 0x3b, 0xa5, 0xf9, 0x9d, 0xb9, 
-	0x95, 0x77, 0x95, 0x77, 0x95, 0x77, 0x85, 0x35, 
-	0x74, 0xb3, 0x64, 0x71, 0x64, 0x71, 0x5c, 0x6f, 
-	0x54, 0x2f, 0x4b, 0xed, 0x43, 0xad, 0x43, 0x69, 
-	0x3b, 0x6b, 0x3b, 0xab, 0x43, 0xed, 0x43, 0xed, 
-	0x4c, 0x2f, 0x6c, 0x71, 0x74, 0x2b, 0x73, 0x65, 
-	0x6a, 0xdd, 0x41, 0x8f, 0x29, 0x49, 0x18, 0xc7, 
-	0x39, 0x49, 0x29, 0x49, 0x10, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x08, 0x03, 
-	0x10, 0x43, 0x20, 0xc5, 0x31, 0x49, 0x31, 0x09, 
-	0x39, 0x49, 0x49, 0xcf, 0x73, 0x1d, 0x94, 0x25, 
-	0xa4, 0xef, 0xb5, 0xb5, 0xc6, 0x3b, 0xbe, 0x7b, 
-	0xbd, 0xfb, 0xb5, 0xf9, 0xa5, 0xf9, 0x9d, 0xf9, 
-	0x95, 0x77, 0x8d, 0x77, 0x8d, 0x37, 0x85, 0x35, 
-	0x6c, 0xb3, 0x64, 0xb1, 0x5c, 0x6f, 0x54, 0x31, 
-	0x4c, 0x2d, 0x43, 0xed, 0x4b, 0xef, 0x4b, 0xed, 
-	0x4c, 0x2f, 0x54, 0x6f, 0x5c, 0xb1, 0x6c, 0x6f, 
-	0x7b, 0xe9, 0x72, 0x9d, 0x62, 0x13, 0x49, 0xd3, 
-	0x4a, 0x0f, 0x31, 0x8b, 0x20, 0xc7, 0x20, 0xc3, 
-	0x10, 0x83, 0x08, 0x03, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x10, 0x43, 0x20, 0xc7, 
-	0x28, 0xc9, 0x29, 0x4b, 0x29, 0x0b, 0x31, 0x4b, 
-	0x31, 0x4d, 0x52, 0x13, 0x7b, 0xa3, 0x94, 0xad, 
-	0x8c, 0x25, 0x73, 0x5f, 0x73, 0x21, 0x7b, 0xa5, 
-	0x84, 0x6b, 0x8c, 0xb3, 0x84, 0xb3, 0x74, 0xf3, 
-	0x74, 0xb3, 0x64, 0xb3, 0x64, 0xb1, 0x64, 0xb1, 
-	0x64, 0xb1, 0x64, 0x71, 0x6c, 0xb1, 0x6c, 0xb3, 
-	0x7c, 0xb3, 0x84, 0xb1, 0x83, 0xe7, 0x62, 0x15, 
-	0x49, 0x8f, 0x39, 0x8b, 0x29, 0x49, 0x18, 0xc5, 
-	0x29, 0x07, 0x18, 0xc7, 0x08, 0x41, 0x08, 0x03, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x43, 0x10, 0x45, 0x18, 0xc7, 0x20, 0x89, 
-	0x20, 0xc7, 0x20, 0xc9, 0x31, 0xcf, 0x52, 0x57, 
-	0x4a, 0x55, 0x41, 0xd1, 0x39, 0x8b, 0x49, 0xd3, 
-	0x62, 0x57, 0x72, 0x99, 0x72, 0x5b, 0x7a, 0x9d, 
-	0x7a, 0xa1, 0x83, 0x61, 0x72, 0x9f, 0x6a, 0x99, 
-	0x72, 0x9d, 0x6a, 0xdd, 0x6a, 0xdd, 0x83, 0x61, 
-	0x7b, 0x1f, 0x62, 0x17, 0x49, 0xcf, 0x41, 0x8d, 
-	0x41, 0xcd, 0x29, 0x47, 0x18, 0x85, 0x08, 0x43, 
-	0x00, 0x41, 0x08, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x01, 0x10, 0x43, 0x10, 0x43, 0x10, 0x85, 
-	0x18, 0x45, 0x20, 0xc5, 0x20, 0xc7, 0x29, 0x09, 
-	0x28, 0xc7, 0x18, 0x85, 0x28, 0xc9, 0x49, 0x8f, 
-	0x61, 0xd3, 0x6a, 0x57, 0x72, 0x55, 0x72, 0x55, 
-	0x6a, 0x53, 0x62, 0x51, 0x5a, 0x51, 0x49, 0xd1, 
-	0x41, 0xcb, 0x21, 0x07, 0x18, 0x85, 0x08, 0x85, 
-	0x08, 0x01, 0x08, 0x43, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x01, 0x00, 0x43, 0x08, 0x01, 0x08, 0x43, 
-	0x10, 0x41, 0x08, 0x03, 0x08, 0x43, 0x18, 0x85, 
-	0x18, 0x85, 0x18, 0xc7, 0x20, 0xc7, 0x18, 0xc7, 
-	0x10, 0x85, 0x10, 0x83, 0x08, 0x43, 0x08, 0x01, 
-	0x00, 0x43, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	
-};
-
-Gfx mario_mario_cap_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 mario_mario_cap_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf6, 0xb5, 
-	0xf5, 0xaf, 0xec, 0xe9, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf5, 0xef, 0xf5, 0x2b, 0xf5, 0x29, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf3, 0xe1, 0xf7, 0xbd, 
-	0xf7, 0x3b, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf5, 0xef, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf7, 0xbd, 
-	0xf3, 0x19, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf0, 0x45, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xee, 0xf7, 
-	0xf0, 0x85, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf5, 0x6d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf2, 0xd9, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf2, 0x11, 0xf1, 0xd1, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf4, 0xa5, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf3, 0x9d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf4, 0x21, 0xf7, 0xbd, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf7, 0xbd, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf5, 0x29, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf6, 0x33, 0xf7, 0xbd, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf4, 0xe7, 0xf7, 0xbd, 0xf2, 0x95, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf1, 0x4b, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf0, 0x87, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0x3b, 0xf4, 0xa5, 
-	0xf4, 0xa5, 0xf7, 0xbd, 0xf7, 0xbd, 0xf6, 0xb5, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf6, 0xf7, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x87, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf2, 0x55, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf4, 0x23, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf2, 0x13, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf3, 0xe1, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf6, 0x75, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf3, 0x9f, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0x7b, 
-	0xf3, 0x9f, 0xf0, 0x03, 0xf0, 0x01, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf0, 0x01, 0xf2, 0x13, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0x7d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbc, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbc, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx mario_mario_face_1_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 mario_mario_face_1_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x87, 0x00, 0x01, 0x08, 0x03, 0x08, 0x01, 
-	0x10, 0x43, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x00, 0x01, 0x18, 0x87, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 
-	0x08, 0x43, 0x08, 0x03, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x01, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x08, 0x01, 0x08, 0x03, 
-	0x10, 0x45, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x29, 0x4b, 0x00, 0x01, 
-	0x41, 0xcf, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x31, 0x8d, 0x00, 0x01, 0x20, 0xc9, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x18, 0x85, 0x08, 0x01, 0x39, 0x8f, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x41, 0xcf, 
-	0x00, 0x01, 0x39, 0x8f, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x03, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x03, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x20, 0xc7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x18, 0x87, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xef, 0xbd, 0xef, 0x7d, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xe7, 0x7d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xb6, 0xbd, 0x3c, 0x3b, 0x33, 0xf9, 0xa6, 0x3d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x44, 0x7b, 0x2b, 0xf9, 0x95, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xc6, 0xfd, 
-	0x2b, 0xb9, 0x1b, 0x77, 0x1b, 0x79, 0x23, 0xb9, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x44, 0x7b, 0x1b, 0x79, 0x1b, 0x79, 0x13, 0x37, 
-	0x95, 0xfd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0x5c, 0xbd, 
-	0x1b, 0x37, 0x23, 0xb9, 0x23, 0x35, 0x12, 0xf5, 
-	0x4c, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x85, 0x7d, 
-	0x12, 0xf5, 0x1b, 0x33, 0x23, 0xb9, 0x1b, 0x79, 
-	0x33, 0xf9, 0xdf, 0x7d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xd7, 0x3d, 0x2b, 0xb9, 
-	0x23, 0xb9, 0x1a, 0xf3, 0x00, 0x93, 0x00, 0x53, 
-	0x1a, 0xaf, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x3b, 0xf5, 
-	0x00, 0xd9, 0x00, 0x4b, 0x12, 0x6b, 0x23, 0xb9, 
-	0x1b, 0x77, 0xa6, 0x3d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x95, 0xfd, 0x1b, 0x79, 
-	0x23, 0xb9, 0x09, 0x1d, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x0b, 0x8d, 0x7d, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x01, 0x1d, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x4f, 0x1b, 0x35, 
-	0x1b, 0x79, 0x6c, 0xfd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x7d, 0x3d, 0x1b, 0x79, 
-	0x1b, 0x33, 0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x5c, 0x33, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x95, 0x7b, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x12, 0x29, 
-	0x23, 0xb9, 0x44, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x64, 0xfd, 0x1b, 0x79, 
-	0x12, 0x2b, 0x00, 0x01, 0x00, 0x01, 0x00, 0x8d, 
-	0x00, 0x01, 0x32, 0xe7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x6c, 0xb3, 0x00, 0x01, 
-	0x00, 0x8f, 0x00, 0x01, 0x00, 0x01, 0x09, 0x63, 
-	0x23, 0x79, 0x33, 0xfb, 0xef, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x54, 0xbb, 0x1b, 0x79, 
-	0x11, 0xe7, 0x00, 0x01, 0x21, 0xdd, 0xce, 0xbd, 
-	0x6c, 0x2f, 0x19, 0xe1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x53, 0xed, 0x32, 0x61, 
-	0xce, 0xbd, 0x53, 0xa9, 0x00, 0x01, 0x09, 0x1d, 
-	0x23, 0x79, 0x2b, 0xb9, 0xdf, 0x3d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x44, 0x7b, 0x23, 0x79, 
-	0x09, 0xe5, 0x00, 0x01, 0x5b, 0xeb, 0xf7, 0xbd, 
-	0xb6, 0x3d, 0x11, 0x9f, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x43, 0x29, 0x74, 0x6f, 
-	0xf7, 0xbd, 0x9d, 0xb9, 0x00, 0x01, 0x00, 0xd9, 
-	0x23, 0x77, 0x2b, 0xb9, 0xd7, 0x3d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x54, 0xbd, 0x1b, 0x79, 
-	0x11, 0xe7, 0x00, 0x01, 0x19, 0x9b, 0xb6, 0x3d, 
-	0x5b, 0xeb, 0x19, 0xe1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x4b, 0xad, 0x2a, 0x1f, 
-	0xb6, 0x3d, 0x4b, 0x67, 0x00, 0x01, 0x01, 0x1d, 
-	0x23, 0x77, 0x2b, 0xf9, 0xe7, 0x7d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x6c, 0xfd, 0x1b, 0x79, 
-	0x12, 0x29, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x2a, 0xa7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x64, 0x73, 0x00, 0x01, 
-	0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 0x09, 0x61, 
-	0x23, 0x79, 0x33, 0xfb, 0xef, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x7d, 0x3d, 0x1b, 0x79, 
-	0x1a, 0xf1, 0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x53, 0xf1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x8d, 0x3b, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x12, 0x27, 
-	0x1b, 0xb9, 0x4c, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x9e, 0x3d, 0x1b, 0x79, 
-	0x23, 0x77, 0x00, 0xd9, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x85, 0x7b, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0xd9, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x05, 0x1a, 0xf3, 
-	0x1b, 0x79, 0x75, 0x3d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xdf, 0x3d, 0x2b, 0xb9, 
-	0x23, 0xb9, 0x12, 0x6d, 0x00, 0x01, 0x00, 0x01, 
-	0x11, 0xe7, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x2b, 0x73, 
-	0x00, 0x0b, 0x00, 0x01, 0x09, 0xe5, 0x23, 0xb9, 
-	0x1b, 0x79, 0xae, 0x7d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0x6c, 0xfd, 
-	0x1b, 0x37, 0x23, 0xb9, 0x1a, 0xb1, 0x12, 0x6f, 
-	0x4c, 0x7b, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x7d, 0x3d, 
-	0x0a, 0x71, 0x12, 0xad, 0x23, 0x77, 0x1b, 0x79, 
-	0x3c, 0x3b, 0xe7, 0x7d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xd7, 0x3d, 
-	0x2b, 0xb9, 0x13, 0x37, 0x1b, 0x79, 0x23, 0x79, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x3c, 0x3b, 0x13, 0x79, 0x1b, 0x79, 0x13, 0x37, 
-	0x9e, 0x3d, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xbe, 0xbd, 0x54, 0xbd, 0x4c, 0xbb, 0xae, 0x7d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xc6, 0xfd, 0x5c, 0xbd, 0x4c, 0x7b, 0x9e, 0x3d, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx mario_mario_mustache_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 mario_mario_mustache_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx mario_mario_sideburn_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 mario_mario_sideburn_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x70, 0x01, 
-	0x78, 0x01, 0x68, 0x01, 0x60, 0x01, 0x50, 0x01, 
-	0x50, 0x01, 0x48, 0x01, 0x60, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xb0, 0x41, 0x80, 0x01, 
-	0x80, 0x01, 0x78, 0x01, 0x60, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x40, 0x01, 0x38, 0x01, 0x30, 0x01, 
-	0x28, 0x01, 0x30, 0x01, 0x38, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x88, 0x01, 0x88, 0x01, 
-	0x80, 0x01, 0x78, 0x01, 0x60, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x30, 0x01, 0x40, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x80, 0x01, 0x88, 0x01, 
-	0x78, 0x01, 0x68, 0x01, 0x58, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x28, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x90, 0x01, 0x88, 0x01, 0x80, 0x01, 
-	0x78, 0x01, 0x60, 0x01, 0x58, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x30, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xa8, 0x01, 0x80, 0x01, 0x80, 0x01, 0x78, 0x01, 
-	0x68, 0x01, 0x58, 0x01, 0x50, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x30, 0x01, 0x58, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xa8, 0x01, 
-	0x80, 0x01, 0x80, 0x01, 0x78, 0x01, 0x68, 0x01, 
-	0x58, 0x01, 0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x28, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x80, 0x01, 0x88, 0x01, 0x88, 0x01, 0x98, 0x01, 
-	0xff, 0xfe, 0xa8, 0x01, 0x88, 0x01, 0x80, 0x01, 
-	0x80, 0x01, 0x78, 0x01, 0x68, 0x01, 0x60, 0x01, 
-	0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x90, 0x01, 0x78, 0x01, 
-	0x80, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 
-	0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 
-	0x78, 0x01, 0x68, 0x01, 0x60, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 0x30, 0x01, 
-	0x50, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x90, 0x01, 0x68, 0x01, 0x78, 0x01, 
-	0x80, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 
-	0x80, 0x01, 0x80, 0x01, 0x78, 0x01, 0x68, 0x01, 
-	0x60, 0x01, 0x58, 0x01, 0x50, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 0x28, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x60, 0x01, 0x60, 0x01, 0x68, 0x01, 
-	0x78, 0x01, 0x78, 0x01, 0x78, 0x01, 0x78, 0x01, 
-	0x70, 0x01, 0x68, 0x01, 0x60, 0x01, 0x58, 0x01, 
-	0x50, 0x01, 0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x58, 0x01, 0x50, 0x01, 0x58, 0x01, 
-	0x60, 0x01, 0x60, 0x01, 0x60, 0x01, 0x60, 0x01, 
-	0x60, 0x01, 0x58, 0x01, 0x50, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x28, 0x01, 0x58, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x78, 0x01, 0x40, 0x01, 0x50, 0x01, 
-	0x50, 0x01, 0x50, 0x01, 0x50, 0x01, 0x50, 0x01, 
-	0x50, 0x01, 0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x30, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x60, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x28, 0x01, 0x60, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x58, 0x01, 
-	0x78, 0x01, 0x90, 0x01, 0x88, 0x01, 0x68, 0x01, 
-	0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x30, 0x01, 0x38, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x38, 0x01, 0x58, 0x01, 
-	0x78, 0x01, 0x80, 0x01, 0x80, 0x01, 0x68, 0x01, 
-	0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x28, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x40, 0x01, 0x38, 0x01, 0x48, 0x01, 
-	0x58, 0x01, 0x60, 0x01, 0x60, 0x01, 0x58, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x28, 0x01, 
-	0x40, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x38, 0x01, 0x30, 0x01, 0x38, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x30, 0x01, 0x28, 0x01, 0x40, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x38, 0x01, 0x30, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x30, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x30, 0x01, 0x38, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x20, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 
-	0x28, 0x01, 0x38, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x38, 0x01, 0x28, 0x01, 
-	0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 0x28, 0x01, 
-	0x60, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x48, 0x01, 
-	0x20, 0x01, 0x28, 0x01, 0x28, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x30, 0x01, 0x38, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x28, 0x01, 0x40, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x68, 0x01, 0x38, 0x01, 0x20, 0x01, 0x28, 0x01, 
-	0x28, 0x01, 0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x28, 0x01, 0x28, 0x01, 0x28, 0x01, 
-	0x40, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x60, 0x01, 
-	0x50, 0x01, 0x38, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x40, 0x01, 0x60, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx mario_mario_face_2_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 mario_mario_face_2_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x87, 0x00, 0x01, 0x08, 0x03, 0x08, 0x01, 
-	0x10, 0x43, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 
-	0x08, 0x43, 0x08, 0x03, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x01, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x08, 0x01, 0x08, 0x03, 
-	0x10, 0x45, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x29, 0x4b, 0x00, 0x01, 
-	0x41, 0xcf, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x31, 0x8d, 0x00, 0x01, 0x20, 0xc9, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x18, 0x85, 0x08, 0x01, 0x39, 0x8f, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x41, 0xcf, 
-	0x00, 0x01, 0x39, 0x8f, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x03, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x18, 0xc7, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x20, 0xc7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x08, 0x03, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x73, 0x9d, 0x52, 0x95, 0x18, 0xc7, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x42, 0x11, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x42, 0x11, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x18, 0xc7, 0x21, 0x09, 0x52, 0x95, 0x8c, 0x63, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x84, 0x21, 0x94, 0xa5, 0x73, 0x9d, 
-	0x42, 0x11, 0x21, 0x09, 0x18, 0xc7, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x32, 0xe7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x21, 0x09, 0x21, 0x09, 0x42, 0x11, 
-	0x73, 0x9d, 0x8c, 0x63, 0x94, 0xa5, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x54, 0xbb, 0x1b, 0x79, 
-	0x11, 0xe7, 0x00, 0x01, 0x21, 0xdd, 0xce, 0xbd, 
-	0x6c, 0x2f, 0x19, 0xe1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x53, 0xed, 0x32, 0x61, 
-	0xce, 0xbd, 0x53, 0xa9, 0x00, 0x01, 0x09, 0x1d, 
-	0x23, 0x79, 0x2b, 0xb9, 0xdf, 0x3d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x44, 0x7b, 0x23, 0x79, 
-	0x09, 0xe5, 0x00, 0x01, 0x5b, 0xeb, 0xf7, 0xbd, 
-	0xb6, 0x3d, 0x11, 0x9f, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x43, 0x29, 0x74, 0x6f, 
-	0xf7, 0xbd, 0x9d, 0xb9, 0x00, 0x01, 0x00, 0xd9, 
-	0x23, 0x77, 0x2b, 0xb9, 0xd7, 0x3d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x54, 0xbd, 0x1b, 0x79, 
-	0x11, 0xe7, 0x00, 0x01, 0x19, 0x9b, 0xb6, 0x3d, 
-	0x5b, 0xeb, 0x19, 0xe1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x4b, 0xad, 0x2a, 0x1f, 
-	0xb6, 0x3d, 0x4b, 0x67, 0x00, 0x01, 0x01, 0x1d, 
-	0x23, 0x77, 0x2b, 0xf9, 0xe7, 0x7d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x6c, 0xfd, 0x1b, 0x79, 
-	0x12, 0x29, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x2a, 0xa7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x64, 0x73, 0x00, 0x01, 
-	0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 0x09, 0x61, 
-	0x23, 0x79, 0x33, 0xfb, 0xef, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x7d, 0x3d, 0x1b, 0x79, 
-	0x1a, 0xf1, 0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x53, 0xf1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x8d, 0x3b, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x12, 0x27, 
-	0x1b, 0xb9, 0x4c, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x9e, 0x3d, 0x1b, 0x79, 
-	0x23, 0x77, 0x00, 0xd9, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x85, 0x7b, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0xd9, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x05, 0x1a, 0xf3, 
-	0x1b, 0x79, 0x75, 0x3d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xdf, 0x3d, 0x2b, 0xb9, 
-	0x23, 0xb9, 0x12, 0x6d, 0x00, 0x01, 0x00, 0x01, 
-	0x11, 0xe7, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x2b, 0x73, 
-	0x00, 0x0b, 0x00, 0x01, 0x09, 0xe5, 0x23, 0xb9, 
-	0x1b, 0x79, 0xae, 0x7d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0x6c, 0xfd, 
-	0x1b, 0x37, 0x23, 0xb9, 0x1a, 0xb1, 0x12, 0x6f, 
-	0x4c, 0x7b, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x7d, 0x3d, 
-	0x0a, 0x71, 0x12, 0xad, 0x23, 0x77, 0x1b, 0x79, 
-	0x3c, 0x3b, 0xe7, 0x7d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xd7, 0x3d, 
-	0x2b, 0xb9, 0x13, 0x37, 0x1b, 0x79, 0x23, 0x79, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x3c, 0x3b, 0x13, 0x79, 0x1b, 0x79, 0x13, 0x37, 
-	0x9e, 0x3d, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xbe, 0xbd, 0x54, 0xbd, 0x4c, 0xbb, 0xae, 0x7d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xc6, 0xfd, 0x5c, 0xbd, 0x4c, 0x7b, 0x9e, 0x3d, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx mario_mario_face_3_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 mario_mario_face_3_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x87, 0x00, 0x01, 0x08, 0x03, 0x08, 0x01, 
-	0x10, 0x43, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x00, 0x01, 0x18, 0x87, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 
-	0x08, 0x43, 0x08, 0x03, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x01, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x08, 0x01, 0x08, 0x03, 
-	0x10, 0x45, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x29, 0x4b, 0x00, 0x01, 
-	0x41, 0xcf, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x31, 0x8d, 0x00, 0x01, 0x08, 0x03, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x18, 0x85, 0x08, 0x01, 0x39, 0x8f, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x03, 
-	0x00, 0x01, 0x39, 0x8f, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x18, 0xc7, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x18, 0xc7, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x20, 0xc7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x18, 0x87, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x31, 0x8d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x31, 0x8d, 
-	0x00, 0x05, 0x00, 0x05, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x05, 0x00, 0x05, 
-	0x31, 0x8d, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x31, 0x8d, 0x08, 0x43, 0x08, 0x43, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x21, 0x09, 0x21, 0x09, 0x21, 0x09, 
-	0x21, 0x09, 0x21, 0x09, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x21, 0x09, 0x21, 0x09, 0x21, 0x09, 
-	0x21, 0x09, 0x21, 0x09, 0x21, 0x09, 0x08, 0x43, 
-	0x08, 0x43, 0x08, 0x43, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x00, 0x05, 
-	0x00, 0x05, 0x00, 0x05, 0x00, 0x05, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x05, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx mario_mario_face_4_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 mario_mario_face_4_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe7, 0x39, 
-	0xe7, 0x39, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xe7, 0x39, 0xe7, 0x39, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xe7, 0x39, 0xe7, 0x39, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0xc6, 0x31, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 
-	0x73, 0x9d, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe7, 0x39, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xde, 0xf7, 0x42, 0x11, 
-	0x00, 0x01, 0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0x21, 0x09, 
-	0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 
-	0xc6, 0x31, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 
-	0x00, 0x01, 0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0x5a, 0xd7, 
-	0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 0xf7, 0xbd, 
-	0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 
-	0xf7, 0xbd, 0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 
-	0x42, 0x11, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xde, 0xf7, 
-	0x42, 0x11, 0x00, 0x01, 0x42, 0x11, 0xc6, 0x31, 
-	0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 
-	0xad, 0x6b, 0x42, 0x11, 0x00, 0x01, 0x42, 0x11, 
-	0xde, 0xf7, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xde, 0xf7, 0x21, 0x09, 0x00, 0x01, 0x08, 0x43, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xde, 0xf7, 0x21, 0x09, 0x00, 0x01, 
-	0x08, 0x43, 0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0x5a, 0xd7, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x5a, 0xd7, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xc6, 0x31, 0x08, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xc6, 0x31, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xad, 0x6b, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xad, 0x6b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xc6, 0x31, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xde, 0xf7, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 0x08, 0x43, 
-	0x00, 0x01, 0x42, 0x11, 0xde, 0xf7, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xde, 0xf7, 0x42, 0x11, 0x00, 0x01, 
-	0x08, 0x43, 0x00, 0x01, 0x00, 0x01, 0x5a, 0xd7, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xde, 0xf7, 
-	0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 0xad, 0x6b, 
-	0x21, 0x09, 0x00, 0x01, 0x42, 0x11, 0xde, 0xf7, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 
-	0x94, 0xa5, 0x00, 0x01, 0x00, 0x01, 0x21, 0x09, 
-	0xde, 0xf7, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0x42, 0x11, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xde, 0xf7, 
-	0x5a, 0xd7, 0x00, 0x01, 0x00, 0x01, 0x5a, 0xd7, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 
-	0xde, 0xf7, 0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 
-	0x42, 0x11, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xc6, 0x31, 0x00, 0x01, 
-	0x00, 0x01, 0x21, 0x09, 0xde, 0xf7, 0xf7, 0xbd, 
-	0xde, 0xf7, 0x42, 0x11, 0x00, 0x01, 0x21, 0x09, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 
-	0xf7, 0xbd, 0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x5a, 0xd7, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xde, 0xf7, 0x42, 0x11, 0x10, 0x85, 
-	0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe7, 0x39, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 
-	0x00, 0x01, 0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe7, 0x39, 
-	0xe7, 0x39, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xe7, 0x39, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xe7, 0x39, 0xe7, 0x39, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xe7, 0x39, 
-	0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx mario_wing_2_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 mario_wing_2_rgba16[] = {
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x8c, 0x63, 0xbd, 0xef, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xad, 0x6b, 0xa5, 0x29, 0xb5, 0xad, 0xde, 0xf7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xce, 0x73, 0xef, 0x7b, 0xce, 0x73, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xf7, 0xbd, 0xef, 0x7b, 0xbd, 0xef, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xde, 0xf7, 0xe7, 0x39, 
-	0xe7, 0x39, 0xef, 0x7b, 0xef, 0x7b, 0xef, 0x7b, 
-	0xef, 0x7b, 0xef, 0x7b, 0xef, 0x7b, 0xef, 0x7b, 
-	0xef, 0x7b, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xd6, 0xb5, 0xad, 0x6b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xde, 0xf7, 0xe7, 0x39, 0xef, 0x7b, 0xef, 0x7b, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xe7, 0x39, 0xc6, 0x31, 0x9c, 0xe7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xe7, 0x39, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xef, 0x7b, 0xce, 0x73, 0xb5, 0xad, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xe7, 0x39, 
-	0xd6, 0xb5, 0xbd, 0xef, 0x9c, 0xe7, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xef, 0x7b, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xe7, 0x39, 0xde, 0xf7, 0xce, 0x73, 
-	0xbd, 0xef, 0xbd, 0xef, 0x94, 0xa5, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xd6, 0xb5, 0xce, 0x73, 0xc6, 0x31, 0xb5, 0xad, 
-	0xb5, 0xad, 0xbd, 0xef, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x31, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xb5, 0xad, 0xc6, 0x31, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xe7, 0x39, 0xd6, 0xb5, 0xce, 0x73, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xbd, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xbd, 0xef, 
-	0xc6, 0x31, 0xde, 0xf7, 0xe7, 0x39, 0xe7, 0x39, 
-	0xe7, 0x39, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xef, 0x7b, 0xef, 0x7b, 0xef, 0x7b, 
-	0xe7, 0x39, 0xe7, 0x39, 0xe7, 0x39, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xd6, 0xb5, 0xde, 0xf7, 
-	0xd6, 0xb5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xbd, 0xef, 
-	0xc6, 0x31, 0xde, 0xf7, 0xef, 0x7b, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xef, 0x7b, 
-	0xad, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xb5, 0xad, 0xc6, 0x31, 0xde, 0xf7, 0xe7, 0x39, 
-	0xef, 0x7b, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xef, 0x7b, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 
-	0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 0xef, 0x7b, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xef, 0x7b, 0xce, 0x73, 0x9c, 0xe7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 0xe7, 0x39, 
-	0xef, 0x7b, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xe7, 0x39, 0xc6, 0x31, 0xad, 0x6b, 0x8c, 0x63, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x31, 0xbd, 0xef, 0xc6, 0x31, 
-	0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 
-	0xe7, 0x39, 0xe7, 0x39, 0xde, 0xf7, 0xce, 0x73, 
-	0xbd, 0xef, 0xad, 0x6b, 0x94, 0xa5, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xbd, 0xef, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xbd, 0xef, 0xb5, 0xad, 0xad, 0x6b, 
-	0xa5, 0x29, 0x94, 0xa5, 0x7b, 0xdf, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x94, 0xa5, 0x7b, 0xdf, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 0x8c, 0x63, 
-	0x8c, 0x63, 0x8c, 0x63, 0x84, 0x21, 0x84, 0x21, 
-	0x84, 0x21, 0x8c, 0x63, 0x8c, 0x63, 0x8c, 0x63, 
-	0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 0x84, 0x21, 
-	0x73, 0x9d, 0x52, 0x95, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 
-	0x84, 0x21, 0x84, 0x21, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 
-	0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 
-	0x73, 0x9d, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x73, 0x9d, 0x63, 0x19, 
-	0x4a, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x94, 0xa5, 0x8c, 0x63, 0x84, 0x21, 0x7b, 0xdf, 
-	0x73, 0x9d, 0x73, 0x9d, 0x6b, 0x5b, 0x63, 0x19, 
-	0x63, 0x19, 0x5a, 0xd7, 0x5a, 0xd7, 0x52, 0x95, 
-	0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x42, 0x11, 0x39, 0xcf, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x84, 0x21, 0x7b, 0xdf, 0x73, 0x9d, 0x6b, 0x5b, 
-	0x63, 0x19, 0x5a, 0xd7, 0x4a, 0x53, 0x5a, 0xd7, 
-	0x52, 0x95, 0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x52, 0x95, 0x39, 0xcf, 
-	0x39, 0xcf, 0x31, 0x8d, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0x9d, 0x6b, 0x5b, 0x5a, 0xd7, 0x63, 0x19, 
-	0x5a, 0xd7, 0x63, 0x19, 0x6b, 0x5b, 0x6b, 0x5b, 
-	0x63, 0x19, 0x63, 0x19, 0x63, 0x19, 0x63, 0x19, 
-	0x63, 0x19, 0x63, 0x19, 0x63, 0x19, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x42, 0x11, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x63, 0x19, 0x6b, 0x5b, 0x63, 0x19, 0x63, 0x19, 
-	0x5a, 0xd7, 0x7b, 0xdf, 0x84, 0x21, 0x8c, 0x63, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xa5, 0x29, 0xbd, 0xef, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x63, 0x19, 0x84, 0x21, 0xa5, 0x29, 0xbd, 0xef, 
-	0xe7, 0x39, 0xef, 0x7b, 0xef, 0x7b, 0xef, 0x7b, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xe7, 0x39, 
-	0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 0xef, 0x7b, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xce, 0x73, 0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xe7, 0x39, 0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xe7, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xce, 0x73, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xe7, 0x39, 0xe7, 0x39, 
-	0xce, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xce, 0x73, 0xc6, 0x31, 
-	0xa5, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0xa5, 0x29, 
-	0xa5, 0x29, 0x94, 0xa5, 0x84, 0x21, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 
-	0x73, 0x9d, 0x52, 0x95, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0x9d, 0x7b, 0xdf, 0x84, 0x21, 0x84, 0x21, 
-	0x84, 0x21, 0x8c, 0x63, 0x8c, 0x63, 0x8c, 0x63, 
-	0x8c, 0x63, 0x84, 0x21, 0x84, 0x21, 0x84, 0x21, 
-	0x7b, 0xdf, 0x6b, 0x5b, 0x5a, 0xd7, 0x52, 0x95, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x84, 0x21, 0x73, 0x9d, 0x63, 0x19, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x52, 0x95, 0x5a, 0xd7, 0x4a, 0x53, 
-	0x39, 0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xe7, 0x39, 0xe7, 0x39, 0xe7, 0x39, 0xde, 0xf7, 
-	0xce, 0x73, 0xc6, 0x31, 0xad, 0x6b, 0x9c, 0xe7, 
-	0x9c, 0xe7, 0x84, 0x21, 0x7b, 0xdf, 0x6b, 0x5b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xbd, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xb5, 0xad, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xb5, 0xad, 0x9c, 0xe7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x84, 0x21, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x8c, 0x63, 0x8c, 0x63, 0x84, 0x21, 
-	0x73, 0x9d, 0x5a, 0xd7, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0x9d, 0x73, 0x9d, 0x6b, 0x5b, 0x6b, 0x5b, 
-	0x63, 0x19, 0x5a, 0xd7, 0x4a, 0x53, 0x42, 0x11, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x4a, 0x53, 0x42, 0x11, 0x42, 0x11, 0x42, 0x11, 
-	0x42, 0x11, 0x42, 0x11, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x6b, 0x5b, 0x6b, 0x5b, 0x6b, 0x5b, 0x73, 0x9d, 
-	0x73, 0x9d, 0x7b, 0xdf, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xad, 0x6b, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 
-	0x94, 0xa5, 0x73, 0x9d, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 0x73, 0x9d, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x63, 0x19, 0x52, 0x95, 0x42, 0x11, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	
-};
-
-Gfx mario_wing1_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 mario_wing1_rgba16[] = {
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x63, 
-	0x94, 0xa5, 0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x84, 0x21, 0x8c, 0x63, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 
-	0xbd, 0xef, 0xc6, 0x31, 0xce, 0x73, 0xd6, 0xb5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0xdf, 
-	0x84, 0x21, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 0xbd, 0xef, 
-	0xc6, 0x31, 0xce, 0x73, 0xd6, 0xb5, 0xde, 0xf7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x84, 0x21, 0x8c, 0x63, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xb5, 0xad, 0xbd, 0xef, 0xc6, 0x31, 
-	0xce, 0x73, 0xd6, 0xb5, 0xde, 0xf7, 0xe7, 0x39, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 0x84, 0x21, 
-	0x8c, 0x63, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xad, 0x6b, 0xbd, 0xef, 0xc6, 0x31, 0xce, 0x73, 
-	0xd6, 0xb5, 0xde, 0xf7, 0xe7, 0x39, 0xef, 0x7b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6b, 0x5b, 
-	0x6b, 0x5b, 0x73, 0x9d, 0x7b, 0xdf, 0x84, 0x21, 
-	0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xbd, 0xef, 0xce, 0x73, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xde, 0xf7, 0xe7, 0x39, 0xef, 0x7b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x63, 0x19, 0x63, 0x19, 
-	0x6b, 0x5b, 0x73, 0x9d, 0x7b, 0xdf, 0x8c, 0x63, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 
-	0xbd, 0xef, 0xc6, 0x31, 0xce, 0x73, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x5a, 0xd7, 0x63, 0x19, 
-	0x6b, 0x5b, 0x7b, 0xdf, 0x84, 0x21, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xb5, 0xad, 0xbd, 0xef, 
-	0xc6, 0x31, 0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xce, 0x73, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x52, 0x95, 0x5a, 0xd7, 0x6b, 0x5b, 
-	0x73, 0x9d, 0x84, 0x21, 0x8c, 0x63, 0x94, 0xa5, 
-	0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 0xbd, 0xef, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xb5, 0xad, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x4a, 0x53, 0x52, 0x95, 0x63, 0x19, 0x6b, 0x5b, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xad, 0x6b, 0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x42, 0x11, 0x5a, 0xd7, 0x63, 0x19, 0x73, 0x9d, 
-	0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0x9c, 0xe7, 0xb5, 0xad, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0xcf, 
-	0x4a, 0x53, 0x5a, 0xd7, 0x6b, 0x5b, 0x7b, 0xdf, 
-	0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xb5, 0xad, 0xc6, 0x31, 0xd6, 0xb5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 0x42, 0x11, 
-	0x52, 0x95, 0x63, 0x19, 0x73, 0x9d, 0x84, 0x21, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 
-	0xc6, 0x31, 0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x42, 0x11, 
-	0x5a, 0xd7, 0x6b, 0x5b, 0x7b, 0xdf, 0x8c, 0x63, 
-	0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 0xbd, 0xef, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x21, 0x09, 0x39, 0xcf, 0x52, 0x95, 
-	0x63, 0x19, 0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 
-	0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0xa5, 0x29, 0xa5, 0x29, 
-	0xa5, 0x29, 0xb5, 0xad, 0xbd, 0xef, 0xc6, 0x31, 
-	0xc6, 0x31, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x29, 0x4b, 0x4a, 0x53, 0x5a, 0xd7, 
-	0x6b, 0x5b, 0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0xad, 0x6b, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x18, 0xc7, 0x39, 0xcf, 0x52, 0x95, 0x63, 0x19, 
-	0x73, 0x9d, 0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0xad, 0x6b, 0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 
-	0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0xa5, 0x29, 0xa5, 0x29, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x21, 0x09, 0x42, 0x11, 0x5a, 0xd7, 0x6b, 0x5b, 
-	0x7b, 0xdf, 0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x31, 0x8d, 0x52, 0x95, 0x63, 0x19, 0x73, 0x9d, 
-	0x84, 0x21, 0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 
-	0x42, 0x11, 0x5a, 0xd7, 0x6b, 0x5b, 0x7b, 0xdf, 
-	0x8c, 0x63, 0x9c, 0xe7, 0xa5, 0x29, 0xb5, 0xad, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 0x84, 0x21, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 
-	0x4a, 0x53, 0x63, 0x19, 0x73, 0x9d, 0x84, 0x21, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x94, 0xa5, 0x8c, 0x63, 0x7b, 0xdf, 0x73, 0x9d, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x18, 0xc7, 0x39, 0xcf, 
-	0x52, 0x95, 0x6b, 0x5b, 0x7b, 0xdf, 0x8c, 0x63, 
-	0x94, 0xa5, 0xa5, 0x29, 0xb5, 0xad, 0xb5, 0xad, 
-	0xb5, 0xad, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 
-	0x84, 0x21, 0x7b, 0xdf, 0x6b, 0x5b, 0x63, 0x19, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 0x4a, 0x53, 
-	0x5a, 0xd7, 0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 
-	0xad, 0x6b, 0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 0x84, 0x21, 
-	0x73, 0x9d, 0x63, 0x19, 0x73, 0x9d, 0x63, 0x19, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x52, 0x95, 
-	0x63, 0x19, 0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 
-	0xa5, 0x29, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x94, 0xa5, 0x84, 0x21, 0x73, 0x9d, 
-	0x7b, 0xdf, 0x73, 0x9d, 0x94, 0xa5, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x18, 0xc7, 0x39, 0xcf, 0x5a, 0xd7, 
-	0x6b, 0x5b, 0x7b, 0xdf, 0x8c, 0x63, 0x9c, 0xe7, 
-	0xad, 0x6b, 0xb5, 0xad, 0xbd, 0xef, 0x9c, 0xe7, 
-	0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0x94, 0xa5, 
-	0x94, 0xa5, 0x84, 0x21, 0x84, 0x21, 0x73, 0x9d, 
-	0x94, 0xa5, 0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x21, 0x09, 0x42, 0x11, 0x63, 0x19, 
-	0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xad, 0x6b, 0xb5, 0xad, 0xad, 0x6b, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x8c, 0x63, 0x84, 0x21, 0x73, 0x9d, 0xad, 0x6b, 
-	0xbd, 0xef, 0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x29, 0x4b, 0x52, 0x95, 0x63, 0x19, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 
-	0xb5, 0xad, 0xbd, 0xef, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 
-	0x84, 0x21, 0x94, 0xa5, 0xad, 0x6b, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x18, 0xc7, 0x39, 0xcf, 0x5a, 0xd7, 0x6b, 0x5b, 
-	0x7b, 0xdf, 0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 
-	0xb5, 0xad, 0xa5, 0x29, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x21, 0x09, 0x42, 0x11, 0x5a, 0xd7, 0x73, 0x9d, 
-	0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 
-	0xb5, 0xad, 0x94, 0xa5, 0x94, 0xa5, 0xa5, 0x29, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0xad, 0x6b, 0xce, 0x73, 0xef, 0x7b, 
-	0xe7, 0x39, 0xd6, 0xb5, 0xc6, 0x31, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0xa5, 0x29, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x29, 0x4b, 0x4a, 0x53, 0x63, 0x19, 0x7b, 0xdf, 
-	0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 0xb5, 0xad, 
-	0xad, 0x6b, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 
-	0xad, 0x6b, 0xe7, 0x39, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xef, 0x7b, 
-	0xbd, 0xef, 0x94, 0xa5, 0x8c, 0x63, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x29, 0x4b, 0x52, 0x95, 0x6b, 0x5b, 0x7b, 0xdf, 
-	0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 0xb5, 0xad, 
-	0x94, 0xa5, 0x94, 0xa5, 0xa5, 0x29, 0xa5, 0x29, 
-	0xad, 0x6b, 0xad, 0x6b, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xd6, 0xb5, 0xde, 0xf7, 0xe7, 0x39, 0xef, 0x7b, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xb5, 0xad, 0x73, 0x9d, 0x73, 0x9d, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x39, 0xcf, 0x5a, 0xd7, 0x73, 0x9d, 0x84, 0x21, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 0xad, 0x6b, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 
-	0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 0xc6, 0x31, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x9c, 0xe7, 0x84, 0x21, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 
-	0x42, 0x11, 0x63, 0x19, 0x73, 0x9d, 0x84, 0x21, 
-	0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0xb5, 0xad, 0xb5, 0xad, 
-	0xbd, 0xef, 0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xe7, 0x39, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 
-	0x4a, 0x53, 0x63, 0x19, 0x7b, 0xdf, 0x8c, 0x63, 
-	0x94, 0xa5, 0xa5, 0x29, 0xa5, 0x29, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0xad, 0x6b, 0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xa5, 0x29, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 
-	0x52, 0x95, 0x6b, 0x5b, 0x7b, 0xdf, 0x94, 0xa5, 
-	0x94, 0xa5, 0xa5, 0x29, 0xa5, 0x29, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x7b, 0xdf, 0xb5, 0xad, 0xc6, 0x31, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 
-	0x52, 0x95, 0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xad, 0x6b, 0x94, 0xa5, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 0xa5, 0x29, 
-	0x8c, 0x63, 0x4a, 0x53, 0x5a, 0xd7, 0x63, 0x19, 
-	0x6b, 0x5b, 0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 
-	0x6b, 0x5b, 0x63, 0x19, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 
-	0x5a, 0xd7, 0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0x7b, 0xdf, 0x52, 0x95, 0x4a, 0x53, 0x4a, 0x53, 
-	0x4a, 0x53, 0x4a, 0x53, 0x42, 0x11, 0x42, 0x11, 
-	0x42, 0x11, 0x42, 0x11, 0x6b, 0x5b, 0x94, 0xa5, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 
-	0x00, 0x00, 0x00, 0x00, 0x18, 0xc7, 0x39, 0xcf, 
-	0x63, 0x19, 0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 
-	0xa5, 0x29, 0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xb5, 0xad, 
-	0x94, 0xa5, 0x84, 0x21, 0x73, 0x9d, 0x6b, 0x5b, 
-	0x5a, 0xd7, 0x4a, 0x53, 0x4a, 0x53, 0x4a, 0x53, 
-	0x4a, 0x53, 0x7b, 0xdf, 0x84, 0x21, 0x8c, 0x63, 
-	0x8c, 0x63, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 0x42, 0x11, 
-	0x63, 0x19, 0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 
-	0xa5, 0x29, 0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xde, 0xf7, 0xe7, 0x39, 0xef, 0x7b, 
-	0xf7, 0xbd, 0xef, 0x7b, 0xd6, 0xb5, 0x8c, 0x63, 
-	0x4a, 0x53, 0x5a, 0xd7, 0x63, 0x19, 0x63, 0x19, 
-	0x6b, 0x5b, 0x6b, 0x5b, 0x73, 0x9d, 0x73, 0x9d, 
-	0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 0x4a, 0x53, 
-	0x6b, 0x5b, 0x7b, 0xdf, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xbd, 0xef, 
-	0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xef, 0x7b, 0xf7, 0xbd, 0xce, 0x73, 
-	0x42, 0x11, 0x42, 0x11, 0x39, 0xcf, 0x42, 0x11, 
-	0x42, 0x11, 0x4a, 0x53, 0x4a, 0x53, 0x4a, 0x53, 
-	0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 0x52, 0x95, 
-	0x6b, 0x5b, 0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 0xc6, 0x31, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xce, 0x73, 
-	0xbd, 0xef, 0xad, 0x6b, 0x9c, 0xe7, 0x8c, 0x63, 
-	0x8c, 0x63, 0x7b, 0xdf, 0x73, 0x9d, 0x6b, 0x5b, 
-	0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 0x52, 0x95, 
-	0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xa5, 0x29, 0x94, 0xa5, 0x8c, 0x63, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 0x5a, 0xd7, 
-	0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xa5, 0x29, 0x52, 0x95, 0x5a, 0xd7, 0x73, 0x9d, 
-	0x84, 0x21, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x7b, 0xdf, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 0x5a, 0xd7, 
-	0x73, 0x9d, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 
-	0x8c, 0x63, 0x4a, 0x53, 0x4a, 0x53, 0x42, 0x11, 
-	0x42, 0x11, 0x4a, 0x53, 0x4a, 0x53, 0x52, 0x95, 
-	0x42, 0x11, 0x52, 0x95, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x5a, 0xd7, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 
-	0x52, 0x95, 0x4a, 0x53, 0x4a, 0x53, 0x4a, 0x53, 
-	0x4a, 0x53, 0x39, 0xcf, 0x39, 0xcf, 0x39, 0xcf, 
-	0x42, 0x11, 0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x73, 0x9d, 0x63, 0x19, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x5a, 0xd7, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 
-	0xa5, 0x29, 0x73, 0x9d, 0x63, 0x19, 0x4a, 0x53, 
-	0x4a, 0x53, 0x42, 0x11, 0x42, 0x11, 0x39, 0xcf, 
-	0x42, 0x11, 0x42, 0x11, 0x42, 0x11, 0x42, 0x11, 
-	0x4a, 0x53, 0x4a, 0x53, 0x42, 0x11, 0x42, 0x11, 
-	0x39, 0xcf, 0x39, 0xcf, 0x31, 0x8d, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x63, 0x19, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0x9c, 0xe7, 0x7b, 0xdf, 0x73, 0x9d, 0x73, 0x9d, 
-	0x5a, 0xd7, 0x52, 0x95, 0x42, 0x11, 0x4a, 0x53, 
-	0x42, 0x11, 0x42, 0x11, 0x4a, 0x53, 0x4a, 0x53, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x63, 0x19, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x8c, 0x63, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x94, 0xa5, 0xbd, 0xef, 0xc6, 0x31, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xbd, 0xef, 0xad, 0x6b, 
-	0xa5, 0x29, 0x94, 0xa5, 0x94, 0xa5, 0x73, 0x9d, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x63, 0x19, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x8c, 0x63, 0x94, 0xa5, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x5a, 0xd7, 0x63, 0x19, 
-	0x63, 0x19, 0x63, 0x19, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0x9c, 0xe7, 0xad, 0x6b, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xad, 0x6b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x63, 0x19, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x9c, 0xe7, 0x6b, 0x5b, 0x31, 0x8d, 0x31, 0x8d, 
-	0x39, 0xcf, 0x39, 0xcf, 0x52, 0x95, 0x8c, 0x63, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x8c, 0x63, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 0x5a, 0xd7, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x39, 0xcf, 0x21, 0x09, 0x29, 0x4b, 
-	0x31, 0x8d, 0x39, 0xcf, 0x63, 0x19, 0x6b, 0x5b, 
-	0x73, 0x9d, 0x73, 0x9d, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x73, 0x9d, 
-	0x63, 0x19, 0x4a, 0x53, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0xd7, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x84, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x21, 0x09, 0x21, 0x09, 0x31, 0x8d, 0x31, 0x8d, 
-	0x39, 0xcf, 0x39, 0xcf, 0x39, 0xcf, 0x42, 0x11, 
-	0x39, 0xcf, 0x39, 0xcf, 0x39, 0xcf, 0x29, 0x4b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0xd7, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x8c, 0x63, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0xd7, 
-	0x84, 0x21, 0x8c, 0x63, 0x84, 0x21, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x84, 0x21, 0x7b, 0xdf, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	
-};
-
-Vtx mario_000_offset_mesh_layer_1_vtx_0[76] = {
-	{{ {73, 11, 0}, 0, {-16, -16}, {127, 5, 0, 255} }},
-	{{ {55, -61, -36}, 0, {-16, -16}, {100, 181, 232, 255} }},
-	{{ {44, -10, -92}, 0, {-16, -16}, {81, 240, 159, 255} }},
-	{{ {55, -61, 36}, 0, {-16, -16}, {100, 181, 24, 255} }},
-	{{ {44, -9, 92}, 0, {-16, -16}, {81, 241, 97, 255} }},
-	{{ {43, 40, 91}, 0, {-16, -16}, {69, 44, 97, 255} }},
-	{{ {52, 70, 38}, 0, {-16, -16}, {92, 84, 26, 255} }},
-	{{ {52, 70, -39}, 0, {-16, -16}, {92, 83, 229, 255} }},
-	{{ {43, 40, -91}, 0, {-16, -16}, {69, 44, 159, 255} }},
-	{{ {6, 33, -95}, 0, {-16, -16}, {227, 39, 139, 255} }},
-	{{ {8, -8, -99}, 0, {-16, -16}, {235, 244, 131, 255} }},
-	{{ {36, -51, -79}, 0, {-16, -16}, {58, 183, 169, 255} }},
-	{{ {26, -74, -46}, 0, {-16, -16}, {25, 136, 222, 255} }},
-	{{ {26, -74, 45}, 0, {-16, -16}, {24, 135, 32, 255} }},
-	{{ {36, -52, 79}, 0, {-16, -16}, {58, 182, 86, 255} }},
-	{{ {8, -8, 99}, 0, {-16, -16}, {235, 244, 125, 255} }},
-	{{ {7, 33, 95}, 0, {-16, -16}, {229, 39, 118, 255} }},
-	{{ {8, -8, 99}, 0, {-16, -16}, {235, 244, 125, 255} }},
-	{{ {44, -9, 92}, 0, {-16, -16}, {81, 241, 97, 255} }},
-	{{ {43, 40, 91}, 0, {-16, -16}, {69, 44, 97, 255} }},
-	{{ {27, 72, 63}, 0, {-16, -16}, {16, 109, 64, 255} }},
-	{{ {52, 70, 38}, 0, {-16, -16}, {92, 84, 26, 255} }},
-	{{ {22, 82, 26}, 0, {-16, -16}, {4, 126, 13, 255} }},
-	{{ {22, 82, -26}, 0, {-16, -16}, {4, 126, 243, 255} }},
-	{{ {52, 70, -39}, 0, {-16, -16}, {92, 83, 229, 255} }},
-	{{ {27, 72, -63}, 0, {-16, -16}, {15, 109, 192, 255} }},
-	{{ {43, 40, -91}, 0, {-16, -16}, {69, 44, 159, 255} }},
-	{{ {6, 33, -95}, 0, {-16, -16}, {227, 39, 139, 255} }},
-	{{ {-5, 59, -72}, 0, {-16, -16}, {198, 87, 183, 255} }},
-	{{ {-17, 32, -79}, 0, {-16, -16}, {160, 32, 179, 255} }},
-	{{ {-20, -8, -81}, 0, {-16, -16}, {157, 246, 178, 255} }},
-	{{ {8, -8, -99}, 0, {-16, -16}, {235, 244, 131, 255} }},
-	{{ {-20, -8, -81}, 0, {-16, -16}, {157, 246, 178, 255} }},
-	{{ {8, -8, -99}, 0, {-16, -16}, {235, 244, 131, 255} }},
-	{{ {4, -48, -86}, 0, {-16, -16}, {224, 188, 154, 255} }},
-	{{ {36, -51, -79}, 0, {-16, -16}, {58, 183, 169, 255} }},
-	{{ {26, -74, -46}, 0, {-16, -16}, {25, 136, 222, 255} }},
-	{{ {-9, -69, -55}, 0, {-16, -16}, {204, 153, 203, 255} }},
-	{{ {-14, -74, 0}, 0, {-16, -16}, {199, 142, 0, 255} }},
-	{{ {26, -74, 45}, 0, {-16, -16}, {24, 135, 32, 255} }},
-	{{ {-9, -69, 55}, 0, {-16, -16}, {204, 152, 52, 255} }},
-	{{ {4, -49, 86}, 0, {-16, -16}, {223, 187, 102, 255} }},
-	{{ {36, -52, 79}, 0, {-16, -16}, {58, 182, 86, 255} }},
-	{{ {8, -8, 99}, 0, {-16, -16}, {235, 244, 125, 255} }},
-	{{ {-20, -7, 81}, 0, {-16, -16}, {157, 247, 79, 255} }},
-	{{ {7, 33, 95}, 0, {-16, -16}, {229, 39, 118, 255} }},
-	{{ {-18, 32, 79}, 0, {-16, -16}, {160, 32, 77, 255} }},
-	{{ {-5, 59, 72}, 0, {-16, -16}, {198, 87, 73, 255} }},
-	{{ {27, 72, 63}, 0, {-16, -16}, {16, 109, 64, 255} }},
-	{{ {-5, 59, 72}, 0, {-16, -16}, {198, 87, 73, 255} }},
-	{{ {7, 33, 95}, 0, {-16, -16}, {229, 39, 118, 255} }},
-	{{ {-9, 73, 34}, 0, {-16, -16}, {186, 104, 21, 255} }},
-	{{ {22, 82, 26}, 0, {-16, -16}, {4, 126, 13, 255} }},
-	{{ {22, 82, -26}, 0, {-16, -16}, {4, 126, 243, 255} }},
-	{{ {-9, 73, -34}, 0, {-16, -16}, {186, 104, 235, 255} }},
-	{{ {27, 72, -63}, 0, {-16, -16}, {15, 109, 192, 255} }},
-	{{ {-5, 59, -72}, 0, {-16, -16}, {198, 87, 183, 255} }},
-	{{ {-32, 40, -39}, 0, {-16, -16}, {137, 38, 235, 255} }},
-	{{ {-17, 32, -79}, 0, {-16, -16}, {160, 32, 179, 255} }},
-	{{ {-20, -8, -81}, 0, {-16, -16}, {157, 246, 178, 255} }},
-	{{ {-31, -51, -42}, 0, {-16, -16}, {142, 209, 225, 255} }},
-	{{ {4, -48, -86}, 0, {-16, -16}, {224, 188, 154, 255} }},
-	{{ {-9, -69, -55}, 0, {-16, -16}, {204, 153, 203, 255} }},
-	{{ {-14, -74, 0}, 0, {-16, -16}, {199, 142, 0, 255} }},
-	{{ {-31, -51, 42}, 0, {-16, -16}, {142, 209, 31, 255} }},
-	{{ {-31, -51, -42}, 0, {-16, -16}, {142, 209, 225, 255} }},
-	{{ {-14, -74, 0}, 0, {-16, -16}, {199, 142, 0, 255} }},
-	{{ {-9, -69, 55}, 0, {-16, -16}, {204, 152, 52, 255} }},
-	{{ {4, -49, 86}, 0, {-16, -16}, {223, 187, 102, 255} }},
-	{{ {-20, -7, 81}, 0, {-16, -16}, {157, 247, 79, 255} }},
-	{{ {-32, 40, 39}, 0, {-16, -16}, {137, 38, 21, 255} }},
-	{{ {-18, 32, 79}, 0, {-16, -16}, {160, 32, 77, 255} }},
-	{{ {-5, 59, 72}, 0, {-16, -16}, {198, 87, 73, 255} }},
-	{{ {-9, 73, 34}, 0, {-16, -16}, {186, 104, 21, 255} }},
-	{{ {-32, 40, -39}, 0, {-16, -16}, {137, 38, 235, 255} }},
-	{{ {-9, 73, -34}, 0, {-16, -16}, {186, 104, 235, 255} }},
-};
-
-Gfx mario_000_offset_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_offset_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(0, 6, 5, 0),
-	gsSP1Triangle(6, 0, 7, 0),
-	gsSP1Triangle(8, 7, 0, 0),
-	gsSP1Triangle(0, 2, 8, 0),
-	gsSP1Triangle(9, 8, 2, 0),
-	gsSP1Triangle(2, 10, 9, 0),
-	gsSP1Triangle(10, 2, 11, 0),
-	gsSP1Triangle(1, 11, 2, 0),
-	gsSP1Triangle(1, 12, 11, 0),
-	gsSP1Triangle(12, 1, 3, 0),
-	gsSP1Triangle(3, 13, 12, 0),
-	gsSP1Triangle(14, 13, 3, 0),
-	gsSP1Triangle(4, 14, 3, 0),
-	gsSP1Triangle(15, 14, 4, 0),
-	gsSPVertex(mario_000_offset_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(0, 3, 4, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 7, 5, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 13, 11, 0),
-	gsSP1Triangle(11, 15, 14, 0),
-	gsSPVertex(mario_000_offset_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(4, 5, 2, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 6, 4, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(mario_000_offset_mesh_layer_1_vtx_0 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(9, 6, 8, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(mario_000_offset_mesh_layer_1_vtx_0 + 64, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(0, 3, 4, 0),
-	gsSP1Triangle(4, 5, 0, 0),
-	gsSP1Triangle(5, 6, 0, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(6, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(0, 6, 10, 0),
-	gsSP1Triangle(10, 1, 0, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_offset_001_mesh_layer_1_vtx_0[118] = {
-	{{ {9, 89, -40}, 0, {760, 904}, {14, 120, 217, 255} }},
-	{{ {28, 85, -29}, 0, {974, 496}, {44, 118, 240, 255} }},
-	{{ {47, 75, -34}, 0, {834, 56}, {72, 102, 230, 255} }},
-	{{ {3, 77, -61}, 0, {248, 956}, {3, 108, 189, 255} }},
-	{{ {17, 66, -75}, 0, {-74, 626}, {23, 87, 166, 255} }},
-	{{ {32, 62, -73}, 0, {-40, 294}, {42, 82, 168, 255} }},
-	{{ {48, 64, -58}, 0, {296, -16}, {70, 89, 199, 255} }},
-	{{ {47, 75, 35}, 0, {18, 90}, {72, 102, 26, 255} }},
-	{{ {28, 85, 30}, 0, {-76, 556}, {44, 118, 16, 255} }},
-	{{ {9, 89, 41}, 0, {164, 946}, {16, 120, 39, 255} }},
-	{{ {3, 77, 62}, 0, {666, 950}, {4, 108, 67, 255} }},
-	{{ {17, 66, 76}, 0, {950, 574}, {24, 88, 89, 255} }},
-	{{ {32, 62, 74}, 0, {886, 236}, {41, 82, 88, 255} }},
-	{{ {48, 64, 59}, 0, {532, -16}, {70, 90, 56, 255} }},
-	{{ {47, 75, -34}, 0, {-16, -16}, {72, 102, 230, 255} }},
-	{{ {28, 85, 30}, 0, {-16, -16}, {44, 118, 16, 255} }},
-	{{ {47, 75, 35}, 0, {-16, -16}, {72, 102, 26, 255} }},
-	{{ {28, 85, -29}, 0, {-16, -16}, {44, 118, 240, 255} }},
-	{{ {9, 89, -40}, 0, {-16, -16}, {14, 120, 217, 255} }},
-	{{ {9, 89, 41}, 0, {-16, -16}, {16, 120, 39, 255} }},
-	{{ {-15, 88, 35}, 0, {-16, -16}, {236, 122, 28, 255} }},
-	{{ {-15, 87, -35}, 0, {-16, -16}, {236, 122, 226, 255} }},
-	{{ {3, 77, -61}, 0, {-16, -16}, {3, 108, 189, 255} }},
-	{{ {-28, 63, -74}, 0, {-16, -16}, {204, 72, 165, 255} }},
-	{{ {-4, 58, -82}, 0, {-16, -16}, {250, 65, 147, 255} }},
-	{{ {17, 66, -75}, 0, {-16, -16}, {23, 87, 166, 255} }},
-	{{ {12, 33, -90}, 0, {-16, -16}, {13, 28, 133, 255} }},
-	{{ {32, 62, -73}, 0, {-16, -16}, {42, 82, 168, 255} }},
-	{{ {43, 51, -74}, 0, {-16, -16}, {61, 53, 158, 255} }},
-	{{ {48, 64, -58}, 0, {-16, -16}, {70, 89, 199, 255} }},
-	{{ {80, 14, -61}, 0, {-16, -16}, {97, 35, 182, 255} }},
-	{{ {43, 51, -74}, 0, {-16, -16}, {61, 53, 158, 255} }},
-	{{ {48, 64, -58}, 0, {-16, -16}, {70, 89, 199, 255} }},
-	{{ {82, 37, -26}, 0, {-16, -16}, {105, 69, 235, 255} }},
-	{{ {47, 75, -34}, 0, {-16, -16}, {72, 102, 230, 255} }},
-	{{ {100, 1, -23}, 0, {-16, -16}, {124, 17, 235, 255} }},
-	{{ {84, -29, -62}, 0, {-16, -16}, {95, 216, 181, 255} }},
-	{{ {93, -36, -25}, 0, {-16, -16}, {107, 189, 241, 255} }},
-	{{ {66, -52, -50}, 0, {-16, -16}, {58, 151, 214, 255} }},
-	{{ {54, -63, 0}, 0, {-16, -16}, {47, 138, 0, 255} }},
-	{{ {20, -61, -67}, 0, {-16, -16}, {9, 151, 185, 255} }},
-	{{ {8, -74, 0}, 0, {-16, -16}, {1, 129, 0, 255} }},
-	{{ {20, -61, 68}, 0, {-16, -16}, {9, 151, 71, 255} }},
-	{{ {66, -52, 51}, 0, {-16, -16}, {58, 151, 42, 255} }},
-	{{ {93, -36, 26}, 0, {-16, -16}, {107, 189, 15, 255} }},
-	{{ {84, -29, 63}, 0, {-16, -16}, {95, 216, 75, 255} }},
-	{{ {84, -29, 63}, 0, {-16, -16}, {95, 216, 75, 255} }},
-	{{ {93, -36, 26}, 0, {-16, -16}, {107, 189, 15, 255} }},
-	{{ {100, 1, 24}, 0, {-16, -16}, {124, 17, 21, 255} }},
-	{{ {80, 14, 62}, 0, {-16, -16}, {97, 35, 74, 255} }},
-	{{ {82, 37, 27}, 0, {-16, -16}, {105, 69, 21, 255} }},
-	{{ {48, 64, 59}, 0, {-16, -16}, {70, 90, 56, 255} }},
-	{{ {47, 75, 35}, 0, {-16, -16}, {72, 102, 26, 255} }},
-	{{ {44, 51, 75}, 0, {-16, -16}, {62, 54, 97, 255} }},
-	{{ {32, 62, 74}, 0, {-16, -16}, {41, 82, 88, 255} }},
-	{{ {13, 33, 91}, 0, {-16, -16}, {15, 27, 123, 255} }},
-	{{ {17, 66, 76}, 0, {-16, -16}, {24, 88, 89, 255} }},
-	{{ {-4, 58, 84}, 0, {-16, -16}, {251, 66, 109, 255} }},
-	{{ {3, 77, 62}, 0, {-16, -16}, {4, 108, 67, 255} }},
-	{{ {-28, 63, 75}, 0, {-16, -16}, {203, 73, 89, 255} }},
-	{{ {-15, 88, 35}, 0, {-16, -16}, {236, 122, 28, 255} }},
-	{{ {9, 89, 41}, 0, {-16, -16}, {16, 120, 39, 255} }},
-	{{ {-15, 88, 35}, 0, {-16, -16}, {236, 122, 28, 255} }},
-	{{ {-40, 72, 55}, 0, {-16, -16}, {192, 89, 65, 255} }},
-	{{ {-28, 63, 75}, 0, {-16, -16}, {203, 73, 89, 255} }},
-	{{ {-43, 83, 25}, 0, {-16, -16}, {196, 111, 18, 255} }},
-	{{ {-43, 83, -24}, 0, {-16, -16}, {197, 111, 238, 255} }},
-	{{ {-15, 87, -35}, 0, {-16, -16}, {236, 122, 226, 255} }},
-	{{ {-40, 72, -54}, 0, {-16, -16}, {193, 90, 192, 255} }},
-	{{ {-28, 63, -74}, 0, {-16, -16}, {204, 72, 165, 255} }},
-	{{ {-71, 54, -29}, 0, {-16, -16}, {139, 37, 222, 255} }},
-	{{ {-27, 26, -89}, 0, {-16, -16}, {196, 13, 145, 255} }},
-	{{ {-4, 58, -82}, 0, {-16, -16}, {250, 65, 147, 255} }},
-	{{ {12, 33, -90}, 0, {-16, -16}, {13, 28, 133, 255} }},
-	{{ {6, -10, -92}, 0, {-16, -16}, {0, 235, 131, 255} }},
-	{{ {-27, -25, -86}, 0, {-16, -16}, {197, 218, 150, 255} }},
-	{{ {20, -61, -67}, 0, {-16, -16}, {9, 151, 185, 255} }},
-	{{ {46, -34, -83}, 0, {-16, -16}, {35, 202, 146, 255} }},
-	{{ {46, -34, -83}, 0, {-16, -16}, {35, 202, 146, 255} }},
-	{{ {66, -52, -50}, 0, {-16, -16}, {58, 151, 214, 255} }},
-	{{ {20, -61, -67}, 0, {-16, -16}, {9, 151, 185, 255} }},
-	{{ {84, -29, -62}, 0, {-16, -16}, {95, 216, 181, 255} }},
-	{{ {-29, -58, -59}, 0, {-16, -16}, {197, 159, 199, 255} }},
-	{{ {-27, -25, -86}, 0, {-16, -16}, {197, 218, 150, 255} }},
-	{{ {8, -74, 0}, 0, {-16, -16}, {1, 129, 0, 255} }},
-	{{ {-30, -66, 0}, 0, {-16, -16}, {192, 146, 0, 255} }},
-	{{ {-29, -58, 59}, 0, {-16, -16}, {196, 158, 55, 255} }},
-	{{ {20, -61, 68}, 0, {-16, -16}, {9, 151, 71, 255} }},
-	{{ {-27, -25, 87}, 0, {-16, -16}, {197, 217, 105, 255} }},
-	{{ {6, -11, 93}, 0, {-16, -16}, {0, 233, 125, 255} }},
-	{{ {46, -34, 84}, 0, {-16, -16}, {35, 202, 110, 255} }},
-	{{ {66, -52, 51}, 0, {-16, -16}, {58, 151, 42, 255} }},
-	{{ {84, -29, 63}, 0, {-16, -16}, {95, 216, 75, 255} }},
-	{{ {-27, 26, 91}, 0, {-16, -16}, {197, 13, 112, 255} }},
-	{{ {-27, 26, 91}, 0, {-16, -16}, {197, 13, 112, 255} }},
-	{{ {6, -11, 93}, 0, {-16, -16}, {0, 233, 125, 255} }},
-	{{ {13, 33, 91}, 0, {-16, -16}, {15, 27, 123, 255} }},
-	{{ {-4, 58, 84}, 0, {-16, -16}, {251, 66, 109, 255} }},
-	{{ {-28, 63, 75}, 0, {-16, -16}, {203, 73, 89, 255} }},
-	{{ {-71, 54, 30}, 0, {-16, -16}, {139, 37, 34, 255} }},
-	{{ {-40, 72, 55}, 0, {-16, -16}, {192, 89, 65, 255} }},
-	{{ {-43, 83, 25}, 0, {-16, -16}, {196, 111, 18, 255} }},
-	{{ {-71, 54, -29}, 0, {-16, -16}, {139, 37, 222, 255} }},
-	{{ {-43, 83, -24}, 0, {-16, -16}, {197, 111, 238, 255} }},
-	{{ {-40, 72, -54}, 0, {-16, -16}, {193, 90, 192, 255} }},
-	{{ {-59, -28, 38}, 0, {-16, -16}, {141, 212, 33, 255} }},
-	{{ {-59, -28, -37}, 0, {-16, -16}, {141, 213, 223, 255} }},
-	{{ {-27, 26, -89}, 0, {-16, -16}, {196, 13, 145, 255} }},
-	{{ {-27, -25, -86}, 0, {-16, -16}, {197, 218, 150, 255} }},
-	{{ {-29, -58, -59}, 0, {-16, -16}, {197, 159, 199, 255} }},
-	{{ {-30, -66, 0}, 0, {-16, -16}, {192, 146, 0, 255} }},
-	{{ {-59, -28, -37}, 0, {-16, -16}, {141, 213, 223, 255} }},
-	{{ {-29, -58, -59}, 0, {-16, -16}, {197, 159, 199, 255} }},
-	{{ {-59, -28, 38}, 0, {-16, -16}, {141, 212, 33, 255} }},
-	{{ {-29, -58, 59}, 0, {-16, -16}, {196, 158, 55, 255} }},
-	{{ {-27, -25, 87}, 0, {-16, -16}, {197, 217, 105, 255} }},
-	{{ {-27, 26, 91}, 0, {-16, -16}, {197, 13, 112, 255} }},
-	{{ {-71, 54, 30}, 0, {-16, -16}, {139, 37, 34, 255} }},
-};
-
-Gfx mario_000_offset_001_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_offset_001_mesh_layer_1_vtx_0 + 0, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 4, 2, 0),
-	gsSP1Triangle(2, 6, 5, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSP1Triangle(10, 11, 7, 0),
-	gsSP1Triangle(11, 12, 7, 0),
-	gsSP1Triangle(12, 13, 7, 0),
-	gsSPVertex(mario_000_offset_001_mesh_layer_1_vtx_0 + 14, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(7, 4, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(mario_000_offset_001_mesh_layer_1_vtx_0 + 30, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(0, 3, 5, 0),
-	gsSP1Triangle(0, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 11, 9, 0),
-	gsSP1Triangle(12, 9, 13, 0),
-	gsSP1Triangle(14, 13, 9, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(mario_000_offset_001_mesh_layer_1_vtx_0 + 46, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(5, 7, 3, 0),
-	gsSP1Triangle(8, 7, 5, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(mario_000_offset_001_mesh_layer_1_vtx_0 + 62, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 7, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 9, 11, 0),
-	gsSP1Triangle(13, 9, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(mario_000_offset_001_mesh_layer_1_vtx_0 + 78, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(2, 4, 5, 0),
-	gsSP1Triangle(4, 2, 6, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(9, 13, 12, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(11, 15, 10, 0),
-	gsSPVertex(mario_000_offset_001_mesh_layer_1_vtx_0 + 94, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(5, 0, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(7, 8, 5, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 11, 5, 0),
-	gsSP1Triangle(8, 12, 11, 0),
-	gsSP1Triangle(12, 8, 13, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(mario_000_offset_001_mesh_layer_1_vtx_0 + 110, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(3, 5, 6, 0),
-	gsSP1Triangle(6, 7, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_offset_001_mesh_layer_1_vtx_1[23] = {
-	{{ {47, 75, -34}, 0, {-16, -16}, {72, 102, 230, 255} }},
-	{{ {47, 75, 35}, 0, {-16, -16}, {72, 102, 26, 255} }},
-	{{ {82, 37, 27}, 0, {-16, -16}, {105, 69, 21, 255} }},
-	{{ {82, 37, -26}, 0, {-16, -16}, {105, 69, 235, 255} }},
-	{{ {100, 1, 24}, 0, {-16, -16}, {124, 17, 21, 255} }},
-	{{ {100, 1, -23}, 0, {-16, -16}, {124, 17, 235, 255} }},
-	{{ {93, -36, 26}, 0, {-16, -16}, {107, 189, 15, 255} }},
-	{{ {93, -36, -25}, 0, {-16, -16}, {107, 189, 241, 255} }},
-	{{ {54, -63, 0}, 0, {-16, -16}, {47, 138, 0, 255} }},
-	{{ {46, -34, 84}, 0, {-16, -16}, {35, 202, 110, 255} }},
-	{{ {47, 3, 89}, 0, {-16, -16}, {47, 8, 118, 255} }},
-	{{ {6, -11, 93}, 0, {-16, -16}, {0, 233, 125, 255} }},
-	{{ {84, -29, 63}, 0, {-16, -16}, {95, 216, 75, 255} }},
-	{{ {80, 14, 62}, 0, {-16, -16}, {97, 35, 74, 255} }},
-	{{ {44, 51, 75}, 0, {-16, -16}, {62, 54, 97, 255} }},
-	{{ {13, 33, 91}, 0, {-16, -16}, {15, 27, 123, 255} }},
-	{{ {6, -10, -92}, 0, {-16, -16}, {0, 235, 131, 255} }},
-	{{ {47, 3, -88}, 0, {-16, -16}, {47, 8, 138, 255} }},
-	{{ {46, -34, -83}, 0, {-16, -16}, {35, 202, 146, 255} }},
-	{{ {12, 33, -90}, 0, {-16, -16}, {13, 28, 133, 255} }},
-	{{ {43, 51, -74}, 0, {-16, -16}, {61, 53, 158, 255} }},
-	{{ {80, 14, -61}, 0, {-16, -16}, {97, 35, 182, 255} }},
-	{{ {84, -29, -62}, 0, {-16, -16}, {95, 216, 181, 255} }},
-};
-
-Gfx mario_000_offset_001_mesh_layer_1_tri_1[] = {
-	gsSPVertex(mario_000_offset_001_mesh_layer_1_vtx_1 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(10, 9, 12, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(14, 10, 13, 0),
-	gsSP1Triangle(15, 10, 14, 0),
-	gsSP1Triangle(15, 11, 10, 0),
-	gsSPVertex(mario_000_offset_001_mesh_layer_1_vtx_1 + 16, 7, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(6, 1, 5, 0),
-	gsSP1Triangle(6, 2, 1, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_mesh_layer_1_vtx_0[99] = {
-	{{ {97, 103, 25}, 0, {708, 942}, {78, 66, 76, 255} }},
-	{{ {104, 87, 70}, 0, {1122, 848}, {43, 99, 68, 255} }},
-	{{ {144, 83, 67}, 0, {1092, 412}, {32, 91, 83, 255} }},
-	{{ {175, 91, 39}, 0, {826, 96}, {165, 88, 10, 255} }},
-	{{ {153, 33, 95}, 0, {1346, 280}, {0, 70, 106, 255} }},
-	{{ {145, 101, 0}, 0, {464, 430}, {22, 125, 0, 255} }},
-	{{ {175, 91, -38}, 0, {90, 114}, {165, 88, 246, 255} }},
-	{{ {97, 103, -24}, 0, {240, 954}, {78, 65, 179, 255} }},
-	{{ {144, 83, -66}, 0, {-162, 444}, {32, 91, 173, 255} }},
-	{{ {153, 33, -94}, 0, {-420, 326}, {0, 69, 149, 255} }},
-	{{ {104, 87, -69}, 0, {-176, 882}, {43, 99, 188, 255} }},
-	{{ {92, 88, 84}, 0, {-16, -16}, {42, 78, 91, 255} }},
-	{{ {104, 87, 70}, 0, {-16, -16}, {43, 99, 68, 255} }},
-	{{ {97, 103, 25}, 0, {-16, -16}, {78, 66, 76, 255} }},
-	{{ {96, 49, 94}, 0, {-16, -16}, {11, 40, 120, 255} }},
-	{{ {44, 44, 97}, 0, {-16, -16}, {209, 29, 114, 255} }},
-	{{ {144, 83, 67}, 0, {-16, -16}, {32, 91, 83, 255} }},
-	{{ {104, 87, 70}, 0, {-16, -16}, {43, 99, 68, 255} }},
-	{{ {96, 49, 94}, 0, {-16, -16}, {11, 40, 120, 255} }},
-	{{ {153, 33, 95}, 0, {-16, -16}, {0, 70, 106, 255} }},
-	{{ {97, 103, -24}, 0, {240, 954}, {78, 65, 179, 255} }},
-	{{ {108, 105, 0}, 0, {472, 838}, {101, 77, 255, 255} }},
-	{{ {145, 101, 0}, 0, {464, 430}, {22, 125, 0, 255} }},
-	{{ {97, 103, 25}, 0, {708, 942}, {78, 66, 76, 255} }},
-	{{ {92, 88, -83}, 0, {-16, -16}, {42, 78, 165, 255} }},
-	{{ {97, 103, -24}, 0, {-16, -16}, {78, 65, 179, 255} }},
-	{{ {104, 87, -69}, 0, {-16, -16}, {43, 99, 188, 255} }},
-	{{ {96, 49, -93}, 0, {-16, -16}, {12, 40, 136, 255} }},
-	{{ {144, 83, -66}, 0, {-16, -16}, {32, 91, 173, 255} }},
-	{{ {153, 33, -94}, 0, {-16, -16}, {0, 69, 149, 255} }},
-	{{ {44, 44, -96}, 0, {-16, -16}, {209, 29, 142, 255} }},
-	{{ {44, 44, 97}, 0, {-16, -16}, {209, 29, 114, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {42, 0, 103}, 0, {-16, -16}, {184, 0, 105, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {-7, 62, 0}, 0, {-16, -16}, {133, 33, 0, 255} }},
-	{{ {17, -52, -46}, 0, {-16, -16}, {134, 252, 222, 255} }},
-	{{ {3, 54, -51}, 0, {-16, -16}, {143, 25, 203, 255} }},
-	{{ {42, 0, -102}, 0, {-16, -16}, {184, 0, 151, 255} }},
-	{{ {44, 44, -96}, 0, {-16, -16}, {209, 29, 142, 255} }},
-	{{ {56, -45, -76}, 0, {-16, -16}, {202, 199, 156, 255} }},
-	{{ {64, -25, -134}, 0, {-16, -16}, {214, 5, 136, 255} }},
-	{{ {85, -23, -110}, 0, {-16, -16}, {7, 91, 167, 255} }},
-	{{ {102, -33, -134}, 0, {-16, -16}, {50, 237, 141, 255} }},
-	{{ {120, -12, -109}, 0, {-16, -16}, {239, 31, 134, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {198, 192, 163, 255} }},
-	{{ {97, 103, 25}, 0, {-16, -16}, {78, 66, 76, 255} }},
-	{{ {108, 105, 0}, 0, {-16, -16}, {101, 77, 255, 255} }},
-	{{ {117, 128, 0}, 0, {-16, -16}, {124, 229, 0, 255} }},
-	{{ {97, 103, -24}, 0, {-16, -16}, {78, 65, 179, 255} }},
-	{{ {102, 129, -40}, 0, {-16, -16}, {76, 224, 160, 255} }},
-	{{ {77, 108, -33}, 0, {-16, -16}, {23, 45, 139, 255} }},
-	{{ {75, 130, -45}, 0, {-16, -16}, {255, 226, 133, 255} }},
-	{{ {47, 131, -40}, 0, {-16, -16}, {175, 233, 161, 255} }},
-	{{ {52, 111, -30}, 0, {-16, -16}, {179, 54, 170, 255} }},
-	{{ {32, 132, 0}, 0, {-16, -16}, {130, 237, 254, 255} }},
-	{{ {41, 109, 0}, 0, {-16, -16}, {141, 54, 0, 255} }},
-	{{ {52, 111, 31}, 0, {-16, -16}, {179, 55, 85, 255} }},
-	{{ {47, 131, 41}, 0, {-16, -16}, {176, 231, 96, 255} }},
-	{{ {77, 108, 34}, 0, {-16, -16}, {23, 45, 117, 255} }},
-	{{ {75, 130, 46}, 0, {-16, -16}, {255, 226, 123, 255} }},
-	{{ {102, 129, 41}, 0, {-16, -16}, {77, 224, 96, 255} }},
-	{{ {104, 162, 41}, 0, {-16, -16}, {73, 57, 87, 255} }},
-	{{ {102, 129, 41}, 0, {-16, -16}, {77, 224, 96, 255} }},
-	{{ {117, 128, 0}, 0, {-16, -16}, {124, 229, 0, 255} }},
-	{{ {119, 161, 0}, 0, {-16, -16}, {120, 41, 0, 255} }},
-	{{ {102, 129, -40}, 0, {-16, -16}, {76, 224, 160, 255} }},
-	{{ {104, 162, -40}, 0, {-16, -16}, {72, 56, 168, 255} }},
-	{{ {75, 130, -45}, 0, {-16, -16}, {255, 226, 133, 255} }},
-	{{ {78, 163, -45}, 0, {-16, -16}, {3, 67, 148, 255} }},
-	{{ {52, 164, -40}, 0, {-16, -16}, {194, 66, 167, 255} }},
-	{{ {47, 131, -40}, 0, {-16, -16}, {175, 233, 161, 255} }},
-	{{ {32, 132, 0}, 0, {-16, -16}, {130, 237, 254, 255} }},
-	{{ {33, 165, 0}, 0, {-16, -16}, {144, 60, 254, 255} }},
-	{{ {47, 131, 41}, 0, {-16, -16}, {176, 231, 96, 255} }},
-	{{ {52, 164, 41}, 0, {-16, -16}, {195, 67, 89, 255} }},
-	{{ {75, 130, 46}, 0, {-16, -16}, {255, 226, 123, 255} }},
-	{{ {78, 163, 46}, 0, {-16, -16}, {3, 68, 107, 255} }},
-	{{ {104, 162, 41}, 0, {-16, -16}, {73, 57, 87, 255} }},
-	{{ {101, 179, 0}, 0, {-16, -16}, {47, 118, 0, 255} }},
-	{{ {78, 163, 46}, 0, {-16, -16}, {3, 68, 107, 255} }},
-	{{ {119, 161, 0}, 0, {-16, -16}, {120, 41, 0, 255} }},
-	{{ {104, 162, -40}, 0, {-16, -16}, {72, 56, 168, 255} }},
-	{{ {78, 163, -45}, 0, {-16, -16}, {3, 67, 148, 255} }},
-	{{ {60, 181, 0}, 0, {-16, -16}, {230, 124, 0, 255} }},
-	{{ {52, 164, -40}, 0, {-16, -16}, {194, 66, 167, 255} }},
-	{{ {33, 165, 0}, 0, {-16, -16}, {144, 60, 254, 255} }},
-	{{ {52, 164, 41}, 0, {-16, -16}, {195, 67, 89, 255} }},
-	{{ {42, 0, 103}, 0, {-16, -16}, {184, 0, 105, 255} }},
-	{{ {64, -25, 135}, 0, {-16, -16}, {214, 5, 120, 255} }},
-	{{ {85, -23, 111}, 0, {-16, -16}, {5, 91, 89, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {198, 192, 93, 255} }},
-	{{ {64, -25, 135}, 0, {-16, -16}, {214, 5, 120, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {198, 192, 93, 255} }},
-	{{ {102, -33, 135}, 0, {-16, -16}, {49, 236, 116, 255} }},
-	{{ {120, -11, 111}, 0, {-16, -16}, {238, 32, 122, 255} }},
-	{{ {85, -23, 111}, 0, {-16, -16}, {5, 91, 89, 255} }},
-};
-
-Gfx mario_000_displaylist_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(3, 5, 0, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(8, 6, 9, 0),
-	gsSP1Triangle(10, 7, 8, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(12, 11, 14, 0),
-	gsSP1Triangle(15, 14, 11, 0),
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_0 + 16, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(8, 11, 14, 0),
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_0 + 31, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(7, 9, 5, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(11, 10, 7, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(10, 12, 14, 0),
-	gsSP1Triangle(9, 10, 14, 0),
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_0 + 46, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSP1Triangle(13, 0, 15, 0),
-	gsSP1Triangle(2, 15, 0, 0),
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_0 + 62, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 8, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSP1Triangle(15, 14, 0, 0),
-	gsSP1Triangle(14, 1, 0, 0),
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_0 + 78, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(1, 4, 5, 0),
-	gsSP1Triangle(5, 6, 1, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(9, 2, 6, 0),
-	gsSP1Triangle(6, 2, 1, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 10, 13, 0),
-	gsSP1Triangle(14, 13, 10, 0),
-	gsSP1Triangle(11, 13, 15, 0),
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_0 + 94, 5, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(0, 2, 4, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_mesh_layer_1_vtx_1[27] = {
-	{{ {92, 88, -83}, 0, {906, -20}, {42, 78, 165, 255} }},
-	{{ {77, 108, -33}, 0, {346, 328}, {23, 45, 139, 255} }},
-	{{ {97, 103, -24}, 0, {258, 84}, {78, 65, 179, 255} }},
-	{{ {48, 94, -75}, 0, {840, 592}, {214, 89, 176, 255} }},
-	{{ {44, 44, -96}, 0, {1234, 502}, {209, 29, 142, 255} }},
-	{{ {3, 54, -51}, 0, {790, 1146}, {143, 25, 203, 255} }},
-	{{ {27, 100, -29}, 0, {378, 982}, {176, 96, 230, 255} }},
-	{{ {52, 111, -30}, 0, {324, 668}, {179, 54, 170, 255} }},
-	{{ {41, 109, 0}, 0, {34, 884}, {141, 54, 0, 255} }},
-	{{ {27, 100, 30}, 0, {426, 966}, {176, 96, 26, 255} }},
-	{{ {52, 111, 31}, 0, {338, 674}, {179, 55, 85, 255} }},
-	{{ {41, 109, 0}, 0, {54, 908}, {141, 54, 0, 255} }},
-	{{ {48, 94, 76}, 0, {872, 548}, {214, 89, 80, 255} }},
-	{{ {3, 54, 52}, 0, {876, 1074}, {143, 25, 53, 255} }},
-	{{ {44, 44, 97}, 0, {1280, 422}, {209, 29, 114, 255} }},
-	{{ {92, 88, 84}, 0, {882, -34}, {42, 78, 91, 255} }},
-	{{ {92, 88, 84}, 0, {882, -34}, {42, 78, 91, 255} }},
-	{{ {77, 108, 34}, 0, {326, 352}, {23, 45, 117, 255} }},
-	{{ {48, 94, 76}, 0, {872, 548}, {214, 89, 80, 255} }},
-	{{ {97, 103, 25}, 0, {208, 130}, {78, 66, 76, 255} }},
-	{{ {52, 111, 31}, 0, {338, 674}, {179, 55, 85, 255} }},
-	{{ {27, 100, -29}, 0, {-16, -16}, {176, 96, 230, 255} }},
-	{{ {3, 54, -51}, 0, {-16, -16}, {143, 25, 203, 255} }},
-	{{ {-7, 62, 0}, 0, {-16, -16}, {133, 33, 0, 255} }},
-	{{ {27, 100, 30}, 0, {-16, -16}, {176, 96, 26, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {41, 109, 0}, 0, {-16, -16}, {141, 54, 0, 255} }},
-};
-
-Gfx mario_000_displaylist_mesh_layer_1_tri_1[] = {
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_1 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(7, 3, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(3, 7, 1, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(9, 12, 10, 0),
-	gsSP1Triangle(13, 12, 9, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_1 + 16, 11, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(1, 4, 2, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 5, 7, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(10, 5, 8, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_mesh_layer_1_vtx_2[28] = {
-	{{ {17, -52, -46}, 0, {-16, -16}, {134, 252, 222, 255} }},
-	{{ {31, -84, 0}, 0, {-16, -16}, {158, 175, 0, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {9, -88, -58}, 0, {-16, -16}, {132, 237, 234, 255} }},
-	{{ {31, -85, -86}, 0, {-16, -16}, {228, 250, 132, 255} }},
-	{{ {56, -45, -76}, 0, {-16, -16}, {202, 199, 156, 255} }},
-	{{ {58, -114, -59}, 0, {-16, -16}, {87, 169, 224, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {242, 149, 189, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {198, 192, 163, 255} }},
-	{{ {36, -116, -35}, 0, {-16, -16}, {239, 146, 61, 255} }},
-	{{ {35, -120, -67}, 0, {-16, -16}, {230, 146, 198, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {242, 149, 67, 255} }},
-	{{ {36, -116, 36}, 0, {-16, -16}, {239, 146, 195, 255} }},
-	{{ {58, -114, 60}, 0, {-16, -16}, {87, 169, 32, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {198, 192, 93, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {31, -85, 87}, 0, {-16, -16}, {228, 250, 124, 255} }},
-	{{ {58, -114, 60}, 0, {-16, -16}, {87, 169, 32, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {9, -88, 59}, 0, {-16, -16}, {132, 237, 22, 255} }},
-	{{ {31, -84, 0}, 0, {-16, -16}, {158, 175, 0, 255} }},
-	{{ {36, -116, 36}, 0, {-16, -16}, {239, 146, 195, 255} }},
-	{{ {35, -120, 68}, 0, {-16, -16}, {230, 146, 58, 255} }},
-	{{ {35, -120, -67}, 0, {-16, -16}, {230, 146, 198, 255} }},
-	{{ {31, -85, -86}, 0, {-16, -16}, {228, 250, 132, 255} }},
-	{{ {58, -114, -59}, 0, {-16, -16}, {87, 169, 224, 255} }},
-	{{ {9, -88, -58}, 0, {-16, -16}, {132, 237, 234, 255} }},
-};
-
-Gfx mario_000_displaylist_mesh_layer_1_tri_2[] = {
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_2 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(9, 6, 7, 0),
-	gsSP1Triangle(9, 10, 6, 0),
-	gsSP1Triangle(3, 10, 9, 0),
-	gsSP1Triangle(3, 9, 1, 0),
-	gsSP1Triangle(1, 9, 7, 0),
-	gsSP1Triangle(1, 7, 11, 0),
-	gsSP1Triangle(1, 11, 12, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(13, 11, 14, 0),
-	gsSP1Triangle(11, 15, 14, 0),
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_2 + 16, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(2, 7, 6, 0),
-	gsSP1Triangle(1, 7, 2, 0),
-	gsSP1Triangle(4, 7, 1, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 8, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_mesh_layer_1_vtx_3[12] = {
-	{{ {96, 49, 94}, 0, {-90, 710}, {11, 40, 120, 255} }},
-	{{ {44, 44, 97}, 0, {180, 1350}, {209, 29, 114, 255} }},
-	{{ {42, 0, 103}, 0, {952, 1176}, {184, 0, 105, 255} }},
-	{{ {85, -23, 111}, 0, {1222, 502}, {5, 91, 89, 255} }},
-	{{ {120, -11, 111}, 0, {906, 106}, {238, 32, 122, 255} }},
-	{{ {153, 33, 95}, 0, {6, -84}, {0, 70, 106, 255} }},
-	{{ {120, -12, -109}, 0, {900, 168}, {239, 31, 134, 255} }},
-	{{ {96, 49, -93}, 0, {-86, 684}, {12, 40, 136, 255} }},
-	{{ {153, 33, -94}, 0, {74, -74}, {0, 69, 149, 255} }},
-	{{ {85, -23, -110}, 0, {1134, 566}, {7, 91, 167, 255} }},
-	{{ {42, 0, -102}, 0, {826, 1194}, {184, 0, 151, 255} }},
-	{{ {44, 44, -96}, 0, {102, 1318}, {209, 29, 142, 255} }},
-};
-
-Gfx mario_000_displaylist_mesh_layer_1_tri_3[] = {
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_3 + 0, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(5, 0, 4, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 7, 6, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(10, 11, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_mesh_layer_1_vtx_4[57] = {
-	{{ {195, 93, 32}, 0, {728, 716}, {82, 82, 52, 255} }},
-	{{ {153, 33, 95}, 0, {1234, 1050}, {0, 70, 106, 255} }},
-	{{ {252, 62, 70}, 0, {1016, 136}, {72, 65, 82, 255} }},
-	{{ {272, 85, 0}, 0, {456, -32}, {94, 86, 0, 255} }},
-	{{ {195, 93, -31}, 0, {216, 720}, {82, 82, 204, 255} }},
-	{{ {252, 62, -69}, 0, {-94, 142}, {72, 65, 173, 255} }},
-	{{ {153, 33, -94}, 0, {-274, 1060}, {0, 69, 149, 255} }},
-	{{ {120, -12, -109}, 0, {-16, -16}, {239, 31, 134, 255} }},
-	{{ {131, -56, -123}, 0, {-16, -16}, {234, 216, 137, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {198, 192, 163, 255} }},
-	{{ {187, -6, -133}, 0, {-16, -16}, {34, 5, 134, 255} }},
-	{{ {153, 33, -94}, 0, {-16, -16}, {0, 69, 149, 255} }},
-	{{ {252, 62, -69}, 0, {-16, -16}, {72, 65, 173, 255} }},
-	{{ {271, 0, -41}, 0, {-16, -16}, {113, 211, 219, 255} }},
-	{{ {272, 85, 0}, 0, {-16, -16}, {94, 86, 0, 255} }},
-	{{ {271, 0, 42}, 0, {-16, -16}, {113, 211, 37, 255} }},
-	{{ {271, 0, 42}, 0, {-16, -16}, {113, 211, 37, 255} }},
-	{{ {272, 85, 0}, 0, {-16, -16}, {94, 86, 0, 255} }},
-	{{ {252, 62, 70}, 0, {-16, -16}, {72, 65, 82, 255} }},
-	{{ {187, -6, 134}, 0, {-16, -16}, {34, 5, 122, 255} }},
-	{{ {153, 33, 95}, 0, {-16, -16}, {0, 70, 106, 255} }},
-	{{ {120, -11, 111}, 0, {-16, -16}, {238, 32, 122, 255} }},
-	{{ {131, -56, 124}, 0, {-16, -16}, {234, 215, 118, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {198, 192, 93, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {242, 149, 67, 255} }},
-	{{ {77, -138, 51}, 0, {-16, -16}, {190, 160, 50, 255} }},
-	{{ {77, -138, -50}, 0, {-16, -16}, {190, 160, 206, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {242, 149, 189, 255} }},
-	{{ {131, -56, -123}, 0, {-16, -16}, {234, 216, 137, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {198, 192, 163, 255} }},
-	{{ {122, -139, -48}, 0, {-16, -16}, {44, 144, 215, 255} }},
-	{{ {164, -89, -74}, 0, {-16, -16}, {74, 167, 204, 255} }},
-	{{ {187, -6, -133}, 0, {-16, -16}, {34, 5, 134, 255} }},
-	{{ {164, -89, -74}, 0, {-16, -16}, {74, 167, 204, 255} }},
-	{{ {131, -56, -123}, 0, {-16, -16}, {234, 216, 137, 255} }},
-	{{ {271, 0, -41}, 0, {-16, -16}, {113, 211, 219, 255} }},
-	{{ {164, -89, 75}, 0, {-16, -16}, {74, 167, 52, 255} }},
-	{{ {271, 0, 42}, 0, {-16, -16}, {113, 211, 37, 255} }},
-	{{ {187, -6, 134}, 0, {-16, -16}, {34, 5, 122, 255} }},
-	{{ {131, -56, 124}, 0, {-16, -16}, {234, 215, 118, 255} }},
-	{{ {122, -139, 49}, 0, {-16, -16}, {44, 144, 41, 255} }},
-	{{ {77, -138, 51}, 0, {-16, -16}, {190, 160, 50, 255} }},
-	{{ {77, -138, -50}, 0, {-16, -16}, {190, 160, 206, 255} }},
-	{{ {122, -139, -48}, 0, {-16, -16}, {44, 144, 215, 255} }},
-	{{ {195, 93, 32}, 0, {-16, -16}, {82, 82, 52, 255} }},
-	{{ {173, 132, 66}, 0, {-16, -16}, {233, 88, 89, 255} }},
-	{{ {153, 33, 95}, 0, {-16, -16}, {0, 70, 106, 255} }},
-	{{ {182, 155, 0}, 0, {-16, -16}, {253, 127, 0, 255} }},
-	{{ {195, 93, -31}, 0, {-16, -16}, {82, 82, 204, 255} }},
-	{{ {182, 155, 0}, 0, {-16, -16}, {253, 127, 0, 255} }},
-	{{ {195, 93, 32}, 0, {-16, -16}, {82, 82, 52, 255} }},
-	{{ {173, 132, -65}, 0, {-16, -16}, {233, 88, 167, 255} }},
-	{{ {153, 33, -94}, 0, {-16, -16}, {0, 69, 149, 255} }},
-	{{ {175, 91, -38}, 0, {-16, -16}, {165, 88, 246, 255} }},
-	{{ {175, 91, 39}, 0, {-16, -16}, {165, 88, 10, 255} }},
-	{{ {173, 132, 66}, 0, {-16, -16}, {233, 88, 89, 255} }},
-	{{ {153, 33, 95}, 0, {-16, -16}, {0, 70, 106, 255} }},
-};
-
-Gfx mario_000_displaylist_mesh_layer_1_tri_4[] = {
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_4 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 8, 7, 0),
-	gsSP1Triangle(11, 10, 7, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_4 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 6, 3, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(12, 14, 10, 0),
-	gsSP1Triangle(15, 14, 12, 0),
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_4 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(7, 8, 4, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(8, 11, 1, 0),
-	gsSP1Triangle(1, 4, 8, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 15, 13, 0),
-	gsSPVertex(mario_000_displaylist_mesh_layer_1_vtx_4 + 48, 9, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 1, 3, 0),
-	gsSP1Triangle(5, 6, 1, 0),
-	gsSP1Triangle(7, 1, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0[103] = {
-	{{ {104, 87, -69}, 0, {-176, 882}, {43, 99, 188, 255} }},
-	{{ {97, 103, -24}, 0, {240, 954}, {78, 65, 179, 255} }},
-	{{ {144, 83, -66}, 0, {-162, 444}, {32, 91, 173, 255} }},
-	{{ {175, 91, -38}, 0, {90, 114}, {33, 115, 214, 255} }},
-	{{ {145, 101, 0}, 0, {464, 430}, {22, 125, 0, 255} }},
-	{{ {108, 105, 0}, 0, {472, 838}, {101, 77, 255, 255} }},
-	{{ {97, 103, 25}, 0, {708, 942}, {78, 66, 76, 255} }},
-	{{ {175, 91, 39}, 0, {826, 96}, {33, 115, 42, 255} }},
-	{{ {144, 83, 67}, 0, {1092, 412}, {32, 91, 83, 255} }},
-	{{ {104, 87, 70}, 0, {1122, 848}, {43, 99, 68, 255} }},
-	{{ {153, 33, 95}, 0, {1346, 280}, {255, 54, 115, 255} }},
-	{{ {153, 33, -94}, 0, {-420, 326}, {245, 51, 140, 255} }},
-	{{ {144, 83, -66}, 0, {-16, -16}, {32, 91, 173, 255} }},
-	{{ {153, 33, -94}, 0, {-16, -16}, {245, 51, 140, 255} }},
-	{{ {96, 49, -93}, 0, {-16, -16}, {12, 40, 136, 255} }},
-	{{ {104, 87, -69}, 0, {-16, -16}, {43, 99, 188, 255} }},
-	{{ {96, 49, -93}, 0, {-16, -16}, {12, 40, 136, 255} }},
-	{{ {92, 88, -83}, 0, {-16, -16}, {42, 78, 165, 255} }},
-	{{ {104, 87, -69}, 0, {-16, -16}, {43, 99, 188, 255} }},
-	{{ {44, 44, -96}, 0, {-16, -16}, {209, 29, 142, 255} }},
-	{{ {97, 103, -24}, 0, {-16, -16}, {78, 65, 179, 255} }},
-	{{ {92, 88, 84}, 0, {-16, -16}, {42, 78, 91, 255} }},
-	{{ {104, 87, 70}, 0, {-16, -16}, {43, 99, 68, 255} }},
-	{{ {97, 103, 25}, 0, {-16, -16}, {78, 66, 76, 255} }},
-	{{ {96, 49, 94}, 0, {-16, -16}, {11, 40, 120, 255} }},
-	{{ {44, 44, 97}, 0, {-16, -16}, {209, 29, 114, 255} }},
-	{{ {144, 83, 67}, 0, {-16, -16}, {32, 91, 83, 255} }},
-	{{ {153, 33, 95}, 0, {-16, -16}, {255, 54, 115, 255} }},
-	{{ {42, 0, -102}, 0, {-16, -16}, {184, 0, 151, 255} }},
-	{{ {3, 54, -51}, 0, {-16, -16}, {143, 25, 203, 255} }},
-	{{ {17, -52, -46}, 0, {-16, -16}, {134, 252, 222, 255} }},
-	{{ {56, -45, -76}, 0, {-16, -16}, {202, 199, 156, 255} }},
-	{{ {42, 0, -102}, 0, {-16, -16}, {184, 0, 151, 255} }},
-	{{ {64, -25, -134}, 0, {-16, -16}, {214, 5, 136, 255} }},
-	{{ {56, -45, -76}, 0, {-16, -16}, {202, 199, 156, 255} }},
-	{{ {85, -23, -110}, 0, {-16, -16}, {7, 91, 167, 255} }},
-	{{ {102, -33, -134}, 0, {-16, -16}, {50, 237, 141, 255} }},
-	{{ {120, -12, -109}, 0, {-16, -16}, {1, 14, 130, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {218, 182, 160, 255} }},
-	{{ {17, -52, -46}, 0, {-16, -16}, {134, 252, 222, 255} }},
-	{{ {-7, 62, 0}, 0, {-16, -16}, {133, 33, 0, 255} }},
-	{{ {3, 54, -51}, 0, {-16, -16}, {143, 25, 203, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {31, -84, 0}, 0, {-16, -16}, {158, 175, 0, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {42, 0, 103}, 0, {-16, -16}, {184, 0, 105, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {64, -25, 135}, 0, {-16, -16}, {214, 5, 120, 255} }},
-	{{ {64, -25, 135}, 0, {-16, -16}, {214, 5, 120, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {218, 182, 96, 255} }},
-	{{ {102, -33, 135}, 0, {-16, -16}, {49, 236, 116, 255} }},
-	{{ {120, -11, 111}, 0, {-16, -16}, {0, 15, 126, 255} }},
-	{{ {85, -23, 111}, 0, {-16, -16}, {5, 91, 89, 255} }},
-	{{ {42, 0, 103}, 0, {-16, -16}, {184, 0, 105, 255} }},
-	{{ {44, 44, 97}, 0, {-16, -16}, {209, 29, 114, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {97, 103, 25}, 0, {-16, -16}, {78, 66, 76, 255} }},
-	{{ {108, 105, 0}, 0, {-16, -16}, {101, 77, 255, 255} }},
-	{{ {117, 128, 0}, 0, {-16, -16}, {124, 229, 0, 255} }},
-	{{ {97, 103, -24}, 0, {-16, -16}, {78, 65, 179, 255} }},
-	{{ {102, 129, -40}, 0, {-16, -16}, {76, 224, 160, 255} }},
-	{{ {77, 108, -33}, 0, {-16, -16}, {23, 45, 139, 255} }},
-	{{ {75, 130, -45}, 0, {-16, -16}, {255, 226, 133, 255} }},
-	{{ {47, 131, -40}, 0, {-16, -16}, {175, 233, 161, 255} }},
-	{{ {75, 130, -45}, 0, {-16, -16}, {255, 226, 133, 255} }},
-	{{ {77, 108, -33}, 0, {-16, -16}, {23, 45, 139, 255} }},
-	{{ {52, 111, -30}, 0, {-16, -16}, {179, 54, 170, 255} }},
-	{{ {32, 132, 0}, 0, {-16, -16}, {130, 237, 254, 255} }},
-	{{ {41, 109, 0}, 0, {-16, -16}, {141, 54, 0, 255} }},
-	{{ {52, 111, 31}, 0, {-16, -16}, {179, 55, 85, 255} }},
-	{{ {47, 131, 41}, 0, {-16, -16}, {176, 231, 96, 255} }},
-	{{ {77, 108, 34}, 0, {-16, -16}, {23, 45, 117, 255} }},
-	{{ {75, 130, 46}, 0, {-16, -16}, {255, 226, 123, 255} }},
-	{{ {102, 129, 41}, 0, {-16, -16}, {77, 224, 96, 255} }},
-	{{ {97, 103, 25}, 0, {-16, -16}, {78, 66, 76, 255} }},
-	{{ {117, 128, 0}, 0, {-16, -16}, {124, 229, 0, 255} }},
-	{{ {104, 162, 41}, 0, {-16, -16}, {73, 57, 87, 255} }},
-	{{ {119, 161, 0}, 0, {-16, -16}, {120, 41, 0, 255} }},
-	{{ {102, 129, -40}, 0, {-16, -16}, {76, 224, 160, 255} }},
-	{{ {102, 129, -40}, 0, {-16, -16}, {76, 224, 160, 255} }},
-	{{ {104, 162, -40}, 0, {-16, -16}, {72, 56, 168, 255} }},
-	{{ {119, 161, 0}, 0, {-16, -16}, {120, 41, 0, 255} }},
-	{{ {75, 130, -45}, 0, {-16, -16}, {255, 226, 133, 255} }},
-	{{ {78, 163, -45}, 0, {-16, -16}, {3, 67, 148, 255} }},
-	{{ {52, 164, -40}, 0, {-16, -16}, {194, 66, 167, 255} }},
-	{{ {47, 131, -40}, 0, {-16, -16}, {175, 233, 161, 255} }},
-	{{ {32, 132, 0}, 0, {-16, -16}, {130, 237, 254, 255} }},
-	{{ {33, 165, 0}, 0, {-16, -16}, {144, 60, 254, 255} }},
-	{{ {47, 131, 41}, 0, {-16, -16}, {176, 231, 96, 255} }},
-	{{ {52, 164, 41}, 0, {-16, -16}, {195, 67, 89, 255} }},
-	{{ {75, 130, 46}, 0, {-16, -16}, {255, 226, 123, 255} }},
-	{{ {78, 163, 46}, 0, {-16, -16}, {3, 68, 107, 255} }},
-	{{ {104, 162, 41}, 0, {-16, -16}, {73, 57, 87, 255} }},
-	{{ {102, 129, 41}, 0, {-16, -16}, {77, 224, 96, 255} }},
-	{{ {101, 179, 0}, 0, {-16, -16}, {47, 118, 0, 255} }},
-	{{ {78, 163, -45}, 0, {-16, -16}, {3, 67, 148, 255} }},
-	{{ {60, 181, 0}, 0, {-16, -16}, {230, 124, 0, 255} }},
-	{{ {101, 179, 0}, 0, {-16, -16}, {47, 118, 0, 255} }},
-	{{ {52, 164, -40}, 0, {-16, -16}, {194, 66, 167, 255} }},
-	{{ {33, 165, 0}, 0, {-16, -16}, {144, 60, 254, 255} }},
-	{{ {52, 164, 41}, 0, {-16, -16}, {195, 67, 89, 255} }},
-	{{ {78, 163, 46}, 0, {-16, -16}, {3, 68, 107, 255} }},
-};
-
-Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(1, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(10, 7, 8, 0),
-	gsSP1Triangle(3, 4, 7, 0),
-	gsSP1Triangle(2, 3, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(1, 4, 2, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 5, 8, 0),
-	gsSP1Triangle(9, 8, 5, 0),
-	gsSP1Triangle(10, 6, 8, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(12, 13, 3, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(1, 4, 6, 0),
-	gsSP1Triangle(2, 1, 6, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(7, 10, 8, 0),
-	gsSP1Triangle(7, 11, 10, 0),
-	gsSP1Triangle(10, 12, 8, 0),
-	gsSP1Triangle(12, 10, 13, 0),
-	gsSP1Triangle(10, 14, 13, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(0, 3, 5, 0),
-	gsSP1Triangle(6, 0, 5, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 80, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 5, 7, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(11, 14, 13, 0),
-	gsSP1Triangle(13, 15, 12, 0),
-	gsSP1Triangle(15, 13, 2, 0),
-	gsSP1Triangle(15, 2, 1, 0),
-	gsSP1Triangle(15, 1, 4, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 96, 7, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(4, 5, 1, 0),
-	gsSP1Triangle(5, 6, 1, 0),
-	gsSP1Triangle(1, 6, 2, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_1[30] = {
-	{{ {44, 44, 97}, 0, {-16, -16}, {209, 29, 114, 255} }},
-	{{ {48, 94, 76}, 0, {-16, -16}, {214, 89, 80, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {77, 108, 34}, 0, {314, 300}, {23, 45, 117, 255} }},
-	{{ {92, 88, 84}, 0, {932, -24}, {42, 78, 91, 255} }},
-	{{ {97, 103, 25}, 0, {232, 34}, {78, 66, 76, 255} }},
-	{{ {48, 94, 76}, 0, {832, 614}, {214, 89, 80, 255} }},
-	{{ {52, 111, 31}, 0, {276, 654}, {179, 55, 85, 255} }},
-	{{ {27, 100, 30}, 0, {320, 990}, {176, 96, 26, 255} }},
-	{{ {41, 109, 0}, 0, {-46, 860}, {141, 54, 0, 255} }},
-	{{ {3, 54, 52}, 0, {752, 1194}, {143, 25, 53, 255} }},
-	{{ {44, 44, 97}, 0, {1260, 550}, {209, 29, 114, 255} }},
-	{{ {92, 88, -83}, 0, {976, -26}, {42, 78, 165, 255} }},
-	{{ {77, 108, -33}, 0, {344, 280}, {23, 45, 139, 255} }},
-	{{ {97, 103, -24}, 0, {282, 4}, {78, 65, 179, 255} }},
-	{{ {48, 94, -75}, 0, {828, 624}, {214, 89, 176, 255} }},
-	{{ {92, 88, -83}, 0, {976, -26}, {42, 78, 165, 255} }},
-	{{ {44, 44, -96}, 0, {1256, 576}, {209, 29, 142, 255} }},
-	{{ {48, 94, -75}, 0, {828, 624}, {214, 89, 176, 255} }},
-	{{ {3, 54, -51}, 0, {704, 1212}, {143, 25, 203, 255} }},
-	{{ {27, 100, -29}, 0, {294, 986}, {176, 96, 230, 255} }},
-	{{ {52, 111, -30}, 0, {278, 640}, {179, 54, 170, 255} }},
-	{{ {41, 109, 0}, 0, {-54, 836}, {141, 54, 0, 255} }},
-	{{ {77, 108, -33}, 0, {344, 280}, {23, 45, 139, 255} }},
-	{{ {-7, 62, 0}, 0, {-16, -16}, {133, 33, 0, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {27, 100, 30}, 0, {-16, -16}, {176, 96, 26, 255} }},
-	{{ {27, 100, -29}, 0, {-16, -16}, {176, 96, 230, 255} }},
-	{{ {41, 109, 0}, 0, {-16, -16}, {141, 54, 0, 255} }},
-	{{ {3, 54, -51}, 0, {-16, -16}, {143, 25, 203, 255} }},
-};
-
-Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1[] = {
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_1 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(4, 3, 6, 0),
-	gsSP1Triangle(3, 7, 6, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 6, 8, 0),
-	gsSP1Triangle(6, 11, 4, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 13, 12, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_1 + 16, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(4, 2, 3, 0),
-	gsSP1Triangle(5, 2, 4, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(2, 5, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(11, 13, 8, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_2[12] = {
-	{{ {96, 49, 94}, 0, {-90, 710}, {11, 40, 120, 255} }},
-	{{ {44, 44, 97}, 0, {180, 1350}, {209, 29, 114, 255} }},
-	{{ {42, 0, 103}, 0, {952, 1176}, {184, 0, 105, 255} }},
-	{{ {85, -23, 111}, 0, {1222, 502}, {5, 91, 89, 255} }},
-	{{ {120, -11, 111}, 0, {906, 106}, {0, 15, 126, 255} }},
-	{{ {153, 33, 95}, 0, {6, -84}, {255, 54, 115, 255} }},
-	{{ {42, 0, -102}, 0, {826, 1194}, {184, 0, 151, 255} }},
-	{{ {44, 44, -96}, 0, {102, 1318}, {209, 29, 142, 255} }},
-	{{ {96, 49, -93}, 0, {-86, 684}, {12, 40, 136, 255} }},
-	{{ {85, -23, -110}, 0, {1134, 566}, {7, 91, 167, 255} }},
-	{{ {120, -12, -109}, 0, {900, 168}, {1, 14, 130, 255} }},
-	{{ {153, 33, -94}, 0, {74, -74}, {245, 51, 140, 255} }},
-};
-
-Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2[] = {
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_2 + 0, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(5, 0, 4, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(10, 8, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3[92] = {
-	{{ {153, 33, 95}, 0, {-16, -16}, {255, 54, 115, 255} }},
-	{{ {200, 75, 84}, 0, {-16, -16}, {33, 81, 93, 255} }},
-	{{ {151, 72, 70}, 0, {-16, -16}, {227, 91, 84, 255} }},
-	{{ {181, -9, 116}, 0, {-16, -16}, {42, 2, 120, 255} }},
-	{{ {120, -11, 111}, 0, {-16, -16}, {0, 15, 126, 255} }},
-	{{ {145, -83, 105}, 0, {-16, -16}, {0, 202, 115, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {218, 182, 96, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {25, 139, 44, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {58, -114, 60}, 0, {-16, -16}, {87, 169, 32, 255} }},
-	{{ {31, -85, 87}, 0, {-16, -16}, {228, 250, 124, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {9, -88, 59}, 0, {-16, -16}, {132, 237, 22, 255} }},
-	{{ {31, -84, 0}, 0, {-16, -16}, {158, 175, 0, 255} }},
-	{{ {36, -116, 36}, 0, {-16, -16}, {239, 146, 195, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {25, 139, 213, 255} }},
-	{{ {31, -84, 0}, 0, {-16, -16}, {158, 175, 0, 255} }},
-	{{ {36, -116, -35}, 0, {-16, -16}, {239, 146, 61, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {25, 139, 213, 255} }},
-	{{ {9, -88, -58}, 0, {-16, -16}, {132, 237, 234, 255} }},
-	{{ {17, -52, -46}, 0, {-16, -16}, {134, 252, 222, 255} }},
-	{{ {31, -85, -86}, 0, {-16, -16}, {228, 250, 132, 255} }},
-	{{ {56, -45, -76}, 0, {-16, -16}, {202, 199, 156, 255} }},
-	{{ {58, -114, -59}, 0, {-16, -16}, {87, 169, 224, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {218, 182, 160, 255} }},
-	{{ {145, -84, -104}, 0, {-16, -16}, {0, 201, 141, 255} }},
-	{{ {120, -12, -109}, 0, {-16, -16}, {1, 14, 130, 255} }},
-	{{ {182, -9, -115}, 0, {-16, -16}, {43, 255, 136, 255} }},
-	{{ {153, 33, -94}, 0, {-16, -16}, {245, 51, 140, 255} }},
-	{{ {200, 70, -97}, 0, {-16, -16}, {32, 64, 151, 255} }},
-	{{ {151, 72, -68}, 0, {-16, -16}, {216, 94, 181, 255} }},
-	{{ {175, 91, -38}, 0, {-16, -16}, {199, 100, 201, 255} }},
-	{{ {200, 70, -97}, 0, {-16, -16}, {32, 64, 151, 255} }},
-	{{ {175, 91, -38}, 0, {-16, -16}, {199, 100, 201, 255} }},
-	{{ {211, 91, -71}, 0, {-16, -16}, {35, 82, 165, 255} }},
-	{{ {201, 125, -13}, 0, {-16, -16}, {249, 127, 0, 255} }},
-	{{ {160, 96, 0}, 0, {-16, -16}, {184, 105, 4, 255} }},
-	{{ {175, 91, 39}, 0, {-16, -16}, {227, 112, 53, 255} }},
-	{{ {209, 86, 60}, 0, {-16, -16}, {49, 98, 64, 255} }},
-	{{ {200, 75, 84}, 0, {-16, -16}, {33, 81, 93, 255} }},
-	{{ {151, 72, 70}, 0, {-16, -16}, {227, 91, 84, 255} }},
-	{{ {227, 35, 75}, 0, {-16, -16}, {108, 11, 66, 255} }},
-	{{ {181, -9, 116}, 0, {-16, -16}, {42, 2, 120, 255} }},
-	{{ {227, -14, 59}, 0, {-16, -16}, {114, 235, 52, 255} }},
-	{{ {189, -102, 73}, 0, {-16, -16}, {74, 176, 66, 255} }},
-	{{ {145, -83, 105}, 0, {-16, -16}, {0, 202, 115, 255} }},
-	{{ {116, -126, 68}, 0, {-16, -16}, {235, 148, 64, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {25, 139, 44, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {25, 139, 44, 255} }},
-	{{ {119, -134, 0}, 0, {-16, -16}, {241, 130, 255, 255} }},
-	{{ {116, -126, 68}, 0, {-16, -16}, {235, 148, 64, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {25, 139, 213, 255} }},
-	{{ {116, -124, -67}, 0, {-16, -16}, {235, 148, 192, 255} }},
-	{{ {145, -84, -104}, 0, {-16, -16}, {0, 201, 141, 255} }},
-	{{ {189, -102, -71}, 0, {-16, -16}, {73, 175, 191, 255} }},
-	{{ {182, -9, -115}, 0, {-16, -16}, {43, 255, 136, 255} }},
-	{{ {227, -14, -58}, 0, {-16, -16}, {114, 239, 203, 255} }},
-	{{ {221, 35, -73}, 0, {-16, -16}, {112, 3, 196, 255} }},
-	{{ {200, 70, -97}, 0, {-16, -16}, {32, 64, 151, 255} }},
-	{{ {211, 91, -71}, 0, {-16, -16}, {35, 82, 165, 255} }},
-	{{ {232, 69, -34}, 0, {-16, -16}, {117, 226, 216, 255} }},
-	{{ {248, 104, -43}, 0, {-16, -16}, {106, 51, 208, 255} }},
-	{{ {201, 125, -13}, 0, {-16, -16}, {249, 127, 0, 255} }},
-	{{ {209, 86, 60}, 0, {-16, -16}, {49, 98, 64, 255} }},
-	{{ {209, 86, 60}, 0, {-16, -16}, {49, 98, 64, 255} }},
-	{{ {231, 81, 33}, 0, {-16, -16}, {108, 52, 42, 255} }},
-	{{ {248, 104, -43}, 0, {-16, -16}, {106, 51, 208, 255} }},
-	{{ {227, 35, 75}, 0, {-16, -16}, {108, 11, 66, 255} }},
-	{{ {237, 64, 0}, 0, {-16, -16}, {127, 249, 4, 255} }},
-	{{ {227, -14, 59}, 0, {-16, -16}, {114, 235, 52, 255} }},
-	{{ {241, -34, 0}, 0, {-16, -16}, {124, 229, 0, 255} }},
-	{{ {189, -102, 73}, 0, {-16, -16}, {74, 176, 66, 255} }},
-	{{ {200, -117, 0}, 0, {-16, -16}, {80, 157, 0, 255} }},
-	{{ {116, -126, 68}, 0, {-16, -16}, {235, 148, 64, 255} }},
-	{{ {119, -134, 0}, 0, {-16, -16}, {241, 130, 255, 255} }},
-	{{ {116, -124, -67}, 0, {-16, -16}, {235, 148, 192, 255} }},
-	{{ {189, -102, -71}, 0, {-16, -16}, {73, 175, 191, 255} }},
-	{{ {227, -14, -58}, 0, {-16, -16}, {114, 239, 203, 255} }},
-	{{ {221, 35, -73}, 0, {-16, -16}, {112, 3, 196, 255} }},
-	{{ {232, 69, -34}, 0, {-16, -16}, {117, 226, 216, 255} }},
-	{{ {36, -116, -35}, 0, {-16, -16}, {239, 146, 61, 255} }},
-	{{ {58, -114, -59}, 0, {-16, -16}, {87, 169, 224, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {25, 139, 213, 255} }},
-	{{ {35, -120, -67}, 0, {-16, -16}, {230, 146, 198, 255} }},
-	{{ {9, -88, -58}, 0, {-16, -16}, {132, 237, 234, 255} }},
-	{{ {31, -85, -86}, 0, {-16, -16}, {228, 250, 132, 255} }},
-	{{ {58, -114, 60}, 0, {-16, -16}, {87, 169, 32, 255} }},
-	{{ {36, -116, 36}, 0, {-16, -16}, {239, 146, 195, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {25, 139, 44, 255} }},
-	{{ {35, -120, 68}, 0, {-16, -16}, {230, 146, 58, 255} }},
-	{{ {31, -85, 87}, 0, {-16, -16}, {228, 250, 124, 255} }},
-	{{ {9, -88, 59}, 0, {-16, -16}, {132, 237, 22, 255} }},
-};
-
-Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3[] = {
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 8, 11, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 7, 14, 0),
-	gsSP1Triangle(13, 15, 7, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(6, 2, 7, 0),
-	gsSP1Triangle(6, 8, 2, 0),
-	gsSP1Triangle(8, 9, 2, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(7, 9, 6, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(11, 14, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(11, 12, 8, 0),
-	gsSP1Triangle(8, 12, 6, 0),
-	gsSP1Triangle(12, 13, 6, 0),
-	gsSP1Triangle(13, 4, 6, 0),
-	gsSP1Triangle(13, 14, 4, 0),
-	gsSP1Triangle(14, 15, 4, 0),
-	gsSP1Triangle(4, 15, 2, 0),
-	gsSP1Triangle(4, 2, 1, 0),
-	gsSPVertex(mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 80, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(3, 5, 1, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 9, 7, 0),
-	gsSP1Triangle(10, 9, 6, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(7, 9, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_001_mesh_layer_4_vtx_0[4] = {
-	{{ {0, 0, 0}, 0, {-16, 1978}, {23, 0, 125, 255} }},
-	{{ {104, 0, -19}, 0, {974, 1978}, {23, 0, 125, 255} }},
-	{{ {104, 212, -19}, 0, {974, -34}, {23, 0, 125, 255} }},
-	{{ {0, 212, 0}, 0, {-16, -34}, {22, 0, 125, 255} }},
-};
-
-Gfx mario_000_displaylist_001_mesh_layer_4_tri_0[] = {
-	gsSPVertex(mario_000_displaylist_001_mesh_layer_4_vtx_0 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_001_mesh_layer_4_vtx_1[4] = {
-	{{ {-103, 212, 18}, 0, {-16, -34}, {22, 0, 125, 255} }},
-	{{ {0, 0, 0}, 0, {974, 1978}, {23, 0, 125, 255} }},
-	{{ {0, 212, 0}, 0, {974, -34}, {22, 0, 125, 255} }},
-	{{ {-103, 0, 19}, 0, {-16, 1978}, {22, 0, 125, 255} }},
-};
-
-Gfx mario_000_displaylist_001_mesh_layer_4_tri_1[] = {
-	gsSPVertex(mario_000_displaylist_001_mesh_layer_4_vtx_1 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_002_mesh_layer_4_vtx_0[4] = {
-	{{ {0, 0, 0}, 0, {-16, 1978}, {233, 0, 125, 255} }},
-	{{ {104, 0, 19}, 0, {974, 1978}, {233, 0, 125, 255} }},
-	{{ {104, 212, 19}, 0, {974, -34}, {233, 0, 125, 255} }},
-	{{ {0, 212, 0}, 0, {-16, -34}, {234, 0, 125, 255} }},
-};
-
-Gfx mario_000_displaylist_002_mesh_layer_4_tri_0[] = {
-	gsSPVertex(mario_000_displaylist_002_mesh_layer_4_vtx_0 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_002_mesh_layer_4_vtx_1[4] = {
-	{{ {-103, 212, -18}, 0, {-16, -34}, {234, 0, 125, 255} }},
-	{{ {-103, 0, -19}, 0, {-16, 1978}, {234, 0, 125, 255} }},
-	{{ {0, 0, 0}, 0, {974, 1978}, {233, 0, 125, 255} }},
-	{{ {0, 212, 0}, 0, {974, -34}, {234, 0, 125, 255} }},
-};
-
-Gfx mario_000_displaylist_002_mesh_layer_4_tri_1[] = {
-	gsSPVertex(mario_000_displaylist_002_mesh_layer_4_vtx_1 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_offset_003_mesh_layer_1_vtx_0[31] = {
-	{{ {6, -13, -42}, 0, {-16, -16}, {219, 225, 138, 255} }},
-	{{ {-8, -9, -27}, 0, {-16, -16}, {144, 241, 198, 255} }},
-	{{ {-8, 17, -17}, 0, {-16, -16}, {146, 54, 223, 255} }},
-	{{ {5, -42, -5}, 0, {-16, -16}, {216, 135, 254, 255} }},
-	{{ {57, -36, -5}, 0, {-16, -16}, {49, 139, 253, 255} }},
-	{{ {58, -13, -34}, 0, {-16, -16}, {51, 223, 144, 255} }},
-	{{ {7, 29, -26}, 0, {-16, -16}, {224, 103, 188, 255} }},
-	{{ {-8, 16, 10}, 0, {-16, -16}, {146, 51, 37, 255} }},
-	{{ {-8, -11, 18}, 0, {-16, -16}, {144, 237, 58, 255} }},
-	{{ {-9, -26, -5}, 0, {-16, -16}, {142, 200, 254, 255} }},
-	{{ {6, -16, 32}, 0, {-16, -16}, {219, 216, 115, 255} }},
-	{{ {58, -15, 25}, 0, {-16, -16}, {52, 216, 109, 255} }},
-	{{ {67, -12, 16}, 0, {-16, -16}, {111, 232, 58, 255} }},
-	{{ {67, -26, -5}, 0, {-16, -16}, {109, 191, 254, 255} }},
-	{{ {68, -10, -25}, 0, {-16, -16}, {110, 240, 194, 255} }},
-	{{ {68, 13, -16}, 0, {-16, -16}, {111, 50, 221, 255} }},
-	{{ {59, 21, -21}, 0, {-16, -16}, {55, 95, 192, 255} }},
-	{{ {68, 13, -16}, 0, {-16, -16}, {111, 50, 221, 255} }},
-	{{ {58, -13, -34}, 0, {-16, -16}, {51, 223, 144, 255} }},
-	{{ {7, 29, -26}, 0, {-16, -16}, {224, 103, 188, 255} }},
-	{{ {7, 27, 20}, 0, {-16, -16}, {223, 96, 76, 255} }},
-	{{ {-8, 16, 10}, 0, {-16, -16}, {146, 51, 37, 255} }},
-	{{ {-8, -11, 18}, 0, {-16, -16}, {144, 237, 58, 255} }},
-	{{ {6, -16, 32}, 0, {-16, -16}, {219, 216, 115, 255} }},
-	{{ {-9, -26, -5}, 0, {-16, -16}, {142, 200, 254, 255} }},
-	{{ {59, 20, 15}, 0, {-16, -16}, {55, 90, 71, 255} }},
-	{{ {58, -15, 25}, 0, {-16, -16}, {52, 216, 109, 255} }},
-	{{ {67, -12, 16}, 0, {-16, -16}, {111, 232, 58, 255} }},
-	{{ {68, 12, 9}, 0, {-16, -16}, {113, 44, 38, 255} }},
-	{{ {68, -10, -25}, 0, {-16, -16}, {110, 240, 194, 255} }},
-	{{ {67, -26, -5}, 0, {-16, -16}, {109, 191, 254, 255} }},
-};
-
-Gfx mario_000_offset_003_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_offset_003_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(0, 6, 5, 0),
-	gsSP1Triangle(0, 2, 6, 0),
-	gsSP1Triangle(6, 2, 7, 0),
-	gsSP1Triangle(8, 7, 2, 0),
-	gsSP1Triangle(2, 1, 8, 0),
-	gsSP1Triangle(1, 9, 8, 0),
-	gsSP1Triangle(3, 9, 1, 0),
-	gsSP1Triangle(10, 9, 3, 0),
-	gsSP1Triangle(10, 3, 11, 0),
-	gsSP1Triangle(3, 4, 11, 0),
-	gsSP1Triangle(4, 12, 11, 0),
-	gsSP1Triangle(4, 13, 12, 0),
-	gsSP1Triangle(14, 13, 4, 0),
-	gsSP1Triangle(5, 14, 4, 0),
-	gsSP1Triangle(15, 14, 5, 0),
-	gsSPVertex(mario_000_offset_003_mesh_layer_1_vtx_0 + 16, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(4, 7, 9, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(11, 14, 13, 0),
-	gsSP1Triangle(12, 13, 1, 0),
-	gsSP1Triangle(9, 12, 1, 0),
-	gsSP1Triangle(9, 1, 0, 0),
-	gsSP1Triangle(4, 9, 0, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_offset_004_mesh_layer_1_vtx_0[16] = {
-	{{ {-2, 21, -21}, 0, {-16, -16}, {224, 103, 189, 255} }},
-	{{ {-14, 13, -15}, 0, {-16, -16}, {150, 61, 221, 255} }},
-	{{ {-14, 11, 10}, 0, {-16, -16}, {149, 55, 42, 255} }},
-	{{ {-3, -14, -34}, 0, {-16, -16}, {221, 224, 138, 255} }},
-	{{ {46, -14, -30}, 0, {-16, -16}, {64, 224, 151, 255} }},
-	{{ {47, 16, -19}, 0, {-16, -16}, {67, 89, 196, 255} }},
-	{{ {-2, 19, 16}, 0, {-16, -16}, {225, 97, 76, 255} }},
-	{{ {-15, -13, 17}, 0, {-16, -16}, {149, 236, 65, 255} }},
-	{{ {-15, -27, -4}, 0, {-16, -16}, {147, 191, 253, 255} }},
-	{{ {-15, -11, -24}, 0, {-16, -16}, {147, 241, 192, 255} }},
-	{{ {-3, -38, -4}, 0, {-16, -16}, {220, 134, 252, 255} }},
-	{{ {45, -34, -4}, 0, {-16, -16}, {62, 145, 252, 255} }},
-	{{ {58, -7, -3}, 0, {-16, -16}, {127, 253, 1, 255} }},
-	{{ {47, 14, 13}, 0, {-16, -16}, {67, 84, 68, 255} }},
-	{{ {-3, -17, 26}, 0, {-16, -16}, {222, 215, 115, 255} }},
-	{{ {46, -17, 22}, 0, {-16, -16}, {64, 216, 102, 255} }},
-};
-
-Gfx mario_000_offset_004_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_offset_004_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(0, 6, 5, 0),
-	gsSP1Triangle(0, 2, 6, 0),
-	gsSP1Triangle(6, 2, 7, 0),
-	gsSP1Triangle(8, 7, 2, 0),
-	gsSP1Triangle(8, 2, 1, 0),
-	gsSP1Triangle(9, 8, 1, 0),
-	gsSP1Triangle(3, 9, 1, 0),
-	gsSP1Triangle(10, 9, 3, 0),
-	gsSP1Triangle(10, 3, 11, 0),
-	gsSP1Triangle(3, 4, 11, 0),
-	gsSP1Triangle(4, 12, 11, 0),
-	gsSP1Triangle(5, 12, 4, 0),
-	gsSP1Triangle(13, 12, 5, 0),
-	gsSP1Triangle(6, 13, 5, 0),
-	gsSP1Triangle(6, 14, 13, 0),
-	gsSP1Triangle(6, 7, 14, 0),
-	gsSP1Triangle(14, 7, 8, 0),
-	gsSP1Triangle(14, 8, 10, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(14, 10, 15, 0),
-	gsSP1Triangle(10, 11, 15, 0),
-	gsSP1Triangle(11, 12, 15, 0),
-	gsSP1Triangle(15, 12, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_003_mesh_layer_1_vtx_0[46] = {
-	{{ {17, -38, -39}, 0, {-16, -16}, {158, 184, 219, 255} }},
-	{{ {-14, -14, -4}, 0, {-16, -16}, {139, 206, 3, 255} }},
-	{{ {-10, 26, -38}, 0, {-16, -16}, {136, 236, 218, 255} }},
-	{{ {27, -58, 6}, 0, {-16, -16}, {162, 172, 14, 255} }},
-	{{ {5, -6, 36}, 0, {-16, -16}, {153, 210, 58, 255} }},
-	{{ {-18, 45, 8}, 0, {-16, -16}, {130, 245, 14, 255} }},
-	{{ {26, -25, -32}, 0, {-16, -16}, {23, 201, 144, 255} }},
-	{{ {17, -38, -39}, 0, {-16, -16}, {94, 236, 172, 255} }},
-	{{ {-10, 26, -38}, 0, {-16, -16}, {51, 84, 175, 255} }},
-	{{ {34, -41, 3}, 0, {-16, -16}, {61, 151, 38, 255} }},
-	{{ {58, -45, 7}, 0, {-16, -16}, {6, 138, 46, 255} }},
-	{{ {80, -31, -61}, 0, {-16, -16}, {28, 182, 156, 255} }},
-	{{ {33, 7, -44}, 0, {-16, -16}, {196, 253, 144, 255} }},
-	{{ {4, 24, -31}, 0, {-16, -16}, {252, 68, 149, 255} }},
-	{{ {-1, 39, 5}, 0, {-16, -16}, {219, 113, 45, 255} }},
-	{{ {-18, 45, 8}, 0, {-16, -16}, {45, 116, 27, 255} }},
-	{{ {-1, 39, 5}, 0, {-16, -16}, {219, 113, 45, 255} }},
-	{{ {-18, 45, 8}, 0, {-16, -16}, {45, 116, 27, 255} }},
-	{{ {5, -6, 36}, 0, {-16, -16}, {67, 28, 104, 255} }},
-	{{ {17, -1, 27}, 0, {-16, -16}, {254, 253, 127, 255} }},
-	{{ {34, -41, 3}, 0, {-16, -16}, {61, 151, 38, 255} }},
-	{{ {27, -58, 6}, 0, {-16, -16}, {117, 212, 23, 255} }},
-	{{ {17, -38, -39}, 0, {-16, -16}, {94, 236, 172, 255} }},
-	{{ {36, 6, 42}, 0, {-16, -16}, {227, 239, 123, 255} }},
-	{{ {12, 59, 10}, 0, {-16, -16}, {175, 85, 48, 255} }},
-	{{ {59, 81, 8}, 0, {-16, -16}, {20, 121, 33, 255} }},
-	{{ {86, 29, 41}, 0, {-16, -16}, {64, 25, 107, 255} }},
-	{{ {107, -26, 4}, 0, {-16, -16}, {101, 191, 41, 255} }},
-	{{ {58, -45, 7}, 0, {-16, -16}, {6, 138, 46, 255} }},
-	{{ {80, -31, -61}, 0, {-16, -16}, {28, 182, 156, 255} }},
-	{{ {100, -6, -46}, 0, {-16, -16}, {106, 254, 185, 255} }},
-	{{ {61, 12, -60}, 0, {-16, -16}, {245, 23, 132, 255} }},
-	{{ {33, 7, -44}, 0, {-16, -16}, {196, 253, 144, 255} }},
-	{{ {61, 12, -60}, 0, {-16, -16}, {245, 23, 132, 255} }},
-	{{ {80, -31, -61}, 0, {-16, -16}, {28, 182, 156, 255} }},
-	{{ {32, 63, -28}, 0, {-16, -16}, {208, 92, 182, 255} }},
-	{{ {4, 24, -31}, 0, {-16, -16}, {252, 68, 149, 255} }},
-	{{ {12, 59, 10}, 0, {-16, -16}, {175, 85, 48, 255} }},
-	{{ {-1, 39, 5}, 0, {-16, -16}, {219, 113, 45, 255} }},
-	{{ {59, 81, 8}, 0, {-16, -16}, {20, 121, 33, 255} }},
-	{{ {57, 55, -37}, 0, {-16, -16}, {23, 85, 164, 255} }},
-	{{ {99, 40, -16}, 0, {-16, -16}, {108, 64, 235, 255} }},
-	{{ {86, 29, 41}, 0, {-16, -16}, {64, 25, 107, 255} }},
-	{{ {107, -26, 4}, 0, {-16, -16}, {101, 191, 41, 255} }},
-	{{ {100, -6, -46}, 0, {-16, -16}, {106, 254, 185, 255} }},
-	{{ {90, 17, -46}, 0, {-16, -16}, {72, 49, 163, 255} }},
-};
-
-Gfx mario_000_displaylist_003_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_displaylist_003_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 6, 9, 0),
-	gsSP1Triangle(10, 9, 6, 0),
-	gsSP1Triangle(6, 11, 10, 0),
-	gsSP1Triangle(6, 12, 11, 0),
-	gsSP1Triangle(6, 13, 12, 0),
-	gsSP1Triangle(8, 13, 6, 0),
-	gsSP1Triangle(14, 13, 8, 0),
-	gsSP1Triangle(8, 15, 14, 0),
-	gsSPVertex(mario_000_displaylist_003_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(2, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 3, 4, 0),
-	gsSP1Triangle(0, 3, 7, 0),
-	gsSP1Triangle(0, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(11, 10, 7, 0),
-	gsSP1Triangle(12, 11, 7, 0),
-	gsSP1Triangle(4, 12, 7, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(13, 14, 11, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(mario_000_displaylist_003_mesh_layer_1_vtx_0 + 32, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(3, 5, 7, 0),
-	gsSP1Triangle(7, 8, 3, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(12, 9, 11, 0),
-	gsSP1Triangle(13, 9, 12, 0),
-	gsSP1Triangle(1, 13, 12, 0),
-	gsSP1Triangle(8, 13, 1, 0),
-	gsSP1Triangle(1, 3, 8, 0),
-	gsSP1Triangle(13, 8, 9, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0[58] = {
-	{{ {2, 3, 26}, 0, {-16, -16}, {74, 52, 89, 255} }},
-	{{ {20, -46, 12}, 0, {-16, -16}, {117, 221, 35, 255} }},
-	{{ {26, -32, 6}, 0, {-16, -16}, {55, 168, 73, 255} }},
-	{{ {13, -39, -31}, 0, {-16, -16}, {99, 222, 184, 255} }},
-	{{ {20, -27, -27}, 0, {-16, -16}, {16, 178, 157, 255} }},
-	{{ {-10, 14, -43}, 0, {-16, -16}, {50, 60, 156, 255} }},
-	{{ {1, 15, -37}, 0, {-16, -16}, {225, 28, 136, 255} }},
-	{{ {-3, 35, -9}, 0, {-16, -16}, {206, 114, 24, 255} }},
-	{{ {-17, 40, -8}, 0, {-16, -16}, {43, 120, 0, 255} }},
-	{{ {11, 5, 17}, 0, {-16, -16}, {5, 27, 124, 255} }},
-	{{ {26, 16, 28}, 0, {-16, -16}, {222, 13, 122, 255} }},
-	{{ {45, -34, 10}, 0, {-16, -16}, {255, 159, 82, 255} }},
-	{{ {41, -37, -36}, 0, {-16, -16}, {216, 157, 187, 255} }},
-	{{ {25, -1, -44}, 0, {-16, -16}, {224, 227, 137, 255} }},
-	{{ {11, 29, -52}, 0, {-16, -16}, {219, 30, 138, 255} }},
-	{{ {6, 53, -9}, 0, {-16, -16}, {172, 93, 23, 255} }},
-	{{ {26, 16, 28}, 0, {-16, -16}, {222, 13, 122, 255} }},
-	{{ {70, 89, -20}, 0, {-16, -16}, {240, 126, 249, 255} }},
-	{{ {6, 53, -9}, 0, {-16, -16}, {172, 93, 23, 255} }},
-	{{ {77, 41, 21}, 0, {-16, -16}, {20, 40, 119, 255} }},
-	{{ {83, -17, 10}, 0, {-16, -16}, {67, 193, 88, 255} }},
-	{{ {45, -34, 10}, 0, {-16, -16}, {255, 159, 82, 255} }},
-	{{ {89, -47, -37}, 0, {-16, -16}, {75, 164, 212, 255} }},
-	{{ {41, -37, -36}, 0, {-16, -16}, {216, 157, 187, 255} }},
-	{{ {76, -18, -48}, 0, {-16, -16}, {45, 3, 137, 255} }},
-	{{ {25, -1, -44}, 0, {-16, -16}, {224, 227, 137, 255} }},
-	{{ {26, 41, -41}, 0, {-16, -16}, {245, 65, 147, 255} }},
-	{{ {11, 29, -52}, 0, {-16, -16}, {219, 30, 138, 255} }},
-	{{ {78, 59, -34}, 0, {-16, -16}, {246, 22, 131, 255} }},
-	{{ {119, 70, -42}, 0, {-16, -16}, {50, 65, 159, 255} }},
-	{{ {121, 73, -21}, 0, {-16, -16}, {77, 95, 34, 255} }},
-	{{ {141, 34, -7}, 0, {-16, -16}, {116, 248, 52, 255} }},
-	{{ {133, 28, -40}, 0, {-16, -16}, {80, 216, 166, 255} }},
-	{{ {141, 34, -7}, 0, {-16, -16}, {116, 248, 52, 255} }},
-	{{ {83, -17, 10}, 0, {-16, -16}, {67, 193, 88, 255} }},
-	{{ {89, -6, -27}, 0, {-16, -16}, {101, 227, 184, 255} }},
-	{{ {89, -47, -37}, 0, {-16, -16}, {75, 164, 212, 255} }},
-	{{ {76, -18, -48}, 0, {-16, -16}, {45, 3, 137, 255} }},
-	{{ {69, 10, -36}, 0, {-16, -16}, {51, 29, 143, 255} }},
-	{{ {26, 41, -41}, 0, {-16, -16}, {245, 65, 147, 255} }},
-	{{ {78, 59, -34}, 0, {-16, -16}, {246, 22, 131, 255} }},
-	{{ {119, 70, -42}, 0, {-16, -16}, {50, 65, 159, 255} }},
-	{{ {121, 73, -21}, 0, {-16, -16}, {77, 95, 34, 255} }},
-	{{ {2, 3, 26}, 0, {-16, -16}, {168, 240, 90, 255} }},
-	{{ {6, -38, 7}, 0, {-16, -16}, {167, 176, 42, 255} }},
-	{{ {20, -46, 12}, 0, {-16, -16}, {185, 161, 45, 255} }},
-	{{ {-6, -3, 17}, 0, {-16, -16}, {151, 226, 66, 255} }},
-	{{ {-20, 22, -7}, 0, {-16, -16}, {131, 0, 22, 255} }},
-	{{ {-17, 40, -8}, 0, {-16, -16}, {132, 21, 16, 255} }},
-	{{ {-20, 22, -7}, 0, {-16, -16}, {131, 0, 22, 255} }},
-	{{ {2, 3, 26}, 0, {-16, -16}, {168, 240, 90, 255} }},
-	{{ {-10, 14, -43}, 0, {-16, -16}, {145, 244, 195, 255} }},
-	{{ {-15, 4, -32}, 0, {-16, -16}, {141, 222, 214, 255} }},
-	{{ {1, -33, -23}, 0, {-16, -16}, {159, 179, 226, 255} }},
-	{{ {13, -39, -31}, 0, {-16, -16}, {181, 164, 212, 255} }},
-	{{ {6, -38, 7}, 0, {-16, -16}, {167, 176, 42, 255} }},
-	{{ {20, -46, 12}, 0, {-16, -16}, {185, 161, 45, 255} }},
-	{{ {-6, -3, 17}, 0, {-16, -16}, {151, 226, 66, 255} }},
-};
-
-Gfx mario_002_switch_option_right_hand_open_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(7, 8, 0, 0),
-	gsSP1Triangle(0, 9, 7, 0),
-	gsSP1Triangle(2, 9, 0, 0),
-	gsSP1Triangle(10, 9, 2, 0),
-	gsSP1Triangle(2, 11, 10, 0),
-	gsSP1Triangle(2, 12, 11, 0),
-	gsSP1Triangle(2, 4, 12, 0),
-	gsSP1Triangle(4, 13, 12, 0),
-	gsSP1Triangle(4, 6, 13, 0),
-	gsSP1Triangle(6, 14, 13, 0),
-	gsSP1Triangle(14, 6, 7, 0),
-	gsSP1Triangle(7, 15, 14, 0),
-	gsSP1Triangle(7, 10, 15, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSPVertex(mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(2, 10, 11, 0),
-	gsSP1Triangle(10, 2, 1, 0),
-	gsSP1Triangle(1, 12, 10, 0),
-	gsSP1Triangle(13, 12, 1, 0),
-	gsSP1Triangle(1, 14, 13, 0),
-	gsSP1Triangle(14, 1, 3, 0),
-	gsSP1Triangle(15, 14, 3, 0),
-	gsSP1Triangle(4, 15, 3, 0),
-	gsSPVertex(mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 6, 3, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(6, 8, 3, 0),
-	gsSP1Triangle(8, 0, 3, 0),
-	gsSP1Triangle(8, 9, 0, 0),
-	gsSP1Triangle(9, 1, 0, 0),
-	gsSP1Triangle(10, 1, 9, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(11, 14, 12, 0),
-	gsSP1Triangle(15, 14, 11, 0),
-	gsSPVertex(mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0 + 48, 10, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(5, 7, 9, 0),
-	gsSP1Triangle(9, 4, 5, 0),
-	gsSP1Triangle(9, 1, 4, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_offset_006_mesh_layer_1_vtx_0[28] = {
-	{{ {58, 17, 27}, 0, {-16, -16}, {54, 90, 72, 255} }},
-	{{ {67, 10, 21}, 0, {-16, -16}, {111, 50, 37, 255} }},
-	{{ {67, 11, -4}, 0, {-16, -16}, {112, 51, 223, 255} }},
-	{{ {67, -14, 28}, 0, {-16, -16}, {110, 232, 59, 255} }},
-	{{ {57, -17, 37}, 0, {-16, -16}, {50, 216, 110, 255} }},
-	{{ {7, 25, 32}, 0, {-16, -16}, {224, 97, 76, 255} }},
-	{{ {7, 27, -13}, 0, {-16, -16}, {225, 104, 190, 255} }},
-	{{ {58, 19, -9}, 0, {-16, -16}, {55, 96, 194, 255} }},
-	{{ {67, -12, -13}, 0, {-16, -16}, {110, 239, 195, 255} }},
-	{{ {66, -28, 6}, 0, {-16, -16}, {111, 195, 250, 255} }},
-	{{ {57, -38, 6}, 0, {-16, -16}, {51, 140, 250, 255} }},
-	{{ {57, -14, -22}, 0, {-16, -16}, {50, 227, 143, 255} }},
-	{{ {5, -44, 5}, 0, {-16, -16}, {217, 135, 248, 255} }},
-	{{ {6, -19, 44}, 0, {-16, -16}, {220, 214, 114, 255} }},
-	{{ {-8, 14, 22}, 0, {-16, -16}, {147, 53, 38, 255} }},
-	{{ {-8, 15, -5}, 0, {-16, -16}, {147, 56, 223, 255} }},
-	{{ {-9, -10, -15}, 0, {-16, -16}, {144, 246, 196, 255} }},
-	{{ {-8, 15, -5}, 0, {-16, -16}, {147, 56, 223, 255} }},
-	{{ {7, 27, -13}, 0, {-16, -16}, {225, 104, 190, 255} }},
-	{{ {6, -15, -30}, 0, {-16, -16}, {221, 227, 137, 255} }},
-	{{ {58, 19, -9}, 0, {-16, -16}, {55, 96, 194, 255} }},
-	{{ {57, -14, -22}, 0, {-16, -16}, {50, 227, 143, 255} }},
-	{{ {67, -12, -13}, 0, {-16, -16}, {110, 239, 195, 255} }},
-	{{ {5, -44, 5}, 0, {-16, -16}, {217, 135, 248, 255} }},
-	{{ {-9, -28, 6}, 0, {-16, -16}, {143, 198, 252, 255} }},
-	{{ {-9, -13, 30}, 0, {-16, -16}, {145, 238, 60, 255} }},
-	{{ {6, -19, 44}, 0, {-16, -16}, {220, 214, 114, 255} }},
-	{{ {-8, 14, 22}, 0, {-16, -16}, {147, 53, 38, 255} }},
-};
-
-Gfx mario_000_offset_006_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_offset_006_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(0, 6, 5, 0),
-	gsSP1Triangle(0, 7, 6, 0),
-	gsSP1Triangle(0, 2, 7, 0),
-	gsSP1Triangle(7, 2, 8, 0),
-	gsSP1Triangle(8, 2, 9, 0),
-	gsSP1Triangle(2, 3, 9, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(10, 9, 3, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(10, 4, 13, 0),
-	gsSP1Triangle(10, 3, 4, 0),
-	gsSP1Triangle(4, 5, 13, 0),
-	gsSP1Triangle(5, 14, 13, 0),
-	gsSP1Triangle(15, 14, 5, 0),
-	gsSP1Triangle(6, 15, 5, 0),
-	gsSPVertex(mario_000_offset_006_mesh_layer_1_vtx_0 + 16, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(5, 7, 3, 0),
-	gsSP1Triangle(7, 8, 3, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(9, 11, 1, 0),
-	gsSP1Triangle(9, 1, 0, 0),
-	gsSP1Triangle(0, 8, 9, 0),
-	gsSP1Triangle(8, 0, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_offset_007_mesh_layer_1_vtx_0[16] = {
-	{{ {-2, -18, 38}, 0, {-16, -16}, {220, 214, 114, 255} }},
-	{{ {-14, -14, 28}, 0, {-16, -16}, {147, 237, 62, 255} }},
-	{{ {-3, -39, 6}, 0, {-16, -16}, {217, 135, 250, 255} }},
-	{{ {-13, 10, 21}, 0, {-16, -16}, {148, 54, 41, 255} }},
-	{{ {-1, 18, 28}, 0, {-16, -16}, {223, 96, 77, 255} }},
-	{{ {47, -17, 34}, 0, {-16, -16}, {65, 218, 103, 255} }},
-	{{ {46, -36, 6}, 0, {-16, -16}, {61, 145, 250, 255} }},
-	{{ {47, -15, -19}, 0, {-16, -16}, {64, 227, 150, 255} }},
-	{{ {-2, -15, -23}, 0, {-16, -16}, {221, 227, 137, 255} }},
-	{{ {-14, -28, 6}, 0, {-16, -16}, {145, 194, 250, 255} }},
-	{{ {-14, -12, -13}, 0, {-16, -16}, {147, 243, 191, 255} }},
-	{{ {-13, 12, -4}, 0, {-16, -16}, {151, 61, 218, 255} }},
-	{{ {-1, 20, -9}, 0, {-16, -16}, {225, 104, 190, 255} }},
-	{{ {48, 13, 25}, 0, {-16, -16}, {68, 83, 68, 255} }},
-	{{ {59, -8, 7}, 0, {-16, -16}, {127, 253, 255, 255} }},
-	{{ {48, 15, -7}, 0, {-16, -16}, {67, 91, 197, 255} }},
-};
-
-Gfx mario_000_offset_007_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_offset_007_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(6, 5, 0, 0),
-	gsSP1Triangle(6, 0, 2, 0),
-	gsSP1Triangle(7, 6, 2, 0),
-	gsSP1Triangle(7, 2, 8, 0),
-	gsSP1Triangle(2, 9, 8, 0),
-	gsSP1Triangle(1, 9, 2, 0),
-	gsSP1Triangle(9, 1, 3, 0),
-	gsSP1Triangle(10, 9, 3, 0),
-	gsSP1Triangle(10, 3, 11, 0),
-	gsSP1Triangle(11, 3, 4, 0),
-	gsSP1Triangle(12, 11, 4, 0),
-	gsSP1Triangle(13, 12, 4, 0),
-	gsSP1Triangle(5, 13, 4, 0),
-	gsSP1Triangle(5, 14, 13, 0),
-	gsSP1Triangle(6, 14, 5, 0),
-	gsSP1Triangle(7, 14, 6, 0),
-	gsSP1Triangle(15, 14, 7, 0),
-	gsSP1Triangle(15, 7, 8, 0),
-	gsSP1Triangle(15, 8, 12, 0),
-	gsSP1Triangle(8, 10, 12, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSP1Triangle(13, 15, 12, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_004_mesh_layer_1_vtx_0[36] = {
-	{{ {-14, 26, 41}, 0, {-16, -16}, {45, 80, 88, 255} }},
-	{{ {13, -38, 41}, 0, {-16, -16}, {88, 230, 88, 255} }},
-	{{ {23, -26, 35}, 0, {-16, -16}, {15, 191, 108, 255} }},
-	{{ {31, -40, -1}, 0, {-16, -16}, {61, 153, 212, 255} }},
-	{{ {24, -57, -4}, 0, {-16, -16}, {117, 211, 237, 255} }},
-	{{ {4, -3, -33}, 0, {-16, -16}, {76, 33, 159, 255} }},
-	{{ {15, 0, -23}, 0, {-16, -16}, {12, 0, 130, 255} }},
-	{{ {-2, 41, -1}, 0, {-16, -16}, {218, 113, 212, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {45, 117, 236, 255} }},
-	{{ {1, 24, 35}, 0, {-16, -16}, {245, 63, 110, 255} }},
-	{{ {29, 6, 49}, 0, {-16, -16}, {191, 250, 109, 255} }},
-	{{ {75, -33, 66}, 0, {-16, -16}, {24, 178, 98, 255} }},
-	{{ {55, -44, -4}, 0, {-16, -16}, {6, 140, 204, 255} }},
-	{{ {35, 9, -37}, 0, {-16, -16}, {232, 246, 132, 255} }},
-	{{ {10, 60, -4}, 0, {-16, -16}, {177, 88, 210, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {29, 6, 49}, 0, {-16, -16}, {191, 250, 109, 255} }},
-	{{ {57, 10, 66}, 0, {-16, -16}, {243, 20, 125, 255} }},
-	{{ {75, -33, 66}, 0, {-16, -16}, {24, 178, 98, 255} }},
-	{{ {96, -8, 52}, 0, {-16, -16}, {104, 250, 73, 255} }},
-	{{ {104, -26, 1}, 0, {-16, -16}, {101, 191, 215, 255} }},
-	{{ {55, -44, -4}, 0, {-16, -16}, {6, 140, 204, 255} }},
-	{{ {35, 9, -37}, 0, {-16, -16}, {232, 246, 132, 255} }},
-	{{ {86, 30, -33}, 0, {-16, -16}, {69, 28, 153, 255} }},
-	{{ {58, 81, 0}, 0, {-16, -16}, {23, 122, 228, 255} }},
-	{{ {10, 60, -4}, 0, {-16, -16}, {177, 88, 210, 255} }},
-	{{ {54, 54, 44}, 0, {-16, -16}, {20, 81, 95, 255} }},
-	{{ {86, 15, 52}, 0, {-16, -16}, {69, 45, 97, 255} }},
-	{{ {97, 39, 24}, 0, {-16, -16}, {108, 61, 28, 255} }},
-	{{ {4, -3, -33}, 0, {-16, -16}, {153, 214, 194, 255} }},
-	{{ {-16, -12, 6}, 0, {-16, -16}, {139, 208, 247, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {131, 247, 236, 255} }},
-	{{ {24, -57, -4}, 0, {-16, -16}, {160, 175, 237, 255} }},
-	{{ {13, -38, 41}, 0, {-16, -16}, {155, 185, 30, 255} }},
-	{{ {-14, 26, 41}, 0, {-16, -16}, {134, 235, 30, 255} }},
-};
-
-Gfx mario_000_displaylist_004_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_displaylist_004_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 6, 3, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(7, 8, 0, 0),
-	gsSP1Triangle(0, 9, 7, 0),
-	gsSP1Triangle(2, 9, 0, 0),
-	gsSP1Triangle(10, 9, 2, 0),
-	gsSP1Triangle(11, 10, 2, 0),
-	gsSP1Triangle(12, 11, 2, 0),
-	gsSP1Triangle(2, 3, 12, 0),
-	gsSP1Triangle(13, 12, 3, 0),
-	gsSP1Triangle(3, 6, 13, 0),
-	gsSP1Triangle(13, 6, 7, 0),
-	gsSP1Triangle(14, 13, 7, 0),
-	gsSP1Triangle(14, 7, 9, 0),
-	gsSP1Triangle(15, 14, 9, 0),
-	gsSP1Triangle(9, 10, 15, 0),
-	gsSPVertex(mario_000_displaylist_004_mesh_layer_1_vtx_0 + 16, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 8, 5, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(9, 10, 0, 0),
-	gsSP1Triangle(0, 11, 9, 0),
-	gsSP1Triangle(11, 0, 2, 0),
-	gsSP1Triangle(12, 11, 2, 0),
-	gsSP1Triangle(4, 12, 2, 0),
-	gsSP1Triangle(4, 13, 12, 0),
-	gsSP1Triangle(5, 13, 4, 0),
-	gsSP1Triangle(8, 13, 5, 0),
-	gsSP1Triangle(9, 13, 8, 0),
-	gsSP1Triangle(11, 13, 9, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSPVertex(mario_000_displaylist_004_mesh_layer_1_vtx_0 + 30, 6, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0[57] = {
-	{{ {7, 1, -26}, 0, {-16, -16}, {76, 42, 163, 255} }},
-	{{ {-9, 41, 5}, 0, {-16, -16}, {49, 117, 243, 255} }},
-	{{ {3, 36, 6}, 0, {-16, -16}, {215, 116, 225, 255} }},
-	{{ {-1, 18, 42}, 0, {-16, -16}, {61, 66, 90, 255} }},
-	{{ {9, 18, 35}, 0, {-16, -16}, {234, 40, 119, 255} }},
-	{{ {26, -24, 28}, 0, {-16, -16}, {13, 186, 105, 255} }},
-	{{ {19, -36, 33}, 0, {-16, -16}, {103, 226, 68, 255} }},
-	{{ {30, -32, -4}, 0, {-16, -16}, {55, 163, 189, 255} }},
-	{{ {25, -46, -9}, 0, {-16, -16}, {119, 225, 224, 255} }},
-	{{ {16, 4, -17}, 0, {-16, -16}, {0, 17, 130, 255} }},
-	{{ {30, 13, -30}, 0, {-16, -16}, {215, 3, 136, 255} }},
-	{{ {13, 53, 5}, 0, {-16, -16}, {174, 94, 231, 255} }},
-	{{ {20, 33, 48}, 0, {-16, -16}, {226, 42, 116, 255} }},
-	{{ {32, 2, 43}, 0, {-16, -16}, {227, 238, 122, 255} }},
-	{{ {46, -35, 37}, 0, {-16, -16}, {216, 164, 78, 255} }},
-	{{ {48, -35, -9}, 0, {-16, -16}, {247, 153, 182, 255} }},
-	{{ {30, 13, -30}, 0, {-16, -16}, {215, 3, 136, 255} }},
-	{{ {86, -19, -13}, 0, {-16, -16}, {62, 185, 171, 255} }},
-	{{ {48, -35, -9}, 0, {-16, -16}, {247, 153, 182, 255} }},
-	{{ {81, 37, -28}, 0, {-16, -16}, {16, 29, 133, 255} }},
-	{{ {76, 88, 9}, 0, {-16, -16}, {243, 126, 255, 255} }},
-	{{ {13, 53, 5}, 0, {-16, -16}, {174, 94, 231, 255} }},
-	{{ {34, 43, 36}, 0, {-16, -16}, {253, 74, 103, 255} }},
-	{{ {20, 33, 48}, 0, {-16, -16}, {226, 42, 116, 255} }},
-	{{ {32, 2, 43}, 0, {-16, -16}, {227, 238, 122, 255} }},
-	{{ {81, -15, 45}, 0, {-16, -16}, {53, 11, 115, 255} }},
-	{{ {46, -35, 37}, 0, {-16, -16}, {216, 164, 78, 255} }},
-	{{ {93, -45, 36}, 0, {-16, -16}, {76, 167, 48, 255} }},
-	{{ {93, -5, 22}, 0, {-16, -16}, {104, 230, 69, 255} }},
-	{{ {136, 28, 31}, 0, {-16, -16}, {82, 222, 91, 255} }},
-	{{ {143, 31, -1}, 0, {-16, -16}, {115, 240, 204, 255} }},
-	{{ {125, 71, 9}, 0, {-16, -16}, {78, 90, 212, 255} }},
-	{{ {124, 69, 30}, 0, {-16, -16}, {57, 70, 90, 255} }},
-	{{ {125, 71, 9}, 0, {-16, -16}, {78, 90, 212, 255} }},
-	{{ {76, 88, 9}, 0, {-16, -16}, {243, 126, 255, 255} }},
-	{{ {84, 59, 25}, 0, {-16, -16}, {253, 33, 123, 255} }},
-	{{ {34, 43, 36}, 0, {-16, -16}, {253, 74, 103, 255} }},
-	{{ {75, 11, 32}, 0, {-16, -16}, {61, 36, 106, 255} }},
-	{{ {81, -15, 45}, 0, {-16, -16}, {53, 11, 115, 255} }},
-	{{ {93, -5, 22}, 0, {-16, -16}, {104, 230, 69, 255} }},
-	{{ {93, -45, 36}, 0, {-16, -16}, {76, 167, 48, 255} }},
-	{{ {136, 28, 31}, 0, {-16, -16}, {82, 222, 91, 255} }},
-	{{ {143, 31, -1}, 0, {-16, -16}, {115, 240, 204, 255} }},
-	{{ {25, -46, -9}, 0, {-16, -16}, {184, 158, 218, 255} }},
-	{{ {11, -38, -3}, 0, {-16, -16}, {164, 173, 227, 255} }},
-	{{ {7, 1, -26}, 0, {-16, -16}, {158, 231, 179, 255} }},
-	{{ {19, -36, 33}, 0, {-16, -16}, {182, 168, 55, 255} }},
-	{{ {7, -30, 26}, 0, {-16, -16}, {158, 186, 42, 255} }},
-	{{ {-1, 18, 42}, 0, {-16, -16}, {147, 254, 66, 255} }},
-	{{ {7, -30, 26}, 0, {-16, -16}, {158, 186, 42, 255} }},
-	{{ {19, -36, 33}, 0, {-16, -16}, {182, 168, 55, 255} }},
-	{{ {-7, 7, 32}, 0, {-16, -16}, {141, 231, 49, 255} }},
-	{{ {-12, 23, 6}, 0, {-16, -16}, {130, 0, 240, 255} }},
-	{{ {-9, 41, 5}, 0, {-16, -16}, {131, 20, 244, 255} }},
-	{{ {7, 1, -26}, 0, {-16, -16}, {158, 231, 179, 255} }},
-	{{ {0, -4, -15}, 0, {-16, -16}, {145, 222, 204, 255} }},
-	{{ {11, -38, -3}, 0, {-16, -16}, {164, 173, 227, 255} }},
-};
-
-Gfx mario_002_switch_option_left_hand_open_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 0, 0),
-	gsSP1Triangle(0, 9, 7, 0),
-	gsSP1Triangle(2, 9, 0, 0),
-	gsSP1Triangle(10, 9, 2, 0),
-	gsSP1Triangle(11, 10, 2, 0),
-	gsSP1Triangle(12, 11, 2, 0),
-	gsSP1Triangle(2, 4, 12, 0),
-	gsSP1Triangle(13, 12, 4, 0),
-	gsSP1Triangle(13, 4, 5, 0),
-	gsSP1Triangle(14, 13, 5, 0),
-	gsSP1Triangle(14, 5, 7, 0),
-	gsSP1Triangle(15, 14, 7, 0),
-	gsSP1Triangle(10, 15, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSPVertex(mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 2, 0),
-	gsSP1Triangle(2, 1, 11, 0),
-	gsSP1Triangle(1, 12, 11, 0),
-	gsSP1Triangle(1, 13, 12, 0),
-	gsSP1Triangle(1, 14, 13, 0),
-	gsSP1Triangle(3, 14, 1, 0),
-	gsSP1Triangle(3, 15, 14, 0),
-	gsSP1Triangle(3, 4, 15, 0),
-	gsSPVertex(mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(7, 3, 5, 0),
-	gsSP1Triangle(7, 9, 3, 0),
-	gsSP1Triangle(9, 0, 3, 0),
-	gsSP1Triangle(9, 10, 0, 0),
-	gsSP1Triangle(0, 10, 1, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(14, 12, 11, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0 + 48, 9, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(7, 8, 1, 0),
-	gsSP1Triangle(1, 3, 7, 0),
-	gsSP1Triangle(3, 4, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0[73] = {
-	{{ {166, -13, -17}, 0, {-16, -16}, {122, 9, 34, 255} }},
-	{{ {162, 14, -11}, 0, {-16, -16}, {122, 10, 33, 255} }},
-	{{ {153, 7, 24}, 0, {-16, -16}, {73, 243, 103, 255} }},
-	{{ {155, -15, 21}, 0, {-16, -16}, {71, 249, 105, 255} }},
-	{{ {101, -29, 15}, 0, {-16, -16}, {66, 150, 25, 255} }},
-	{{ {98, 10, 29}, 0, {-16, -16}, {79, 8, 99, 255} }},
-	{{ {90, -3, 52}, 0, {-16, -16}, {72, 2, 105, 255} }},
-	{{ {84, 48, 24}, 0, {-16, -16}, {26, 79, 96, 255} }},
-	{{ {139, 53, 25}, 0, {-16, -16}, {252, 19, 126, 255} }},
-	{{ {123, 72, 21}, 0, {-16, -16}, {252, 22, 125, 255} }},
-	{{ {46, 49, 45}, 0, {-16, -16}, {247, 72, 104, 255} }},
-	{{ {56, 80, 1}, 0, {-16, -16}, {6, 125, 237, 255} }},
-	{{ {84, 60, -7}, 0, {-16, -16}, {1, 112, 196, 255} }},
-	{{ {126, 84, -3}, 0, {-16, -16}, {195, 103, 42, 255} }},
-	{{ {123, 72, 21}, 0, {-16, -16}, {196, 103, 44, 255} }},
-	{{ {89, 18, -34}, 0, {-16, -16}, {7, 10, 130, 255} }},
-	{{ {126, 84, -3}, 0, {-16, -16}, {6, 51, 140, 255} }},
-	{{ {89, 18, -34}, 0, {-16, -16}, {7, 10, 130, 255} }},
-	{{ {84, 60, -7}, 0, {-16, -16}, {1, 112, 196, 255} }},
-	{{ {146, 59, -8}, 0, {-16, -16}, {23, 42, 138, 255} }},
-	{{ {56, 80, 1}, 0, {-16, -16}, {6, 125, 237, 255} }},
-	{{ {33, 7, -37}, 0, {-16, -16}, {223, 250, 133, 255} }},
-	{{ {94, -22, -18}, 0, {-16, -16}, {26, 168, 168, 255} }},
-	{{ {166, -13, -17}, 0, {-16, -16}, {30, 6, 133, 255} }},
-	{{ {162, 14, -11}, 0, {-16, -16}, {38, 31, 139, 255} }},
-	{{ {56, -47, -5}, 0, {-16, -16}, {3, 138, 209, 255} }},
-	{{ {32, -43, 0}, 0, {-16, -16}, {51, 148, 212, 255} }},
-	{{ {45, -29, 52}, 0, {-16, -16}, {231, 188, 105, 255} }},
-	{{ {88, -34, 39}, 0, {-16, -16}, {61, 166, 65, 255} }},
-	{{ {101, -29, 15}, 0, {-16, -16}, {66, 150, 25, 255} }},
-	{{ {155, -15, 21}, 0, {-16, -16}, {21, 131, 246, 255} }},
-	{{ {166, -13, -17}, 0, {-16, -16}, {15, 130, 254, 255} }},
-	{{ {88, -34, 39}, 0, {-16, -16}, {61, 166, 65, 255} }},
-	{{ {101, -29, 15}, 0, {-16, -16}, {66, 150, 25, 255} }},
-	{{ {90, -3, 52}, 0, {-16, -16}, {72, 2, 105, 255} }},
-	{{ {45, -29, 52}, 0, {-16, -16}, {231, 188, 105, 255} }},
-	{{ {46, 49, 45}, 0, {-16, -16}, {247, 72, 104, 255} }},
-	{{ {18, 30, 41}, 0, {-16, -16}, {201, 45, 105, 255} }},
-	{{ {8, 58, -2}, 0, {-16, -16}, {175, 93, 226, 255} }},
-	{{ {56, 80, 1}, 0, {-16, -16}, {6, 125, 237, 255} }},
-	{{ {33, 7, -37}, 0, {-16, -16}, {223, 250, 133, 255} }},
-	{{ {-4, 38, 0}, 0, {-16, -16}, {217, 115, 217, 255} }},
-	{{ {14, -1, -22}, 0, {-16, -16}, {3, 4, 129, 255} }},
-	{{ {32, -43, 0}, 0, {-16, -16}, {51, 148, 212, 255} }},
-	{{ {2, -5, -33}, 0, {-16, -16}, {250, 2, 129, 255} }},
-	{{ {24, -59, -3}, 0, {-16, -16}, {38, 141, 219, 255} }},
-	{{ {23, -29, 36}, 0, {-16, -16}, {22, 197, 110, 255} }},
-	{{ {0, 21, 37}, 0, {-16, -16}, {5, 68, 107, 255} }},
-	{{ {-15, 23, 43}, 0, {-16, -16}, {212, 59, 104, 255} }},
-	{{ {0, 21, 37}, 0, {-16, -16}, {5, 68, 107, 255} }},
-	{{ {-4, 38, 0}, 0, {-16, -16}, {217, 115, 217, 255} }},
-	{{ {15, -39, 42}, 0, {-16, -16}, {18, 186, 104, 255} }},
-	{{ {0, -35, 32}, 0, {-16, -16}, {163, 184, 49, 255} }},
-	{{ {-21, 9, 33}, 0, {-16, -16}, {141, 231, 47, 255} }},
-	{{ {-22, 43, -3}, 0, {-16, -16}, {195, 105, 218, 255} }},
-	{{ {14, -1, -22}, 0, {-16, -16}, {3, 4, 129, 255} }},
-	{{ {2, -5, -33}, 0, {-16, -16}, {250, 2, 129, 255} }},
-	{{ {-25, 24, 0}, 0, {-16, -16}, {132, 251, 229, 255} }},
-	{{ {-8, -12, -20}, 0, {-16, -16}, {155, 208, 196, 255} }},
-	{{ {24, -59, -3}, 0, {-16, -16}, {38, 141, 219, 255} }},
-	{{ {6, -49, 0}, 0, {-16, -16}, {171, 165, 230, 255} }},
-	{{ {23, -29, 36}, 0, {-16, -16}, {22, 197, 110, 255} }},
-	{{ {146, 59, -8}, 0, {-16, -16}, {94, 76, 40, 255} }},
-	{{ {126, 84, -3}, 0, {-16, -16}, {97, 68, 46, 255} }},
-	{{ {123, 72, 21}, 0, {-16, -16}, {94, 76, 40, 255} }},
-	{{ {139, 53, 25}, 0, {-16, -16}, {90, 83, 34, 255} }},
-	{{ {105, 17, 3}, 0, {-16, -16}, {119, 44, 3, 255} }},
-	{{ {98, 10, 29}, 0, {-16, -16}, {110, 48, 42, 255} }},
-	{{ {153, 7, 24}, 0, {-16, -16}, {12, 123, 30, 255} }},
-	{{ {139, 53, 25}, 0, {-16, -16}, {92, 168, 2, 255} }},
-	{{ {146, 59, -8}, 0, {-16, -16}, {89, 166, 246, 255} }},
-	{{ {89, 18, -34}, 0, {-16, -16}, {112, 36, 209, 255} }},
-	{{ {162, 14, -11}, 0, {-16, -16}, {11, 125, 19, 255} }},
-};
-
-Gfx mario_004_switch_option_left_hand_peace_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(4, 2, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 5, 8, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(6, 7, 10, 0),
-	gsSP1Triangle(10, 7, 11, 0),
-	gsSP1Triangle(11, 7, 12, 0),
-	gsSP1Triangle(12, 7, 13, 0),
-	gsSP1Triangle(7, 14, 13, 0),
-	gsSP1Triangle(11, 12, 15, 0),
-	gsSPVertex(mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 1, 5, 0),
-	gsSP1Triangle(5, 1, 6, 0),
-	gsSP1Triangle(7, 6, 1, 0),
-	gsSP1Triangle(1, 8, 7, 0),
-	gsSP1Triangle(9, 5, 6, 0),
-	gsSP1Triangle(5, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 9, 12, 0),
-	gsSP1Triangle(13, 12, 9, 0),
-	gsSP1Triangle(13, 9, 6, 0),
-	gsSP1Triangle(6, 14, 13, 0),
-	gsSP1Triangle(14, 6, 15, 0),
-	gsSPVertex(mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(13, 11, 14, 0),
-	gsSP1Triangle(3, 14, 11, 0),
-	gsSP1Triangle(14, 3, 5, 0),
-	gsSP1Triangle(15, 14, 5, 0),
-	gsSP1Triangle(9, 15, 5, 0),
-	gsSP1Triangle(5, 6, 9, 0),
-	gsSPVertex(mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0 + 48, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(6, 5, 0, 0),
-	gsSP1Triangle(0, 2, 6, 0),
-	gsSP1Triangle(6, 2, 7, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(3, 12, 11, 0),
-	gsSP1Triangle(11, 13, 3, 0),
-	gsSP1Triangle(3, 13, 1, 0),
-	gsSP1Triangle(3, 4, 12, 0),
-	gsSP1Triangle(10, 12, 4, 0),
-	gsSP1Triangle(4, 5, 10, 0),
-	gsSP1Triangle(5, 9, 10, 0),
-	gsSP1Triangle(6, 9, 5, 0),
-	gsSPVertex(mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0 + 62, 11, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 5, 4, 0),
-	gsSP1Triangle(7, 4, 8, 0),
-	gsSP1Triangle(8, 4, 9, 0),
-	gsSP1Triangle(10, 9, 4, 0),
-	gsSP1Triangle(4, 6, 10, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0[59] = {
-	{{ {131, 47, -1}, 0, {1088, 212}, {228, 93, 174, 255} }},
-	{{ {107, -19, -33}, 0, {458, 16}, {206, 14, 140, 255} }},
-	{{ {78, 11, 40}, 0, {756, 802}, {210, 64, 156, 255} }},
-	{{ {70, -52, 35}, 0, {180, 784}, {198, 219, 149, 255} }},
-	{{ {114, -92, -11}, 0, {-164, 172}, {208, 185, 162, 255} }},
-	{{ {192, 11, -2}, 0, {-16, -16}, {83, 33, 165, 255} }},
-	{{ {107, -19, -33}, 0, {-16, -16}, {206, 14, 140, 255} }},
-	{{ {131, 47, -1}, 0, {-16, -16}, {228, 93, 174, 255} }},
-	{{ {182, -72, -8}, 0, {-16, -16}, {74, 217, 160, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {183, 100, 86}, 0, {-16, -16}, {20, 123, 234, 255} }},
-	{{ {129, 65, 103}, 0, {-16, -16}, {164, 78, 41, 255} }},
-	{{ {78, 11, 40}, 0, {-16, -16}, {210, 64, 156, 255} }},
-	{{ {45, 49, 53}, 0, {-16, -16}, {23, 58, 145, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {0, 9, 129, 255} }},
-	{{ {70, -52, 35}, 0, {-16, -16}, {198, 219, 149, 255} }},
-	{{ {29, -82, 43}, 0, {-16, -16}, {10, 210, 138, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {0, 9, 129, 255} }},
-	{{ {70, -52, 35}, 0, {-16, -16}, {198, 219, 149, 255} }},
-	{{ {106, -124, 90}, 0, {-16, -16}, {152, 187, 23, 255} }},
-	{{ {114, -92, -11}, 0, {-16, -16}, {208, 185, 162, 255} }},
-	{{ {151, -168, 67}, 0, {-16, -16}, {247, 136, 216, 255} }},
-	{{ {182, -72, -8}, 0, {-16, -16}, {74, 217, 160, 255} }},
-	{{ {107, -19, -33}, 0, {-16, -16}, {206, 14, 140, 255} }},
-	{{ {228, -121, 117}, 0, {-16, -16}, {101, 196, 207, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {273, -105, 188}, 0, {-16, -16}, {109, 197, 30, 255} }},
-	{{ {285, -6, 196}, 0, {-16, -16}, {119, 27, 37, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {211, 81, 156}, 0, {-16, -16}, {38, 113, 44, 255} }},
-	{{ {228, 1, 228}, 0, {-16, -16}, {252, 33, 123, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {211, 81, 156}, 0, {-16, -16}, {38, 113, 44, 255} }},
-	{{ {160, 65, 148}, 0, {-16, -16}, {175, 67, 72, 255} }},
-	{{ {183, 100, 86}, 0, {-16, -16}, {20, 123, 234, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {129, 65, 103}, 0, {-16, -16}, {164, 78, 41, 255} }},
-	{{ {137, -137, 134}, 0, {-16, -16}, {163, 199, 65, 255} }},
-	{{ {73, 11, 60}, 0, {-16, -16}, {188, 250, 107, 255} }},
-	{{ {45, 49, 53}, 0, {-16, -16}, {201, 236, 113, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {205, 254, 116, 255} }},
-	{{ {65, -53, 55}, 0, {-16, -16}, {186, 7, 106, 255} }},
-	{{ {29, -82, 43}, 0, {-16, -16}, {205, 16, 115, 255} }},
-	{{ {106, -124, 90}, 0, {-16, -16}, {152, 187, 23, 255} }},
-	{{ {151, -168, 67}, 0, {-16, -16}, {247, 136, 216, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {171, -129, 178}, 0, {-16, -16}, {182, 205, 90, 255} }},
-	{{ {171, -129, 178}, 0, {-16, -16}, {182, 205, 90, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {216, -104, 220}, 0, {-16, -16}, {244, 207, 117, 255} }},
-	{{ {273, -105, 188}, 0, {-16, -16}, {109, 197, 30, 255} }},
-	{{ {228, 1, 228}, 0, {-16, -16}, {252, 33, 123, 255} }},
-	{{ {285, -6, 196}, 0, {-16, -16}, {119, 27, 37, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {137, -137, 134}, 0, {-16, -16}, {163, 199, 65, 255} }},
-	{{ {160, 65, 148}, 0, {-16, -16}, {175, 67, 72, 255} }},
-	{{ {73, 11, 60}, 0, {-16, -16}, {188, 250, 107, 255} }},
-	{{ {65, -53, 55}, 0, {-16, -16}, {186, 7, 106, 255} }},
-};
-
-Gfx mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 6, 5, 0),
-	gsSP1Triangle(8, 5, 9, 0),
-	gsSP1Triangle(5, 10, 9, 0),
-	gsSP1Triangle(7, 10, 5, 0),
-	gsSP1Triangle(10, 7, 11, 0),
-	gsSP1Triangle(12, 11, 7, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(15, 14, 12, 0),
-	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(8, 5, 6, 0),
-	gsSP1Triangle(5, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(8, 12, 11, 0),
-	gsSP1Triangle(8, 6, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 5, 2, 0),
-	gsSP1Triangle(2, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(10, 12, 6, 0),
-	gsSP1Triangle(12, 13, 6, 0),
-	gsSP1Triangle(13, 14, 6, 0),
-	gsSP1Triangle(6, 14, 15, 0),
-	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0 + 48, 11, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(2, 4, 6, 0),
-	gsSP1Triangle(6, 0, 2, 0),
-	gsSP1Triangle(6, 7, 0, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_1[36] = {
-	{{ {4, -3, -32}, 0, {-16, -16}, {73, 31, 156, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {46, 116, 233, 255} }},
-	{{ {-2, 41, 0}, 0, {-16, -16}, {222, 115, 215, 255} }},
-	{{ {-13, 26, 41}, 0, {-16, -16}, {46, 80, 87, 255} }},
-	{{ {1, 24, 35}, 0, {-16, -16}, {249, 63, 110, 255} }},
-	{{ {23, -25, 35}, 0, {-16, -16}, {16, 192, 109, 255} }},
-	{{ {13, -37, 41}, 0, {-16, -16}, {87, 229, 89, 255} }},
-	{{ {31, -39, 0}, 0, {-16, -16}, {61, 152, 215, 255} }},
-	{{ {24, -55, -4}, 0, {-16, -16}, {117, 211, 234, 255} }},
-	{{ {16, 1, -22}, 0, {-16, -16}, {4, 0, 129, 255} }},
-	{{ {35, 9, -36}, 0, {-16, -16}, {231, 245, 132, 255} }},
-	{{ {11, 60, -3}, 0, {-16, -16}, {177, 89, 210, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {29, 7, 48}, 0, {-16, -16}, {192, 250, 110, 255} }},
-	{{ {75, -32, 65}, 0, {-16, -16}, {25, 178, 97, 255} }},
-	{{ {55, -43, -3}, 0, {-16, -16}, {6, 140, 205, 255} }},
-	{{ {35, 9, -36}, 0, {-16, -16}, {231, 245, 132, 255} }},
-	{{ {103, -25, 1}, 0, {-16, -16}, {101, 191, 214, 255} }},
-	{{ {55, -43, -3}, 0, {-16, -16}, {6, 140, 205, 255} }},
-	{{ {85, 30, -32}, 0, {-16, -16}, {69, 28, 153, 255} }},
-	{{ {58, 81, 0}, 0, {-16, -16}, {23, 122, 227, 255} }},
-	{{ {11, 60, -3}, 0, {-16, -16}, {177, 89, 210, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {54, 54, 44}, 0, {-16, -16}, {20, 81, 96, 255} }},
-	{{ {56, 11, 65}, 0, {-16, -16}, {241, 19, 125, 255} }},
-	{{ {29, 7, 48}, 0, {-16, -16}, {192, 250, 110, 255} }},
-	{{ {75, -32, 65}, 0, {-16, -16}, {25, 178, 97, 255} }},
-	{{ {95, -8, 52}, 0, {-16, -16}, {103, 249, 74, 255} }},
-	{{ {96, 39, 24}, 0, {-16, -16}, {108, 61, 28, 255} }},
-	{{ {85, 15, 52}, 0, {-16, -16}, {68, 44, 98, 255} }},
-	{{ {13, -37, 41}, 0, {-16, -16}, {155, 184, 30, 255} }},
-	{{ {-15, -12, 7}, 0, {-16, -16}, {139, 207, 248, 255} }},
-	{{ {24, -55, -4}, 0, {-16, -16}, {161, 175, 236, 255} }},
-	{{ {-13, 26, 41}, 0, {-16, -16}, {135, 235, 31, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {131, 244, 238, 255} }},
-	{{ {4, -3, -32}, 0, {-16, -16}, {153, 213, 196, 255} }},
-};
-
-Gfx mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_1[] = {
-	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_1 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 0, 0),
-	gsSP1Triangle(0, 9, 7, 0),
-	gsSP1Triangle(2, 9, 0, 0),
-	gsSP1Triangle(10, 9, 2, 0),
-	gsSP1Triangle(11, 10, 2, 0),
-	gsSP1Triangle(11, 2, 4, 0),
-	gsSP1Triangle(12, 11, 4, 0),
-	gsSP1Triangle(4, 13, 12, 0),
-	gsSP1Triangle(13, 4, 5, 0),
-	gsSP1Triangle(14, 13, 5, 0),
-	gsSP1Triangle(15, 14, 5, 0),
-	gsSP1Triangle(5, 7, 15, 0),
-	gsSP1Triangle(10, 15, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_1 + 16, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(1, 11, 10, 0),
-	gsSP1Triangle(2, 1, 10, 0),
-	gsSP1Triangle(1, 12, 11, 0),
-	gsSP1Triangle(3, 12, 1, 0),
-	gsSP1Triangle(4, 12, 3, 0),
-	gsSP1Triangle(7, 12, 4, 0),
-	gsSP1Triangle(12, 7, 13, 0),
-	gsSP1Triangle(13, 7, 8, 0),
-	gsSP1Triangle(11, 13, 8, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSPVertex(mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_1 + 30, 6, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0[59] = {
-	{{ {131, 47, -1}, 0, {1088, 212}, {228, 93, 174, 255} }},
-	{{ {107, -19, -33}, 0, {458, 16}, {206, 14, 140, 255} }},
-	{{ {78, 11, 40}, 0, {756, 802}, {210, 64, 156, 255} }},
-	{{ {70, -52, 35}, 0, {180, 784}, {198, 219, 149, 255} }},
-	{{ {114, -92, -11}, 0, {-164, 172}, {208, 185, 162, 255} }},
-	{{ {192, 11, -2}, 0, {-16, -16}, {83, 33, 165, 255} }},
-	{{ {107, -19, -33}, 0, {-16, -16}, {206, 14, 140, 255} }},
-	{{ {131, 47, -1}, 0, {-16, -16}, {228, 93, 174, 255} }},
-	{{ {182, -72, -8}, 0, {-16, -16}, {74, 217, 160, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {183, 100, 86}, 0, {-16, -16}, {20, 123, 234, 255} }},
-	{{ {129, 65, 103}, 0, {-16, -16}, {164, 78, 41, 255} }},
-	{{ {78, 11, 40}, 0, {-16, -16}, {210, 64, 156, 255} }},
-	{{ {45, 49, 53}, 0, {-16, -16}, {23, 58, 145, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {0, 9, 129, 255} }},
-	{{ {70, -52, 35}, 0, {-16, -16}, {198, 219, 149, 255} }},
-	{{ {29, -82, 43}, 0, {-16, -16}, {10, 210, 138, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {0, 9, 129, 255} }},
-	{{ {70, -52, 35}, 0, {-16, -16}, {198, 219, 149, 255} }},
-	{{ {106, -124, 90}, 0, {-16, -16}, {152, 187, 23, 255} }},
-	{{ {114, -92, -11}, 0, {-16, -16}, {208, 185, 162, 255} }},
-	{{ {151, -168, 67}, 0, {-16, -16}, {247, 136, 216, 255} }},
-	{{ {182, -72, -8}, 0, {-16, -16}, {74, 217, 160, 255} }},
-	{{ {107, -19, -33}, 0, {-16, -16}, {206, 14, 140, 255} }},
-	{{ {228, -121, 117}, 0, {-16, -16}, {101, 196, 207, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {273, -105, 188}, 0, {-16, -16}, {109, 197, 30, 255} }},
-	{{ {285, -6, 196}, 0, {-16, -16}, {119, 27, 37, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {211, 81, 156}, 0, {-16, -16}, {38, 113, 44, 255} }},
-	{{ {228, 1, 228}, 0, {-16, -16}, {252, 33, 123, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {211, 81, 156}, 0, {-16, -16}, {38, 113, 44, 255} }},
-	{{ {160, 65, 148}, 0, {-16, -16}, {175, 67, 72, 255} }},
-	{{ {183, 100, 86}, 0, {-16, -16}, {20, 123, 234, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {129, 65, 103}, 0, {-16, -16}, {164, 78, 41, 255} }},
-	{{ {137, -137, 134}, 0, {-16, -16}, {163, 199, 65, 255} }},
-	{{ {73, 11, 60}, 0, {-16, -16}, {188, 250, 107, 255} }},
-	{{ {45, 49, 53}, 0, {-16, -16}, {201, 236, 113, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {205, 254, 116, 255} }},
-	{{ {65, -53, 55}, 0, {-16, -16}, {186, 7, 106, 255} }},
-	{{ {29, -82, 43}, 0, {-16, -16}, {205, 16, 115, 255} }},
-	{{ {106, -124, 90}, 0, {-16, -16}, {152, 187, 23, 255} }},
-	{{ {151, -168, 67}, 0, {-16, -16}, {247, 136, 216, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {171, -129, 178}, 0, {-16, -16}, {182, 205, 90, 255} }},
-	{{ {171, -129, 178}, 0, {-16, -16}, {182, 205, 90, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {216, -104, 220}, 0, {-16, -16}, {244, 207, 117, 255} }},
-	{{ {273, -105, 188}, 0, {-16, -16}, {109, 197, 30, 255} }},
-	{{ {228, 1, 228}, 0, {-16, -16}, {252, 33, 123, 255} }},
-	{{ {285, -6, 196}, 0, {-16, -16}, {119, 27, 37, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {137, -137, 134}, 0, {-16, -16}, {163, 199, 65, 255} }},
-	{{ {160, 65, 148}, 0, {-16, -16}, {175, 67, 72, 255} }},
-	{{ {73, 11, 60}, 0, {-16, -16}, {188, 250, 107, 255} }},
-	{{ {65, -53, 55}, 0, {-16, -16}, {186, 7, 106, 255} }},
-};
-
-Gfx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 6, 5, 0),
-	gsSP1Triangle(8, 5, 9, 0),
-	gsSP1Triangle(5, 10, 9, 0),
-	gsSP1Triangle(7, 10, 5, 0),
-	gsSP1Triangle(10, 7, 11, 0),
-	gsSP1Triangle(12, 11, 7, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(15, 14, 12, 0),
-	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(8, 5, 6, 0),
-	gsSP1Triangle(5, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(8, 12, 11, 0),
-	gsSP1Triangle(8, 6, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 5, 2, 0),
-	gsSP1Triangle(2, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(10, 12, 6, 0),
-	gsSP1Triangle(12, 13, 6, 0),
-	gsSP1Triangle(13, 14, 6, 0),
-	gsSP1Triangle(6, 14, 15, 0),
-	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0 + 48, 11, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(2, 4, 6, 0),
-	gsSP1Triangle(6, 0, 2, 0),
-	gsSP1Triangle(6, 7, 0, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_1[36] = {
-	{{ {4, -3, -32}, 0, {-16, -16}, {73, 31, 156, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {46, 116, 233, 255} }},
-	{{ {-2, 41, 0}, 0, {-16, -16}, {222, 115, 215, 255} }},
-	{{ {-13, 26, 41}, 0, {-16, -16}, {46, 80, 87, 255} }},
-	{{ {1, 24, 35}, 0, {-16, -16}, {249, 63, 110, 255} }},
-	{{ {23, -25, 35}, 0, {-16, -16}, {16, 192, 109, 255} }},
-	{{ {13, -37, 41}, 0, {-16, -16}, {87, 229, 89, 255} }},
-	{{ {31, -39, 0}, 0, {-16, -16}, {61, 152, 215, 255} }},
-	{{ {24, -55, -4}, 0, {-16, -16}, {117, 211, 234, 255} }},
-	{{ {16, 1, -22}, 0, {-16, -16}, {4, 0, 129, 255} }},
-	{{ {35, 9, -36}, 0, {-16, -16}, {231, 245, 132, 255} }},
-	{{ {11, 60, -3}, 0, {-16, -16}, {177, 89, 210, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {29, 7, 48}, 0, {-16, -16}, {192, 250, 110, 255} }},
-	{{ {75, -32, 65}, 0, {-16, -16}, {25, 178, 97, 255} }},
-	{{ {55, -43, -3}, 0, {-16, -16}, {6, 140, 205, 255} }},
-	{{ {35, 9, -36}, 0, {-16, -16}, {231, 245, 132, 255} }},
-	{{ {103, -25, 1}, 0, {-16, -16}, {101, 191, 214, 255} }},
-	{{ {55, -43, -3}, 0, {-16, -16}, {6, 140, 205, 255} }},
-	{{ {85, 30, -32}, 0, {-16, -16}, {69, 28, 153, 255} }},
-	{{ {58, 81, 0}, 0, {-16, -16}, {23, 122, 227, 255} }},
-	{{ {11, 60, -3}, 0, {-16, -16}, {177, 89, 210, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {54, 54, 44}, 0, {-16, -16}, {20, 81, 96, 255} }},
-	{{ {56, 11, 65}, 0, {-16, -16}, {241, 19, 125, 255} }},
-	{{ {29, 7, 48}, 0, {-16, -16}, {192, 250, 110, 255} }},
-	{{ {75, -32, 65}, 0, {-16, -16}, {25, 178, 97, 255} }},
-	{{ {95, -8, 52}, 0, {-16, -16}, {103, 249, 74, 255} }},
-	{{ {96, 39, 24}, 0, {-16, -16}, {108, 61, 28, 255} }},
-	{{ {85, 15, 52}, 0, {-16, -16}, {68, 44, 98, 255} }},
-	{{ {13, -37, 41}, 0, {-16, -16}, {155, 184, 30, 255} }},
-	{{ {-15, -12, 7}, 0, {-16, -16}, {139, 207, 248, 255} }},
-	{{ {24, -55, -4}, 0, {-16, -16}, {161, 175, 236, 255} }},
-	{{ {-13, 26, 41}, 0, {-16, -16}, {135, 235, 31, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {131, 244, 238, 255} }},
-	{{ {4, -3, -32}, 0, {-16, -16}, {153, 213, 196, 255} }},
-};
-
-Gfx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_1[] = {
-	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_1 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 0, 0),
-	gsSP1Triangle(0, 9, 7, 0),
-	gsSP1Triangle(2, 9, 0, 0),
-	gsSP1Triangle(10, 9, 2, 0),
-	gsSP1Triangle(11, 10, 2, 0),
-	gsSP1Triangle(11, 2, 4, 0),
-	gsSP1Triangle(12, 11, 4, 0),
-	gsSP1Triangle(4, 13, 12, 0),
-	gsSP1Triangle(13, 4, 5, 0),
-	gsSP1Triangle(14, 13, 5, 0),
-	gsSP1Triangle(15, 14, 5, 0),
-	gsSP1Triangle(5, 7, 15, 0),
-	gsSP1Triangle(10, 15, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_1 + 16, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(1, 11, 10, 0),
-	gsSP1Triangle(2, 1, 10, 0),
-	gsSP1Triangle(1, 12, 11, 0),
-	gsSP1Triangle(3, 12, 1, 0),
-	gsSP1Triangle(4, 12, 3, 0),
-	gsSP1Triangle(7, 12, 4, 0),
-	gsSP1Triangle(12, 7, 13, 0),
-	gsSP1Triangle(13, 7, 8, 0),
-	gsSP1Triangle(11, 13, 8, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_1 + 30, 6, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_0[8] = {
-	{{ {178, -177, 128}, 0, {-16, 4008}, {168, 179, 207, 255} }},
-	{{ {319, -248, -14}, 0, {-16, -16}, {168, 179, 207, 255} }},
-	{{ {349, -325, 53}, 0, {974, -16}, {168, 179, 207, 255} }},
-	{{ {207, -253, 195}, 0, {974, 4008}, {168, 179, 207, 255} }},
-	{{ {414, 206, 82}, 0, {974, -16}, {189, 101, 217, 255} }},
-	{{ {368, 146, 7}, 0, {-16, -16}, {189, 101, 217, 255} }},
-	{{ {212, 96, 143}, 0, {-16, 4008}, {189, 101, 217, 255} }},
-	{{ {258, 156, 218}, 0, {974, 4008}, {189, 101, 217, 255} }},
-};
-
-Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_0[] = {
-	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_0 + 0, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_1[8] = {
-	{{ {368, 146, 7}, 0, {974, -16}, {189, 101, 217, 255} }},
-	{{ {166, 37, 68}, 0, {-16, 4008}, {190, 101, 217, 255} }},
-	{{ {212, 96, 143}, 0, {974, 4008}, {189, 101, 217, 255} }},
-	{{ {322, 87, -67}, 0, {-16, -16}, {190, 101, 217, 255} }},
-	{{ {178, -177, 128}, 0, {974, 4008}, {168, 179, 207, 255} }},
-	{{ {149, -100, 60}, 0, {-16, 4008}, {167, 179, 207, 255} }},
-	{{ {319, -248, -14}, 0, {974, -16}, {168, 179, 207, 255} }},
-	{{ {290, -171, -81}, 0, {-16, -16}, {168, 179, 206, 255} }},
-};
-
-Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_1[] = {
-	gsSPVertex(mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_1 + 0, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_offset_009_mesh_layer_1_vtx_0[22] = {
-	{{ {-5, 37, 31}, 0, {-16, -16}, {157, 62, 50, 255} }},
-	{{ {-15, 0, 7}, 0, {-16, -16}, {129, 247, 255, 255} }},
-	{{ {-1, -12, 47}, 0, {-16, -16}, {165, 227, 84, 255} }},
-	{{ {-4, 37, -17}, 0, {-16, -16}, {159, 62, 202, 255} }},
-	{{ {14, 48, -23}, 0, {-16, -16}, {227, 99, 182, 255} }},
-	{{ {13, 48, 38}, 0, {-16, -16}, {224, 99, 73, 255} }},
-	{{ {18, -15, 58}, 0, {-16, -16}, {235, 217, 119, 255} }},
-	{{ {1, -44, 8}, 0, {-16, -16}, {170, 162, 0, 255} }},
-	{{ {0, -13, -32}, 0, {-16, -16}, {168, 223, 170, 255} }},
-	{{ {19, -15, -42}, 0, {-16, -16}, {239, 217, 136, 255} }},
-	{{ {92, 45, -16}, 0, {-16, -16}, {59, 93, 192, 255} }},
-	{{ {91, 45, 32}, 0, {-16, -16}, {57, 93, 65, 255} }},
-	{{ {95, -5, 48}, 0, {-16, -16}, {67, 230, 105, 255} }},
-	{{ {98, -37, 8}, 0, {-16, -16}, {74, 153, 0, 255} }},
-	{{ {21, -54, 8}, 0, {-16, -16}, {243, 130, 0, 255} }},
-	{{ {96, -5, -31}, 0, {-16, -16}, {68, 230, 152, 255} }},
-	{{ {92, 45, -16}, 0, {-16, -16}, {59, 93, 192, 255} }},
-	{{ {116, 10, 8}, 0, {-16, -16}, {127, 9, 0, 255} }},
-	{{ {96, -5, -31}, 0, {-16, -16}, {68, 230, 152, 255} }},
-	{{ {91, 45, 32}, 0, {-16, -16}, {57, 93, 65, 255} }},
-	{{ {95, -5, 48}, 0, {-16, -16}, {67, 230, 105, 255} }},
-	{{ {98, -37, 8}, 0, {-16, -16}, {74, 153, 0, 255} }},
-};
-
-Gfx mario_000_offset_009_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_offset_009_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(5, 0, 6, 0),
-	gsSP1Triangle(0, 2, 6, 0),
-	gsSP1Triangle(6, 2, 7, 0),
-	gsSP1Triangle(2, 1, 7, 0),
-	gsSP1Triangle(7, 1, 8, 0),
-	gsSP1Triangle(8, 1, 3, 0),
-	gsSP1Triangle(9, 8, 3, 0),
-	gsSP1Triangle(9, 3, 4, 0),
-	gsSP1Triangle(9, 4, 10, 0),
-	gsSP1Triangle(4, 5, 10, 0),
-	gsSP1Triangle(5, 11, 10, 0),
-	gsSP1Triangle(5, 6, 11, 0),
-	gsSP1Triangle(6, 12, 11, 0),
-	gsSP1Triangle(13, 12, 6, 0),
-	gsSP1Triangle(6, 14, 13, 0),
-	gsSP1Triangle(6, 7, 14, 0),
-	gsSP1Triangle(14, 7, 9, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(14, 9, 13, 0),
-	gsSP1Triangle(9, 15, 13, 0),
-	gsSP1Triangle(10, 15, 9, 0),
-	gsSPVertex(mario_000_offset_009_mesh_layer_1_vtx_0 + 16, 6, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_offset_010_mesh_layer_1_vtx_0[12] = {
-	{{ {8, 44, 33}, 0, {-16, -16}, {196, 92, 64, 255} }},
-	{{ {65, -11, 54}, 0, {-16, -16}, {57, 219, 107, 255} }},
-	{{ {68, 45, 37}, 0, {-16, -16}, {64, 87, 67, 255} }},
-	{{ {6, -6, 49}, 0, {-16, -16}, {191, 227, 105, 255} }},
-	{{ {-14, 8, 8}, 0, {-16, -16}, {129, 5, 255, 255} }},
-	{{ {9, 44, -16}, 0, {-16, -16}, {199, 92, 190, 255} }},
-	{{ {69, 45, -18}, 0, {-16, -16}, {66, 87, 191, 255} }},
-	{{ {81, 3, 9}, 0, {-16, -16}, {127, 250, 1, 255} }},
-	{{ {64, -46, 9}, 0, {-16, -16}, {54, 141, 0, 255} }},
-	{{ {4, -37, 9}, 0, {-16, -16}, {186, 150, 0, 255} }},
-	{{ {6, -6, -31}, 0, {-16, -16}, {192, 226, 150, 255} }},
-	{{ {66, -11, -36}, 0, {-16, -16}, {59, 219, 150, 255} }},
-};
-
-Gfx mario_000_offset_010_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_offset_010_mesh_layer_1_vtx_0 + 0, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(6, 5, 0, 0),
-	gsSP1Triangle(0, 2, 6, 0),
-	gsSP1Triangle(2, 7, 6, 0),
-	gsSP1Triangle(1, 7, 2, 0),
-	gsSP1Triangle(8, 7, 1, 0),
-	gsSP1Triangle(9, 8, 1, 0),
-	gsSP1Triangle(1, 3, 9, 0),
-	gsSP1Triangle(3, 4, 9, 0),
-	gsSP1Triangle(9, 4, 10, 0),
-	gsSP1Triangle(10, 4, 5, 0),
-	gsSP1Triangle(11, 10, 5, 0),
-	gsSP1Triangle(5, 6, 11, 0),
-	gsSP1Triangle(6, 7, 11, 0),
-	gsSP1Triangle(11, 7, 8, 0),
-	gsSP1Triangle(9, 11, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_offset_011_mesh_layer_1_vtx_0[29] = {
-	{{ {-11, 54, 53}, 0, {-16, -16}, {45, 119, 255, 255} }},
-	{{ {-39, 64, -8}, 0, {-16, -16}, {46, 118, 255, 255} }},
-	{{ {-41, 65, 26}, 0, {-16, -16}, {44, 119, 0, 255} }},
-	{{ {-12, 53, -32}, 0, {-16, -16}, {45, 119, 255, 255} }},
-	{{ {78, 21, 61}, 0, {-16, -16}, {44, 119, 254, 255} }},
-	{{ {76, 20, -41}, 0, {-16, -16}, {44, 119, 254, 255} }},
-	{{ {110, 9, 35}, 0, {-16, -16}, {43, 120, 254, 255} }},
-	{{ {110, 8, -20}, 0, {-16, -16}, {43, 120, 254, 255} }},
-	{{ {-34, 12, 44}, 0, {-16, -16}, {179, 207, 88, 255} }},
-	{{ {-11, 54, 53}, 0, {-16, -16}, {209, 2, 118, 255} }},
-	{{ {-41, 65, 26}, 0, {-16, -16}, {141, 25, 49, 255} }},
-	{{ {43, -18, 54}, 0, {-16, -16}, {0, 176, 99, 255} }},
-	{{ {27, -35, 11}, 0, {-16, -16}, {228, 132, 253, 255} }},
-	{{ {-54, 15, 8}, 0, {-16, -16}, {137, 212, 252, 255} }},
-	{{ {-39, 64, -8}, 0, {-16, -16}, {145, 25, 199, 255} }},
-	{{ {-35, 11, -21}, 0, {-16, -16}, {180, 204, 168, 255} }},
-	{{ {-39, 64, -8}, 0, {-16, -16}, {145, 25, 199, 255} }},
-	{{ {-12, 53, -32}, 0, {-16, -16}, {207, 254, 139, 255} }},
-	{{ {-35, 11, -21}, 0, {-16, -16}, {180, 204, 168, 255} }},
-	{{ {44, -12, -33}, 0, {-16, -16}, {252, 181, 153, 255} }},
-	{{ {76, 20, -41}, 0, {-16, -16}, {18, 208, 140, 255} }},
-	{{ {110, 8, -20}, 0, {-16, -16}, {73, 170, 198, 255} }},
-	{{ {80, -31, 7}, 0, {-16, -16}, {54, 141, 250, 255} }},
-	{{ {110, 9, 35}, 0, {-16, -16}, {78, 172, 54, 255} }},
-	{{ {43, -18, 54}, 0, {-16, -16}, {0, 176, 99, 255} }},
-	{{ {78, 21, 61}, 0, {-16, -16}, {28, 210, 115, 255} }},
-	{{ {-11, 54, 53}, 0, {-16, -16}, {209, 2, 118, 255} }},
-	{{ {27, -35, 11}, 0, {-16, -16}, {228, 132, 253, 255} }},
-	{{ {-54, 15, 8}, 0, {-16, -16}, {137, 212, 252, 255} }},
-};
-
-Gfx mario_000_offset_011_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_offset_011_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 11, 9, 0),
-	gsSP1Triangle(12, 11, 8, 0),
-	gsSP1Triangle(12, 8, 13, 0),
-	gsSP1Triangle(10, 13, 8, 0),
-	gsSP1Triangle(13, 10, 14, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(mario_000_offset_011_mesh_layer_1_vtx_0 + 16, 13, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 6, 3, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(6, 8, 11, 0),
-	gsSP1Triangle(11, 3, 6, 0),
-	gsSP1Triangle(2, 3, 11, 0),
-	gsSP1Triangle(12, 2, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_offset_012_mesh_layer_1_vtx_0[22] = {
-	{{ {95, -3, -49}, 0, {-16, -16}, {66, 232, 150, 255} }},
-	{{ {116, 11, -9}, 0, {-16, -16}, {127, 10, 255, 255} }},
-	{{ {98, -35, -10}, 0, {-16, -16}, {75, 153, 253, 255} }},
-	{{ {90, 47, -32}, 0, {-16, -16}, {56, 95, 193, 255} }},
-	{{ {18, -13, -58}, 0, {-16, -16}, {236, 220, 136, 255} }},
-	{{ {22, -54, -9}, 0, {-16, -16}, {246, 129, 254, 255} }},
-	{{ {19, -16, 41}, 0, {-16, -16}, {240, 214, 119, 255} }},
-	{{ {96, -5, 30}, 0, {-16, -16}, {69, 227, 103, 255} }},
-	{{ {91, 46, 16}, 0, {-16, -16}, {58, 92, 66, 255} }},
-	{{ {12, 49, -37}, 0, {-16, -16}, {224, 100, 185, 255} }},
-	{{ {-6, 38, -31}, 0, {-16, -16}, {157, 62, 206, 255} }},
-	{{ {-1, -11, -47}, 0, {-16, -16}, {165, 226, 172, 255} }},
-	{{ {1, -44, -9}, 0, {-16, -16}, {171, 161, 254, 255} }},
-	{{ {0, -14, 31}, 0, {-16, -16}, {169, 220, 85, 255} }},
-	{{ {-5, 36, 18}, 0, {-16, -16}, {158, 57, 57, 255} }},
-	{{ {13, 48, 24}, 0, {-16, -16}, {225, 96, 77, 255} }},
-	{{ {-6, 38, -31}, 0, {-16, -16}, {157, 62, 206, 255} }},
-	{{ {-15, 0, -7}, 0, {-16, -16}, {129, 246, 2, 255} }},
-	{{ {-5, 36, 18}, 0, {-16, -16}, {158, 57, 57, 255} }},
-	{{ {-1, -11, -47}, 0, {-16, -16}, {165, 226, 172, 255} }},
-	{{ {1, -44, -9}, 0, {-16, -16}, {171, 161, 254, 255} }},
-	{{ {0, -14, 31}, 0, {-16, -16}, {169, 220, 85, 255} }},
-};
-
-Gfx mario_000_offset_012_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_offset_012_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(4, 0, 2, 0),
-	gsSP1Triangle(2, 5, 4, 0),
-	gsSP1Triangle(2, 6, 5, 0),
-	gsSP1Triangle(2, 7, 6, 0),
-	gsSP1Triangle(2, 1, 7, 0),
-	gsSP1Triangle(7, 1, 8, 0),
-	gsSP1Triangle(8, 1, 3, 0),
-	gsSP1Triangle(8, 3, 9, 0),
-	gsSP1Triangle(3, 4, 9, 0),
-	gsSP1Triangle(4, 10, 9, 0),
-	gsSP1Triangle(4, 11, 10, 0),
-	gsSP1Triangle(12, 11, 4, 0),
-	gsSP1Triangle(5, 12, 4, 0),
-	gsSP1Triangle(6, 12, 5, 0),
-	gsSP1Triangle(6, 13, 12, 0),
-	gsSP1Triangle(14, 13, 6, 0),
-	gsSP1Triangle(15, 14, 6, 0),
-	gsSP1Triangle(8, 15, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 9, 15, 0),
-	gsSP1Triangle(9, 10, 15, 0),
-	gsSP1Triangle(10, 14, 15, 0),
-	gsSPVertex(mario_000_offset_012_mesh_layer_1_vtx_0 + 16, 6, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_offset_013_mesh_layer_1_vtx_0[12] = {
-	{{ {66, -11, 34}, 0, {-16, -16}, {58, 216, 106, 255} }},
-	{{ {69, 45, 18}, 0, {-16, -16}, {64, 86, 68, 255} }},
-	{{ {9, 44, 16}, 0, {-16, -16}, {198, 90, 69, 255} }},
-	{{ {83, 4, -10}, 0, {-16, -16}, {127, 248, 0, 255} }},
-	{{ {63, -45, -12}, 0, {-16, -16}, {51, 140, 252, 255} }},
-	{{ {4, -36, -10}, 0, {-16, -16}, {185, 150, 0, 255} }},
-	{{ {6, -6, 30}, 0, {-16, -16}, {192, 224, 105, 255} }},
-	{{ {-13, 10, -9}, 0, {-16, -16}, {129, 8, 1, 255} }},
-	{{ {9, 46, -33}, 0, {-16, -16}, {198, 95, 195, 255} }},
-	{{ {69, 46, -37}, 0, {-16, -16}, {64, 88, 191, 255} }},
-	{{ {65, -9, -56}, 0, {-16, -16}, {55, 221, 147, 255} }},
-	{{ {5, -3, -50}, 0, {-16, -16}, {188, 231, 151, 255} }},
-};
-
-Gfx mario_000_offset_013_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_offset_013_mesh_layer_1_vtx_0 + 0, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(0, 6, 5, 0),
-	gsSP1Triangle(2, 6, 0, 0),
-	gsSP1Triangle(2, 7, 6, 0),
-	gsSP1Triangle(8, 7, 2, 0),
-	gsSP1Triangle(8, 2, 1, 0),
-	gsSP1Triangle(1, 9, 8, 0),
-	gsSP1Triangle(1, 3, 9, 0),
-	gsSP1Triangle(9, 3, 10, 0),
-	gsSP1Triangle(10, 3, 4, 0),
-	gsSP1Triangle(10, 4, 5, 0),
-	gsSP1Triangle(5, 11, 10, 0),
-	gsSP1Triangle(5, 7, 11, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(11, 7, 8, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx mario_000_displaylist_005_mesh_layer_1_vtx_0[28] = {
-	{{ {75, 23, 40}, 0, {-16, -16}, {42, 120, 0, 255} }},
-	{{ {109, 11, 20}, 0, {-16, -16}, {43, 120, 0, 255} }},
-	{{ {110, 11, -36}, 0, {-16, -16}, {41, 120, 0, 255} }},
-	{{ {78, 22, -61}, 0, {-16, -16}, {41, 120, 0, 255} }},
-	{{ {-14, 54, 29}, 0, {-16, -16}, {42, 120, 0, 255} }},
-	{{ {-11, 53, -56}, 0, {-16, -16}, {42, 120, 0, 255} }},
-	{{ {-40, 63, 5}, 0, {-16, -16}, {42, 120, 0, 255} }},
-	{{ {-42, 64, -29}, 0, {-16, -16}, {43, 120, 0, 255} }},
-	{{ {110, 11, -36}, 0, {-16, -16}, {80, 172, 203, 255} }},
-	{{ {109, 11, 20}, 0, {-16, -16}, {74, 172, 61, 255} }},
-	{{ {80, -29, -7}, 0, {-16, -16}, {56, 142, 9, 255} }},
-	{{ {44, -11, 32}, 0, {-16, -16}, {253, 183, 104, 255} }},
-	{{ {75, 23, 40}, 0, {-16, -16}, {17, 212, 118, 255} }},
-	{{ {-14, 54, 29}, 0, {-16, -16}, {206, 0, 117, 255} }},
-	{{ {-36, 11, 19}, 0, {-16, -16}, {180, 205, 88, 255} }},
-	{{ {-40, 63, 5}, 0, {-16, -16}, {144, 24, 56, 255} }},
-	{{ {-54, 14, -10}, 0, {-16, -16}, {138, 210, 3, 255} }},
-	{{ {-36, 11, 19}, 0, {-16, -16}, {180, 205, 88, 255} }},
-	{{ {-40, 63, 5}, 0, {-16, -16}, {144, 24, 56, 255} }},
-	{{ {-42, 64, -29}, 0, {-16, -16}, {141, 22, 206, 255} }},
-	{{ {-34, 11, -46}, 0, {-16, -16}, {179, 205, 168, 255} }},
-	{{ {-11, 53, -56}, 0, {-16, -16}, {210, 0, 138, 255} }},
-	{{ {43, -18, -55}, 0, {-16, -16}, {2, 175, 158, 255} }},
-	{{ {78, 22, -61}, 0, {-16, -16}, {30, 212, 141, 255} }},
-	{{ {110, 11, -36}, 0, {-16, -16}, {80, 172, 203, 255} }},
-	{{ {80, -29, -7}, 0, {-16, -16}, {56, 142, 9, 255} }},
-	{{ {27, -35, -11}, 0, {-16, -16}, {231, 132, 6, 255} }},
-	{{ {44, -11, 32}, 0, {-16, -16}, {253, 183, 104, 255} }},
-};
-
-Gfx mario_000_displaylist_005_mesh_layer_1_tri_0[] = {
-	gsSPVertex(mario_000_displaylist_005_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(13, 14, 11, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(mario_000_displaylist_005_mesh_layer_1_vtx_0 + 16, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(10, 6, 9, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(10, 11, 1, 0),
-	gsSP1Triangle(10, 1, 0, 0),
-	gsSP1Triangle(0, 4, 10, 0),
-	gsSP1Triangle(4, 6, 10, 0),
-	gsSPEndDisplayList(),
-};
-
-
-Gfx mat_mario_body_v3[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(mario_body_v3_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, mario_mario_button_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_metal_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, TEXEL0, 0, 0, 0, ENVIRONMENT, 0, 0, 0, TEXEL0, 0, 0, 0, ENVIRONMENT),
-	gsSPSetGeometryMode(G_TEXTURE_GEN),
-	gsSPTexture(4032, 1984, 0, 0, 1),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, mario_metal_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 128),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0),
-	gsDPSetTileSize(0, 0, 0, 252, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_mario_metal_v3_001[] = {
-	gsDPPipeSync(),
-	gsSPClearGeometryMode(G_TEXTURE_GEN),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_cap_v3[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(mario_cap_v3_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, mario_mario_cap_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_face_0___eye_open_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(mario_face_0___eye_open_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, mario_mario_face_1_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_mustache_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(mario_mustache_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, mario_mario_mustache_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_hair_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(mario_hair_v3_001_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_sideburns_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(mario_sideburns_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, mario_mario_sideburn_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_face_1___eye_half_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(mario_face_1___eye_half_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, mario_mario_face_2_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_face_2___eye_closed_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(mario_face_2___eye_closed_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, mario_mario_face_3_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_face_7___eye_X_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(mario_face_7___eye_X_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, mario_mario_face_4_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_wing_2_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0),
-	gsSPClearGeometryMode(G_CULL_BACK),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, mario_wing_2_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 252),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_mario_wing_2_v3_001[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_CULL_BACK),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_wing_1_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0),
-	gsSPClearGeometryMode(G_CULL_BACK),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, mario_wing1_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 252),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_mario_wing_1_v3_001[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_CULL_BACK),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_gloves_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(mario_gloves_v3_001_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_mario_shoes_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(mario_shoes_v3_001_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_offset_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_body_v3),
-	gsSPDisplayList(mario_000_offset_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_offset_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_offset_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_offset_001_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_body_v3),
-	gsSPDisplayList(mario_000_offset_001_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_mario_cap_v3),
-	gsSPDisplayList(mario_000_offset_001_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_offset_001_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_offset_001_mesh_layer_1_tri_0),
-	gsSPDisplayList(mario_000_offset_001_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_face_0___eye_open_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_mario_mustache_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_mario_hair_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_mario_sideburns_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_mario_cap_v3),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_4),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_0),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_1),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_2),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_3),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_4),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_mesh_layer_1_mat_override_face_1___eye_half_v3_001_1[] = {
-	gsSPDisplayList(mat_mario_face_1___eye_half_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_mario_mustache_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_mario_hair_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_mario_sideburns_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_mario_cap_v3),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_4),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2[] = {
-	gsSPDisplayList(mat_mario_face_2___eye_closed_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_mario_mustache_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_mario_hair_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_mario_sideburns_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_mario_cap_v3),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_4),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_mesh_layer_1_mat_override_face_7___eye_X_v3_001_3[] = {
-	gsSPDisplayList(mat_mario_face_7___eye_X_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_mario_mustache_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_mario_hair_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_mario_sideburns_v3_001),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_mario_cap_v3),
-	gsSPDisplayList(mario_000_displaylist_mesh_layer_1_tri_4),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_002_switch_option_head__no_cap__mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_face_0___eye_open_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_mario_mustache_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_mario_sideburns_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_mario_hair_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_1___eye_half_v3_001_1[] = {
-	gsSPDisplayList(mat_mario_face_1___eye_half_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_mario_mustache_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_mario_sideburns_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_mario_hair_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2[] = {
-	gsSPDisplayList(mat_mario_face_2___eye_closed_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_mario_mustache_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_mario_sideburns_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_mario_hair_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_7___eye_X_v3_001_3[] = {
-	gsSPDisplayList(mat_mario_face_7___eye_X_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_mario_mustache_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_mario_sideburns_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_mario_hair_v3_001),
-	gsSPDisplayList(mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_001_mesh_layer_4[] = {
-	gsSPDisplayList(mat_mario_wing_2_v3_001),
-	gsSPDisplayList(mario_000_displaylist_001_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_mario_wing_1_v3_001),
-	gsSPDisplayList(mario_000_displaylist_001_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_001_mesh_layer_4_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_wing_2_v3_001),
-	gsSPDisplayList(mario_000_displaylist_001_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_mario_wing_1_v3_001),
-	gsSPDisplayList(mario_000_displaylist_001_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_002_mesh_layer_4[] = {
-	gsSPDisplayList(mat_mario_wing_2_v3_001),
-	gsSPDisplayList(mario_000_displaylist_002_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_mario_wing_1_v3_001),
-	gsSPDisplayList(mario_000_displaylist_002_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_002_mesh_layer_4_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_wing_2_v3_001),
-	gsSPDisplayList(mario_000_displaylist_002_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_mario_wing_1_v3_001),
-	gsSPDisplayList(mario_000_displaylist_002_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_offset_003_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_cap_v3),
-	gsSPDisplayList(mario_000_offset_003_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_offset_003_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_offset_003_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_offset_004_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_cap_v3),
-	gsSPDisplayList(mario_000_offset_004_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_offset_004_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_offset_004_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_003_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_gloves_v3_001),
-	gsSPDisplayList(mario_000_displaylist_003_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_003_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_displaylist_003_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_002_switch_option_right_hand_open_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_gloves_v3_001),
-	gsSPDisplayList(mario_002_switch_option_right_hand_open_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_002_switch_option_right_hand_open_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_002_switch_option_right_hand_open_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
+// Mario
 
-Gfx mario_000_offset_006_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_cap_v3),
-	gsSPDisplayList(mario_000_offset_006_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
+// 0x04000000 # solid color blue - butt, left thigh, right thigh - all poly types
+const Lights1 mario_blue_lights_group = gdSPDefLights1(
+    0x00, 0x00, 0x7f,
+    0x00, 0x00, 0xff, 0x28, 0x28, 0x28
+);
 
-Gfx mario_000_offset_006_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_offset_006_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
+// 0x04000018 # solid color red - left & right arm, torso (tshirt part), caps - all poly types
+const Lights1 mario_red_lights_group = gdSPDefLights1(
+    0x7f, 0x00, 0x00,
+    0xff, 0x00, 0x00, 0x28, 0x28, 0x28
+);
 
-Gfx mario_000_offset_007_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_cap_v3),
-	gsSPDisplayList(mario_000_offset_007_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_offset_007_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_offset_007_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
+// 0x04000030 # solid color white - metal butt & left thigh - normal left & right hand closed & open (with cap too) and all wings - all poly types
+const Lights1 mario_white_lights_group = gdSPDefLights1(
+    0x7f, 0x7f, 0x7f,
+    0xff, 0xff, 0xff, 0x28, 0x28, 0x28
+);
 
-Gfx mario_000_displaylist_004_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_gloves_v3_001),
-	gsSPDisplayList(mario_000_displaylist_004_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
+// 0x04000048 # solid color brown 1 - foot - all poly types
+const Lights1 mario_brown1_lights_group = gdSPDefLights1(
+    0x39, 0x0e, 0x07,
+    0x72, 0x1c, 0x0e, 0x28, 0x28, 0x28
+);
 
-Gfx mario_000_displaylist_004_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_displaylist_004_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
+// 0x04000060 # solid color beige skin - face (cap on and off dls) - all poly types
+const Lights1 mario_beige_lights_group = gdSPDefLights1(
+    0x7f, 0x60, 0x3c,
+    0xfe, 0xc1, 0x79, 0x28, 0x28, 0x28
+);
 
-Gfx mario_002_switch_option_left_hand_open_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_gloves_v3_001),
-	gsSPDisplayList(mario_002_switch_option_left_hand_open_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
+// 0x04000078  # solid color brown 2 - hair - all poly types
+const Lights1 mario_brown2_lights_group = gdSPDefLights1(
+    0x39, 0x03, 0x00,
+    0x73, 0x06, 0x00, 0x28, 0x28, 0x28
+);
 
-Gfx mario_002_switch_option_left_hand_open_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_002_switch_option_left_hand_open_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
+// 0x04000090
+ALIGNED8 static const Texture mario_texture_metal[] = {
+#include "actors/mario/mario_metal.rgba16.inc.c"
 };
 
-Gfx mario_004_switch_option_left_hand_peace_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_gloves_v3_001),
-	gsSPDisplayList(mario_004_switch_option_left_hand_peace_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
+// 0x04001090
+ALIGNED8 static const Texture mario_texture_yellow_button[] = {
+#include "actors/mario/mario_overalls_button.rgba16.inc.c"
 };
 
-Gfx mario_004_switch_option_left_hand_peace_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_004_switch_option_left_hand_peace_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
+// 0x04001890
+ALIGNED8 static const Texture mario_texture_m_logo[] = {
+#include "actors/mario/mario_logo.rgba16.inc.c"
 };
 
-Gfx mario_005_switch_option_left_hand_cap_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_cap_v3),
-	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_mario_gloves_v3_001),
-	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
+// 0x04002090
+ALIGNED8 static const Texture mario_texture_hair_sideburn[] = {
+#include "actors/mario/mario_sideburn.rgba16.inc.c"
 };
 
-Gfx mario_005_switch_option_left_hand_cap_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_0),
-	gsSPDisplayList(mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
+// 0x04002890
+ALIGNED8 static const Texture mario_texture_mustache[] = {
+#include "actors/mario/mario_mustache.rgba16.inc.c"
 };
 
-Gfx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_cap_v3),
-	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_mario_gloves_v3_001),
-	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
+// 0x04003090
+ALIGNED8 static const Texture mario_texture_eyes_front[] = {
+#include "actors/mario/mario_eyes_center.rgba16.inc.c"
 };
 
-Gfx mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_0),
-	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
+// 0x04003890
+ALIGNED8 static const Texture mario_texture_eyes_half_closed[] = {
+#include "actors/mario/mario_eyes_half_closed.rgba16.inc.c"
 };
 
-Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4[] = {
-	gsSPDisplayList(mat_mario_wing_2_v3_001),
-	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_mario_wing_1_v3_001),
-	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
+// 0x04004090
+ALIGNED8 static const Texture mario_texture_eyes_closed[] = {
+#include "actors/mario/mario_eyes_closed.rgba16.inc.c"
 };
 
-Gfx mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_wing_2_v3_001),
-	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_mario_wing_1_v3_001),
-	gsSPDisplayList(mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
+// Unreferenced texture
+// 0x04004890
+UNUSED ALIGNED8 static const Texture mario_texture_eyes_closed_unused1[] = {
+#include "actors/mario/mario_eyes_closed_unused_0.rgba16.inc.c"
 };
 
-Gfx mario_000_offset_009_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_body_v3),
-	gsSPDisplayList(mario_000_offset_009_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
+// Unreferenced texture
+// 0x04005090
+UNUSED ALIGNED8 static const Texture mario_texture_eyes_closed_unused2[] = {
+#include "actors/mario/mario_eyes_closed_unused_1.rgba16.inc.c"
 };
 
-Gfx mario_000_offset_009_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_offset_009_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
+// 0x04005890
+ALIGNED8 static const Texture mario_texture_eyes_right[] = {
+#include "actors/mario/mario_eyes_left_unused.rgba16.inc.c"
 };
 
-Gfx mario_000_offset_010_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_body_v3),
-	gsSPDisplayList(mario_000_offset_010_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
+// 0x04006090
+ALIGNED8 static const Texture mario_texture_eyes_left[] = {
+#include "actors/mario/mario_eyes_right_unused.rgba16.inc.c"
 };
 
-Gfx mario_000_offset_010_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_offset_010_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
+// 0x04006890
+ALIGNED8 static const Texture mario_texture_eyes_up[] = {
+#include "actors/mario/mario_eyes_up_unused.rgba16.inc.c"
 };
 
-Gfx mario_000_offset_011_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_shoes_v3_001),
-	gsSPDisplayList(mario_000_offset_011_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
+// 0x04007090
+ALIGNED8 static const Texture mario_texture_eyes_down[] = {
+#include "actors/mario/mario_eyes_down_unused.rgba16.inc.c"
+};
 
-Gfx mario_000_offset_011_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_offset_011_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
+// 0x04007890
+ALIGNED8 static const Texture mario_texture_eyes_dead[] = {
+#include "actors/mario/mario_eyes_dead.rgba16.inc.c"
 };
 
-Gfx mario_000_offset_012_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_body_v3),
-	gsSPDisplayList(mario_000_offset_012_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
+// 0x04008090
+ALIGNED8 static const Texture mario_texture_wings_half_1[] = {
+#include "actors/mario/mario_wing.rgba16.inc.c"
 };
 
-Gfx mario_000_offset_012_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_offset_012_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
+// 0x04009090
+ALIGNED8 static const Texture mario_texture_wings_half_2[] = {
+#include "actors/mario/mario_wing_tip.rgba16.inc.c"
+};
+
+// 0x0400A090
+ALIGNED8 static const Texture mario_texture_metal_wings_half_1[] = {
+#include "actors/mario/mario_metal_wing_unused.rgba16.inc.c"
+};
 
-Gfx mario_000_offset_013_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_body_v3),
-	gsSPDisplayList(mario_000_offset_013_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
+// 0x0400B090
+ALIGNED8 static const Texture mario_texture_metal_wings_half_2[] = {
+#include "actors/mario/mario_metal_wing_tip_unused.rgba16.inc.c"
+};
+
+// 0x0400C090
+static const Vtx mario_butt_dl_vertex_group1[] = {
+    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
+    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
+    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
+    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+};
+
+// 0x0400C180
+static const Vtx mario_butt_dl_vertex_group2[] = {
+    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
+    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
+    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+    {{{   -17,     32,    -79}, 0, {     0,      0}, {0xa4, 0x23, 0xb1, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+};
+
+// 0x0400C260
+static const Vtx mario_butt_dl_vertex_group3[] = {
+    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
+    {{{    -9,    -69,     55}, 0, {     0,      0}, {0xcd, 0x97, 0x30, 0x00}}},
+    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
+    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
+    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+};
+
+// 0x0400C360
+static const Vtx mario_butt_dl_vertex_group4[] = {
+    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
+    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
+    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
+    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
+    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+};
+
+// 0x0400C450
+static const Vtx mario_butt_dl_vertex_group5[] = {
+    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
+    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+    {{{    52,     70,    -39}, 0, {     0,      0}, {0x59, 0x56, 0xe5, 0x00}}},
+    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+    {{{    43,     40,     91}, 0, {     0,      0}, {0x4e, 0x30, 0x57, 0x00}}},
+    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+};
+
+// 0x0400C540
+static const Vtx mario_butt_dl_vertex_group6[] = {
+    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+    {{{    43,     40,    -91}, 0, {     0,      0}, {0x4e, 0x30, 0xa9, 0x00}}},
+    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
+};
+
+// 0x0400C630
+static const Vtx mario_butt_dl_vertex_group7[] = {
+    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+    {{{   -17,     32,    -79}, 0, {     0,      0}, {0xa4, 0x23, 0xb1, 0x00}}},
+    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+    {{{    73,     11,      0}, 0, {     0,      0}, {0x7e, 0x04, 0x00, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
+    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
+    {{{    44,    -10,    -92}, 0, {     0,      0}, {0x4f, 0xf2, 0x9e, 0x00}}},
+    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+};
+
+// 0x0400C720
+static const Vtx mario_butt_dl_vertex_group8[] = {
+    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+    {{{    36,    -52,     79}, 0, {     0,      0}, {0x30, 0xb8, 0x5c, 0x00}}},
+    {{{    -9,     73,    -34}, 0, {     0,      0}, {0xc2, 0x6b, 0xe6, 0x00}}},
+    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+    {{{    27,     72,    -63}, 0, {     0,      0}, {0x07, 0x6b, 0xbe, 0x00}}},
+    {{{    27,     72,     63}, 0, {     0,      0}, {0x06, 0x6c, 0x42, 0x00}}},
+    {{{    -5,     59,     72}, 0, {     0,      0}, {0xc0, 0x52, 0x47, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{     6,     33,    -95}, 0, {     0,      0}, {0xe6, 0x26, 0x8b, 0x00}}},
+    {{{    -5,     59,    -72}, 0, {     0,      0}, {0xc0, 0x52, 0xb9, 0x00}}},
+    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
+    {{{    52,     70,     38}, 0, {     0,      0}, {0x53, 0x5d, 0x16, 0x00}}},
+    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+};
+
+// 0x0400C820
+static const Vtx mario_butt_dl_vertex_group9[] = {
+    {{{     4,    -48,    -86}, 0, {     0,      0}, {0xd8, 0xba, 0x9f, 0x00}}},
+    {{{    36,    -51,    -79}, 0, {     0,      0}, {0x30, 0xb8, 0xa4, 0x00}}},
+    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+    {{{   -18,     32,     79}, 0, {     0,      0}, {0xa4, 0x23, 0x4f, 0x00}}},
+    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+    {{{     8,     -8,    -99}, 0, {     0,      0}, {0xf3, 0xee, 0x84, 0x00}}},
+    {{{     7,     33,     95}, 0, {     0,      0}, {0xe6, 0x26, 0x75, 0x00}}},
+    {{{     8,     -8,     99}, 0, {     0,      0}, {0xf3, 0xef, 0x7c, 0x00}}},
+    {{{    44,     -9,     92}, 0, {     0,      0}, {0x4f, 0xf2, 0x62, 0x00}}},
+    {{{    -9,     73,     34}, 0, {     0,      0}, {0xbe, 0x6a, 0x12, 0x00}}},
+    {{{    22,     82,     26}, 0, {     0,      0}, {0x07, 0x7d, 0x11, 0x00}}},
+    {{{    22,     82,    -26}, 0, {     0,      0}, {0x07, 0x7e, 0xf5, 0x00}}},
+    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
+    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+};
+
+// 0x0400C920
+static const Vtx mario_butt_dl_vertex_group10[] = {
+    {{{   -31,    -51,     42}, 0, {     0,      0}, {0x8d, 0xd7, 0x1f, 0x00}}},
+    {{{    -9,    -69,     55}, 0, {     0,      0}, {0xcd, 0x97, 0x30, 0x00}}},
+    {{{     4,    -49,     86}, 0, {     0,      0}, {0xd8, 0xb9, 0x61, 0x00}}},
+    {{{   -20,     -7,     81}, 0, {     0,      0}, {0xa3, 0xf9, 0x55, 0x00}}},
+    {{{   -32,     40,     39}, 0, {     0,      0}, {0x8b, 0x25, 0x1d, 0x00}}},
+    {{{   -32,     40,    -39}, 0, {     0,      0}, {0x89, 0x25, 0xeb, 0x00}}},
+    {{{   -20,     -8,    -81}, 0, {     0,      0}, {0xa3, 0xf8, 0xab, 0x00}}},
+    {{{   -31,    -51,    -42}, 0, {     0,      0}, {0x91, 0xd0, 0xdc, 0x00}}},
+    {{{    55,    -61,     36}, 0, {     0,      0}, {0x60, 0xb3, 0x1a, 0x00}}},
+    {{{    26,    -74,     45}, 0, {     0,      0}, {0x12, 0x88, 0x22, 0x00}}},
+    {{{    26,    -74,    -46}, 0, {     0,      0}, {0x18, 0x88, 0xe2, 0x00}}},
+    {{{   -14,    -74,      0}, 0, {     0,      0}, {0xcb, 0x8d, 0x00, 0x00}}},
+    {{{    -9,    -69,    -55}, 0, {     0,      0}, {0xcd, 0x97, 0xd0, 0x00}}},
+    {{{    55,    -61,    -36}, 0, {     0,      0}, {0x67, 0xbe, 0xe1, 0x00}}},
+};
+
+// 0x0400CA00 - 0x0400CC98
+const Gfx mario_butt_dl[] = {
+    gsSPVertex(mario_butt_dl_vertex_group1, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9,  5, 10, 0x0),
+    gsSP2Triangles( 4, 11, 10, 0x0, 12, 13, 14, 0x0),
+    gsSPVertex(mario_butt_dl_vertex_group2, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles(12,  3, 13, 0x0,  6,  8, 12, 0x0),
+    gsSPVertex(mario_butt_dl_vertex_group3, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  1,  7, 0x0,  8,  9, 10, 0x0),
+    gsSP2Triangles(11,  9, 12, 0x0, 13, 14, 15, 0x0),
+    gsSPVertex(mario_butt_dl_vertex_group4, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 4,  6,  5, 0x0,  7,  8,  2, 0x0),
+    gsSP2Triangles( 9,  7, 10, 0x0, 11, 12,  7, 0x0),
+    gsSP1Triangle(13, 11, 14, 0x0),
+    gsSPVertex(mario_butt_dl_vertex_group5, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  2,  7,  8, 0x0),
+    gsSP2Triangles( 9, 10, 11, 0x0, 12, 13, 14, 0x0),
+    gsSPVertex(mario_butt_dl_vertex_group6, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  7, 0x0),
+    gsSP2Triangles(11, 10,  9, 0x0, 12, 13, 14, 0x0),
+    gsSP1Triangle( 0, 13, 12, 0x0),
+    gsSPVertex(mario_butt_dl_vertex_group7, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  1, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  7,  2,  3, 0x0),
+    gsSP2Triangles( 8,  9, 10, 0x0,  9,  8, 11, 0x0),
+    gsSP2Triangles(11, 12, 13, 0x0, 13, 14,  1, 0x0),
+    gsSPVertex(mario_butt_dl_vertex_group8, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  5, 0x0),
+    gsSP2Triangles( 4, 11, 12, 0x0,  6, 11, 13, 0x0),
+    gsSP2Triangles(13,  3, 14, 0x0, 15,  2,  1, 0x0),
+    gsSPVertex(mario_butt_dl_vertex_group9, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 1,  0,  6, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0,  0, 13, 14, 0x0),
+    gsSP1Triangle(15,  0, 14, 0x0),
+    gsSPVertex(mario_butt_dl_vertex_group10, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 3,  4,  0, 0x0,  0,  4,  5, 0x0),
+    gsSP2Triangles( 5,  6,  7, 0x0,  5,  7,  0, 0x0),
+    gsSP2Triangles( 8,  9, 10, 0x0,  9, 11, 10, 0x0),
+    gsSP2Triangles( 9,  1, 11, 0x0, 11, 12, 10, 0x0),
+    gsSP1Triangle(10, 13,  8, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400CC98 - 0x0400CCC8
+const Gfx mario_butt[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPLight(&mario_blue_lights_group.l, 1),
+    gsSPLight(&mario_blue_lights_group.a, 2),
+    gsSPDisplayList(mario_butt_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400CCC8 - 0x0400CD40
+const Gfx mario_metal_butt[] = {
+    gsDPPipeSync(),
+    gsSPSetGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_butt_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400CD40
+static const Vtx mario_left_arm_shared_dl_vertex_group1[] = {
+    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
+    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
+    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
+    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
+    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
+    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
+    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
+    {{{     6,    -13,    -42}, 0, {     0,      0}, {0xd6, 0xde, 0x8e, 0x00}}},
+    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
+    {{{     7,     29,    -26}, 0, {     0,      0}, {0xda, 0x62, 0xbb, 0x00}}},
+    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
+    {{{    -8,     16,     10}, 0, {     0,      0}, {0x9a, 0x44, 0x1d, 0x00}}},
+    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
+    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
+    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+};
+
+// 0x0400CE30
+static const Vtx mario_left_arm_shared_dl_vertex_group2[] = {
+    {{{    68,     13,    -16}, 0, {     0,      0}, {0x6a, 0x38, 0xd9, 0x00}}},
+    {{{    68,    -10,    -25}, 0, {     0,      0}, {0x75, 0xe7, 0xd9, 0x00}}},
+    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
+    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
+    {{{    68,     12,      9}, 0, {     0,      0}, {0x78, 0x1f, 0x1b, 0x00}}},
+    {{{    67,    -12,     16}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
+    {{{    67,    -26,     -5}, 0, {     0,      0}, {0x6e, 0xc2, 0xfe, 0x00}}},
+    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
+    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
+    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
+    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
+    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
+    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
+};
+
+// 0x0400CF20
+static const Vtx mario_left_arm_shared_dl_vertex_group3[] = {
+    {{{     5,    -42,     -5}, 0, {     0,      0}, {0xd3, 0x8a, 0xff, 0x00}}},
+    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
+    {{{     6,    -13,    -42}, 0, {     0,      0}, {0xd6, 0xde, 0x8e, 0x00}}},
+    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
+    {{{     7,     29,    -26}, 0, {     0,      0}, {0xda, 0x62, 0xbb, 0x00}}},
+    {{{    -8,     16,     10}, 0, {     0,      0}, {0x9a, 0x44, 0x1d, 0x00}}},
+    {{{     7,     27,     20}, 0, {     0,      0}, {0xda, 0x61, 0x47, 0x00}}},
+    {{{    58,    -13,    -34}, 0, {     0,      0}, {0x3b, 0xfb, 0x90, 0x00}}},
+    {{{    57,    -36,     -5}, 0, {     0,      0}, {0x3e, 0x93, 0xef, 0x00}}},
+    {{{     6,    -16,     32}, 0, {     0,      0}, {0xd5, 0xdc, 0x71, 0x00}}},
+    {{{    58,    -15,     25}, 0, {     0,      0}, {0x32, 0xc6, 0x64, 0x00}}},
+    {{{    59,     20,     15}, 0, {     0,      0}, {0x44, 0x4a, 0x4c, 0x00}}},
+    {{{    59,     21,    -21}, 0, {     0,      0}, {0x37, 0x67, 0xd0, 0x00}}},
+    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+};
+
+// 0x0400D000
+static const Vtx mario_left_arm_shared_dl_vertex_group4[] = {
+    {{{    68,     12,      9}, 0, {     0,      0}, {0x78, 0x1f, 0x1b, 0x00}}},
+    {{{    68,    -10,    -25}, 0, {     0,      0}, {0x75, 0xe7, 0xd9, 0x00}}},
+    {{{    68,     13,    -16}, 0, {     0,      0}, {0x6a, 0x38, 0xd9, 0x00}}},
+    {{{    67,    -12,     16}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+    {{{    67,    -26,     -5}, 0, {     0,      0}, {0x6e, 0xc2, 0xfe, 0x00}}},
+    {{{    -8,     17,    -17}, 0, {     0,      0}, {0x90, 0x2a, 0xd6, 0x00}}},
+    {{{    -8,     -9,    -27}, 0, {     0,      0}, {0x8e, 0xe8, 0xce, 0x00}}},
+    {{{    -8,    -11,     18}, 0, {     0,      0}, {0x8b, 0xff, 0x2f, 0x00}}},
+    {{{    -9,    -26,     -5}, 0, {     0,      0}, {0x96, 0xbd, 0x0e, 0x00}}},
+};
+
+// 0x0400D090 - 0x0400D1D8
+const Gfx mario_left_arm_shared_dl[] = {
+    gsSPVertex(mario_left_arm_shared_dl_vertex_group1, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+    gsSP2Triangles( 9,  2,  8, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles( 7, 12, 10, 0x0,  5, 13, 12, 0x0),
+    gsSP2Triangles( 3, 14, 13, 0x0,  0, 11, 14, 0x0),
+    gsSPVertex(mario_left_arm_shared_dl_vertex_group2, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+    gsSP2Triangles( 5,  4,  3, 0x0,  6,  7,  5, 0x0),
+    gsSP2Triangles( 1,  7,  6, 0x0,  2,  1,  6, 0x0),
+    gsSP2Triangles( 6,  5,  8, 0x0,  8,  5,  3, 0x0),
+    gsSP2Triangles( 3,  0,  9, 0x0,  9,  0,  2, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 12, 13, 14, 0x0),
+    gsSPVertex(mario_left_arm_shared_dl_vertex_group3, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  2,  4,  7, 0x0),
+    gsSP2Triangles( 0,  2,  8, 0x0,  9,  0, 10, 0x0),
+    gsSP2Triangles( 6,  9, 11, 0x0,  4,  6, 12, 0x0),
+    gsSP1Triangle(13,  5,  3, 0x0),
+    gsSPVertex(mario_left_arm_shared_dl_vertex_group4, 9, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 3,  4,  1, 0x0,  5,  6,  7, 0x0),
+    gsSP1Triangle( 6,  8,  7, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400D1D8 - 0x0400D1F8
+const Gfx mario_left_arm[] = {
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_left_arm_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400D1F8
+static const Vtx mario_left_forearm_shared_dl_vertex[] = {
+    {{{    -2,     19,     16}, 0, {     0,      0}, {0xdb, 0x61, 0x48, 0x00}}},
+    {{{    47,     14,     13}, 0, {     0,      0}, {0x44, 0x44, 0x51, 0x00}}},
+    {{{    47,     16,    -19}, 0, {     0,      0}, {0x45, 0x61, 0xd6, 0x00}}},
+    {{{    -3,    -17,     26}, 0, {     0,      0}, {0xd7, 0xdb, 0x71, 0x00}}},
+    {{{    46,    -17,     22}, 0, {     0,      0}, {0x41, 0xc7, 0x5c, 0x00}}},
+    {{{    -3,    -38,     -4}, 0, {     0,      0}, {0xd4, 0x89, 0xfe, 0x00}}},
+    {{{    45,    -34,     -4}, 0, {     0,      0}, {0x3f, 0x95, 0xe8, 0x00}}},
+    {{{    -3,    -14,    -34}, 0, {     0,      0}, {0xd7, 0xde, 0x8e, 0x00}}},
+    {{{    46,    -14,    -30}, 0, {     0,      0}, {0x42, 0xf4, 0x95, 0x00}}},
+    {{{    -2,     21,    -21}, 0, {     0,      0}, {0xdb, 0x63, 0xbb, 0x00}}},
+    {{{   -14,     13,    -15}, 0, {     0,      0}, {0x93, 0x2c, 0xd3, 0x00}}},
+    {{{   -14,     11,     10}, 0, {     0,      0}, {0x93, 0x3b, 0x19, 0x00}}},
+    {{{   -15,    -11,    -24}, 0, {     0,      0}, {0x9a, 0xde, 0xbe, 0x00}}},
+    {{{   -15,    -27,     -4}, 0, {     0,      0}, {0x8b, 0xd2, 0x0a, 0x00}}},
+    {{{   -15,    -13,     17}, 0, {     0,      0}, {0x9b, 0xfb, 0x4c, 0x00}}},
+    {{{    58,     -7,     -3}, 0, {     0,      0}, {0x7e, 0xfc, 0x00, 0x00}}},
+};
+
+// 0x0400D2F8 - 0x0400D3E8
+const Gfx mario_left_forearm_shared_dl[] = {
+    gsSPVertex(mario_left_forearm_shared_dl_vertex, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+    gsSP2Triangles( 9,  2,  8, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles( 7, 12, 10, 0x0,  5, 13, 12, 0x0),
+    gsSP2Triangles( 3, 14, 13, 0x0,  0, 11, 14, 0x0),
+    gsSP2Triangles( 8, 15,  6, 0x0,  6, 15,  4, 0x0),
+    gsSP2Triangles( 4, 15,  1, 0x0,  1, 15,  2, 0x0),
+    gsSP2Triangles( 2, 15,  8, 0x0,  0, 14,  3, 0x0),
+    gsSP2Triangles( 3, 13,  5, 0x0,  5, 12,  7, 0x0),
+    gsSP2Triangles( 7, 10,  9, 0x0,  9, 11,  0, 0x0),
+    gsSP2Triangles( 7,  9,  8, 0x0,  5,  7,  6, 0x0),
+    gsSP2Triangles( 3,  5,  4, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 9,  0,  2, 0x0, 12, 13, 10, 0x0),
+    gsSP2Triangles(13, 11, 10, 0x0, 13, 14, 11, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400D3E8
+static const Vtx mario_left_hand_closed_shared_dl_vertex_group1[] = {
+    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
+    {{{    17,     -1,     27}, 0, {     0,      0}, {0x00, 0xfd, 0x7f, 0x00}}},
+    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
+    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
+    {{{     4,     24,    -31}, 0, {     0,      0}, {0xd5, 0x3f, 0x9c, 0x00}}},
+    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
+    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
+    {{{     5,     -6,     36}, 0, {     0,      0}, {0x44, 0x1b, 0x67, 0x00}}},
+    {{{   -10,     26,    -38}, 0, {     0,      0}, {0xf0, 0x41, 0x95, 0x00}}},
+    {{{    17,    -38,    -39}, 0, {     0,      0}, {0x1a, 0xb7, 0x9d, 0x00}}},
+    {{{    86,     29,     41}, 0, {     0,      0}, {0x4b, 0x20, 0x60, 0x00}}},
+    {{{    59,     81,      8}, 0, {     0,      0}, {0x11, 0x7a, 0x1d, 0x00}}},
+    {{{   107,    -26,      4}, 0, {     0,      0}, {0x67, 0xc5, 0x2b, 0x00}}},
+    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
+    {{{    90,     17,    -46}, 0, {     0,      0}, {0x43, 0x35, 0xa3, 0x00}}},
+    {{{   100,     -6,    -46}, 0, {     0,      0}, {0x63, 0x0a, 0xb3, 0x00}}},
+};
+
+// 0x0400D4E8
+static const Vtx mario_left_hand_closed_shared_dl_vertex_group2[] = {
+    {{{    90,     17,    -46}, 0, {     0,      0}, {0x43, 0x35, 0xa3, 0x00}}},
+    {{{    57,     55,    -37}, 0, {     0,      0}, {0x22, 0x54, 0xa9, 0x00}}},
+    {{{    99,     40,    -16}, 0, {     0,      0}, {0x6c, 0x3c, 0xe5, 0x00}}},
+    {{{    32,     63,    -28}, 0, {     0,      0}, {0xd0, 0x4f, 0xaa, 0x00}}},
+    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
+    {{{    59,     81,      8}, 0, {     0,      0}, {0x11, 0x7a, 0x1d, 0x00}}},
+    {{{    80,    -31,    -61}, 0, {     0,      0}, {0x0c, 0xb2, 0x9d, 0x00}}},
+    {{{   100,     -6,    -46}, 0, {     0,      0}, {0x63, 0x0a, 0xb3, 0x00}}},
+    {{{   107,    -26,      4}, 0, {     0,      0}, {0x67, 0xc5, 0x2b, 0x00}}},
+    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
+    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
+    {{{    86,     29,     41}, 0, {     0,      0}, {0x4b, 0x20, 0x60, 0x00}}},
+    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
+    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
+};
+
+// 0x0400D5C8
+static const Vtx mario_left_hand_closed_shared_dl_vertex_group3[] = {
+    {{{    27,    -58,      6}, 0, {     0,      0}, {0xa3, 0xad, 0x12, 0x00}}},
+    {{{   -14,    -14,     -4}, 0, {     0,      0}, {0x8c, 0xcd, 0x02, 0x00}}},
+    {{{    17,    -38,    -39}, 0, {     0,      0}, {0x1a, 0xb7, 0x9d, 0x00}}},
+    {{{   -10,     26,    -38}, 0, {     0,      0}, {0xf0, 0x41, 0x95, 0x00}}},
+    {{{   -18,     45,      8}, 0, {     0,      0}, {0x84, 0xf3, 0x13, 0x00}}},
+    {{{     5,     -6,     36}, 0, {     0,      0}, {0x99, 0xd2, 0x38, 0x00}}},
+    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
+    {{{    27,    -58,      6}, 0, {     0,      0}, {0x73, 0xd5, 0x1d, 0x00}}},
+    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
+    {{{   -18,     45,      8}, 0, {     0,      0}, {0x2d, 0x71, 0x21, 0x00}}},
+    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
+    {{{     5,     -6,     36}, 0, {     0,      0}, {0x44, 0x1b, 0x67, 0x00}}},
+    {{{    36,      6,     42}, 0, {     0,      0}, {0xe1, 0xf0, 0x79, 0x00}}},
+    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
+    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
+};
+
+// 0x0400D6B8
+static const Vtx mario_left_hand_closed_shared_dl_vertex_group4[] = {
+    {{{    26,    -25,    -32}, 0, {     0,      0}, {0x09, 0xc7, 0x8f, 0x00}}},
+    {{{    33,      7,    -44}, 0, {     0,      0}, {0xc6, 0xfe, 0x90, 0x00}}},
+    {{{    80,    -31,    -61}, 0, {     0,      0}, {0x0c, 0xb2, 0x9d, 0x00}}},
+    {{{    58,    -45,      7}, 0, {     0,      0}, {0x01, 0x85, 0x1c, 0x00}}},
+    {{{    34,    -41,      3}, 0, {     0,      0}, {0x42, 0xa3, 0x36, 0x00}}},
+    {{{    61,     12,    -60}, 0, {     0,      0}, {0x00, 0x21, 0x86, 0x00}}},
+    {{{    12,     59,     10}, 0, {     0,      0}, {0xaa, 0x58, 0x1b, 0x00}}},
+    {{{    32,     63,    -28}, 0, {     0,      0}, {0xd0, 0x4f, 0xaa, 0x00}}},
+    {{{     4,     24,    -31}, 0, {     0,      0}, {0xd5, 0x3f, 0x9c, 0x00}}},
+    {{{    -1,     39,      5}, 0, {     0,      0}, {0xea, 0x6e, 0x3a, 0x00}}},
+};
+
+// 0x0400D758 - 0x0400D8F0
+const Gfx mario_left_hand_closed_shared_dl[] = {
+    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  1,  0, 0x0,  2,  1,  7, 0x0),
+    gsSP2Triangles( 7,  1,  6, 0x0,  6,  4,  8, 0x0),
+    gsSP2Triangles( 8,  4,  3, 0x0,  9,  3,  2, 0x0),
+    gsSP2Triangles( 0, 10, 11, 0x0, 12, 10,  0, 0x0),
+    gsSP1Triangle(13, 14, 15, 0x0),
+    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group2, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 5,  1,  3, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 9, 10,  3, 0x0,  1,  0,  9, 0x0),
+    gsSP2Triangles( 9,  3,  1, 0x0,  5,  2,  1, 0x0),
+    gsSP2Triangles( 0,  2,  7, 0x0,  7,  2,  8, 0x0),
+    gsSP2Triangles( 8,  2, 11, 0x0, 11,  2,  5, 0x0),
+    gsSP2Triangles( 9,  7,  6, 0x0,  6,  8, 12, 0x0),
+    gsSP2Triangles(12,  8, 13, 0x0, 13,  5,  4, 0x0),
+    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group3, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
+    gsSP2Triangles( 5,  1,  0, 0x0,  6,  7,  2, 0x0),
+    gsSP2Triangles( 8,  2,  3, 0x0,  3,  9, 10, 0x0),
+    gsSP2Triangles(10,  9, 11, 0x0, 11,  7,  6, 0x0),
+    gsSP2Triangles(10, 12, 13, 0x0,  6, 14, 12, 0x0),
+    gsSPVertex(mario_left_hand_closed_shared_dl_vertex_group4, 10, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+    gsSP2Triangles( 1,  5,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9,  6, 0x0),
+    gsSP1Triangle( 7,  1,  8, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400D8F0 - 0x0400D910
+const Gfx mario_left_hand_closed[] = {
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_left_hand_closed_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400D910
+static const Vtx mario_right_arm_shared_dl_vertex_group1[] = {
+    {{{    57,    -14,    -22}, 0, {     0,      0}, {0x33, 0xcf, 0x97, 0x00}}},
+    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
+    {{{     6,    -15,    -30}, 0, {     0,      0}, {0xd6, 0xe6, 0x8c, 0x00}}},
+    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
+    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
+    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
+    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
+    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
+    {{{     7,     27,    -13}, 0, {     0,      0}, {0xda, 0x67, 0xc2, 0x00}}},
+    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
+    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
+    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
+    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
+    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
+};
+
+// 0x0400DA10
+static const Vtx mario_right_arm_shared_dl_vertex_group2[] = {
+    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
+    {{{    67,    -14,     28}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
+    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
+    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
+    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
+    {{{    67,     10,     21}, 0, {     0,      0}, {0x71, 0x2a, 0x25, 0x00}}},
+    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
+    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
+    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
+    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
+    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
+    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
+    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
+};
+
+// 0x0400DB10
+static const Vtx mario_right_arm_shared_dl_vertex_group3[] = {
+    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
+    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+    {{{     7,     27,    -13}, 0, {     0,      0}, {0xda, 0x67, 0xc2, 0x00}}},
+    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+    {{{     6,    -15,    -30}, 0, {     0,      0}, {0xd6, 0xe6, 0x8c, 0x00}}},
+    {{{    58,     19,     -9}, 0, {     0,      0}, {0x3e, 0x4a, 0xaf, 0x00}}},
+    {{{    57,    -14,    -22}, 0, {     0,      0}, {0x33, 0xcf, 0x97, 0x00}}},
+    {{{    58,     17,     27}, 0, {     0,      0}, {0x44, 0x59, 0x39, 0x00}}},
+    {{{    57,    -17,     37}, 0, {     0,      0}, {0x33, 0xe8, 0x71, 0x00}}},
+    {{{     7,     25,     32}, 0, {     0,      0}, {0xd9, 0x5c, 0x4d, 0x00}}},
+    {{{    57,    -38,      6}, 0, {     0,      0}, {0x3e, 0x93, 0x07, 0x00}}},
+    {{{     6,    -19,     44}, 0, {     0,      0}, {0xd5, 0xd4, 0x6e, 0x00}}},
+    {{{     5,    -44,      5}, 0, {     0,      0}, {0xd3, 0x8a, 0xf7, 0x00}}},
+    {{{    67,    -12,    -13}, 0, {     0,      0}, {0x68, 0xeb, 0xbc, 0x00}}},
+    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
+    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
+};
+
+// 0x0400DC10
+static const Vtx mario_right_arm_shared_dl_vertex_group4[] = {
+    {{{    -9,    -10,    -15}, 0, {     0,      0}, {0x8f, 0x01, 0xc7, 0x00}}},
+    {{{    -9,    -28,      6}, 0, {     0,      0}, {0x96, 0xbf, 0xec, 0x00}}},
+    {{{    -9,    -13,     30}, 0, {     0,      0}, {0x8a, 0xe9, 0x26, 0x00}}},
+    {{{    -8,     15,     -5}, 0, {     0,      0}, {0x91, 0x39, 0xed, 0x00}}},
+    {{{    -8,     14,     22}, 0, {     0,      0}, {0x99, 0x2e, 0x38, 0x00}}},
+    {{{    67,     11,     -4}, 0, {     0,      0}, {0x78, 0x26, 0xf1, 0x00}}},
+    {{{    67,    -14,     28}, 0, {     0,      0}, {0x6f, 0xe8, 0x37, 0x00}}},
+    {{{    66,    -28,      6}, 0, {     0,      0}, {0x75, 0xd1, 0xfe, 0x00}}},
+    {{{    67,     10,     21}, 0, {     0,      0}, {0x71, 0x2a, 0x25, 0x00}}},
+};
+
+// 0x0400DCA0 - 0x0400DDE8
+const Gfx mario_right_arm_shared_dl[] = {
+    gsSPVertex(mario_right_arm_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+    gsSP2Triangles( 9,  2,  8, 0x0,  1, 10,  2, 0x0),
+    gsSP2Triangles( 2, 11,  8, 0x0,  8, 12,  6, 0x0),
+    gsSP2Triangles( 6, 13,  4, 0x0,  4, 14,  1, 0x0),
+    gsSP2Triangles( 9, 15,  0, 0x0,  0, 15,  3, 0x0),
+    gsSPVertex(mario_right_arm_shared_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 3,  4,  5, 0x0,  3,  6,  4, 0x0),
+    gsSP2Triangles( 1,  6,  3, 0x0,  0,  7,  1, 0x0),
+    gsSP2Triangles( 8,  7,  0, 0x0,  5,  4,  8, 0x0),
+    gsSP2Triangles( 9, 10, 11, 0x0, 12,  9, 13, 0x0),
+    gsSP1Triangle(14, 12, 15, 0x0),
+    gsSPVertex(mario_right_arm_shared_dl_vertex_group3, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+    gsSP2Triangles( 5,  6,  4, 0x0,  7,  5,  2, 0x0),
+    gsSP2Triangles( 8,  7,  9, 0x0, 10,  8, 11, 0x0),
+    gsSP2Triangles( 6, 10, 12, 0x0, 13, 14, 15, 0x0),
+    gsSPVertex(mario_right_arm_shared_dl_vertex_group4, 9, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 2,  4,  3, 0x0,  5,  6,  7, 0x0),
+    gsSP1Triangle( 5,  8,  6, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400DDE8 - 0x0400DE08
+const Gfx mario_right_arm[] = {
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_right_arm_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400DE08
+static const Vtx mario_right_forearm_shared_dl_vertex[] = {
+    {{{    47,    -15,    -19}, 0, {     0,      0}, {0x41, 0xcf, 0x9f, 0x00}}},
+    {{{    -3,    -39,      6}, 0, {     0,      0}, {0xd4, 0x8a, 0xf8, 0x00}}},
+    {{{    -2,    -15,    -23}, 0, {     0,      0}, {0xd7, 0xe5, 0x8c, 0x00}}},
+    {{{    46,    -36,      6}, 0, {     0,      0}, {0x3f, 0x94, 0x0f, 0x00}}},
+    {{{    -2,    -18,     38}, 0, {     0,      0}, {0xd6, 0xd5, 0x6f, 0x00}}},
+    {{{    47,    -17,     34}, 0, {     0,      0}, {0x42, 0xec, 0x6a, 0x00}}},
+    {{{    -1,     18,     28}, 0, {     0,      0}, {0xdb, 0x5d, 0x4d, 0x00}}},
+    {{{    48,     13,     25}, 0, {     0,      0}, {0x45, 0x5d, 0x32, 0x00}}},
+    {{{    -1,     20,     -9}, 0, {     0,      0}, {0xdb, 0x67, 0xc1, 0x00}}},
+    {{{    48,     15,     -7}, 0, {     0,      0}, {0x45, 0x4c, 0xb6, 0x00}}},
+    {{{   -14,    -28,      6}, 0, {     0,      0}, {0x90, 0xc9, 0xef, 0x00}}},
+    {{{   -14,    -12,    -13}, 0, {     0,      0}, {0x91, 0x01, 0xc3, 0x00}}},
+    {{{   -13,     12,     -4}, 0, {     0,      0}, {0x9e, 0x4b, 0xe7, 0x00}}},
+    {{{   -13,     10,     21}, 0, {     0,      0}, {0x8d, 0x22, 0x28, 0x00}}},
+    {{{   -14,    -14,     28}, 0, {     0,      0}, {0x9a, 0xd8, 0x3f, 0x00}}},
+    {{{    59,     -8,      7}, 0, {     0,      0}, {0x7f, 0xfd, 0x00, 0x00}}},
+};
+
+// 0x0400DF08 - 0x0400DFF8
+const Gfx mario_right_forearm_shared_dl[] = {
+    gsSPVertex(mario_right_forearm_shared_dl_vertex, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 5,  6,  4, 0x0,  7,  8,  6, 0x0),
+    gsSP2Triangles( 9,  2,  8, 0x0,  1, 10,  2, 0x0),
+    gsSP2Triangles( 2, 11,  8, 0x0,  8, 12,  6, 0x0),
+    gsSP2Triangles( 6, 13,  4, 0x0,  4, 14,  1, 0x0),
+    gsSP2Triangles( 9, 15,  0, 0x0,  0, 15,  3, 0x0),
+    gsSP2Triangles( 3, 15,  5, 0x0,  5, 15,  7, 0x0),
+    gsSP2Triangles( 7, 15,  9, 0x0, 14, 10,  1, 0x0),
+    gsSP2Triangles(13, 14,  4, 0x0, 12, 13,  6, 0x0),
+    gsSP2Triangles(11, 12,  8, 0x0, 10, 11,  2, 0x0),
+    gsSP2Triangles( 9,  0,  2, 0x0,  7,  9,  8, 0x0),
+    gsSP2Triangles( 5,  7,  6, 0x0,  3,  5,  4, 0x0),
+    gsSP2Triangles( 0,  3,  1, 0x0, 11, 13, 12, 0x0),
+    gsSP2Triangles(11, 10, 13, 0x0, 10, 14, 13, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400DFF8
+static const Vtx mario_right_hand_closed_dl_vertex_group1[] = {
+    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
+    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
+    {{{    31,    -40,     -1}, 0, {     0,      0}, {0x43, 0xa4, 0xc9, 0x00}}},
+    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
+    {{{    -2,     41,     -1}, 0, {     0,      0}, {0xed, 0x70, 0xc9, 0x00}}},
+    {{{    24,    -57,     -4}, 0, {     0,      0}, {0x73, 0xd4, 0xe6, 0x00}}},
+    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x48, 0x1e, 0x9d, 0x00}}},
+    {{{   -19,     47,     -4}, 0, {     0,      0}, {0x30, 0x72, 0xe5, 0x00}}},
+    {{{   -14,     26,     41}, 0, {     0,      0}, {0xed, 0x3d, 0x6d, 0x00}}},
+    {{{    13,    -38,     41}, 0, {     0,      0}, {0x15, 0xb3, 0x61, 0x00}}},
+    {{{    23,    -26,     35}, 0, {     0,      0}, {0x04, 0xc3, 0x6e, 0x00}}},
+    {{{    24,    -57,     -4}, 0, {     0,      0}, {0xa2, 0xaf, 0xe7, 0x00}}},
+    {{{   -16,    -12,      6}, 0, {     0,      0}, {0x8c, 0xcf, 0xf8, 0x00}}},
+    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x9b, 0xd5, 0xc2, 0x00}}},
+    {{{   -19,     47,     -4}, 0, {     0,      0}, {0x85, 0xf5, 0xe7, 0x00}}},
+    {{{    58,     81,      0}, 0, {     0,      0}, {0x14, 0x7b, 0xe9, 0x00}}},
+};
+
+// 0x0400E0F8
+static const Vtx mario_right_hand_closed_dl_vertex_group2[] = {
+    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
+    {{{   104,    -26,      1}, 0, {     0,      0}, {0x68, 0xc5, 0xd7, 0x00}}},
+    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
+    {{{    75,    -33,     66}, 0, {     0,      0}, {0x08, 0xaf, 0x60, 0x00}}},
+    {{{    96,     -8,     52}, 0, {     0,      0}, {0x60, 0x06, 0x51, 0x00}}},
+    {{{    57,     10,     66}, 0, {     0,      0}, {0xfd, 0x1c, 0x7b, 0x00}}},
+    {{{    58,     81,      0}, 0, {     0,      0}, {0x14, 0x7b, 0xe9, 0x00}}},
+    {{{    97,     39,     24}, 0, {     0,      0}, {0x6b, 0x3a, 0x21, 0x00}}},
+    {{{    86,     30,    -33}, 0, {     0,      0}, {0x4f, 0x22, 0xa4, 0x00}}},
+    {{{    86,     15,     52}, 0, {     0,      0}, {0x40, 0x30, 0x61, 0x00}}},
+    {{{    54,     54,     44}, 0, {     0,      0}, {0x20, 0x51, 0x5c, 0x00}}},
+    {{{    29,     62,     34}, 0, {     0,      0}, {0xce, 0x4c, 0x57, 0x00}}},
+    {{{    29,      6,     49}, 0, {     0,      0}, {0xc2, 0xfa, 0x6e, 0x00}}},
+    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
+};
+
+// 0x0400E1D8
+static const Vtx mario_right_hand_closed_dl_vertex_group3[] = {
+    {{{    31,    -40,     -1}, 0, {     0,      0}, {0x43, 0xa4, 0xc9, 0x00}}},
+    {{{    23,    -26,     35}, 0, {     0,      0}, {0x04, 0xc3, 0x6e, 0x00}}},
+    {{{    13,    -38,     41}, 0, {     0,      0}, {0x15, 0xb3, 0x61, 0x00}}},
+    {{{     1,     24,     35}, 0, {     0,      0}, {0xd2, 0x3c, 0x65, 0x00}}},
+    {{{   -14,     26,     41}, 0, {     0,      0}, {0xed, 0x3d, 0x6d, 0x00}}},
+    {{{    -2,     41,     -1}, 0, {     0,      0}, {0xed, 0x70, 0xc9, 0x00}}},
+    {{{    15,      0,    -23}, 0, {     0,      0}, {0x04, 0x01, 0x82, 0x00}}},
+    {{{     4,     -3,    -33}, 0, {     0,      0}, {0x48, 0x1e, 0x9d, 0x00}}},
+    {{{    35,      9,    -37}, 0, {     0,      0}, {0xe5, 0xf5, 0x85, 0x00}}},
+    {{{    29,      6,     49}, 0, {     0,      0}, {0xc2, 0xfa, 0x6e, 0x00}}},
+    {{{    55,    -44,     -4}, 0, {     0,      0}, {0x00, 0x86, 0xdf, 0x00}}},
+    {{{    75,    -33,     66}, 0, {     0,      0}, {0x08, 0xaf, 0x60, 0x00}}},
+    {{{    57,     10,     66}, 0, {     0,      0}, {0xfd, 0x1c, 0x7b, 0x00}}},
+    {{{    10,     60,     -4}, 0, {     0,      0}, {0xac, 0x5a, 0xe5, 0x00}}},
+    {{{    29,     62,     34}, 0, {     0,      0}, {0xce, 0x4c, 0x57, 0x00}}},
+};
+
+// 0x0400E2C8 - 0x0400E458
+const Gfx mario_right_hand_closed_dl[] = {
+    gsSPVertex(mario_right_hand_closed_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+    gsSP2Triangles( 2,  5,  6, 0x0,  6,  7,  4, 0x0),
+    gsSP2Triangles( 4,  7,  8, 0x0,  8,  9, 10, 0x0),
+    gsSP2Triangles( 9,  5,  2, 0x0, 11, 12, 13, 0x0),
+    gsSP2Triangles(13, 12, 14, 0x0, 14, 12,  8, 0x0),
+    gsSP2Triangles( 8, 12,  9, 0x0,  9, 12, 11, 0x0),
+    gsSP1Triangle( 3, 15,  0, 0x0),
+    gsSPVertex(mario_right_hand_closed_dl_vertex_group2, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 3,  4,  5, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 8,  7,  1, 0x0,  1,  7,  4, 0x0),
+    gsSP2Triangles( 4,  7,  9, 0x0, 10,  7,  6, 0x0),
+    gsSP2Triangles( 9, 10,  5, 0x0, 10, 11,  5, 0x0),
+    gsSP2Triangles(11, 12,  5, 0x0,  1,  4,  3, 0x0),
+    gsSP2Triangles(11, 10,  6, 0x0,  6, 13, 11, 0x0),
+    gsSP2Triangles( 7, 10,  9, 0x0,  4,  9,  5, 0x0),
+    gsSP2Triangles( 0,  8,  1, 0x0,  6,  8,  0, 0x0),
+    gsSPVertex(mario_right_hand_closed_dl_vertex_group3, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  7, 0x0),
+    gsSP2Triangles( 7,  6,  0, 0x0,  8,  6,  5, 0x0),
+    gsSP2Triangles( 9,  3,  1, 0x0,  0,  6,  8, 0x0),
+    gsSP2Triangles(10, 11,  1, 0x0, 11,  9,  1, 0x0),
+    gsSP2Triangles(11, 12,  9, 0x0,  1,  0, 10, 0x0),
+    gsSP2Triangles(13,  5,  3, 0x0,  3,  9, 14, 0x0),
+    gsSP1Triangle(14, 13,  3, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400E458 - 0x0400E478
+const Gfx mario_right_hand_closed[] = {
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_right_hand_closed_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400E478 - 0x0400E4A8
+const Gfx mario_metal_right_hand_closed[] = {
+    gsSPDisplayList(mario_right_hand_closed_dl),
+    gsDPPipeSync(),
+    gsSPClearGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400E4A8
+static const Vtx mario_left_thigh_dl_vertex_group1[] = {
+    {{{     1,    -44,      8}, 0, {     0,      0}, {0xab, 0xa2, 0x00, 0x00}}},
+    {{{   -15,      0,      7}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{     0,    -13,    -32}, 0, {     0,      0}, {0x9f, 0xe1, 0xb5, 0x00}}},
+    {{{    -4,     37,    -17}, 0, {     0,      0}, {0x9e, 0x30, 0xc0, 0x00}}},
+    {{{    -5,     37,     31}, 0, {     0,      0}, {0xa0, 0x3f, 0x34, 0x00}}},
+    {{{    -1,    -12,     47}, 0, {     0,      0}, {0x9e, 0xe3, 0x49, 0x00}}},
+    {{{    95,     -5,     48}, 0, {     0,      0}, {0x4e, 0xe9, 0x60, 0x00}}},
+    {{{   116,     10,      8}, 0, {     0,      0}, {0x7e, 0x09, 0x01, 0x00}}},
+    {{{    91,     45,     32}, 0, {     0,      0}, {0x3c, 0x4e, 0x4f, 0x00}}},
+    {{{    92,     45,    -16}, 0, {     0,      0}, {0x35, 0x5d, 0xbd, 0x00}}},
+    {{{    96,     -5,    -31}, 0, {     0,      0}, {0x50, 0xe8, 0xa1, 0x00}}},
+    {{{    98,    -37,      8}, 0, {     0,      0}, {0x46, 0x97, 0x01, 0x00}}},
+    {{{    19,    -15,    -42}, 0, {     0,      0}, {0xec, 0xd9, 0x8a, 0x00}}},
+    {{{    14,     48,    -23}, 0, {     0,      0}, {0xd7, 0x67, 0xc5, 0x00}}},
+    {{{    13,     48,     38}, 0, {     0,      0}, {0xe7, 0x6d, 0x3a, 0x00}}},
+    {{{    18,    -15,     58}, 0, {     0,      0}, {0xea, 0xda, 0x76, 0x00}}},
+};
+
+// 0x0400E5A8
+static const Vtx mario_left_thigh_dl_vertex_group2[] = {
+    {{{    18,    -15,     58}, 0, {     0,      0}, {0xea, 0xda, 0x76, 0x00}}},
+    {{{     1,    -44,      8}, 0, {     0,      0}, {0xab, 0xa2, 0x00, 0x00}}},
+    {{{    21,    -54,      8}, 0, {     0,      0}, {0xf0, 0x83, 0x00, 0x00}}},
+    {{{    19,    -15,    -42}, 0, {     0,      0}, {0xec, 0xd9, 0x8a, 0x00}}},
+    {{{    -1,    -12,     47}, 0, {     0,      0}, {0x9e, 0xe3, 0x49, 0x00}}},
+    {{{   -15,      0,      7}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{    98,    -37,      8}, 0, {     0,      0}, {0x46, 0x97, 0x01, 0x00}}},
+    {{{    13,     48,     38}, 0, {     0,      0}, {0xe7, 0x6d, 0x3a, 0x00}}},
+    {{{    91,     45,     32}, 0, {     0,      0}, {0x3c, 0x4e, 0x4f, 0x00}}},
+    {{{    14,     48,    -23}, 0, {     0,      0}, {0xd7, 0x67, 0xc5, 0x00}}},
+    {{{    92,     45,    -16}, 0, {     0,      0}, {0x35, 0x5d, 0xbd, 0x00}}},
+    {{{    96,     -5,    -31}, 0, {     0,      0}, {0x50, 0xe8, 0xa1, 0x00}}},
+    {{{    95,     -5,     48}, 0, {     0,      0}, {0x4e, 0xe9, 0x60, 0x00}}},
+    {{{     0,    -13,    -32}, 0, {     0,      0}, {0x9f, 0xe1, 0xb5, 0x00}}},
+    {{{    -5,     37,     31}, 0, {     0,      0}, {0xa0, 0x3f, 0x34, 0x00}}},
+    {{{    -4,     37,    -17}, 0, {     0,      0}, {0x9e, 0x30, 0xc0, 0x00}}},
+};
+
+// 0x0400E6A8 - 0x0400E7B0
+const Gfx mario_left_thigh_dl[] = {
+    gsSPVertex(mario_left_thigh_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  8,  7,  9, 0x0),
+    gsSP2Triangles( 9,  7, 10, 0x0, 10,  7, 11, 0x0),
+    gsSP2Triangles(11,  7,  6, 0x0, 12,  3, 13, 0x0),
+    gsSP2Triangles(13,  4, 14, 0x0, 14,  4, 15, 0x0),
+    gsSPVertex(mario_left_thigh_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 4,  5,  1, 0x0,  0,  2,  6, 0x0),
+    gsSP2Triangles( 7,  0,  8, 0x0,  9,  7, 10, 0x0),
+    gsSP2Triangles( 3,  9, 10, 0x0,  2,  3,  6, 0x0),
+    gsSP2Triangles( 3, 11,  6, 0x0, 10, 11,  3, 0x0),
+    gsSP2Triangles( 7,  8, 10, 0x0,  0, 12,  8, 0x0),
+    gsSP2Triangles( 6, 12,  0, 0x0,  1, 13,  3, 0x0),
+    gsSP2Triangles( 0,  4,  1, 0x0, 14,  4,  0, 0x0),
+    gsSP2Triangles( 9, 15, 14, 0x0,  3, 13, 15, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400E7B0 - 0x0400E7E0
+const Gfx mario_left_thigh[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPLight(&mario_blue_lights_group.l, 1),
+    gsSPLight(&mario_blue_lights_group.a, 2),
+    gsSPDisplayList(mario_left_thigh_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400E7E0 - 0x0400E858
+const Gfx mario_metal_left_thigh[] = {
+    gsDPPipeSync(),
+    gsSPSetGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_left_thigh_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400E858
+static const Vtx mario_left_leg_shared_dl_vertex[] = {
+    {{{     4,    -37,      9}, 0, {     0,      0}, {0xc1, 0x93, 0x00, 0x00}}},
+    {{{    64,    -46,      9}, 0, {     0,      0}, {0x4b, 0x9a, 0x01, 0x00}}},
+    {{{    65,    -11,     54}, 0, {     0,      0}, {0x2d, 0xdb, 0x70, 0x00}}},
+    {{{     8,     44,     33}, 0, {     0,      0}, {0xcc, 0x5e, 0x43, 0x00}}},
+    {{{    68,     45,     37}, 0, {     0,      0}, {0x52, 0x4b, 0x3c, 0x00}}},
+    {{{    69,     45,    -18}, 0, {     0,      0}, {0x42, 0x61, 0xd1, 0x00}}},
+    {{{     9,     44,    -16}, 0, {     0,      0}, {0xc4, 0x4d, 0xaf, 0x00}}},
+    {{{    66,    -11,    -36}, 0, {     0,      0}, {0x2e, 0xda, 0x91, 0x00}}},
+    {{{     6,     -6,    -31}, 0, {     0,      0}, {0xb4, 0xe5, 0x9f, 0x00}}},
+    {{{     6,     -6,     49}, 0, {     0,      0}, {0xb3, 0xe7, 0x60, 0x00}}},
+    {{{   -14,      8,      8}, 0, {     0,      0}, {0x82, 0x06, 0xff, 0x00}}},
+    {{{    81,      3,      9}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+};
+
+// 0x0400E918 - 0x0400E9C8
+const Gfx mario_left_leg_shared_dl[] = {
+    gsSPVertex(mario_left_leg_shared_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
+    gsSP2Triangles( 3,  4,  5, 0x0,  6,  5,  7, 0x0),
+    gsSP2Triangles( 0,  7,  1, 0x0,  0,  8,  7, 0x0),
+    gsSP2Triangles( 7,  8,  6, 0x0,  5,  6,  3, 0x0),
+    gsSP2Triangles( 3,  9,  2, 0x0,  2,  9,  0, 0x0),
+    gsSP2Triangles( 3, 10,  9, 0x0,  5, 11,  7, 0x0),
+    gsSP2Triangles( 7, 11,  1, 0x0,  1, 11,  2, 0x0),
+    gsSP2Triangles( 2, 11,  4, 0x0,  4, 11,  5, 0x0),
+    gsSP2Triangles( 9, 10,  0, 0x0,  0, 10,  8, 0x0),
+    gsSP2Triangles( 8, 10,  6, 0x0,  6, 10,  3, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400E9C8
+static const Vtx mario_left_foot_shared_dl_vertex_group1[] = {
+    {{{   110,      9,     35}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   110,      8,    -20}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{    76,     20,    -41}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{    78,     21,     61}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -12,     53,    -32}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -11,     54,     53}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -39,     64,     -8}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -41,     65,     26}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{    43,    -18,     54}, 0, {     0,      0}, {0x07, 0xb3, 0x64, 0x00}}},
+    {{{    78,     21,     61}, 0, {     0,      0}, {0x15, 0xdb, 0x77, 0x00}}},
+    {{{   -11,     54,     53}, 0, {     0,      0}, {0xd9, 0x00, 0x78, 0x00}}},
+    {{{    44,    -12,    -33}, 0, {     0,      0}, {0x01, 0xb7, 0x99, 0x00}}},
+    {{{   -35,     11,    -21}, 0, {     0,      0}, {0xb5, 0xd2, 0xa5, 0x00}}},
+    {{{   -12,     53,    -32}, 0, {     0,      0}, {0xd7, 0xfd, 0x89, 0x00}}},
+    {{{   -34,     12,     44}, 0, {     0,      0}, {0xb2, 0xd2, 0x58, 0x00}}},
+    {{{    76,     20,    -41}, 0, {     0,      0}, {0x0c, 0xd8, 0x89, 0x00}}},
+};
+
+// 0x0400EAC8
+static const Vtx mario_left_foot_shared_dl_vertex_group2[] = {
+    {{{    44,    -12,    -33}, 0, {     0,      0}, {0x01, 0xb7, 0x99, 0x00}}},
+    {{{    76,     20,    -41}, 0, {     0,      0}, {0x0c, 0xd8, 0x89, 0x00}}},
+    {{{   110,      8,    -20}, 0, {     0,      0}, {0x44, 0xad, 0xbe, 0x00}}},
+    {{{    80,    -31,      7}, 0, {     0,      0}, {0x34, 0x8d, 0xfb, 0x00}}},
+    {{{   110,      9,     35}, 0, {     0,      0}, {0x4c, 0xaf, 0x3c, 0x00}}},
+    {{{    78,     21,     61}, 0, {     0,      0}, {0x15, 0xdb, 0x77, 0x00}}},
+    {{{    43,    -18,     54}, 0, {     0,      0}, {0x07, 0xb3, 0x64, 0x00}}},
+    {{{   -34,     12,     44}, 0, {     0,      0}, {0xb2, 0xd2, 0x58, 0x00}}},
+    {{{   -11,     54,     53}, 0, {     0,      0}, {0xd9, 0x00, 0x78, 0x00}}},
+    {{{   -41,     65,     26}, 0, {     0,      0}, {0x90, 0x17, 0x35, 0x00}}},
+    {{{   -39,     64,     -8}, 0, {     0,      0}, {0x93, 0x16, 0xc4, 0x00}}},
+    {{{   -35,     11,    -21}, 0, {     0,      0}, {0xb5, 0xd2, 0xa5, 0x00}}},
+    {{{   -54,     15,      8}, 0, {     0,      0}, {0x88, 0xd8, 0xfd, 0x00}}},
+    {{{   -12,     53,    -32}, 0, {     0,      0}, {0xd7, 0xfd, 0x89, 0x00}}},
+    {{{    27,    -35,     11}, 0, {     0,      0}, {0xdb, 0x87, 0xfc, 0x00}}},
+};
+
+// 0x0400EBB8 - 0x0400ECA0
+const Gfx mario_left_foot_shared_dl[] = {
+    gsSPVertex(mario_left_foot_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 3,  2,  4, 0x0,  5,  3,  4, 0x0),
+    gsSP2Triangles( 5,  4,  6, 0x0,  5,  6,  7, 0x0),
+    gsSP2Triangles( 8,  9, 10, 0x0, 11, 12, 13, 0x0),
+    gsSP2Triangles(14,  8, 10, 0x0, 11, 13, 15, 0x0),
+    gsSPVertex(mario_left_foot_shared_dl_vertex_group2, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
+    gsSP2Triangles( 2,  3,  0, 0x0,  4,  5,  6, 0x0),
+    gsSP2Triangles( 6,  3,  4, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 10, 13, 11, 0x0),
+    gsSP2Triangles(12,  9, 10, 0x0,  9, 12,  7, 0x0),
+    gsSP2Triangles(14,  0,  3, 0x0, 11,  0, 14, 0x0),
+    gsSP2Triangles( 3,  6, 14, 0x0, 14,  6,  7, 0x0),
+    gsSP2Triangles(14,  7, 12, 0x0, 12, 11, 14, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400ECA0 - 0x0400ECC0
+const Gfx mario_left_foot[] = {
+    gsSPLight(&mario_brown1_lights_group.l, 1),
+    gsSPLight(&mario_brown1_lights_group.a, 2),
+    gsSPDisplayList(mario_left_foot_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400ECC0
+static const Vtx mario_right_thigh_shared_dl_vertex_group1[] = {
+    {{{    98,    -35,    -10}, 0, {     0,      0}, {0x47, 0x97, 0xfc, 0x00}}},
+    {{{    19,    -16,     41}, 0, {     0,      0}, {0xee, 0xd6, 0x76, 0x00}}},
+    {{{    22,    -54,     -9}, 0, {     0,      0}, {0xf2, 0x82, 0xfd, 0x00}}},
+    {{{    91,     46,     16}, 0, {     0,      0}, {0x35, 0x5c, 0x44, 0x00}}},
+    {{{    13,     48,     24}, 0, {     0,      0}, {0xd6, 0x66, 0x3e, 0x00}}},
+    {{{    12,     49,    -37}, 0, {     0,      0}, {0xe5, 0x6e, 0xc9, 0x00}}},
+    {{{    90,     47,    -32}, 0, {     0,      0}, {0x3b, 0x50, 0xb2, 0x00}}},
+    {{{    18,    -13,    -58}, 0, {     0,      0}, {0xea, 0xdc, 0x89, 0x00}}},
+    {{{     1,    -44,     -9}, 0, {     0,      0}, {0xad, 0xa1, 0xff, 0x00}}},
+    {{{   -15,      0,     -7}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{    -1,    -11,    -47}, 0, {     0,      0}, {0x9d, 0xe3, 0xb7, 0x00}}},
+    {{{    -6,     38,    -31}, 0, {     0,      0}, {0x9e, 0x3f, 0xcf, 0x00}}},
+    {{{    -5,     36,     18}, 0, {     0,      0}, {0x9e, 0x2d, 0x42, 0x00}}},
+    {{{    95,     -3,    -49}, 0, {     0,      0}, {0x4d, 0xec, 0x9e, 0x00}}},
+    {{{   116,     11,     -9}, 0, {     0,      0}, {0x7e, 0x0b, 0xfe, 0x00}}},
+    {{{    96,     -5,     30}, 0, {     0,      0}, {0x51, 0xe7, 0x5d, 0x00}}},
+};
+
+// 0x0400EDC0
+static const Vtx mario_right_thigh_shared_dl_vertex_group2[] = {
+    {{{    -5,     36,     18}, 0, {     0,      0}, {0x9e, 0x2d, 0x42, 0x00}}},
+    {{{   -15,      0,     -7}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{     0,    -14,     31}, 0, {     0,      0}, {0xa0, 0xdf, 0x4b, 0x00}}},
+    {{{     1,    -44,     -9}, 0, {     0,      0}, {0xad, 0xa1, 0xff, 0x00}}},
+    {{{    19,    -16,     41}, 0, {     0,      0}, {0xee, 0xd6, 0x76, 0x00}}},
+    {{{    -6,     38,    -31}, 0, {     0,      0}, {0x9e, 0x3f, 0xcf, 0x00}}},
+    {{{    13,     48,     24}, 0, {     0,      0}, {0xd6, 0x66, 0x3e, 0x00}}},
+    {{{    18,    -13,    -58}, 0, {     0,      0}, {0xea, 0xdc, 0x89, 0x00}}},
+    {{{    -1,    -11,    -47}, 0, {     0,      0}, {0x9d, 0xe3, 0xb7, 0x00}}},
+    {{{    95,     -3,    -49}, 0, {     0,      0}, {0x4d, 0xec, 0x9e, 0x00}}},
+    {{{    98,    -35,    -10}, 0, {     0,      0}, {0x47, 0x97, 0xfc, 0x00}}},
+    {{{    90,     47,    -32}, 0, {     0,      0}, {0x3b, 0x50, 0xb2, 0x00}}},
+    {{{    91,     46,     16}, 0, {     0,      0}, {0x35, 0x5c, 0x44, 0x00}}},
+    {{{    12,     49,    -37}, 0, {     0,      0}, {0xe5, 0x6e, 0xc9, 0x00}}},
+    {{{    96,     -5,     30}, 0, {     0,      0}, {0x51, 0xe7, 0x5d, 0x00}}},
+};
+
+// 0x0400EEB0 - 0x0400EFB8
+const Gfx mario_right_thigh_shared_dl[] = {
+    gsSPVertex(mario_right_thigh_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 3,  5,  4, 0x0,  6,  7,  5, 0x0),
+    gsSP2Triangles( 0,  2,  7, 0x0,  8,  9, 10, 0x0),
+    gsSP2Triangles( 1,  8,  2, 0x0,  2,  8,  7, 0x0),
+    gsSP2Triangles( 7, 11,  5, 0x0,  5, 11,  4, 0x0),
+    gsSP2Triangles( 4, 12,  1, 0x0, 13, 14,  0, 0x0),
+    gsSP2Triangles( 0, 14, 15, 0x0, 15, 14,  3, 0x0),
+    gsSP2Triangles( 3, 14,  6, 0x0,  6, 14, 13, 0x0),
+    gsSP2Triangles(10,  9, 11, 0x0, 11,  9, 12, 0x0),
+    gsSPVertex(mario_right_thigh_shared_dl_vertex_group2, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 0,  2,  4, 0x0,  5,  0,  6, 0x0),
+    gsSP2Triangles( 7,  8,  5, 0x0,  3,  8,  7, 0x0),
+    gsSP2Triangles( 4,  2,  3, 0x0,  7,  9, 10, 0x0),
+    gsSP2Triangles(11,  9,  7, 0x0, 12, 11, 13, 0x0),
+    gsSP2Triangles( 4, 14, 12, 0x0, 10, 14,  4, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400EFB8 - 0x0400EFD8
+const Gfx mario_right_thigh[] = {
+    gsSPLight(&mario_blue_lights_group.l, 1),
+    gsSPLight(&mario_blue_lights_group.a, 2),
+    gsSPDisplayList(mario_right_thigh_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400EFD8
+static const Vtx mario_right_leg_shared_dl_vertex_group1[] = {
+    {{{    63,    -45,    -12}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
+    {{{    66,    -11,     34}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
+    {{{     4,    -36,    -10}, 0, {     0,      0}, {0xc0, 0x93, 0xfe, 0x00}}},
+    {{{    66,    -11,     34}, 0, {     0,      0}, {0xfb, 0x22, 0x7a, 0x00}}},
+    {{{    69,     45,     18}, 0, {     0,      0}, {0xfc, 0x22, 0x7a, 0x00}}},
+    {{{     9,     44,     16}, 0, {     0,      0}, {0xc6, 0x4b, 0x53, 0x00}}},
+    {{{    69,     45,     18}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
+    {{{    69,     46,    -37}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
+    {{{     9,     46,    -33}, 0, {     0,      0}, {0xcd, 0x60, 0xc0, 0x00}}},
+    {{{    69,     46,    -37}, 0, {     0,      0}, {0xf7, 0x27, 0x88, 0x00}}},
+    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xf8, 0x28, 0x88, 0x00}}},
+    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
+    {{{    63,    -45,    -12}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
+    {{{     6,     -6,     30}, 0, {     0,      0}, {0xb4, 0xe4, 0x61, 0x00}}},
+    {{{   -13,     10,     -9}, 0, {     0,      0}, {0x82, 0x08, 0x02, 0x00}}},
+    {{{     5,     -3,    -50}, 0, {     0,      0}, {0xb2, 0xea, 0xa0, 0x00}}},
+};
+
+// 0x0400F0D8
+static const Vtx mario_right_leg_shared_dl_vertex_group2[] = {
+    {{{    65,     -9,    -56}, 0, {     0,      0}, {0x75, 0xee, 0xd5, 0x00}}},
+    {{{    83,      4,    -10}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+    {{{    63,    -45,    -12}, 0, {     0,      0}, {0x75, 0xd1, 0xfd, 0x00}}},
+    {{{    66,    -11,     34}, 0, {     0,      0}, {0x77, 0xec, 0x26, 0x00}}},
+    {{{    69,     45,     18}, 0, {     0,      0}, {0x7a, 0x18, 0x17, 0x00}}},
+    {{{    69,     46,    -37}, 0, {     0,      0}, {0x79, 0x19, 0xe6, 0x00}}},
+    {{{     4,    -36,    -10}, 0, {     0,      0}, {0xc0, 0x93, 0xfe, 0x00}}},
+    {{{     5,     -3,    -50}, 0, {     0,      0}, {0xb2, 0xea, 0xa0, 0x00}}},
+    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xef, 0xa0, 0xb0, 0x00}}},
+    {{{    65,     -9,    -56}, 0, {     0,      0}, {0xf8, 0x28, 0x88, 0x00}}},
+    {{{     9,     46,    -33}, 0, {     0,      0}, {0xcd, 0x60, 0xc0, 0x00}}},
+    {{{     9,     44,     16}, 0, {     0,      0}, {0xc6, 0x4b, 0x53, 0x00}}},
+    {{{    69,     45,     18}, 0, {     0,      0}, {0xff, 0x7f, 0x03, 0x00}}},
+    {{{     6,     -6,     30}, 0, {     0,      0}, {0xb4, 0xe4, 0x61, 0x00}}},
+    {{{    66,    -11,     34}, 0, {     0,      0}, {0xfb, 0x22, 0x7a, 0x00}}},
+    {{{    66,    -11,     34}, 0, {     0,      0}, {0xf2, 0x9b, 0x4a, 0x00}}},
+};
+
+// 0x0400F1D8 - 0x0400F290
+const Gfx mario_right_leg_shared_dl[] = {
+    gsSPVertex(mario_right_leg_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  8, 0x0),
+    gsSP2Triangles(11, 12,  2, 0x0, 13, 14,  2, 0x0),
+    gsSP2Triangles( 2, 14, 15, 0x0, 15, 14,  8, 0x0),
+    gsSP2Triangles( 8, 14,  5, 0x0,  5, 14, 13, 0x0),
+    gsSPVertex(mario_right_leg_shared_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
+    gsSP2Triangles( 5,  1,  0, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 9,  7, 10, 0x0, 10, 11, 12, 0x0),
+    gsSP2Triangles(11, 13, 14, 0x0, 15, 13,  6, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400F290
+static const Vtx mario_right_foot_dl_vertex_group1[] = {
+    {{{    27,    -35,    -11}, 0, {     0,      0}, {0xdc, 0x87, 0x06, 0x00}}},
+    {{{   -36,     11,     19}, 0, {     0,      0}, {0xb5, 0xd3, 0x5b, 0x00}}},
+    {{{   -54,     14,    -10}, 0, {     0,      0}, {0x89, 0xd6, 0x03, 0x00}}},
+    {{{   -34,     11,    -46}, 0, {     0,      0}, {0xb4, 0xd0, 0xa8, 0x00}}},
+    {{{    43,    -18,    -55}, 0, {     0,      0}, {0x0a, 0xb2, 0x9d, 0x00}}},
+    {{{    80,    -29,     -7}, 0, {     0,      0}, {0x36, 0x8e, 0x08, 0x00}}},
+    {{{    44,    -11,     32}, 0, {     0,      0}, {0x01, 0xb8, 0x68, 0x00}}},
+    {{{   -42,     64,    -29}, 0, {     0,      0}, {0x90, 0x14, 0xc9, 0x00}}},
+    {{{   -40,     63,      5}, 0, {     0,      0}, {0x92, 0x15, 0x3b, 0x00}}},
+    {{{   -14,     54,     29}, 0, {     0,      0}, {0xd5, 0xfe, 0x77, 0x00}}},
+    {{{   -11,     53,    -56}, 0, {     0,      0}, {0xda, 0xfe, 0x87, 0x00}}},
+    {{{   110,     11,    -36}, 0, {     0,      0}, {0x4e, 0xb0, 0xc6, 0x00}}},
+    {{{    78,     22,    -61}, 0, {     0,      0}, {0x17, 0xd9, 0x8a, 0x00}}},
+    {{{   109,     11,     20}, 0, {     0,      0}, {0x45, 0xaf, 0x44, 0x00}}},
+    {{{    75,     23,     40}, 0, {     0,      0}, {0x0b, 0xda, 0x78, 0x00}}},
+};
+
+// 0x0400F380
+static const Vtx mario_right_foot_dl_vertex_group2[] = {
+    {{{   -42,     64,    -29}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   -40,     63,      5}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   -11,     53,    -56}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   -14,     54,     29}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{    78,     22,    -61}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{    75,     23,     40}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   110,     11,    -36}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   109,     11,     20}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+};
+
+// 0x0400F400 - 0x0400F4E8
+const Gfx mario_right_foot_dl[] = {
+    gsSPVertex(mario_right_foot_dl_vertex_group1, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 3,  4,  0, 0x0,  0,  4,  5, 0x0),
+    gsSP2Triangles( 0,  6,  1, 0x0,  5,  6,  0, 0x0),
+    gsSP2Triangles( 3,  2,  7, 0x0,  8,  7,  2, 0x0),
+    gsSP2Triangles( 1,  9,  8, 0x0,  2,  1,  8, 0x0),
+    gsSP2Triangles( 7, 10,  3, 0x0, 11,  5,  4, 0x0),
+    gsSP2Triangles( 4, 12, 11, 0x0,  6,  5, 13, 0x0),
+    gsSP2Triangles(11, 13,  5, 0x0, 13, 14,  6, 0x0),
+    gsSP2Triangles(14,  9,  6, 0x0, 10,  4,  3, 0x0),
+    gsSP2Triangles( 9,  1,  6, 0x0, 10, 12,  4, 0x0),
+    gsSPVertex(mario_right_foot_dl_vertex_group2, 8, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+    gsSP2Triangles( 3,  4,  2, 0x0,  3,  5,  4, 0x0),
+    gsSP2Triangles( 5,  6,  4, 0x0,  5,  7,  6, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400F4E8 - 0x0400F528
+const Gfx mario_right_foot[] = {
+    gsSPLight(&mario_brown1_lights_group.l, 1),
+    gsSPLight(&mario_brown1_lights_group.a, 2),
+    gsSPDisplayList(mario_right_foot_dl),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsDPSetEnvColor(255, 255, 255, 255),
+    gsDPSetAlphaCompare(G_AC_NONE),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400F528 - 0x0400F568
+const Gfx mario_metal_right_foot[] = {
+    gsSPDisplayList(mario_right_foot_dl),
+    gsDPPipeSync(),
+    gsSPClearGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPSetEnvColor(255, 255, 255, 255),
+    gsDPSetAlphaCompare(G_AC_NONE),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400F568
+static const Vtx mario_yellow_button_dl_vertex[] = {
+    {{{     9,     89,     41}, 0, {   180,    962}, {0x14, 0x78, 0x23, 0xff}}},
+    {{{     3,     77,     62}, 0, {   682,    966}, {0x04, 0x6a, 0x44, 0xff}}},
+    {{{    47,     75,     35}, 0, {    34,    106}, {0x39, 0x6a, 0x26, 0xff}}},
+    {{{    28,     85,     30}, 0, {   -60,    572}, {0x2c, 0x76, 0x08, 0xff}}},
+    {{{    17,     66,     76}, 0, {   966,    590}, {0x19, 0x58, 0x57, 0xff}}},
+    {{{    32,     62,     74}, 0, {   902,    252}, {0x29, 0x53, 0x56, 0xff}}},
+    {{{    48,     64,     59}, 0, {   548,      0}, {0x4d, 0x51, 0x3a, 0xff}}},
+    {{{     9,     89,    -40}, 0, {   776,    920}, {0x10, 0x7b, 0xe7, 0xff}}},
+    {{{    28,     85,    -29}, 0, {   990,    512}, {0x2d, 0x75, 0xf2, 0xff}}},
+    {{{    47,     75,    -34}, 0, {   850,     72}, {0x3e, 0x6a, 0xe2, 0xff}}},
+    {{{     3,     77,    -61}, 0, {   264,    972}, {0x03, 0x6a, 0xbb, 0xff}}},
+    {{{    48,     64,    -58}, 0, {   312,      0}, {0x4d, 0x50, 0xc5, 0xff}}},
+    {{{    32,     62,    -73}, 0, {   -24,    310}, {0x29, 0x52, 0xa9, 0xff}}},
+    {{{    17,     66,    -75}, 0, {   -58,    642}, {0x17, 0x58, 0xa8, 0xff}}},
+};
+
+// 0x0400F648
+static const Vtx mario_tshirt_shared_dl_vertex_group1[] = {
+    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
+    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
+    {{{    82,     37,     27}, 0, {     0,      0}, {0x66, 0x48, 0x14, 0xff}}},
+    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
+    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+    {{{     6,    -10,    -92}, 0, {     0,      0}, {0x00, 0xeb, 0x83, 0xff}}},
+    {{{    47,      3,    -88}, 0, {     0,      0}, {0x30, 0x09, 0x8b, 0xff}}},
+    {{{    46,    -34,    -83}, 0, {     0,      0}, {0x24, 0xc8, 0x95, 0xff}}},
+    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+    {{{    20,    -61,    -67}, 0, {     0,      0}, {0x0a, 0x9a, 0xb7, 0xff}}},
+    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
+    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
+    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+    {{{    46,    -34,     84}, 0, {     0,      0}, {0x24, 0xc8, 0x6b, 0xff}}},
+};
+
+// 0x0400F748
+static const Vtx mario_tshirt_shared_dl_vertex_group2[] = {
+    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+    {{{    46,    -34,     84}, 0, {     0,      0}, {0x24, 0xc8, 0x6b, 0xff}}},
+    {{{     6,    -11,     93}, 0, {     0,      0}, {0x00, 0xea, 0x7c, 0xff}}},
+    {{{    47,      3,     89}, 0, {     0,      0}, {0x30, 0x08, 0x75, 0xff}}},
+    {{{    84,    -29,     63}, 0, {     0,      0}, {0x5f, 0xde, 0x4c, 0xff}}},
+    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+    {{{    93,    -36,     26}, 0, {     0,      0}, {0x6b, 0xbf, 0x0d, 0xff}}},
+    {{{    93,    -36,    -25}, 0, {     0,      0}, {0x66, 0xb7, 0xf0, 0xff}}},
+    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
+    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
+    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
+};
+
+// 0x0400F828
+static const Vtx mario_tshirt_shared_dl_vertex_group3[] = {
+    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+    {{{    47,      3,    -88}, 0, {     0,      0}, {0x30, 0x09, 0x8b, 0xff}}},
+    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
+    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
+    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+};
+
+// 0x0400F878
+static const Vtx mario_pants_overalls_shared_dl_vertex_group1[] = {
+    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
+    {{{    28,     85,     30}, 0, {     0,      0}, {0x2c, 0x76, 0x08, 0xff}}},
+    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
+    {{{    28,     85,    -29}, 0, {     0,      0}, {0x2d, 0x75, 0xf2, 0xff}}},
+    {{{     9,     89,     41}, 0, {     0,      0}, {0x14, 0x78, 0x23, 0xff}}},
+    {{{     9,     89,    -40}, 0, {     0,      0}, {0x10, 0x7b, 0xe7, 0xff}}},
+    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
+    {{{   -15,     87,    -35}, 0, {     0,      0}, {0xea, 0x76, 0xda, 0xff}}},
+    {{{     3,     77,    -61}, 0, {     0,      0}, {0x03, 0x6a, 0xbb, 0xff}}},
+    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
+    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+    {{{   -40,     72,    -54}, 0, {     0,      0}, {0xc5, 0x5f, 0xc6, 0xff}}},
+    {{{   -40,     72,     55}, 0, {     0,      0}, {0xc4, 0x5e, 0x3a, 0xff}}},
+    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
+    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
+};
+
+// 0x0400F968
+static const Vtx mario_pants_overalls_shared_dl_vertex_group2[] = {
+    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
+    {{{    48,     64,    -58}, 0, {     0,      0}, {0x4d, 0x50, 0xc5, 0xff}}},
+    {{{     3,     77,     62}, 0, {     0,      0}, {0x04, 0x6a, 0x44, 0xff}}},
+    {{{     9,     89,     41}, 0, {     0,      0}, {0x14, 0x78, 0x23, 0xff}}},
+    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
+    {{{    47,     75,     35}, 0, {     0,      0}, {0x39, 0x6a, 0x26, 0xff}}},
+    {{{    48,     64,     59}, 0, {     0,      0}, {0x4d, 0x51, 0x3a, 0xff}}},
+    {{{    82,     37,     27}, 0, {     0,      0}, {0x66, 0x48, 0x14, 0xff}}},
+    {{{    32,     62,     74}, 0, {     0,      0}, {0x29, 0x53, 0x56, 0xff}}},
+    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
+    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
+    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
+    {{{    32,     62,    -73}, 0, {     0,      0}, {0x29, 0x52, 0xa9, 0xff}}},
+    {{{    47,     75,    -34}, 0, {     0,      0}, {0x3e, 0x6a, 0xe2, 0xff}}},
+};
+
+// 0x0400FA68
+static const Vtx mario_pants_overalls_shared_dl_vertex_group3[] = {
+    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+    {{{    82,     37,    -26}, 0, {     0,      0}, {0x69, 0x43, 0xec, 0xff}}},
+    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+    {{{    20,    -61,    -67}, 0, {     0,      0}, {0x0a, 0x9a, 0xb7, 0xff}}},
+    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
+    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
+    {{{   -27,    -25,    -86}, 0, {     0,      0}, {0xcb, 0xd5, 0x96, 0xff}}},
+    {{{     6,    -10,    -92}, 0, {     0,      0}, {0x00, 0xeb, 0x83, 0xff}}},
+    {{{   -29,    -58,    -59}, 0, {     0,      0}, {0xc9, 0x9a, 0xcf, 0xff}}},
+    {{{     8,    -74,      0}, 0, {     0,      0}, {0xfd, 0x82, 0x00, 0xff}}},
+    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
+    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
+    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
+    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+};
+
+// 0x0400FB68
+static const Vtx mario_pants_overalls_shared_dl_vertex_group4[] = {
+    {{{     8,    -74,      0}, 0, {     0,      0}, {0xfd, 0x82, 0x00, 0xff}}},
+    {{{    20,    -61,     68}, 0, {     0,      0}, {0x0a, 0x99, 0x49, 0xff}}},
+    {{{   -29,    -58,     59}, 0, {     0,      0}, {0xc8, 0x99, 0x30, 0xff}}},
+    {{{   -27,    -25,     87}, 0, {     0,      0}, {0xcb, 0xd3, 0x69, 0xff}}},
+    {{{     6,    -11,     93}, 0, {     0,      0}, {0x00, 0xea, 0x7c, 0xff}}},
+    {{{   -27,     26,     91}, 0, {     0,      0}, {0xc8, 0x0e, 0x70, 0xff}}},
+    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+    {{{   -59,    -28,     38}, 0, {     0,      0}, {0x8d, 0xd8, 0x21, 0xff}}},
+    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
+    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
+    {{{   -71,     54,    -29}, 0, {     0,      0}, {0x8f, 0x2a, 0xda, 0xff}}},
+    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
+    {{{   -71,     54,     30}, 0, {     0,      0}, {0x94, 0x2a, 0x31, 0xff}}},
+    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
+    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
+};
+
+// 0x0400FC68
+static const Vtx mario_pants_overalls_shared_dl_vertex_group5[] = {
+    {{{   -71,     54,    -29}, 0, {     0,      0}, {0x8f, 0x2a, 0xda, 0xff}}},
+    {{{   -43,     83,    -24}, 0, {     0,      0}, {0xcc, 0x72, 0xee, 0xff}}},
+    {{{   -40,     72,    -54}, 0, {     0,      0}, {0xc5, 0x5f, 0xc6, 0xff}}},
+    {{{   -59,    -28,    -37}, 0, {     0,      0}, {0x90, 0xd5, 0xd9, 0xff}}},
+    {{{   -59,    -28,     38}, 0, {     0,      0}, {0x8d, 0xd8, 0x21, 0xff}}},
+    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+    {{{   -43,     83,     25}, 0, {     0,      0}, {0xbc, 0x69, 0x11, 0xff}}},
+    {{{   -71,     54,     30}, 0, {     0,      0}, {0x94, 0x2a, 0x31, 0xff}}},
+    {{{   -30,    -66,      0}, 0, {     0,      0}, {0xb8, 0x98, 0x00, 0xff}}},
+    {{{   -27,     26,     91}, 0, {     0,      0}, {0xc8, 0x0e, 0x70, 0xff}}},
+    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
+    {{{   -40,     72,     55}, 0, {     0,      0}, {0xc4, 0x5e, 0x3a, 0xff}}},
+    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+    {{{    -4,     58,     84}, 0, {     0,      0}, {0xfb, 0x43, 0x6b, 0xff}}},
+};
+
+// 0x0400FD48
+static const Vtx mario_pants_overalls_shared_dl_vertex_group6[] = {
+    {{{   -27,     26,    -89}, 0, {     0,      0}, {0xc7, 0x0f, 0x90, 0xff}}},
+    {{{    -4,     58,    -82}, 0, {     0,      0}, {0xf9, 0x42, 0x94, 0xff}}},
+    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+    {{{    80,     14,    -61}, 0, {     0,      0}, {0x60, 0x28, 0xb8, 0xff}}},
+    {{{   100,      1,    -23}, 0, {     0,      0}, {0x7c, 0x09, 0xea, 0xff}}},
+    {{{    84,    -29,    -62}, 0, {     0,      0}, {0x5f, 0xde, 0xb4, 0xff}}},
+    {{{    93,    -36,    -25}, 0, {     0,      0}, {0x66, 0xb7, 0xf0, 0xff}}},
+    {{{    66,    -52,    -50}, 0, {     0,      0}, {0x3b, 0x9a, 0xd3, 0xff}}},
+    {{{    54,    -63,      0}, 0, {     0,      0}, {0x30, 0x8b, 0x00, 0xff}}},
+    {{{    66,    -52,     51}, 0, {     0,      0}, {0x3b, 0x9a, 0x2d, 0xff}}},
+    {{{    93,    -36,     26}, 0, {     0,      0}, {0x6b, 0xbf, 0x0d, 0xff}}},
+    {{{    84,    -29,     63}, 0, {     0,      0}, {0x5f, 0xde, 0x4c, 0xff}}},
+    {{{   100,      1,     24}, 0, {     0,      0}, {0x7a, 0x17, 0x16, 0xff}}},
+    {{{    80,     14,     62}, 0, {     0,      0}, {0x60, 0x28, 0x47, 0xff}}},
+};
+
+// 0x0400FE38
+static const Vtx mario_pants_overalls_shared_dl_vertex_group7[] = {
+    {{{    17,     66,    -75}, 0, {     0,      0}, {0x17, 0x58, 0xa8, 0xff}}},
+    {{{    -4,     58,    -82}, 0, {     0,      0}, {0xf9, 0x42, 0x94, 0xff}}},
+    {{{     3,     77,    -61}, 0, {     0,      0}, {0x03, 0x6a, 0xbb, 0xff}}},
+    {{{   -28,     63,    -74}, 0, {     0,      0}, {0xd1, 0x4f, 0xaa, 0xff}}},
+    {{{    32,     62,     74}, 0, {     0,      0}, {0x29, 0x53, 0x56, 0xff}}},
+    {{{    17,     66,     76}, 0, {     0,      0}, {0x19, 0x58, 0x57, 0xff}}},
+    {{{    13,     33,     91}, 0, {     0,      0}, {0x12, 0x20, 0x79, 0xff}}},
+    {{{   -28,     63,     75}, 0, {     0,      0}, {0xd0, 0x50, 0x55, 0xff}}},
+    {{{    -4,     58,     84}, 0, {     0,      0}, {0xfb, 0x43, 0x6b, 0xff}}},
+    {{{     3,     77,     62}, 0, {     0,      0}, {0x04, 0x6a, 0x44, 0xff}}},
+    {{{   -15,     88,     35}, 0, {     0,      0}, {0xec, 0x7a, 0x1c, 0xff}}},
+    {{{    12,     33,    -90}, 0, {     0,      0}, {0x11, 0x20, 0x87, 0xff}}},
+    {{{    32,     62,    -73}, 0, {     0,      0}, {0x29, 0x52, 0xa9, 0xff}}},
+    {{{    43,     51,    -74}, 0, {     0,      0}, {0x3c, 0x32, 0x9d, 0xff}}},
+    {{{    44,     51,     75}, 0, {     0,      0}, {0x3c, 0x34, 0x62, 0xff}}},
+};
+
+// 0x0400FF28 - 0x0400FF88
+const Gfx mario_yellow_button_dl[] = {
+    gsSPVertex(mario_yellow_button_dl_vertex, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 1,  4,  2, 0x0,  5,  6,  2, 0x0),
+    gsSP2Triangles( 4,  5,  2, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles(10,  7,  9, 0x0,  9, 11, 12, 0x0),
+    gsSP2Triangles(12, 13,  9, 0x0, 13, 10,  9, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0400FF88 - 0x04010260
+const Gfx mario_pants_overalls_shared_dl[] = {
+    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group1, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 4,  1,  5, 0x0,  1,  3,  5, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
+    gsSP2Triangles( 7,  5,  8, 0x0,  9,  6,  7, 0x0),
+    gsSP2Triangles( 7,  8, 10, 0x0, 10, 11,  7, 0x0),
+    gsSP2Triangles( 9,  7, 11, 0x0, 12,  6, 13, 0x0),
+    gsSP2Triangles( 9, 13,  6, 0x0,  6, 12, 14, 0x0),
+    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  7, 0x0),
+    gsSP2Triangles( 7, 10, 11, 0x0, 11,  8,  7, 0x0),
+    gsSP2Triangles(12,  8, 11, 0x0, 13,  0,  2, 0x0),
+    gsSP2Triangles( 2,  1, 14, 0x0,  2, 15, 13, 0x0),
+    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group3, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 3,  6,  7, 0x0,  3,  8,  6, 0x0),
+    gsSP2Triangles( 5,  9,  3, 0x0,  8,  3,  9, 0x0),
+    gsSP2Triangles( 6,  8, 10, 0x0, 11, 10,  8, 0x0),
+    gsSP2Triangles( 9, 11,  8, 0x0,  6, 12,  7, 0x0),
+    gsSP2Triangles(12,  6, 10, 0x0,  7, 12, 13, 0x0),
+    gsSP2Triangles(14,  5, 15, 0x0, 14,  9,  5, 0x0),
+    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group4, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 1,  4,  3, 0x0,  5,  4,  6, 0x0),
+    gsSP2Triangles( 4,  5,  3, 0x0,  2,  3,  7, 0x0),
+    gsSP2Triangles( 7,  3,  5, 0x0,  8,  2,  7, 0x0),
+    gsSP2Triangles( 2,  8,  0, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles(12, 11, 10, 0x0, 11,  7, 13, 0x0),
+    gsSP1Triangle(14, 15, 11, 0x0),
+    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group5, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  4, 0x0),
+    gsSP2Triangles( 2,  5,  0, 0x0,  6,  0,  7, 0x0),
+    gsSP2Triangles( 4,  3,  8, 0x0,  9,  7,  4, 0x0),
+    gsSP2Triangles( 7, 10, 11, 0x0, 11,  6,  7, 0x0),
+    gsSP2Triangles( 9, 12, 13, 0x0, 10,  9, 13, 0x0),
+    gsSP1Triangle( 7,  9, 10, 0x0),
+    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group6, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9,  8,  7, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 12, 11, 13, 0x0),
+    gsSP2Triangles(14, 12, 13, 0x0, 11, 10,  9, 0x0),
+    gsSPVertex(mario_pants_overalls_shared_dl_vertex_group7, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  1, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles(10,  7,  9, 0x0,  9,  8,  5, 0x0),
+    gsSP2Triangles( 5,  8,  6, 0x0, 11,  1,  0, 0x0),
+    gsSP2Triangles(11, 12, 13, 0x0,  6, 14,  4, 0x0),
+    gsSP1Triangle(11,  0, 12, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04010260 - 0x04010348
+const Gfx mario_tshirt_shared_dl[] = {
+    gsSPVertex(mario_tshirt_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 4,  3,  2, 0x0,  4,  5,  3, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  6,  9,  7, 0x0),
+    gsSP2Triangles( 6,  8, 10, 0x0, 11,  8, 12, 0x0),
+    gsSP2Triangles(12,  8,  7, 0x0,  8, 11, 10, 0x0),
+    gsSP1Triangle(13, 14, 15, 0x0),
+    gsSPVertex(mario_tshirt_shared_dl_vertex_group2, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+    gsSP2Triangles( 3,  1,  4, 0x0,  4,  1,  5, 0x0),
+    gsSP2Triangles( 6,  2,  3, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles( 7,  9, 10, 0x0, 11, 10,  9, 0x0),
+    gsSP2Triangles(12,  3,  4, 0x0, 13,  3, 12, 0x0),
+    gsSP1Triangle( 6,  3, 13, 0x0),
+    gsSPVertex(mario_tshirt_shared_dl_vertex_group3, 5, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+    gsSP1Triangle( 1,  4,  2, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04010348 - 0x04010370
+const Gfx mario_torso_dl[] = {
+    gsSPDisplayList(mario_pants_overalls_shared_dl),
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_tshirt_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04010370 - 0x040103F0
+const Gfx mario_torso[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_yellow_button),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_yellow_button_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_torso_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040103F0 - 0x04010410
+const Gfx mario_metal_torso_shared_dl[] = {
+    gsSPDisplayList(mario_yellow_button_dl),
+    gsSPDisplayList(mario_pants_overalls_shared_dl),
+    gsSPDisplayList(mario_tshirt_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04010410
+static const Vtx mario_m_logo_dl_vertex[] = {
+    {{{   195,     93,     32}, 0, {   744,    732}, {0x51, 0x54, 0x30, 0xff}}},
+    {{{   153,     33,     95}, 0, {  1250,   1066}, {0x04, 0x46, 0x69, 0xff}}},
+    {{{   252,     62,     70}, 0, {  1032,    152}, {0x39, 0x4a, 0x55, 0xff}}},
+    {{{   272,     85,      0}, 0, {   472,    -16}, {0x5f, 0x54, 0x00, 0xff}}},
+    {{{   252,     62,    -69}, 0, {   -78,    158}, {0x39, 0x4a, 0xab, 0xff}}},
+    {{{   195,     93,    -31}, 0, {   232,    736}, {0x51, 0x54, 0xcf, 0xff}}},
+    {{{   153,     33,    -94}, 0, {  -258,   1076}, {0x03, 0x46, 0x97, 0xff}}},
+};
+
+// 0x04010480
+static const Vtx mario_eyes_cap_on_dl_vertex[] = {
+    {{{   145,    101,      0}, 0, {   480,    446}, {0x13, 0x7d, 0x00, 0xff}}},
+    {{{   108,    105,      0}, 0, {   488,    854}, {0x69, 0x46, 0x00, 0xff}}},
+    {{{    97,    103,     25}, 0, {   724,    958}, {0x40, 0x5a, 0x3d, 0xff}}},
+    {{{    97,    103,    -24}, 0, {   256,    970}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{   175,     91,    -38}, 0, {   106,    130}, {0xc6, 0x6d, 0xe7, 0xff}}},
+    {{{   144,     83,    -66}, 0, {  -146,    460}, {0x19, 0x5b, 0xad, 0xff}}},
+    {{{   104,     87,    -69}, 0, {  -160,    898}, {0x30, 0x5c, 0xb7, 0xff}}},
+    {{{   175,     91,     39}, 0, {   842,    112}, {0xc6, 0x6d, 0x19, 0xff}}},
+    {{{   153,     33,    -94}, 0, {  -404,    342}, {0x03, 0x46, 0x97, 0xff}}},
+    {{{   104,     87,     70}, 0, {  1138,    864}, {0x30, 0x5c, 0x49, 0xff}}},
+    {{{   144,     83,     67}, 0, {  1108,    428}, {0x19, 0x5b, 0x53, 0xff}}},
+    {{{   153,     33,     95}, 0, {  1362,    296}, {0x04, 0x46, 0x69, 0xff}}},
+};
+
+// 0x04010540
+static const Vtx mario_hair_sideburn_cap_on_dl_vertex[] = {
+    {{{   120,    -12,   -109}, 0, {   916,    184}, {0xed, 0x24, 0x88, 0xff}}},
+    {{{    96,     49,    -93}, 0, {   -70,    700}, {0x11, 0x27, 0x89, 0xff}}},
+    {{{   153,     33,    -94}, 0, {    90,    -58}, {0x03, 0x46, 0x97, 0xff}}},
+    {{{    85,    -23,   -110}, 0, {  1150,    582}, {0x06, 0x59, 0xa6, 0xff}}},
+    {{{    42,      0,   -102}, 0, {   842,   1210}, {0xc3, 0x05, 0x92, 0xff}}},
+    {{{    44,     44,    -96}, 0, {   118,   1334}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{    96,     49,     94}, 0, {   -74,    726}, {0x10, 0x28, 0x77, 0xff}}},
+    {{{    44,     44,     97}, 0, {   196,   1366}, {0xda, 0x21, 0x74, 0xff}}},
+    {{{    42,      0,    103}, 0, {   968,   1192}, {0xc3, 0x05, 0x6e, 0xff}}},
+    {{{    85,    -23,    111}, 0, {  1238,    518}, {0x04, 0x58, 0x5a, 0xff}}},
+    {{{   120,    -11,    111}, 0, {   922,    122}, {0xed, 0x24, 0x78, 0xff}}},
+    {{{   153,     33,     95}, 0, {    22,    -68}, {0x04, 0x46, 0x69, 0xff}}},
+};
+
+// 0x04010600
+static const Vtx mario_mustache_cap_on_dl_vertex_group1[] = {
+    {{{    77,    108,     34}, 0, {   342,    368}, {0x0e, 0x16, 0x7c, 0xff}}},
+    {{{    92,     88,     84}, 0, {   898,    -18}, {0x23, 0x59, 0x53, 0xff}}},
+    {{{    97,    103,     25}, 0, {   224,    146}, {0x40, 0x5a, 0x3d, 0xff}}},
+    {{{    48,     94,     76}, 0, {   888,    564}, {0xd7, 0x60, 0x47, 0xff}}},
+    {{{    52,    111,     31}, 0, {   354,    690}, {0xa8, 0x33, 0x4b, 0xff}}},
+    {{{    27,    100,     30}, 0, {   442,    982}, {0xb1, 0x60, 0x16, 0xff}}},
+    {{{    41,    109,      0}, 0, {    70,    924}, {0x95, 0x44, 0x00, 0xff}}},
+    {{{    44,     44,     97}, 0, {  1296,    438}, {0xda, 0x21, 0x74, 0xff}}},
+    {{{     3,     54,     52}, 0, {   892,   1090}, {0x95, 0x1d, 0x3c, 0xff}}},
+    {{{    52,    111,    -30}, 0, {   340,    684}, {0xa8, 0x32, 0xb5, 0xff}}},
+    {{{    48,     94,    -75}, 0, {   856,    608}, {0xd7, 0x60, 0xb9, 0xff}}},
+    {{{    27,    100,    -29}, 0, {   394,    998}, {0xb1, 0x60, 0xea, 0xff}}},
+    {{{     3,     54,    -51}, 0, {   806,   1162}, {0x95, 0x1d, 0xc4, 0xff}}},
+    {{{    44,     44,    -96}, 0, {  1250,    518}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{    77,    108,    -33}, 0, {   362,    344}, {0x0e, 0x16, 0x84, 0xff}}},
+    {{{    41,    109,      0}, 0, {    50,    900}, {0x95, 0x44, 0x00, 0xff}}},
+};
+
+// 0x04010700
+static const Vtx mario_mustache_cap_on_dl_vertex_group2[] = {
+    {{{    48,     94,    -75}, 0, {   856,    608}, {0xd7, 0x60, 0xb9, 0xff}}},
+    {{{    77,    108,    -33}, 0, {   362,    344}, {0x0e, 0x16, 0x84, 0xff}}},
+    {{{    92,     88,    -83}, 0, {   922,     -4}, {0x23, 0x59, 0xad, 0xff}}},
+    {{{    97,    103,    -24}, 0, {   274,    100}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{    44,     44,    -96}, 0, {  1250,    518}, {0xda, 0x21, 0x8c, 0xff}}},
+};
+
+// 0x04010750
+static const Vtx mario_face_cap_dl_vertex_group1[] = {
+    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
+    {{{   122,   -139,    -48}, 0, {     0,      0}, {0x28, 0x94, 0xcd, 0xff}}},
+    {{{   131,    -56,   -123}, 0, {     0,      0}, {0xde, 0xd4, 0x8f, 0xff}}},
+    {{{   187,     -6,   -133}, 0, {     0,      0}, {0x1e, 0x04, 0x85, 0xff}}},
+    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+    {{{    77,   -138,    -50}, 0, {     0,      0}, {0xbc, 0x9e, 0xd8, 0xff}}},
+    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
+    {{{   122,   -139,     49}, 0, {     0,      0}, {0x2d, 0x8f, 0x22, 0xff}}},
+    {{{    77,   -138,     51}, 0, {     0,      0}, {0xc1, 0xa4, 0x3c, 0xff}}},
+    {{{    64,   -103,     52}, 0, {     0,      0}, {0xc9, 0x9a, 0x31, 0xff}}},
+    {{{   131,    -56,    124}, 0, {     0,      0}, {0xdf, 0xd3, 0x71, 0xff}}},
+    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
+    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+    {{{   187,     -6,    134}, 0, {     0,      0}, {0x1f, 0x04, 0x7a, 0xff}}},
+    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
+};
+
+// 0x04010850
+static const Vtx mario_face_cap_dl_vertex_group2[] = {
+    {{{   153,     33,    -94}, 0, {     0,      0}, {0x03, 0x46, 0x97, 0xff}}},
+    {{{   187,     -6,   -133}, 0, {     0,      0}, {0x1e, 0x04, 0x85, 0xff}}},
+    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
+    {{{   175,     91,    -38}, 0, {     0,      0}, {0xc6, 0x6d, 0xe7, 0xff}}},
+    {{{   173,    132,    -65}, 0, {     0,      0}, {0xda, 0x5a, 0xb0, 0xff}}},
+    {{{   195,     93,    -31}, 0, {     0,      0}, {0x51, 0x54, 0xcf, 0xff}}},
+    {{{   252,     62,    -69}, 0, {     0,      0}, {0x39, 0x4a, 0xab, 0xff}}},
+    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
+    {{{   271,      0,    -41}, 0, {     0,      0}, {0x6e, 0xcf, 0xdc, 0xff}}},
+    {{{   187,     -6,    134}, 0, {     0,      0}, {0x1f, 0x04, 0x7a, 0xff}}},
+    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
+    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
+    {{{   252,     62,     70}, 0, {     0,      0}, {0x39, 0x4a, 0x55, 0xff}}},
+    {{{   271,      0,     42}, 0, {     0,      0}, {0x71, 0xdc, 0x2b, 0xff}}},
+    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
+};
+
+// 0x04010940
+static const Vtx mario_face_cap_dl_vertex_group3[] = {
+    {{{   195,     93,     32}, 0, {     0,      0}, {0x51, 0x54, 0x30, 0xff}}},
+    {{{   173,    132,     66}, 0, {     0,      0}, {0xda, 0x5a, 0x50, 0xff}}},
+    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
+    {{{   175,     91,     39}, 0, {     0,      0}, {0xc6, 0x6d, 0x19, 0xff}}},
+    {{{   164,    -89,    -74}, 0, {     0,      0}, {0x51, 0xa9, 0xd5, 0xff}}},
+    {{{   271,      0,    -41}, 0, {     0,      0}, {0x6e, 0xcf, 0xdc, 0xff}}},
+    {{{   164,    -89,     75}, 0, {     0,      0}, {0x4e, 0xa6, 0x2b, 0xff}}},
+    {{{   271,      0,     42}, 0, {     0,      0}, {0x71, 0xdc, 0x2b, 0xff}}},
+    {{{   252,     62,    -69}, 0, {     0,      0}, {0x39, 0x4a, 0xab, 0xff}}},
+    {{{   272,     85,      0}, 0, {     0,      0}, {0x5f, 0x54, 0x00, 0xff}}},
+    {{{   182,    155,      0}, 0, {     0,      0}, {0xed, 0x7d, 0x00, 0xff}}},
+    {{{   195,     93,    -31}, 0, {     0,      0}, {0x51, 0x54, 0xcf, 0xff}}},
+    {{{   175,     91,    -38}, 0, {     0,      0}, {0xc6, 0x6d, 0xe7, 0xff}}},
+    {{{   173,    132,    -65}, 0, {     0,      0}, {0xda, 0x5a, 0xb0, 0xff}}},
+    {{{   252,     62,     70}, 0, {     0,      0}, {0x39, 0x4a, 0x55, 0xff}}},
+};
+
+// 0x04010A30
+static const Vtx mario_face_part_cap_on_dl_vertex_group1[] = {
+    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+    {{{    27,    100,    -29}, 0, {     0,      0}, {0xb1, 0x60, 0xea, 0xff}}},
+    {{{    27,    100,     30}, 0, {     0,      0}, {0xb1, 0x60, 0x16, 0xff}}},
+    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
+    {{{     3,     54,     52}, 0, {     0,      0}, {0x95, 0x1d, 0x3c, 0xff}}},
+    {{{     3,     54,    -51}, 0, {     0,      0}, {0x95, 0x1d, 0xc4, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
+    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
+    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+    {{{   102,    -33,    135}, 0, {     0,      0}, {0x30, 0x18, 0x72, 0xff}}},
+};
+
+// 0x04010B20
+static const Vtx mario_face_part_cap_on_dl_vertex_group2[] = {
+    {{{   102,    -33,   -134}, 0, {     0,      0}, {0x32, 0x19, 0x8f, 0xff}}},
+    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xed, 0x24, 0x88, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
+    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+    {{{   120,    -11,    111}, 0, {     0,      0}, {0xed, 0x24, 0x78, 0xff}}},
+    {{{    85,    -23,    111}, 0, {     0,      0}, {0x04, 0x58, 0x5a, 0xff}}},
+    {{{   102,    -33,    135}, 0, {     0,      0}, {0x30, 0x18, 0x72, 0xff}}},
+    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
+    {{{    85,    -23,   -110}, 0, {     0,      0}, {0x06, 0x59, 0xa6, 0xff}}},
+    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+};
+
+// 0x04010C20
+static const Vtx mario_face_part_cap_on_dl_vertex_group3[] = {
+    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+    {{{    52,    111,     31}, 0, {     0,      0}, {0xa8, 0x33, 0x4b, 0xff}}},
+    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
+    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+};
+
+// 0x04010D10
+static const Vtx mario_face_part_cap_on_dl_vertex_group4[] = {
+    {{{    92,     88,     84}, 0, {     0,      0}, {0x23, 0x59, 0x53, 0xff}}},
+    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
+    {{{    97,    103,     25}, 0, {     0,      0}, {0x40, 0x5a, 0x3d, 0xff}}},
+    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
+    {{{   102,    129,     41}, 0, {     0,      0}, {0x45, 0xd6, 0x61, 0xff}}},
+    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+    {{{   108,    105,      0}, 0, {     0,      0}, {0x69, 0x46, 0x00, 0xff}}},
+    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
+    {{{   104,    162,     41}, 0, {     0,      0}, {0x52, 0x27, 0x58, 0xff}}},
+    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+    {{{    75,    130,     46}, 0, {     0,      0}, {0x00, 0xec, 0x7d, 0xff}}},
+    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
+    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
+    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+};
+
+// 0x04010E10
+static const Vtx mario_face_part_cap_on_dl_vertex_group5[] = {
+    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
+    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+    {{{    75,    130,     46}, 0, {     0,      0}, {0x00, 0xec, 0x7d, 0xff}}},
+    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
+    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
+    {{{   153,     33,     95}, 0, {     0,      0}, {0x04, 0x46, 0x69, 0xff}}},
+    {{{   144,     83,     67}, 0, {     0,      0}, {0x19, 0x5b, 0x53, 0xff}}},
+    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
+    {{{    92,     88,     84}, 0, {     0,      0}, {0x23, 0x59, 0x53, 0xff}}},
+    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+};
+
+// 0x04010F00
+static const Vtx mario_face_part_cap_on_dl_vertex_group6[] = {
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{   144,     83,    -66}, 0, {     0,      0}, {0x19, 0x5b, 0xad, 0xff}}},
+    {{{   153,     33,    -94}, 0, {     0,      0}, {0x03, 0x46, 0x97, 0xff}}},
+    {{{    96,     49,    -93}, 0, {     0,      0}, {0x11, 0x27, 0x89, 0xff}}},
+    {{{    92,     88,    -83}, 0, {     0,      0}, {0x23, 0x59, 0xad, 0xff}}},
+    {{{   104,     87,    -69}, 0, {     0,      0}, {0x30, 0x5c, 0xb7, 0xff}}},
+    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{    75,    130,    -45}, 0, {     0,      0}, {0x00, 0xec, 0x83, 0xff}}},
+    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
+    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
+    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+};
+
+// 0x04011000
+static const Vtx mario_face_part_cap_on_dl_vertex_group7[] = {
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
+    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
+    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
+    {{{    75,    130,    -45}, 0, {     0,      0}, {0x00, 0xec, 0x83, 0xff}}},
+    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
+    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
+    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+};
+
+// 0x040110D0
+static const Vtx mario_face_back_hair_cap_on_dl_vertex_group1[] = {
+    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+    {{{    36,   -116,    -35}, 0, {     0,      0}, {0xfb, 0x8e, 0x37, 0xff}}},
+    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
+    {{{    31,    -85,     87}, 0, {     0,      0}, {0xdb, 0xfd, 0x79, 0xff}}},
+    {{{    35,   -120,     68}, 0, {     0,      0}, {0xda, 0x94, 0x35, 0xff}}},
+    {{{    58,   -114,     60}, 0, {     0,      0}, {0x57, 0xb4, 0x32, 0xff}}},
+    {{{    64,   -103,     52}, 0, {     0,      0}, {0xc9, 0x9a, 0x31, 0xff}}},
+    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+    {{{    91,    -54,     86}, 0, {     0,      0}, {0xd9, 0xaf, 0x59, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
+    {{{    58,   -114,    -59}, 0, {     0,      0}, {0x57, 0xb4, 0xce, 0xff}}},
+    {{{    31,    -85,    -86}, 0, {     0,      0}, {0xdb, 0xfd, 0x87, 0xff}}},
+    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+};
+
+// 0x040111D0
+static const Vtx mario_face_back_hair_cap_on_dl_vertex_group2[] = {
+    {{{    31,    -85,    -86}, 0, {     0,      0}, {0xdb, 0xfd, 0x87, 0xff}}},
+    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
+    {{{     9,    -88,    -58}, 0, {     0,      0}, {0x87, 0xdf, 0xf5, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xd9, 0xb0, 0xa7, 0xff}}},
+    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xde, 0x94, 0xc7, 0xff}}},
+    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    36,   -116,    -35}, 0, {     0,      0}, {0xfb, 0x8e, 0x37, 0xff}}},
+    {{{    35,   -120,     68}, 0, {     0,      0}, {0xda, 0x94, 0x35, 0xff}}},
+    {{{    31,    -85,     87}, 0, {     0,      0}, {0xdb, 0xfd, 0x79, 0xff}}},
+};
+
+// 0x040112B0 - 0x040112E8
+const Gfx mario_m_logo_dl[] = {
+    gsSPVertex(mario_m_logo_dl_vertex, 7, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 2,  3,  0, 0x0,  3,  5,  0, 0x0),
+    gsSP1Triangle( 4,  6,  5, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040112E8 - 0x04011350
+const Gfx mario_eyes_cap_on_dl[] = {
+    gsSPVertex(mario_eyes_cap_on_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 3,  0,  4, 0x0,  6,  3,  5, 0x0),
+    gsSP2Triangles( 3,  1,  0, 0x0,  4,  0,  7, 0x0),
+    gsSP2Triangles( 5,  4,  8, 0x0,  2,  9, 10, 0x0),
+    gsSP2Triangles(10,  7,  2, 0x0, 11,  7, 10, 0x0),
+    gsSP1Triangle( 7,  0,  2, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04011350 - 0x040113A0
+const Gfx mario_hair_sideburn_cap_on_dl[] = {
+    gsSPVertex(mario_hair_sideburn_cap_on_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+    gsSP2Triangles( 4,  5,  1, 0x0,  3,  1,  0, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9,  6, 0x0),
+    gsSP2Triangles( 9, 10,  6, 0x0, 11,  6, 10, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040113A0 - 0x04011438
+const Gfx mario_mustache_cap_on_dl[] = {
+    gsSPVertex(mario_mustache_cap_on_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
+    gsSP2Triangles( 0,  4,  3, 0x0,  5,  3,  4, 0x0),
+    gsSP2Triangles( 5,  4,  6, 0x0,  7,  3,  8, 0x0),
+    gsSP2Triangles( 8,  3,  5, 0x0,  3,  7,  1, 0x0),
+    gsSP2Triangles( 9, 10, 11, 0x0, 12, 10, 13, 0x0),
+    gsSP2Triangles(11, 10, 12, 0x0, 10,  9, 14, 0x0),
+    gsSP1Triangle(15,  9, 11, 0x0),
+    gsSPVertex(mario_mustache_cap_on_dl_vertex_group2, 5, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP1Triangle( 2,  4,  0, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04011438 - 0x040116F8
+const Gfx mario_face_part_cap_on_dl[] = {
+    gsSPVertex(mario_face_part_cap_on_dl_vertex_group1, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 3,  4,  2, 0x0,  1,  5,  3, 0x0),
+    gsSP2Triangles( 6,  7,  3, 0x0,  7,  4,  3, 0x0),
+    gsSP2Triangles( 6,  3,  5, 0x0,  4,  7,  8, 0x0),
+    gsSP2Triangles( 9,  4,  8, 0x0, 10,  6,  5, 0x0),
+    gsSP2Triangles(10,  5, 11, 0x0, 12, 13, 14, 0x0),
+    gsSPVertex(mario_face_part_cap_on_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  5,  6,  8, 0x0),
+    gsSP2Triangles( 3,  8,  7, 0x0,  9,  3,  7, 0x0),
+    gsSP2Triangles( 3,  9,  4, 0x0, 10, 11, 12, 0x0),
+    gsSP2Triangles( 0, 10,  1, 0x0, 10,  0, 11, 0x0),
+    gsSP2Triangles(11,  0,  2, 0x0, 13, 14, 15, 0x0),
+    gsSPVertex(mario_face_part_cap_on_dl_vertex_group3, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  3,  0,  7, 0x0),
+    gsSP2Triangles( 8,  9, 10, 0x0, 11,  9,  8, 0x0),
+    gsSP2Triangles(12, 13,  8, 0x0,  8, 13, 11, 0x0),
+    gsSP1Triangle( 9, 11, 14, 0x0),
+    gsSPVertex(mario_face_part_cap_on_dl_vertex_group4, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  2, 0x0),
+    gsSP2Triangles( 5,  2,  4, 0x0,  2,  6,  3, 0x0),
+    gsSP2Triangles( 3,  6,  7, 0x0,  8,  9,  3, 0x0),
+    gsSP2Triangles( 9,  4,  3, 0x0,  7, 10,  3, 0x0),
+    gsSP2Triangles( 3, 10,  8, 0x0, 11,  4,  9, 0x0),
+    gsSP2Triangles(12, 11,  9, 0x0, 13,  9,  8, 0x0),
+    gsSP2Triangles( 9, 13, 12, 0x0,  4, 11,  5, 0x0),
+    gsSP1Triangle(14, 15, 11, 0x0),
+    gsSPVertex(mario_face_part_cap_on_dl_vertex_group5, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+    gsSP2Triangles( 1,  5,  6, 0x0,  1,  3,  5, 0x0),
+    gsSP2Triangles( 2,  1,  6, 0x0,  2,  6,  7, 0x0),
+    gsSP2Triangles( 8,  9, 10, 0x0,  6,  5, 11, 0x0),
+    gsSP2Triangles(12, 13,  8, 0x0, 10, 12,  8, 0x0),
+    gsSP1Triangle(14,  8, 13, 0x0),
+    gsSPVertex(mario_face_part_cap_on_dl_vertex_group6, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 5,  6,  7, 0x0,  6,  5,  8, 0x0),
+    gsSP2Triangles( 5,  7,  3, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles( 6, 12,  7, 0x0, 13, 10,  9, 0x0),
+    gsSP2Triangles(14, 13,  9, 0x0, 15, 10, 13, 0x0),
+    gsSPVertex(mario_face_part_cap_on_dl_vertex_group7, 13, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 1,  5,  3, 0x0,  2,  1,  4, 0x0),
+    gsSP2Triangles( 5,  6,  7, 0x0,  7,  6,  8, 0x0),
+    gsSP2Triangles( 7,  9,  3, 0x0,  5,  7,  3, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 12,  6, 10, 0x0),
+    gsSP1Triangle(12,  8,  6, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040116F8 - 0x04011870
+const Gfx mario_face_cap_dl[] = {
+    gsSPVertex(mario_face_cap_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
+    gsSP2Triangles( 4,  2,  5, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 2,  1,  6, 0x0,  6,  7,  2, 0x0),
+    gsSP2Triangles( 5,  2,  7, 0x0,  6,  1,  8, 0x0),
+    gsSP2Triangles( 8,  1,  0, 0x0,  6,  8,  9, 0x0),
+    gsSP2Triangles(10,  7,  6, 0x0,  9, 10,  6, 0x0),
+    gsSP2Triangles(11, 10,  9, 0x0,  9,  8, 11, 0x0),
+    gsSP2Triangles(11,  8, 12, 0x0,  0, 12,  8, 0x0),
+    gsSP2Triangles(13, 10, 11, 0x0, 11, 12, 14, 0x0),
+    gsSP2Triangles(15, 11, 14, 0x0, 13, 11, 15, 0x0),
+    gsSPVertex(mario_face_cap_dl_vertex_group2, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+    gsSP2Triangles( 4,  5,  0, 0x0,  0,  6,  1, 0x0),
+    gsSP2Triangles( 7,  1,  8, 0x0,  8,  1,  6, 0x0),
+    gsSP2Triangles( 9, 10, 11, 0x0,  9, 12, 10, 0x0),
+    gsSP2Triangles(12,  9, 13, 0x0, 13,  9, 14, 0x0),
+    gsSPVertex(mario_face_cap_dl_vertex_group3, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
+    gsSP2Triangles( 8,  9,  5, 0x0,  0, 10,  1, 0x0),
+    gsSP2Triangles( 1, 10,  3, 0x0, 11, 10,  0, 0x0),
+    gsSP2Triangles(12,  3, 10, 0x0, 12, 10, 13, 0x0),
+    gsSP2Triangles(13, 10, 11, 0x0,  5,  9,  7, 0x0),
+    gsSP1Triangle( 7,  9, 14, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04011870 - 0x04011960
+const Gfx mario_face_back_hair_cap_on_dl[] = {
+    gsSPVertex(mario_face_back_hair_cap_on_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 5,  6,  7, 0x0,  5,  8,  6, 0x0),
+    gsSP2Triangles( 5,  4,  8, 0x0,  7,  3,  5, 0x0),
+    gsSP2Triangles( 0,  2,  6, 0x0,  6,  9,  7, 0x0),
+    gsSP2Triangles( 0,  6,  8, 0x0,  3,  7, 10, 0x0),
+    gsSP2Triangles( 1, 11, 12, 0x0, 12, 13, 14, 0x0),
+    gsSP2Triangles(11, 13, 12, 0x0,  1, 12,  2, 0x0),
+    gsSP2Triangles(14,  2, 12, 0x0, 15, 14, 13, 0x0),
+    gsSPVertex(mario_face_back_hair_cap_on_dl_vertex_group2, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  7,  3,  2, 0x0),
+    gsSP2Triangles( 7,  8,  9, 0x0,  9, 10,  7, 0x0),
+    gsSP2Triangles( 2,  1, 11, 0x0,  2, 11,  7, 0x0),
+    gsSP2Triangles( 9, 12, 13, 0x0, 10,  9, 13, 0x0),
+    gsSP1Triangle( 8, 12,  9, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04011960 - 0x040119A0
+const Gfx mario_face_cap_on_dl[] = {
+    gsSPDisplayList(mario_face_part_cap_on_dl),
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_face_cap_dl),
+    gsSPLight(&mario_brown2_lights_group.l, 1),
+    gsSPLight(&mario_brown2_lights_group.a, 2),
+    gsSPDisplayList(mario_face_back_hair_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040119A0 - 0x04011A90
+const Gfx mario_cap_on_eyes_front[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04011A90 - 0x04011B80
+const Gfx mario_cap_on_eyes_half_closed[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04011B80 - 0x04011C70
+const Gfx mario_cap_on_eyes_closed[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04011C70 - 0x04011D60
+const Gfx mario_cap_on_eyes_right[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04011D60 - 0x04011E50
+const Gfx mario_cap_on_eyes_left[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04011E50 - 0x04011F40
+const Gfx mario_cap_on_eyes_up[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04011F40 - 0x04012030
+const Gfx mario_cap_on_eyes_down[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04012030 - 0x04012120
+const Gfx mario_cap_on_eyes_dead[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04012120 - 0x04012160
+const Gfx mario_metal_cap_on_shared_dl[] = {
+    gsSPDisplayList(mario_m_logo_dl),
+    gsSPDisplayList(mario_eyes_cap_on_dl),
+    gsSPDisplayList(mario_hair_sideburn_cap_on_dl),
+    gsSPDisplayList(mario_mustache_cap_on_dl),
+    gsSPDisplayList(mario_face_part_cap_on_dl),
+    gsSPDisplayList(mario_face_cap_dl),
+    gsSPDisplayList(mario_face_back_hair_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// Unreferenced light group
+UNUSED static const Lights1 mario_lights_unused1 = gdSPDefLights1(
+    0x3f, 0x30, 0x1e,
+    0xfe, 0xc1, 0x79, 0x28, 0x28, 0x28
+);
+
+// Unreferenced light group
+UNUSED static const Lights1 mario_lights_unused2 = gdSPDefLights1(
+    0x1c, 0x01, 0x00,
+    0x73, 0x06, 0x00, 0x28, 0x28, 0x28
+);
+
+// 0x04012190
+static const Vtx mario_eyes_cap_off_dl_vertex[] = {
+    {{{   104,     87,    -69}, 0, {  -160,    898}, {0x30, 0x5c, 0xb7, 0xff}}},
+    {{{    97,    103,    -24}, 0, {   256,    970}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{   144,     83,    -66}, 0, {  -146,    460}, {0x19, 0x5b, 0xad, 0xff}}},
+    {{{   153,     33,     95}, 0, {  1362,    296}, {0x05, 0x38, 0x71, 0xff}}},
+    {{{   175,     91,     39}, 0, {   842,    112}, {0x01, 0x75, 0x2f, 0xff}}},
+    {{{   144,     83,     67}, 0, {  1108,    428}, {0x19, 0x5b, 0x53, 0xff}}},
+    {{{   145,    101,      0}, 0, {   480,    446}, {0x13, 0x7d, 0x00, 0xff}}},
+    {{{    97,    103,     25}, 0, {   724,    958}, {0x40, 0x5a, 0x3d, 0xff}}},
+    {{{   175,     91,    -38}, 0, {   106,    130}, {0xf5, 0x73, 0xcc, 0xff}}},
+    {{{   104,     87,     70}, 0, {  1138,    864}, {0x30, 0x5c, 0x49, 0xff}}},
+    {{{   153,     33,    -94}, 0, {  -404,    342}, {0xfe, 0x36, 0x8e, 0xff}}},
+    {{{   108,    105,      0}, 0, {   488,    854}, {0x69, 0x46, 0x00, 0xff}}},
+};
+
+// 0x04012250
+static const Vtx mario_hair_sideburn_cap_off_dl_vertex[] = {
+    {{{    42,      0,    103}, 0, {   968,   1192}, {0xc3, 0x05, 0x6e, 0xff}}},
+    {{{    85,    -23,    111}, 0, {  1238,    518}, {0x04, 0x58, 0x5a, 0xff}}},
+    {{{    96,     49,     94}, 0, {   -74,    726}, {0x10, 0x28, 0x77, 0xff}}},
+    {{{    44,     44,     97}, 0, {   196,   1366}, {0xda, 0x21, 0x74, 0xff}}},
+    {{{   153,     33,     95}, 0, {    22,    -68}, {0x05, 0x38, 0x71, 0xff}}},
+    {{{   120,    -11,    111}, 0, {   922,    122}, {0xff, 0x13, 0x7d, 0xff}}},
+    {{{    42,      0,   -102}, 0, {   842,   1210}, {0xc3, 0x05, 0x92, 0xff}}},
+    {{{    44,     44,    -96}, 0, {   118,   1334}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{    96,     49,    -93}, 0, {   -70,    700}, {0x11, 0x27, 0x89, 0xff}}},
+    {{{    85,    -23,   -110}, 0, {  1150,    582}, {0x06, 0x59, 0xa6, 0xff}}},
+    {{{   120,    -12,   -109}, 0, {   916,    184}, {0xff, 0x13, 0x83, 0xff}}},
+    {{{   153,     33,    -94}, 0, {    90,    -58}, {0xfe, 0x36, 0x8e, 0xff}}},
+};
+
+// 0x04012310
+static const Vtx mario_mustache_cap_off_dl_vertex_group1[] = {
+    {{{    92,     88,    -83}, 0, {   992,    -10}, {0x23, 0x59, 0xad, 0xff}}},
+    {{{    77,    108,    -33}, 0, {   360,    296}, {0x0e, 0x16, 0x84, 0xff}}},
+    {{{    97,    103,    -24}, 0, {   298,     20}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{    48,     94,    -75}, 0, {   844,    640}, {0xd7, 0x60, 0xb9, 0xff}}},
+    {{{    44,     44,    -96}, 0, {  1272,    592}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{    52,    111,    -30}, 0, {   294,    656}, {0xa8, 0x32, 0xb5, 0xff}}},
+    {{{    92,     88,     84}, 0, {   948,     -8}, {0x23, 0x59, 0x53, 0xff}}},
+    {{{    77,    108,     34}, 0, {   330,    316}, {0x0e, 0x16, 0x7c, 0xff}}},
+    {{{    48,     94,     76}, 0, {   848,    630}, {0xd7, 0x60, 0x47, 0xff}}},
+    {{{    97,    103,     25}, 0, {   248,     50}, {0x40, 0x5a, 0x3d, 0xff}}},
+    {{{    52,    111,     31}, 0, {   292,    670}, {0xa8, 0x33, 0x4b, 0xff}}},
+    {{{    44,     44,     97}, 0, {  1276,    566}, {0xda, 0x21, 0x74, 0xff}}},
+    {{{     3,     54,     52}, 0, {   768,   1210}, {0x95, 0x1d, 0x3c, 0xff}}},
+    {{{    27,    100,     30}, 0, {   336,   1006}, {0xb1, 0x60, 0x16, 0xff}}},
+    {{{     3,     54,    -51}, 0, {   720,   1228}, {0x95, 0x1d, 0xc4, 0xff}}},
+    {{{    41,    109,      0}, 0, {   -30,    876}, {0x95, 0x44, 0x00, 0xff}}},
+};
+
+// 0x04012410
+static const Vtx mario_mustache_cap_off_dl_vertex_group2[] = {
+    {{{    41,    109,      0}, 0, {   -38,    852}, {0x95, 0x44, 0x00, 0xff}}},
+    {{{    52,    111,    -30}, 0, {   294,    656}, {0xa8, 0x32, 0xb5, 0xff}}},
+    {{{    27,    100,    -29}, 0, {   310,   1002}, {0xb1, 0x60, 0xea, 0xff}}},
+    {{{    48,     94,    -75}, 0, {   844,    640}, {0xd7, 0x60, 0xb9, 0xff}}},
+    {{{     3,     54,    -51}, 0, {   720,   1228}, {0x95, 0x1d, 0xc4, 0xff}}},
+};
+
+// 0x04012460
+static const Vtx mario_face_part_cap_off_dl_vertex_group1[] = {
+    {{{    97,    103,     25}, 0, {     0,      0}, {0x40, 0x5a, 0x3d, 0xff}}},
+    {{{   108,    105,      0}, 0, {     0,      0}, {0x69, 0x46, 0x00, 0xff}}},
+    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
+    {{{    92,     88,    -83}, 0, {     0,      0}, {0x23, 0x59, 0xad, 0xff}}},
+    {{{    97,    103,    -24}, 0, {     0,      0}, {0x40, 0x5a, 0xc3, 0xff}}},
+    {{{   104,     87,    -69}, 0, {     0,      0}, {0x30, 0x5c, 0xb7, 0xff}}},
+    {{{    96,     49,    -93}, 0, {     0,      0}, {0x11, 0x27, 0x89, 0xff}}},
+    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
+    {{{   144,     83,    -66}, 0, {     0,      0}, {0x19, 0x5b, 0xad, 0xff}}},
+    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
+    {{{    92,     88,     84}, 0, {     0,      0}, {0x23, 0x59, 0x53, 0xff}}},
+    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
+};
+
+// 0x04012550
+static const Vtx mario_face_part_cap_off_dl_vertex_group2[] = {
+    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
+    {{{     3,     54,     52}, 0, {     0,      0}, {0x95, 0x1d, 0x3c, 0xff}}},
+    {{{    27,    100,     30}, 0, {     0,      0}, {0xb1, 0x60, 0x16, 0xff}}},
+    {{{   144,     83,     67}, 0, {     0,      0}, {0x19, 0x5b, 0x53, 0xff}}},
+    {{{   104,     87,     70}, 0, {     0,      0}, {0x30, 0x5c, 0x49, 0xff}}},
+    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
+    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
+    {{{   102,    129,     41}, 0, {     0,      0}, {0x45, 0xd6, 0x61, 0xff}}},
+    {{{    97,    103,     25}, 0, {     0,      0}, {0x40, 0x5a, 0x3d, 0xff}}},
+    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+    {{{    42,      0,    103}, 0, {     0,      0}, {0xc3, 0x05, 0x6e, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
+    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+    {{{    85,    -23,    111}, 0, {     0,      0}, {0x04, 0x58, 0x5a, 0xff}}},
+};
+
+// 0x04012650
+static const Vtx mario_face_part_cap_off_dl_vertex_group3[] = {
+    {{{    96,     49,     94}, 0, {     0,      0}, {0x10, 0x28, 0x77, 0xff}}},
+    {{{   153,     33,     95}, 0, {     0,      0}, {0x05, 0x38, 0x71, 0xff}}},
+    {{{   144,     83,     67}, 0, {     0,      0}, {0x19, 0x5b, 0x53, 0xff}}},
+    {{{    64,    -25,    135}, 0, {     0,      0}, {0xcc, 0xe5, 0x70, 0xff}}},
+    {{{    91,    -54,     86}, 0, {     0,      0}, {0xe9, 0xa9, 0x59, 0xff}}},
+    {{{   102,    -33,    135}, 0, {     0,      0}, {0x30, 0x18, 0x72, 0xff}}},
+    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+    {{{    85,    -23,    111}, 0, {     0,      0}, {0x04, 0x58, 0x5a, 0xff}}},
+    {{{   120,    -11,    111}, 0, {     0,      0}, {0xff, 0x13, 0x7d, 0xff}}},
+    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
+    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+    {{{    85,    -23,   -110}, 0, {     0,      0}, {0x06, 0x59, 0xa6, 0xff}}},
+    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+};
+
+// 0x04012740
+static const Vtx mario_face_part_cap_off_dl_vertex_group4[] = {
+    {{{    27,    100,     30}, 0, {     0,      0}, {0xb1, 0x60, 0x16, 0xff}}},
+    {{{    27,    100,    -29}, 0, {     0,      0}, {0xb1, 0x60, 0xea, 0xff}}},
+    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
+    {{{     3,     54,    -51}, 0, {     0,      0}, {0x95, 0x1d, 0xc4, 0xff}}},
+    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+    {{{   144,     83,    -66}, 0, {     0,      0}, {0x19, 0x5b, 0xad, 0xff}}},
+    {{{   153,     33,    -94}, 0, {     0,      0}, {0xfe, 0x36, 0x8e, 0xff}}},
+    {{{    96,     49,    -93}, 0, {     0,      0}, {0x11, 0x27, 0x89, 0xff}}},
+    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+    {{{    44,     44,    -96}, 0, {     0,      0}, {0xda, 0x21, 0x8c, 0xff}}},
+    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+    {{{   102,    -33,   -134}, 0, {     0,      0}, {0x32, 0x19, 0x8f, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
+    {{{    85,    -23,   -110}, 0, {     0,      0}, {0x06, 0x59, 0xa6, 0xff}}},
+    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
+};
+
+// 0x04012830
+static const Vtx mario_face_part_cap_off_dl_vertex_group5[] = {
+    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+    {{{   102,    -33,   -134}, 0, {     0,      0}, {0x32, 0x19, 0x8f, 0xff}}},
+    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
+    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+    {{{    64,    -25,   -134}, 0, {     0,      0}, {0xcc, 0xe5, 0x90, 0xff}}},
+    {{{    42,      0,   -102}, 0, {     0,      0}, {0xc3, 0x05, 0x92, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{     3,     54,    -51}, 0, {     0,      0}, {0x95, 0x1d, 0xc4, 0xff}}},
+    {{{    -7,     62,      0}, 0, {     0,      0}, {0x85, 0x1d, 0x00, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
+    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
+    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+};
+
+// 0x04012930
+static const Vtx mario_face_part_cap_off_dl_vertex_group6[] = {
+    {{{   104,    162,     41}, 0, {     0,      0}, {0x52, 0x27, 0x58, 0xff}}},
+    {{{   101,    179,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+    {{{    78,    163,     46}, 0, {     0,      0}, {0x03, 0x55, 0x5d, 0xff}}},
+    {{{    52,    164,     41}, 0, {     0,      0}, {0xc8, 0x3d, 0x5f, 0xff}}},
+    {{{    75,    130,     46}, 0, {     0,      0}, {0x00, 0xec, 0x7d, 0xff}}},
+    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
+    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
+    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+    {{{    33,    165,      0}, 0, {     0,      0}, {0x8f, 0x38, 0x09, 0xff}}},
+    {{{   102,    129,     41}, 0, {     0,      0}, {0x45, 0xd6, 0x61, 0xff}}},
+    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
+};
+
+// 0x04012A30
+static const Vtx mario_face_part_cap_off_dl_vertex_group7[] = {
+    {{{    52,    111,     31}, 0, {     0,      0}, {0xa8, 0x33, 0x4b, 0xff}}},
+    {{{    47,    131,     41}, 0, {     0,      0}, {0xb0, 0xe4, 0x5e, 0xff}}},
+    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+    {{{    77,    108,     34}, 0, {     0,      0}, {0x0e, 0x16, 0x7c, 0xff}}},
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+    {{{    78,    163,    -45}, 0, {     0,      0}, {0x03, 0x54, 0xa2, 0xff}}},
+    {{{    75,    130,    -45}, 0, {     0,      0}, {0x00, 0xec, 0x83, 0xff}}},
+    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+    {{{    60,    181,      0}, 0, {     0,      0}, {0xea, 0x7c, 0x00, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    41,    109,      0}, 0, {     0,      0}, {0x95, 0x44, 0x00, 0xff}}},
+    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
+    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
+};
+
+// 0x04012B30
+static const Vtx mario_face_part_cap_off_dl_vertex_group8[] = {
+    {{{   102,    129,    -40}, 0, {     0,      0}, {0x50, 0xdc, 0xa6, 0xff}}},
+    {{{   104,    162,    -40}, 0, {     0,      0}, {0x44, 0x31, 0xa1, 0xff}}},
+    {{{   119,    161,      0}, 0, {     0,      0}, {0x79, 0x23, 0xf6, 0xff}}},
+    {{{   117,    128,      0}, 0, {     0,      0}, {0x7a, 0xe1, 0x06, 0xff}}},
+    {{{    32,    132,      0}, 0, {     0,      0}, {0x84, 0xe8, 0xf8, 0xff}}},
+    {{{    47,    131,    -40}, 0, {     0,      0}, {0xbc, 0xde, 0x9c, 0xff}}},
+    {{{    52,    111,    -30}, 0, {     0,      0}, {0xa8, 0x32, 0xb5, 0xff}}},
+    {{{    77,    108,    -33}, 0, {     0,      0}, {0x0e, 0x16, 0x84, 0xff}}},
+    {{{    52,    164,    -40}, 0, {     0,      0}, {0xb8, 0x34, 0xa6, 0xff}}},
+};
+
+// 0x04012BC0
+static const Vtx mario_face_hair_cap_off_dl_vertex_group1[] = {
+    {{{   153,     33,    -94}, 0, {     0,      0}, {0xfe, 0x36, 0x8e, 0xff}}},
+    {{{   200,     70,    -97}, 0, {     0,      0}, {0x07, 0x48, 0x99, 0xff}}},
+    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
+    {{{   153,     33,     95}, 0, {     0,      0}, {0x05, 0x38, 0x71, 0xff}}},
+    {{{   200,     75,     84}, 0, {     0,      0}, {0x10, 0x52, 0x5f, 0xff}}},
+    {{{   151,     72,     70}, 0, {     0,      0}, {0xe4, 0x5c, 0x51, 0xff}}},
+    {{{   120,    -11,    111}, 0, {     0,      0}, {0xff, 0x13, 0x7d, 0xff}}},
+    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
+    {{{   175,     91,     39}, 0, {     0,      0}, {0x01, 0x75, 0x2f, 0xff}}},
+    {{{   209,     86,     60}, 0, {     0,      0}, {0x38, 0x60, 0x3c, 0xff}}},
+    {{{   227,     35,     75}, 0, {     0,      0}, {0x6d, 0x12, 0x3d, 0xff}}},
+    {{{   175,     91,    -38}, 0, {     0,      0}, {0xf5, 0x73, 0xcc, 0xff}}},
+    {{{   151,     72,    -68}, 0, {     0,      0}, {0xd6, 0x5b, 0xb3, 0xff}}},
+    {{{   221,     35,    -73}, 0, {     0,      0}, {0x71, 0x03, 0xc8, 0xff}}},
+    {{{   211,     91,    -71}, 0, {     0,      0}, {0x31, 0x46, 0xa3, 0xff}}},
+    {{{   227,    -14,    -58}, 0, {     0,      0}, {0x72, 0xf1, 0xcc, 0xff}}},
+};
+
+// 0x04012CC0
+static const Vtx mario_face_hair_cap_off_dl_vertex_group2[] = {
+    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
+    {{{   153,     33,    -94}, 0, {     0,      0}, {0xfe, 0x36, 0x8e, 0xff}}},
+    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
+    {{{   227,    -14,     59}, 0, {     0,      0}, {0x72, 0xec, 0x32, 0xff}}},
+    {{{   241,    -34,      0}, 0, {     0,      0}, {0x7a, 0xe0, 0x00, 0xff}}},
+    {{{   237,     64,      0}, 0, {     0,      0}, {0x7e, 0xf9, 0xff, 0xff}}},
+    {{{   189,   -102,     73}, 0, {     0,      0}, {0x50, 0xbb, 0x44, 0xff}}},
+    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
+    {{{   227,     35,     75}, 0, {     0,      0}, {0x6d, 0x12, 0x3d, 0xff}}},
+    {{{   189,   -102,    -71}, 0, {     0,      0}, {0x50, 0xb9, 0xbd, 0xff}}},
+    {{{   227,    -14,    -58}, 0, {     0,      0}, {0x72, 0xf1, 0xcc, 0xff}}},
+    {{{   200,   -117,      0}, 0, {     0,      0}, {0x3f, 0x93, 0x00, 0xff}}},
+    {{{   221,     35,    -73}, 0, {     0,      0}, {0x71, 0x03, 0xc8, 0xff}}},
+    {{{   248,    104,    -43}, 0, {     0,      0}, {0x76, 0x2c, 0xf3, 0xff}}},
+    {{{   231,     81,     33}, 0, {     0,      0}, {0x71, 0x27, 0x2a, 0xff}}},
+};
+
+// 0x04012DB0
+static const Vtx mario_face_hair_cap_off_dl_vertex_group3[] = {
+    {{{   221,     35,    -73}, 0, {     0,      0}, {0x71, 0x03, 0xc8, 0xff}}},
+    {{{   211,     91,    -71}, 0, {     0,      0}, {0x31, 0x46, 0xa3, 0xff}}},
+    {{{   232,     69,    -34}, 0, {     0,      0}, {0x72, 0xe4, 0xd1, 0xff}}},
+    {{{   237,     64,      0}, 0, {     0,      0}, {0x7e, 0xf9, 0xff, 0xff}}},
+    {{{   175,     91,    -38}, 0, {     0,      0}, {0xf5, 0x73, 0xcc, 0xff}}},
+    {{{   201,    125,    -13}, 0, {     0,      0}, {0xe4, 0x7b, 0xfb, 0xff}}},
+    {{{   160,     96,      0}, 0, {     0,      0}, {0xb7, 0x67, 0xfe, 0xff}}},
+    {{{   189,   -102,    -71}, 0, {     0,      0}, {0x50, 0xb9, 0xbd, 0xff}}},
+    {{{   116,   -124,    -67}, 0, {     0,      0}, {0xfc, 0x8f, 0xc8, 0xff}}},
+    {{{   145,    -84,   -104}, 0, {     0,      0}, {0xef, 0xcf, 0x8d, 0xff}}},
+    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
+    {{{   200,   -117,      0}, 0, {     0,      0}, {0x3f, 0x93, 0x00, 0xff}}},
+    {{{   189,   -102,     73}, 0, {     0,      0}, {0x50, 0xbb, 0x44, 0xff}}},
+    {{{   116,   -126,     68}, 0, {     0,      0}, {0xfb, 0x8f, 0x38, 0xff}}},
+    {{{   119,   -134,      0}, 0, {     0,      0}, {0xe8, 0x84, 0xff, 0xff}}},
+    {{{   145,    -83,    105}, 0, {     0,      0}, {0xef, 0xd0, 0x73, 0xff}}},
+};
+
+// 0x04012EB0
+static const Vtx mario_face_hair_cap_off_dl_vertex_group4[] = {
+    {{{   145,    -83,    105}, 0, {     0,      0}, {0xef, 0xd0, 0x73, 0xff}}},
+    {{{   189,   -102,     73}, 0, {     0,      0}, {0x50, 0xbb, 0x44, 0xff}}},
+    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
+    {{{   201,    125,    -13}, 0, {     0,      0}, {0xe4, 0x7b, 0xfb, 0xff}}},
+    {{{   209,     86,     60}, 0, {     0,      0}, {0x38, 0x60, 0x3c, 0xff}}},
+    {{{   248,    104,    -43}, 0, {     0,      0}, {0x76, 0x2c, 0xf3, 0xff}}},
+    {{{   231,     81,     33}, 0, {     0,      0}, {0x71, 0x27, 0x2a, 0xff}}},
+    {{{   232,     69,    -34}, 0, {     0,      0}, {0x72, 0xe4, 0xd1, 0xff}}},
+    {{{   211,     91,    -71}, 0, {     0,      0}, {0x31, 0x46, 0xa3, 0xff}}},
+    {{{   237,     64,      0}, 0, {     0,      0}, {0x7e, 0xf9, 0xff, 0xff}}},
+    {{{   227,     35,     75}, 0, {     0,      0}, {0x6d, 0x12, 0x3d, 0xff}}},
+    {{{   175,     91,     39}, 0, {     0,      0}, {0x01, 0x75, 0x2f, 0xff}}},
+    {{{   160,     96,      0}, 0, {     0,      0}, {0xb7, 0x67, 0xfe, 0xff}}},
+    {{{    64,   -103,     52}, 0, {     0,      0}, {0xf3, 0x8b, 0x2e, 0xff}}},
+    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xf3, 0x8b, 0xd2, 0xff}}},
+    {{{   119,   -134,      0}, 0, {     0,      0}, {0xe8, 0x84, 0xff, 0xff}}},
+};
+
+// 0x04012FB0
+static const Vtx mario_face_hair_cap_off_dl_vertex_group5[] = {
+    {{{   145,    -83,    105}, 0, {     0,      0}, {0xef, 0xd0, 0x73, 0xff}}},
+    {{{   181,     -9,    116}, 0, {     0,      0}, {0x2d, 0x01, 0x76, 0xff}}},
+    {{{   120,    -11,    111}, 0, {     0,      0}, {0xff, 0x13, 0x7d, 0xff}}},
+    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xf3, 0x8b, 0xd2, 0xff}}},
+    {{{   116,   -124,    -67}, 0, {     0,      0}, {0xfc, 0x8f, 0xc8, 0xff}}},
+    {{{   119,   -134,      0}, 0, {     0,      0}, {0xe8, 0x84, 0xff, 0xff}}},
+    {{{   145,    -84,   -104}, 0, {     0,      0}, {0xef, 0xcf, 0x8d, 0xff}}},
+    {{{   182,     -9,   -115}, 0, {     0,      0}, {0x2f, 0xfe, 0x8b, 0xff}}},
+    {{{   120,    -12,   -109}, 0, {     0,      0}, {0xff, 0x13, 0x83, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
+    {{{    64,   -103,     52}, 0, {     0,      0}, {0xf3, 0x8b, 0x2e, 0xff}}},
+    {{{   116,   -126,     68}, 0, {     0,      0}, {0xfb, 0x8f, 0x38, 0xff}}},
+    {{{    91,    -54,     86}, 0, {     0,      0}, {0xe9, 0xa9, 0x59, 0xff}}},
+    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
+};
+
+// 0x040130B0
+static const Vtx mario_face_hair_cap_off_dl_vertex_group6[] = {
+    {{{    64,   -103,     52}, 0, {     0,      0}, {0xf3, 0x8b, 0x2e, 0xff}}},
+    {{{    91,    -54,     86}, 0, {     0,      0}, {0xe9, 0xa9, 0x59, 0xff}}},
+    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+    {{{    31,    -84,      0}, 0, {     0,      0}, {0xa0, 0xae, 0x00, 0xff}}},
+    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+    {{{    58,   -114,     60}, 0, {     0,      0}, {0x57, 0xb4, 0x32, 0xff}}},
+    {{{    36,   -116,    -35}, 0, {     0,      0}, {0xfb, 0x8e, 0x37, 0xff}}},
+    {{{    64,   -103,    -51}, 0, {     0,      0}, {0xf3, 0x8b, 0xd2, 0xff}}},
+    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+    {{{    91,    -54,    -85}, 0, {     0,      0}, {0xe8, 0xaa, 0xa7, 0xff}}},
+    {{{    58,   -114,    -59}, 0, {     0,      0}, {0x57, 0xb4, 0xce, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{     9,    -88,    -58}, 0, {     0,      0}, {0x87, 0xdf, 0xf5, 0xff}}},
+    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
+};
+
+// 0x040131B0
+static const Vtx mario_face_hair_cap_off_dl_vertex_group7[] = {
+    {{{    36,   -116,     36}, 0, {     0,      0}, {0xfb, 0x8e, 0xc9, 0xff}}},
+    {{{    35,   -120,     68}, 0, {     0,      0}, {0xda, 0x94, 0x35, 0xff}}},
+    {{{     9,    -88,     59}, 0, {     0,      0}, {0x87, 0xdf, 0x0b, 0xff}}},
+    {{{    58,   -114,     60}, 0, {     0,      0}, {0x57, 0xb4, 0x32, 0xff}}},
+    {{{    35,   -120,    -67}, 0, {     0,      0}, {0xda, 0x94, 0xcb, 0xff}}},
+    {{{    31,    -85,    -86}, 0, {     0,      0}, {0xdb, 0xfd, 0x87, 0xff}}},
+    {{{    58,   -114,    -59}, 0, {     0,      0}, {0x57, 0xb4, 0xce, 0xff}}},
+    {{{     9,    -88,    -58}, 0, {     0,      0}, {0x87, 0xdf, 0xf5, 0xff}}},
+    {{{    56,    -45,    -76}, 0, {     0,      0}, {0xe3, 0xca, 0x92, 0xff}}},
+    {{{    17,    -52,    -46}, 0, {     0,      0}, {0x89, 0xf8, 0xd7, 0xff}}},
+    {{{    31,    -85,     87}, 0, {     0,      0}, {0xdb, 0xfd, 0x79, 0xff}}},
+    {{{    56,    -45,     77}, 0, {     0,      0}, {0xe3, 0xca, 0x6e, 0xff}}},
+    {{{    17,    -52,     47}, 0, {     0,      0}, {0x89, 0xf8, 0x29, 0xff}}},
+};
+
+// 0x04013280
+static const Vtx mario_face_part_cap_off_dl_vertex_group9[] = {
+    {{{    44,     44,     97}, 0, {     0,      0}, {0xda, 0x21, 0x74, 0xff}}},
+    {{{    48,     94,     76}, 0, {     0,      0}, {0xd7, 0x60, 0x47, 0xff}}},
+    {{{     3,     54,     52}, 0, {     0,      0}, {0x95, 0x1d, 0x3c, 0xff}}},
+};
+
+// 0x040132B0 - 0x04013318
+const Gfx mario_eyes_cap_off_dl[] = {
+    gsSPVertex(mario_eyes_cap_off_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 4,  6,  7, 0x0,  8,  6,  4, 0x0),
+    gsSP2Triangles( 5,  4,  7, 0x0,  7,  9,  5, 0x0),
+    gsSP2Triangles( 2,  8, 10, 0x0,  1,  6,  8, 0x0),
+    gsSP2Triangles( 1,  8,  2, 0x0,  6, 11,  7, 0x0),
+    gsSP1Triangle( 1, 11,  6, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04013318 - 0x040133A8
+const Gfx mario_mustache_cap_off_dl[] = {
+    gsSPVertex(mario_mustache_cap_off_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+    gsSP2Triangles( 0,  4,  3, 0x0,  3,  5,  1, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  7,  6,  9, 0x0),
+    gsSP2Triangles( 7, 10,  8, 0x0,  8, 11,  6, 0x0),
+    gsSP2Triangles(12,  8, 13, 0x0, 13,  8, 10, 0x0),
+    gsSP2Triangles(14,  3,  4, 0x0, 13, 10, 15, 0x0),
+    gsSPVertex(mario_mustache_cap_off_dl_vertex_group2, 5, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+    gsSP1Triangle( 2,  3,  4, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040133A8 - 0x040133F8
+const Gfx mario_hair_sideburn_cap_off_dl[] = {
+    gsSPVertex(mario_hair_sideburn_cap_off_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 4,  2,  5, 0x0,  1,  5,  2, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9,  6, 0x0),
+    gsSP2Triangles( 9,  8, 10, 0x0, 10,  8, 11, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040133F8 - 0x040136D0
+const Gfx mario_face_part_cap_off_dl[] = {
+    gsSPVertex(mario_face_part_cap_off_dl_vertex_group1, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  3,  5, 0x0,  3,  6,  7, 0x0),
+    gsSP2Triangles( 4,  8,  2, 0x0,  8,  4,  9, 0x0),
+    gsSP2Triangles( 2,  1,  4, 0x0,  6,  5, 10, 0x0),
+    gsSP2Triangles(11, 12, 13, 0x0, 14, 13, 12, 0x0),
+    gsSP1Triangle(13, 14,  0, 0x0),
+    gsSPVertex(mario_face_part_cap_off_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9,  8,  7, 0x0),
+    gsSP2Triangles(10,  1, 11, 0x0,  1, 12, 11, 0x0),
+    gsSP2Triangles(12,  1,  0, 0x0, 13, 11, 14, 0x0),
+    gsSP2Triangles(12, 14, 11, 0x0, 11, 13, 15, 0x0),
+    gsSPVertex(mario_face_part_cap_off_dl_vertex_group3, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 3,  6,  4, 0x0,  3,  5,  7, 0x0),
+    gsSP2Triangles( 8,  7,  5, 0x0,  4,  8,  5, 0x0),
+    gsSP2Triangles( 9, 10, 11, 0x0, 12, 13, 14, 0x0),
+    gsSPVertex(mario_face_part_cap_off_dl_vertex_group4, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+    gsSP2Triangles( 4,  1,  0, 0x0,  5,  6,  7, 0x0),
+    gsSP2Triangles( 8,  3,  9, 0x0, 10, 11, 12, 0x0),
+    gsSP2Triangles(13, 11, 10, 0x0, 11, 13, 14, 0x0),
+    gsSPVertex(mario_face_part_cap_off_dl_vertex_group5, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  5, 0x0,  8,  7,  6, 0x0),
+    gsSP2Triangles( 8,  9, 10, 0x0,  8,  6,  9, 0x0),
+    gsSP2Triangles( 9, 11, 10, 0x0,  9, 12, 11, 0x0),
+    gsSP2Triangles( 0, 13,  1, 0x0, 13, 14,  1, 0x0),
+    gsSP1Triangle( 1, 14, 15, 0x0),
+    gsSPVertex(mario_face_part_cap_off_dl_vertex_group6, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  2, 0x0),
+    gsSP2Triangles( 2,  4,  0, 0x0,  1,  0,  5, 0x0),
+    gsSP2Triangles( 1,  6,  7, 0x0,  1,  5,  6, 0x0),
+    gsSP2Triangles( 7,  8,  1, 0x0,  3,  9,  4, 0x0),
+    gsSP2Triangles( 9,  3, 10, 0x0,  4, 11,  0, 0x0),
+    gsSP2Triangles(11,  4, 12, 0x0,  4,  9, 12, 0x0),
+    gsSP2Triangles(10, 13, 14, 0x0,  0, 11, 15, 0x0),
+    gsSP2Triangles( 5,  0, 15, 0x0, 14,  9, 10, 0x0),
+    gsSPVertex(mario_face_part_cap_off_dl_vertex_group7, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  6,  5,  7, 0x0),
+    gsSP2Triangles( 8,  5,  4, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles( 2, 12,  0, 0x0, 13,  4,  6, 0x0),
+    gsSP2Triangles( 6, 14, 15, 0x0,  6,  7, 14, 0x0),
+    gsSP1Triangle(13,  6, 15, 0x0),
+    gsSPVertex(mario_face_part_cap_off_dl_vertex_group8, 9, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  7,  6,  5, 0x0),
+    gsSP1Triangle( 8,  5,  4, 0x0),
+    gsSPVertex(mario_face_part_cap_off_dl_vertex_group9, 3, 0),
+    gsSP1Triangle( 0,  1,  2, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040136D0 - 0x040139C0
+const Gfx mario_face_hair_cap_off_dl[] = {
+    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 3,  6,  7, 0x0,  3,  7,  4, 0x0),
+    gsSP2Triangles( 8,  4,  9, 0x0,  7, 10,  4, 0x0),
+    gsSP2Triangles( 4, 10,  9, 0x0,  8,  5,  4, 0x0),
+    gsSP2Triangles(11,  1, 12, 0x0,  1,  0, 12, 0x0),
+    gsSP2Triangles( 1, 13,  2, 0x0,  1, 11, 14, 0x0),
+    gsSP2Triangles(13,  1, 14, 0x0, 15,  2, 13, 0x0),
+    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group2, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 4,  3,  6, 0x0,  3,  7,  6, 0x0),
+    gsSP2Triangles( 8,  7,  3, 0x0,  5,  8,  3, 0x0),
+    gsSP2Triangles( 9, 10,  4, 0x0, 11,  4,  6, 0x0),
+    gsSP2Triangles(11,  9,  4, 0x0, 10,  5,  4, 0x0),
+    gsSP2Triangles(10, 12,  5, 0x0,  5, 13, 14, 0x0),
+    gsSP2Triangles( 8,  5, 14, 0x0,  9,  2, 10, 0x0),
+    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group3, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 1,  4,  5, 0x0,  4,  6,  5, 0x0),
+    gsSP2Triangles( 7,  8,  9, 0x0, 10,  7,  9, 0x0),
+    gsSP2Triangles( 8,  7, 11, 0x0, 11, 12, 13, 0x0),
+    gsSP2Triangles(14, 11, 13, 0x0, 14,  8, 11, 0x0),
+    gsSP1Triangle(15, 13, 12, 0x0),
+    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group4, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 4,  6,  5, 0x0,  7,  8,  5, 0x0),
+    gsSP2Triangles( 8,  3,  5, 0x0,  9,  7,  5, 0x0),
+    gsSP2Triangles(10,  6,  4, 0x0,  4,  3, 11, 0x0),
+    gsSP2Triangles( 3, 12, 11, 0x0, 13, 14, 15, 0x0),
+    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group5, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  4,  3, 0x0,  7,  6,  8, 0x0),
+    gsSP2Triangles( 9,  6,  3, 0x0,  6,  9,  8, 0x0),
+    gsSP2Triangles(10, 11,  0, 0x0, 12,  0,  2, 0x0),
+    gsSP2Triangles(10,  0, 12, 0x0, 10,  5, 11, 0x0),
+    gsSP2Triangles(13, 14, 15, 0x0, 13,  3, 10, 0x0),
+    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group6, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+    gsSP2Triangles( 5,  0,  2, 0x0,  5,  4,  0, 0x0),
+    gsSP2Triangles( 3,  6,  7, 0x0,  8,  9,  7, 0x0),
+    gsSP2Triangles( 6, 10,  7, 0x0,  8,  7, 10, 0x0),
+    gsSP2Triangles( 3, 11, 12, 0x0, 13, 14,  3, 0x0),
+    gsSP2Triangles(12,  6,  3, 0x0,  6, 15, 10, 0x0),
+    gsSP1Triangle(12, 15,  6, 0x0),
+    gsSPVertex(mario_face_hair_cap_off_dl_vertex_group7, 13, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  5,  4,  7, 0x0),
+    gsSP2Triangles( 6,  5,  8, 0x0,  9,  8,  5, 0x0),
+    gsSP2Triangles( 5,  7,  9, 0x0, 10, 11, 12, 0x0),
+    gsSP2Triangles(11, 10,  3, 0x0, 12,  2, 10, 0x0),
+    gsSP2Triangles( 2,  1, 10, 0x0, 10,  1,  3, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040139C0 - 0x040139E8
+const Gfx mario_face_cap_off_dl[] = {
+    gsSPDisplayList(mario_face_part_cap_off_dl),
+    gsSPLight(&mario_brown2_lights_group.l, 1),
+    gsSPLight(&mario_brown2_lights_group.a, 2),
+    gsSPDisplayList(mario_face_hair_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040139E8 - 0x04013AB8
+const Gfx mario_cap_off_eyes_front[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04013AB8 - 0x04013B88
+const Gfx mario_cap_off_eyes_half_closed[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04013B88 - 0x04013C58
+const Gfx mario_cap_off_eyes_closed[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04013C58 - 0x04013D28
+const Gfx mario_cap_off_eyes_right[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04013D28 - 0x04013DF8
+const Gfx mario_cap_off_eyes_left[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04013DF8 - 0x04013EC8
+const Gfx mario_cap_off_eyes_up[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04013EC8 - 0x04013F98
+const Gfx mario_cap_off_eyes_down[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04013F98 - 0x04014068
+const Gfx mario_cap_off_eyes_dead[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_mustache_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_hair_sideburn),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04014068 - 0x04014098
+const Gfx mario_metal_cap_off_shared_dl[] = {
+    gsSPDisplayList(mario_eyes_cap_off_dl),
+    gsSPDisplayList(mario_mustache_cap_off_dl),
+    gsSPDisplayList(mario_hair_sideburn_cap_off_dl),
+    gsSPDisplayList(mario_face_part_cap_off_dl),
+    gsSPDisplayList(mario_face_hair_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04014098
+static const Vtx mario_medium_poly_butt_dl_vertex_group1[] = {
+    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
+    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
+    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
+    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
+    {{{    41,    -86,    -45}, 0, {     0,      0}, {0x35, 0x90, 0xe7, 0x00}}},
+    {{{    41,    -86,     45}, 0, {     0,      0}, {0x44, 0x9b, 0x1f, 0x00}}},
+    {{{   -33,    -45,    -31}, 0, {     0,      0}, {0x87, 0xe9, 0xe3, 0x00}}},
+    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
+    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
+    {{{    -2,     41,     95}, 0, {     0,      0}, {0xba, 0x3b, 0x57, 0x00}}},
+    {{{    -5,    -45,     97}, 0, {     0,      0}, {0xc7, 0xde, 0x6b, 0x00}}},
+    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
+    {{{    -5,    -45,    -97}, 0, {     0,      0}, {0xc7, 0xdd, 0x95, 0x00}}},
+    {{{    -2,     41,    -95}, 0, {     0,      0}, {0xba, 0x3b, 0xaa, 0x00}}},
+    {{{    44,     35,    -96}, 0, {     0,      0}, {0x3c, 0x22, 0x96, 0x00}}},
+    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
+};
+
+// 0x04014198
+static const Vtx mario_medium_poly_butt_dl_vertex_group2[] = {
+    {{{    -2,     41,     95}, 0, {     0,      0}, {0xba, 0x3b, 0x57, 0x00}}},
+    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
+    {{{   -32,     43,     22}, 0, {     0,      0}, {0x8c, 0x2c, 0x18, 0x00}}},
+    {{{     0,     78,    -37}, 0, {     0,      0}, {0xc5, 0x6c, 0xe2, 0x00}}},
+    {{{    -2,     41,    -95}, 0, {     0,      0}, {0xba, 0x3b, 0xaa, 0x00}}},
+    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
+    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
+    {{{   -33,    -45,    -31}, 0, {     0,      0}, {0x87, 0xe9, 0xe3, 0x00}}},
+    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
+    {{{    43,    -48,    -97}, 0, {     0,      0}, {0x3b, 0xc1, 0xa4, 0x00}}},
+    {{{    41,    -86,    -45}, 0, {     0,      0}, {0x35, 0x90, 0xe7, 0x00}}},
+    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
+    {{{    41,    -86,     45}, 0, {     0,      0}, {0x44, 0x9b, 0x1f, 0x00}}},
+    {{{    43,    -48,     97}, 0, {     0,      0}, {0x3b, 0xc2, 0x5c, 0x00}}},
+    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
+    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
+};
+
+// 0x04014298
+static const Vtx mario_medium_poly_butt_dl_vertex_group3[] = {
+    {{{    -2,     41,    -95}, 0, {     0,      0}, {0xba, 0x3b, 0xaa, 0x00}}},
+    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
+    {{{    44,     35,    -96}, 0, {     0,      0}, {0x3c, 0x22, 0x96, 0x00}}},
+    {{{     0,     78,    -37}, 0, {     0,      0}, {0xc5, 0x6c, 0xe2, 0x00}}},
+    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
+    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
+    {{{    -2,     41,     95}, 0, {     0,      0}, {0xba, 0x3b, 0x57, 0x00}}},
+    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
+    {{{    43,    -48,     97}, 0, {     0,      0}, {0x3b, 0xc2, 0x5c, 0x00}}},
+    {{{    -5,    -45,     97}, 0, {     0,      0}, {0xc7, 0xde, 0x6b, 0x00}}},
+    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
+    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
+    {{{    -5,    -45,    -97}, 0, {     0,      0}, {0xc7, 0xdd, 0x95, 0x00}}},
+    {{{    43,    -48,    -97}, 0, {     0,      0}, {0x3b, 0xc1, 0xa4, 0x00}}},
+    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
+    {{{   -33,    -45,    -31}, 0, {     0,      0}, {0x87, 0xe9, 0xe3, 0x00}}},
+};
+
+// 0x04014398
+static const Vtx mario_medium_poly_butt_dl_vertex_group4[] = {
+    {{{    -5,    -45,     97}, 0, {     0,      0}, {0xc7, 0xde, 0x6b, 0x00}}},
+    {{{    43,    -48,     97}, 0, {     0,      0}, {0x3b, 0xc2, 0x5c, 0x00}}},
+    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
+    {{{   -33,    -45,     31}, 0, {     0,      0}, {0x86, 0xe5, 0x15, 0x00}}},
+    {{{   -32,     43,     22}, 0, {     0,      0}, {0x8c, 0x2c, 0x18, 0x00}}},
+    {{{   -32,     43,    -22}, 0, {     0,      0}, {0x8b, 0x2d, 0xf0, 0x00}}},
+    {{{    -6,    -84,     50}, 0, {     0,      0}, {0xd5, 0x90, 0x26, 0x00}}},
+    {{{    -6,    -84,    -50}, 0, {     0,      0}, {0xc1, 0x9a, 0xd9, 0x00}}},
+    {{{    41,    -86,    -45}, 0, {     0,      0}, {0x35, 0x90, 0xe7, 0x00}}},
+    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
+    {{{     0,     78,    -37}, 0, {     0,      0}, {0xc5, 0x6c, 0xe2, 0x00}}},
+    {{{     0,     78,     37}, 0, {     0,      0}, {0xc7, 0x6f, 0x14, 0x00}}},
+    {{{    85,     -5,      0}, 0, {     0,      0}, {0x7f, 0xfe, 0x00, 0x00}}},
+    {{{    44,     35,    -96}, 0, {     0,      0}, {0x3c, 0x22, 0x96, 0x00}}},
+    {{{    43,    -48,    -97}, 0, {     0,      0}, {0x3b, 0xc1, 0xa4, 0x00}}},
+    {{{    41,    -86,     45}, 0, {     0,      0}, {0x44, 0x9b, 0x1f, 0x00}}},
+};
+
+// 0x04014498
+static const Vtx mario_medium_poly_butt_dl_vertex_group5[] = {
+    {{{    44,     36,     95}, 0, {     0,      0}, {0x3d, 0x22, 0x69, 0x00}}},
+    {{{    85,     -5,      0}, 0, {     0,      0}, {0x7f, 0xfe, 0x00, 0x00}}},
+    {{{    44,     80,     46}, 0, {     0,      0}, {0x36, 0x68, 0x2e, 0x00}}},
+    {{{    43,     80,    -45}, 0, {     0,      0}, {0x2c, 0x70, 0xdb, 0x00}}},
+};
+
+// 0x040144D8 - 0x04014638
+const Gfx mario_medium_poly_butt_dl[] = {
+    gsSPVertex(mario_medium_poly_butt_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles(12, 13, 14, 0x0, 12, 15,  6, 0x0),
+    gsSP1Triangle( 3, 10,  7, 0x0),
+    gsSPVertex(mario_medium_poly_butt_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 0,  2,  6, 0x0,  7,  5,  4, 0x0),
+    gsSP2Triangles( 7,  8,  6, 0x0,  9, 10,  8, 0x0),
+    gsSP2Triangles(11, 12, 13, 0x0,  2,  1,  5, 0x0),
+    gsSP1Triangle(14, 15,  0, 0x0),
+    gsSPVertex(mario_medium_poly_butt_dl_vertex_group3, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  5,  3,  7, 0x0),
+    gsSP2Triangles( 8,  9, 10, 0x0, 11, 12, 13, 0x0),
+    gsSP2Triangles(11, 10, 14, 0x0,  0, 12, 15, 0x0),
+    gsSP2Triangles(14,  9,  6, 0x0,  2, 13, 12, 0x0),
+    gsSPVertex(mario_medium_poly_butt_dl_vertex_group4, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles( 9, 12, 13, 0x0, 13, 12, 14, 0x0),
+    gsSP2Triangles(14, 12,  8, 0x0,  8, 12, 15, 0x0),
+    gsSP2Triangles(15, 12,  1, 0x0,  1, 12,  2, 0x0),
+    gsSPVertex(mario_medium_poly_butt_dl_vertex_group5, 4, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04014638 - 0x04014668
+const Gfx mario_medium_poly_butt[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPLight(&mario_blue_lights_group.l, 1),
+    gsSPLight(&mario_blue_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_butt_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04014668 - 0x040146E0
+const Gfx mario_metal_medium_poly_butt[] = {
+    gsDPPipeSync(),
+    gsSPSetGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_butt_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040146E0
+static const Vtx mario_medium_poly_left_arm_shared_dl_vertex[] = {
+    {{{    -6,    -32,    -22}, 0, {     0,      0}, {0x08, 0x84, 0x18, 0x00}}},
+    {{{    60,    -27,    -18}, 0, {     0,      0}, {0x3d, 0xc5, 0xa3, 0x00}}},
+    {{{    60,    -18,     26}, 0, {     0,      0}, {0x5c, 0xbe, 0x36, 0x00}}},
+    {{{    -6,    -32,    -22}, 0, {     0,      0}, {0x07, 0xf5, 0x82, 0x00}}},
+    {{{    -7,     21,    -27}, 0, {     0,      0}, {0x07, 0xf5, 0x82, 0x00}}},
+    {{{    59,     16,    -22}, 0, {     0,      0}, {0x5b, 0x4f, 0xda, 0x00}}},
+    {{{    -7,     20,     18}, 0, {     0,      0}, {0x0c, 0x73, 0x32, 0x00}}},
+    {{{    59,     14,     14}, 0, {     0,      0}, {0x38, 0x4b, 0x55, 0x00}}},
+    {{{    -6,    -21,     33}, 0, {     0,      0}, {0x0b, 0x2a, 0x77, 0x00}}},
+    {{{    -7,     21,    -27}, 0, {     0,      0}, {0x0a, 0x7e, 0x04, 0x00}}},
+    {{{    -6,    -21,     33}, 0, {     0,      0}, {0x08, 0x84, 0x18, 0x00}}},
+    {{{    -7,     21,    -27}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+    {{{    -6,    -32,    -22}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+    {{{    -6,    -21,     33}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+    {{{    -7,     20,     18}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+};
+
+// 0x040147D0 - 0x04014840
+const Gfx mario_medium_poly_left_arm_shared_dl[] = {
+    gsSPVertex(mario_medium_poly_left_arm_shared_dl_vertex, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 4,  5,  1, 0x0,  6,  7,  5, 0x0),
+    gsSP2Triangles( 8,  2,  7, 0x0,  6,  8,  7, 0x0),
+    gsSP2Triangles( 9,  6,  5, 0x0, 10,  0,  2, 0x0),
+    gsSP2Triangles( 5,  2,  1, 0x0, 11, 12, 13, 0x0),
+    gsSP2Triangles(13, 14, 11, 0x0,  5,  7,  2, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04014840 - 0x04014860
+const Gfx mario_medium_poly_left_arm[] = {
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_left_arm_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04014860
+static const Vtx mario_medium_poly_left_forearm_shared_dl_vertex[] = {
+    {{{    -9,    -29,    -18}, 0, {     0,      0}, {0x05, 0x84, 0x19, 0x00}}},
+    {{{    53,    -26,    -17}, 0, {     0,      0}, {0x59, 0xd0, 0xb5, 0x00}}},
+    {{{    53,    -17,     24}, 0, {     0,      0}, {0x3d, 0xab, 0x47, 0x00}}},
+    {{{    -9,    -29,    -18}, 0, {     0,      0}, {0x04, 0xf3, 0x82, 0x00}}},
+    {{{    -9,     16,    -24}, 0, {     0,      0}, {0x04, 0xf4, 0x82, 0x00}}},
+    {{{    53,     13,    -21}, 0, {     0,      0}, {0x3b, 0x64, 0xce, 0x00}}},
+    {{{    -9,     15,     15}, 0, {     0,      0}, {0x07, 0x75, 0x30, 0x00}}},
+    {{{    53,     13,     12}, 0, {     0,      0}, {0x52, 0x41, 0x47, 0x00}}},
+    {{{    -9,    -19,     28}, 0, {     0,      0}, {0x07, 0x2c, 0x76, 0x00}}},
+    {{{    -9,     16,    -24}, 0, {     0,      0}, {0x06, 0x7e, 0x02, 0x00}}},
+    {{{    -9,    -19,     28}, 0, {     0,      0}, {0x05, 0x84, 0x1a, 0x00}}},
+    {{{    -9,     16,    -24}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+    {{{    -9,    -29,    -18}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+    {{{    -9,    -19,     28}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+    {{{    -9,     15,     15}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+};
+
+// 0x04014950 - 0x040149C0
+const Gfx mario_medium_poly_left_forearm_shared_dl[] = {
+    gsSPVertex(mario_medium_poly_left_forearm_shared_dl_vertex, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 4,  5,  1, 0x0,  6,  7,  5, 0x0),
+    gsSP2Triangles( 8,  2,  7, 0x0,  6,  8,  7, 0x0),
+    gsSP2Triangles( 9,  6,  5, 0x0, 10,  0,  2, 0x0),
+    gsSP2Triangles( 1,  7,  2, 0x0,  1,  5,  7, 0x0),
+    gsSP2Triangles(11, 12, 13, 0x0, 13, 14, 11, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040149C0
+static const Vtx mario_medium_poly_left_hand_closed_shared_dl_vertex_group1[] = {
+    {{{    31,     10,     40}, 0, {     0,      0}, {0xd8, 0xed, 0x76, 0x00}}},
+    {{{    12,      1,     26}, 0, {     0,      0}, {0xf1, 0xf7, 0x7d, 0x00}}},
+    {{{    27,    -32,     -3}, 0, {     0,      0}, {0x06, 0x82, 0x0b, 0x00}}},
+    {{{    11,      2,    -28}, 0, {     0,      0}, {0xca, 0xf6, 0x8e, 0x00}}},
+    {{{    44,    -22,    -46}, 0, {     0,      0}, {0xde, 0xb9, 0x9d, 0x00}}},
+    {{{    18,     37,    -31}, 0, {     0,      0}, {0xc7, 0x28, 0x97, 0x00}}},
+    {{{    -2,     36,     -2}, 0, {     0,      0}, {0xb0, 0x61, 0x03, 0x00}}},
+    {{{    -5,     -5,     34}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
+    {{{    -6,     -5,    -32}, 0, {     0,      0}, {0x1c, 0x0e, 0x86, 0x00}}},
+    {{{    81,     32,     40}, 0, {     0,      0}, {0x48, 0x1f, 0x63, 0x00}}},
+    {{{    55,     84,      9}, 0, {     0,      0}, {0x14, 0x74, 0x2c, 0x00}}},
+    {{{   102,    -23,      6}, 0, {     0,      0}, {0x64, 0xc4, 0x31, 0x00}}},
+    {{{    95,     43,    -12}, 0, {     0,      0}, {0x6e, 0x36, 0xe0, 0x00}}},
+    {{{    54,     58,    -32}, 0, {     0,      0}, {0x02, 0x4e, 0x9d, 0x00}}},
+    {{{    84,    -10,    -41}, 0, {     0,      0}, {0x39, 0xe2, 0x93, 0x00}}},
+    {{{    53,    -42,      9}, 0, {     0,      0}, {0x04, 0x83, 0x0f, 0x00}}},
+};
+
+// 0x04014AC0
+static const Vtx mario_medium_poly_left_hand_closed_shared_dl_vertex_group2[] = {
+    {{{    31,     10,     40}, 0, {     0,      0}, {0xd8, 0xed, 0x76, 0x00}}},
+    {{{    55,     84,      9}, 0, {     0,      0}, {0x14, 0x74, 0x2c, 0x00}}},
+    {{{     7,     62,     10}, 0, {     0,      0}, {0xa7, 0x5a, 0x00, 0x00}}},
+    {{{    27,    -32,     -3}, 0, {     0,      0}, {0x06, 0x82, 0x0b, 0x00}}},
+    {{{    14,    -51,     -2}, 0, {     0,      0}, {0x37, 0xd5, 0x97, 0x00}}},
+    {{{    -6,     -5,    -32}, 0, {     0,      0}, {0x1c, 0x0e, 0x86, 0x00}}},
+    {{{   -26,     40,     -1}, 0, {     0,      0}, {0x05, 0x48, 0x98, 0x00}}},
+    {{{    -2,     36,     -2}, 0, {     0,      0}, {0xb0, 0x61, 0x03, 0x00}}},
+    {{{   -26,     40,     -1}, 0, {     0,      0}, {0x11, 0x50, 0x60, 0x00}}},
+    {{{    -5,     -5,     34}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
+    {{{    14,    -51,     -2}, 0, {     0,      0}, {0x49, 0xd5, 0x5e, 0x00}}},
+    {{{    18,     37,    -31}, 0, {     0,      0}, {0xc7, 0x28, 0x97, 0x00}}},
+    {{{    44,    -22,    -46}, 0, {     0,      0}, {0xde, 0xb9, 0x9d, 0x00}}},
+    {{{    53,    -42,      9}, 0, {     0,      0}, {0x04, 0x83, 0x0f, 0x00}}},
+    {{{    54,     58,    -32}, 0, {     0,      0}, {0x02, 0x4e, 0x9d, 0x00}}},
+};
+
+// 0x04014BB0
+static const Vtx mario_medium_poly_left_hand_closed_shared_dl_vertex_group3[] = {
+    {{{    54,     58,    -32}, 0, {     0,      0}, {0x02, 0x4e, 0x9d, 0x00}}},
+    {{{    95,     43,    -12}, 0, {     0,      0}, {0x6e, 0x36, 0xe0, 0x00}}},
+    {{{    84,    -10,    -41}, 0, {     0,      0}, {0x39, 0xe2, 0x93, 0x00}}},
+    {{{     7,     62,     10}, 0, {     0,      0}, {0xa7, 0x5a, 0x00, 0x00}}},
+    {{{    55,     84,      9}, 0, {     0,      0}, {0x14, 0x74, 0x2c, 0x00}}},
+    {{{    53,    -42,      9}, 0, {     0,      0}, {0x04, 0x83, 0x0f, 0x00}}},
+    {{{   102,    -23,      6}, 0, {     0,      0}, {0x64, 0xc4, 0x31, 0x00}}},
+    {{{    18,     37,    -31}, 0, {     0,      0}, {0xc7, 0x28, 0x97, 0x00}}},
+    {{{    44,    -22,    -46}, 0, {     0,      0}, {0xde, 0xb9, 0x9d, 0x00}}},
+    {{{    11,      2,    -28}, 0, {     0,      0}, {0xca, 0xf6, 0x8e, 0x00}}},
+    {{{    -5,     -5,     34}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
+    {{{    -6,     -5,    -32}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
+    {{{    14,    -51,     -2}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
+    {{{   -26,     40,     -1}, 0, {     0,      0}, {0x8c, 0xce, 0x01, 0x00}}},
+};
+
+// 0x04014C90 - 0x04014DC0
+const Gfx mario_medium_poly_left_hand_closed_shared_dl[] = {
+    gsSPVertex(mario_medium_poly_left_hand_closed_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
+    gsSP2Triangles( 5,  3,  6, 0x0,  6,  1,  0, 0x0),
+    gsSP2Triangles( 2,  1,  7, 0x0,  7,  1,  6, 0x0),
+    gsSP2Triangles( 6,  3,  8, 0x0,  3,  2,  8, 0x0),
+    gsSP2Triangles( 0,  9, 10, 0x0, 11,  9,  0, 0x0),
+    gsSP2Triangles(10, 12, 13, 0x0, 14, 12, 11, 0x0),
+    gsSP2Triangles(11, 12,  9, 0x0,  9, 12, 10, 0x0),
+    gsSP1Triangle(15, 11,  0, 0x0),
+    gsSPVertex(mario_medium_poly_left_hand_closed_shared_dl_vertex_group2, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 5,  6,  7, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles( 9, 10,  3, 0x0,  7,  0,  2, 0x0),
+    gsSP2Triangles( 7,  2, 11, 0x0,  3, 12, 13, 0x0),
+    gsSP2Triangles( 3, 13,  0, 0x0, 11,  2, 14, 0x0),
+    gsSPVertex(mario_medium_poly_left_hand_closed_shared_dl_vertex_group3, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+    gsSP2Triangles( 5,  2,  6, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles( 7,  2,  8, 0x0,  7,  0,  2, 0x0),
+    gsSP2Triangles( 5,  8,  2, 0x0, 10, 11, 12, 0x0),
+    gsSP1Triangle(10, 13, 11, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04014DC0 - 0x04014DE0
+const Gfx mario_medium_poly_left_hand_closed[] = {
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_left_hand_closed_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04014DE0
+static const Vtx mario_medium_poly_right_arm_shared_dl_vertex[] = {
+    {{{    60,    -28,     22}, 0, {     0,      0}, {0x3b, 0xc7, 0x60, 0x00}}},
+    {{{    60,    -19,    -19}, 0, {     0,      0}, {0x5a, 0xbc, 0xc7, 0x00}}},
+    {{{    60,     14,     24}, 0, {     0,      0}, {0x5b, 0x4f, 0x26, 0x00}}},
+    {{{    -7,    -31,     24}, 0, {     0,      0}, {0x04, 0x84, 0xe6, 0x00}}},
+    {{{    -7,    -20,    -27}, 0, {     0,      0}, {0x04, 0x84, 0xe6, 0x00}}},
+    {{{    -8,     21,    -15}, 0, {     0,      0}, {0x11, 0x73, 0xce, 0x00}}},
+    {{{    -8,     22,     27}, 0, {     0,      0}, {0x0e, 0x7e, 0xfd, 0x00}}},
+    {{{    60,     13,     -9}, 0, {     0,      0}, {0x3c, 0x46, 0xaa, 0x00}}},
+    {{{    -7,    -20,    -27}, 0, {     0,      0}, {0x0e, 0x23, 0x88, 0x00}}},
+    {{{    -8,     22,     27}, 0, {     0,      0}, {0x03, 0xfa, 0x7e, 0x00}}},
+    {{{    -7,    -31,     24}, 0, {     0,      0}, {0x03, 0xfa, 0x7e, 0x00}}},
+    {{{    -7,    -20,    -27}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+    {{{    -7,    -31,     24}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+    {{{    -8,     22,     27}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+    {{{    -8,     21,    -15}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+};
+
+// 0x04014ED0 - 0x04014F40
+const Gfx mario_medium_poly_right_arm_shared_dl[] = {
+    gsSPVertex(mario_medium_poly_right_arm_shared_dl_vertex, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+    gsSP2Triangles( 2,  5,  6, 0x0,  7,  8,  5, 0x0),
+    gsSP2Triangles( 7,  1,  8, 0x0,  2,  7,  5, 0x0),
+    gsSP2Triangles( 0,  2,  9, 0x0,  0,  9, 10, 0x0),
+    gsSP2Triangles( 1,  0,  3, 0x0, 11, 12, 13, 0x0),
+    gsSP2Triangles(13, 14, 11, 0x0,  1,  7,  2, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04014F40 - 0x04014F60
+const Gfx mario_medium_poly_right_arm[] = {
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_right_arm_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04014F60
+static const Vtx mario_medium_poly_right_forearm_shared_dl_vertex[] = {
+    {{{    -5,    -18,    -24}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
+    {{{    -3,    -29,     21}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
+    {{{    -4,     17,     26}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
+    {{{    52,     13,    -10}, 0, {     0,      0}, {0x51, 0x40, 0xb7, 0x00}}},
+    {{{    53,     13,     22}, 0, {     0,      0}, {0x3d, 0x63, 0x31, 0x00}}},
+    {{{    53,    -26,     19}, 0, {     0,      0}, {0x5b, 0xd0, 0x49, 0x00}}},
+    {{{    52,    -17,    -21}, 0, {     0,      0}, {0x3a, 0xac, 0xb6, 0x00}}},
+    {{{    -3,    -29,     21}, 0, {     0,      0}, {0x04, 0x85, 0xe4, 0x00}}},
+    {{{    -5,    -18,    -24}, 0, {     0,      0}, {0x03, 0x85, 0xe3, 0x00}}},
+    {{{    -5,     17,    -12}, 0, {     0,      0}, {0x09, 0x75, 0xd1, 0x00}}},
+    {{{    -4,     17,     26}, 0, {     0,      0}, {0x08, 0x7e, 0x00, 0x00}}},
+    {{{    -5,    -18,    -24}, 0, {     0,      0}, {0x06, 0x2a, 0x89, 0x00}}},
+    {{{    -4,     17,     26}, 0, {     0,      0}, {0x06, 0xf5, 0x7e, 0x00}}},
+    {{{    -3,    -29,     21}, 0, {     0,      0}, {0x06, 0xf4, 0x7e, 0x00}}},
+    {{{    -5,     17,    -12}, 0, {     0,      0}, {0x81, 0xfe, 0x03, 0x00}}},
+};
+
+// 0x04015050 - 0x040150C0
+const Gfx mario_medium_poly_right_forearm_shared_dl[] = {
+    gsSPVertex(mario_medium_poly_right_forearm_shared_dl_vertex, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  3,  5, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 4,  9, 10, 0x0,  3, 11,  9, 0x0),
+    gsSP2Triangles( 3,  6, 11, 0x0,  4,  3,  9, 0x0),
+    gsSP2Triangles( 5,  4, 12, 0x0,  5, 12, 13, 0x0),
+    gsSP2Triangles( 6,  5,  7, 0x0,  2, 14,  0, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040150C0
+static const Vtx mario_medium_poly_right_hand_closed_dl_vertex_group1[] = {
+    {{{    -7,     -4,     36}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
+    {{{   -26,     40,      0}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
+    {{{    -4,     -7,    -34}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
+    {{{    14,    -51,      7}, 0, {     0,      0}, {0x8c, 0xcd, 0xfd, 0x00}}},
+    {{{    81,     -8,     49}, 0, {     0,      0}, {0x36, 0xe6, 0x6f, 0x00}}},
+    {{{    42,    -20,     54}, 0, {     0,      0}, {0xd9, 0xbb, 0x62, 0x00}}},
+    {{{    54,    -42,     -4}, 0, {     0,      0}, {0x04, 0x82, 0xf6, 0x00}}},
+    {{{    52,     59,     37}, 0, {     0,      0}, {0xff, 0x55, 0x5e, 0x00}}},
+    {{{    16,     38,     35}, 0, {     0,      0}, {0xc1, 0x2d, 0x63, 0x00}}},
+    {{{    10,      3,     33}, 0, {     0,      0}, {0xc3, 0xfa, 0x6e, 0x00}}},
+    {{{   102,    -23,      0}, 0, {     0,      0}, {0x65, 0xc1, 0xd7, 0x00}}},
+    {{{    55,     84,     -8}, 0, {     0,      0}, {0x15, 0x73, 0xd1, 0x00}}},
+    {{{     7,     62,    -11}, 0, {     0,      0}, {0xa7, 0x5a, 0xf9, 0x00}}},
+    {{{    94,     43,     18}, 0, {     0,      0}, {0x6d, 0x38, 0x21, 0x00}}},
+    {{{    32,      8,    -40}, 0, {     0,      0}, {0xda, 0xe8, 0x8a, 0x00}}},
+    {{{    26,    -32,      8}, 0, {     0,      0}, {0x08, 0x82, 0xfa, 0x00}}},
+};
+
+// 0x040151C0
+static const Vtx mario_medium_poly_right_hand_closed_dl_vertex_group2[] = {
+    {{{    16,     38,     35}, 0, {     0,      0}, {0xc1, 0x2d, 0x63, 0x00}}},
+    {{{     7,     62,    -11}, 0, {     0,      0}, {0xa7, 0x5a, 0xf9, 0x00}}},
+    {{{    -3,     37,      3}, 0, {     0,      0}, {0xb0, 0x62, 0xf7, 0x00}}},
+    {{{    32,      8,    -40}, 0, {     0,      0}, {0xda, 0xe8, 0x8a, 0x00}}},
+    {{{    26,    -32,      8}, 0, {     0,      0}, {0x08, 0x82, 0xfa, 0x00}}},
+    {{{    14,    -51,      7}, 0, {     0,      0}, {0x4f, 0xd0, 0xaa, 0x00}}},
+    {{{    -4,     -7,    -34}, 0, {     0,      0}, {0x37, 0x10, 0x8f, 0x00}}},
+    {{{   -26,     40,      0}, 0, {     0,      0}, {0x15, 0x51, 0xa1, 0x00}}},
+    {{{   -26,     40,      0}, 0, {     0,      0}, {0x02, 0x4f, 0x62, 0x00}}},
+    {{{    -7,     -4,     36}, 0, {     0,      0}, {0x19, 0x13, 0x7a, 0x00}}},
+    {{{    14,    -51,      7}, 0, {     0,      0}, {0x36, 0xd7, 0x6b, 0x00}}},
+    {{{    55,     84,     -8}, 0, {     0,      0}, {0x15, 0x73, 0xd1, 0x00}}},
+    {{{   102,    -23,      0}, 0, {     0,      0}, {0x65, 0xc1, 0xd7, 0x00}}},
+    {{{    54,    -42,     -4}, 0, {     0,      0}, {0x04, 0x82, 0xf6, 0x00}}},
+    {{{    94,     43,     18}, 0, {     0,      0}, {0x6d, 0x38, 0x21, 0x00}}},
+    {{{    83,     30,    -39}, 0, {     0,      0}, {0x4e, 0x1c, 0xa1, 0x00}}},
+};
+
+// 0x040152C0
+static const Vtx mario_medium_poly_right_hand_closed_dl_vertex_group3[] = {
+    {{{   102,    -23,      0}, 0, {     0,      0}, {0x65, 0xc1, 0xd7, 0x00}}},
+    {{{    94,     43,     18}, 0, {     0,      0}, {0x6d, 0x38, 0x21, 0x00}}},
+    {{{    81,     -8,     49}, 0, {     0,      0}, {0x36, 0xe6, 0x6f, 0x00}}},
+    {{{    52,     59,     37}, 0, {     0,      0}, {0xff, 0x55, 0x5e, 0x00}}},
+    {{{    55,     84,     -8}, 0, {     0,      0}, {0x15, 0x73, 0xd1, 0x00}}},
+    {{{    32,      8,    -40}, 0, {     0,      0}, {0xda, 0xe8, 0x8a, 0x00}}},
+    {{{    83,     30,    -39}, 0, {     0,      0}, {0x4e, 0x1c, 0xa1, 0x00}}},
+    {{{    -7,     -4,     36}, 0, {     0,      0}, {0x19, 0x13, 0x7a, 0x00}}},
+    {{{    26,    -32,      8}, 0, {     0,      0}, {0x08, 0x82, 0xfa, 0x00}}},
+    {{{    10,      3,     33}, 0, {     0,      0}, {0xc3, 0xfa, 0x6e, 0x00}}},
+    {{{    -3,     37,      3}, 0, {     0,      0}, {0xb0, 0x62, 0xf7, 0x00}}},
+    {{{    13,      0,    -26}, 0, {     0,      0}, {0xf5, 0xf2, 0x83, 0x00}}},
+    {{{    -4,     -7,    -34}, 0, {     0,      0}, {0x37, 0x10, 0x8f, 0x00}}},
+    {{{    16,     38,     35}, 0, {     0,      0}, {0xc1, 0x2d, 0x63, 0x00}}},
+    {{{    42,    -20,     54}, 0, {     0,      0}, {0xd9, 0xbb, 0x62, 0x00}}},
+};
+
+// 0x040153B0 - 0x040154E0
+const Gfx mario_medium_poly_right_hand_closed_dl[] = {
+    gsSPVertex(mario_medium_poly_right_hand_closed_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  4,  7,  8, 0x0),
+    gsSP2Triangles( 5,  4,  8, 0x0,  9,  5,  8, 0x0),
+    gsSP2Triangles(10,  4,  6, 0x0,  7, 11, 12, 0x0),
+    gsSP2Triangles( 4, 13,  7, 0x0,  7, 12,  8, 0x0),
+    gsSP2Triangles(14,  6, 15, 0x0,  6,  5, 15, 0x0),
+    gsSPVertex(mario_medium_poly_right_hand_closed_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  6,  7,  2, 0x0),
+    gsSP2Triangles( 2,  8,  9, 0x0,  9, 10,  4, 0x0),
+    gsSP2Triangles( 1, 11,  3, 0x0,  3, 12, 13, 0x0),
+    gsSP2Triangles(11, 14, 15, 0x0, 15, 14, 12, 0x0),
+    gsSPVertex(mario_medium_poly_right_hand_closed_dl_vertex_group3, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  4, 0x0),
+    gsSP2Triangles( 5,  6,  0, 0x0,  4,  6,  5, 0x0),
+    gsSP2Triangles( 7,  8,  9, 0x0,  7,  9, 10, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 12, 11,  8, 0x0),
+    gsSP2Triangles( 5, 11, 10, 0x0, 10,  9, 13, 0x0),
+    gsSP2Triangles(14,  9,  8, 0x0,  8, 11,  5, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040154E0 - 0x04015500
+const Gfx mario_medium_poly_right_hand_closed[] = {
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_right_hand_closed_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04015500 - 0x04015530
+const Gfx mario_metal_medium_poly_right_hand_closed[] = {
+    gsSPDisplayList(mario_medium_poly_right_hand_closed_dl),
+    gsDPPipeSync(),
+    gsSPClearGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+    gsSPEndDisplayList(),
+};
+
+// 0x04015530
+static const Vtx mario_medium_poly_left_thigh_dl_vertex[] = {
+    {{{    18,    -12,     58}, 0, {     0,      0}, {0x13, 0xdd, 0x78, 0x00}}},
+    {{{    22,    -52,      8}, 0, {     0,      0}, {0x1c, 0x85, 0x01, 0x00}}},
+    {{{    99,    -35,      8}, 0, {     0,      0}, {0x3e, 0x92, 0x01, 0x00}}},
+    {{{    14,     51,     38}, 0, {     0,      0}, {0x08, 0x75, 0x30, 0x00}}},
+    {{{    92,     47,     33}, 0, {     0,      0}, {0x36, 0x4b, 0x56, 0x00}}},
+    {{{    14,     50,    -23}, 0, {     0,      0}, {0x0a, 0x65, 0xb5, 0x00}}},
+    {{{    92,     47,    -16}, 0, {     0,      0}, {0x47, 0x55, 0xc5, 0x00}}},
+    {{{    19,    -13,    -42}, 0, {     0,      0}, {0x15, 0xdb, 0x89, 0x00}}},
+    {{{    96,     -3,    -31}, 0, {     0,      0}, {0x68, 0xf1, 0xba, 0x00}}},
+    {{{    96,     -3,     48}, 0, {     0,      0}, {0x71, 0xf8, 0x38, 0x00}}},
+    {{{    19,    -13,    -42}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{    22,    -52,      8}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{    18,    -12,     58}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{    14,     51,     38}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{    14,     50,    -23}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+};
+
+// 0x04015620 - 0x040156B0
+const Gfx mario_medium_poly_left_thigh_dl[] = {
+    gsSPVertex(mario_medium_poly_left_thigh_dl_vertex, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+    gsSP2Triangles( 5,  3,  6, 0x0,  7,  5,  6, 0x0),
+    gsSP2Triangles( 1,  7,  2, 0x0,  7,  8,  2, 0x0),
+    gsSP2Triangles( 6,  8,  7, 0x0,  3,  4,  6, 0x0),
+    gsSP2Triangles( 0,  9,  4, 0x0,  2,  9,  0, 0x0),
+    gsSP2Triangles( 9,  2,  8, 0x0, 10, 11, 12, 0x0),
+    gsSP2Triangles(12, 13, 10, 0x0, 13, 14, 10, 0x0),
+    gsSP2Triangles( 8,  6,  9, 0x0,  6,  4,  9, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040156B0 - 0x040156E0
+const Gfx mario_medium_poly_left_thigh[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPLight(&mario_blue_lights_group.l, 1),
+    gsSPLight(&mario_blue_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_left_thigh_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040156E0 - 0x04015758
+const Gfx mario_metal_medium_poly_left_thigh[] = {
+    gsDPPipeSync(),
+    gsSPSetGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_left_thigh_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04015758
+static const Vtx mario_medium_poly_left_leg_shared_dl_vertex[] = {
+    {{{     5,    -35,      9}, 0, {     0,      0}, {0xca, 0x8e, 0x00, 0x00}}},
+    {{{    65,    -44,     10}, 0, {     0,      0}, {0xee, 0x83, 0x01, 0x00}}},
+    {{{    66,     -9,     54}, 0, {     0,      0}, {0xf2, 0xdc, 0x78, 0x00}}},
+    {{{     9,     46,     33}, 0, {     0,      0}, {0xd5, 0x61, 0x45, 0x00}}},
+    {{{    69,     47,     37}, 0, {     0,      0}, {0xf9, 0x66, 0x4b, 0x00}}},
+    {{{    70,     47,    -18}, 0, {     0,      0}, {0xfb, 0x74, 0xcf, 0x00}}},
+    {{{    10,     46,    -16}, 0, {     0,      0}, {0xaf, 0x40, 0xb7, 0x00}}},
+    {{{    67,     -9,    -36}, 0, {     0,      0}, {0xf4, 0xda, 0x88, 0x00}}},
+    {{{     7,     -4,    -31}, 0, {     0,      0}, {0x9b, 0xee, 0xb6, 0x00}}},
+    {{{     7,     -4,     49}, 0, {     0,      0}, {0x8f, 0xf5, 0x37, 0x00}}},
+    {{{    66,     -9,     54}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+    {{{    65,    -44,     10}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+    {{{    67,     -9,    -36}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+    {{{    70,     47,    -18}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+    {{{    69,     47,     37}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+};
+
+// 0x04015848 - 0x040158D8
+const Gfx mario_medium_poly_left_leg_shared_dl[] = {
+    gsSPVertex(mario_medium_poly_left_leg_shared_dl_vertex, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  4, 0x0),
+    gsSP2Triangles( 3,  4,  5, 0x0,  6,  5,  7, 0x0),
+    gsSP2Triangles( 0,  7,  1, 0x0,  0,  8,  7, 0x0),
+    gsSP2Triangles( 7,  8,  6, 0x0,  5,  6,  3, 0x0),
+    gsSP2Triangles( 3,  9,  2, 0x0,  2,  9,  0, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0,  8,  0,  9, 0x0),
+    gsSP2Triangles( 9,  6,  8, 0x0,  9,  3,  6, 0x0),
+    gsSP2Triangles(12, 13, 10, 0x0, 13, 14, 10, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040158D8
+static const Vtx mario_medium_poly_left_foot_shared_dl_vertex_group1[] = {
+    {{{   108,     10,     36}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   108,      9,    -20}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{    75,     21,    -41}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{    76,     22,     61}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -14,     55,    -27}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -13,     55,     49}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -41,     65,      9}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{    41,    -18,     54}, 0, {     0,      0}, {0x04, 0xb4, 0x65, 0x00}}},
+    {{{    76,     22,     61}, 0, {     0,      0}, {0x12, 0xdd, 0x78, 0x00}}},
+    {{{   -13,     55,     49}, 0, {     0,      0}, {0xce, 0x07, 0x74, 0x00}}},
+    {{{    42,    -11,    -33}, 0, {     0,      0}, {0xff, 0xb8, 0x98, 0x00}}},
+    {{{   -37,     12,    -16}, 0, {     0,      0}, {0xa1, 0xcf, 0xbd, 0x00}}},
+    {{{   -14,     55,    -27}, 0, {     0,      0}, {0xcc, 0x02, 0x8d, 0x00}}},
+    {{{   -36,     13,     39}, 0, {     0,      0}, {0xa0, 0xd0, 0x42, 0x00}}},
+    {{{    75,     21,    -41}, 0, {     0,      0}, {0x09, 0xda, 0x88, 0x00}}},
+    {{{   108,      9,    -20}, 0, {     0,      0}, {0x44, 0xad, 0xbe, 0x00}}},
+};
+
+// 0x040159D8
+static const Vtx mario_medium_poly_left_foot_shared_dl_vertex_group2[] = {
+    {{{    78,    -30,      7}, 0, {     0,      0}, {0x34, 0x8d, 0xfb, 0x00}}},
+    {{{   108,      9,    -20}, 0, {     0,      0}, {0x44, 0xad, 0xbe, 0x00}}},
+    {{{   108,     10,     36}, 0, {     0,      0}, {0x4c, 0xaf, 0x3c, 0x00}}},
+    {{{    42,    -11,    -33}, 0, {     0,      0}, {0xff, 0xb8, 0x98, 0x00}}},
+    {{{    76,     22,     61}, 0, {     0,      0}, {0x12, 0xdd, 0x78, 0x00}}},
+    {{{    41,    -18,     54}, 0, {     0,      0}, {0x04, 0xb4, 0x65, 0x00}}},
+    {{{   -36,     13,     39}, 0, {     0,      0}, {0xa0, 0xd0, 0x42, 0x00}}},
+    {{{   -13,     55,     49}, 0, {     0,      0}, {0xce, 0x07, 0x74, 0x00}}},
+    {{{   -41,     65,      9}, 0, {     0,      0}, {0x83, 0x15, 0x00, 0x00}}},
+    {{{   -14,     55,    -27}, 0, {     0,      0}, {0xcc, 0x02, 0x8d, 0x00}}},
+    {{{   -37,     12,    -16}, 0, {     0,      0}, {0xa1, 0xcf, 0xbd, 0x00}}},
+    {{{    25,    -34,     11}, 0, {     0,      0}, {0xdd, 0x87, 0xfb, 0x00}}},
+};
+
+// 0x04015A98 - 0x04015B60
+const Gfx mario_medium_poly_left_foot_shared_dl[] = {
+    gsSPVertex(mario_medium_poly_left_foot_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 3,  2,  4, 0x0,  5,  3,  4, 0x0),
+    gsSP2Triangles( 6,  5,  4, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 13,  7,  9, 0x0),
+    gsSP2Triangles(10, 12, 14, 0x0, 10, 14, 15, 0x0),
+    gsSPVertex(mario_medium_poly_left_foot_shared_dl_vertex_group2, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
+    gsSP2Triangles( 2,  4,  5, 0x0,  5,  0,  2, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  8,  9, 10, 0x0),
+    gsSP2Triangles(11,  3,  0, 0x0, 10,  3, 11, 0x0),
+    gsSP2Triangles( 0,  5, 11, 0x0, 11,  5,  6, 0x0),
+    gsSP2Triangles(11,  6, 10, 0x0,  6,  8, 10, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04015B60 - 0x04015B80
+const Gfx mario_medium_poly_left_foot[] = {
+    gsSPLight(&mario_brown1_lights_group.l, 1),
+    gsSPLight(&mario_brown1_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_left_foot_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04015B80
+static const Vtx mario_medium_poly_right_thigh_shared_dl_vertex[] = {
+    {{{    18,    -11,    -58}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{    23,    -52,     -9}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{    20,    -14,     41}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{    97,     -3,     30}, 0, {     0,      0}, {0x69, 0xf1, 0x45, 0x00}}},
+    {{{    99,    -33,    -10}, 0, {     0,      0}, {0x40, 0x93, 0xfc, 0x00}}},
+    {{{    95,     -1,    -49}, 0, {     0,      0}, {0x71, 0xfb, 0xc7, 0x00}}},
+    {{{    18,    -11,    -58}, 0, {     0,      0}, {0x12, 0xe0, 0x87, 0x00}}},
+    {{{    91,     49,    -33}, 0, {     0,      0}, {0x34, 0x4e, 0xab, 0x00}}},
+    {{{    92,     48,     16}, 0, {     0,      0}, {0x47, 0x55, 0x3d, 0x00}}},
+    {{{    13,     52,    -37}, 0, {     0,      0}, {0x06, 0x76, 0xd3, 0x00}}},
+    {{{    20,    -14,     41}, 0, {     0,      0}, {0x16, 0xd9, 0x76, 0x00}}},
+    {{{    23,    -52,     -9}, 0, {     0,      0}, {0x1d, 0x85, 0xfd, 0x00}}},
+    {{{    14,     50,     24}, 0, {     0,      0}, {0x0a, 0x63, 0x4d, 0x00}}},
+    {{{    13,     52,    -37}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{    14,     50,     24}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+};
+
+// 0x04015C70 - 0x04015D00
+const Gfx mario_medium_poly_right_thigh_shared_dl[] = {
+    gsSPVertex(mario_medium_poly_right_thigh_shared_dl_vertex, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  5,  4, 0x0,  7,  5,  6, 0x0),
+    gsSP2Triangles( 8,  7,  9, 0x0, 10,  3,  8, 0x0),
+    gsSP2Triangles( 4,  3, 10, 0x0,  4, 10, 11, 0x0),
+    gsSP2Triangles( 8, 12, 10, 0x0,  8,  9, 12, 0x0),
+    gsSP2Triangles( 7,  6,  9, 0x0,  4, 11,  6, 0x0),
+    gsSP2Triangles( 5,  8,  3, 0x0,  5,  7,  8, 0x0),
+    gsSP2Triangles( 2, 13,  0, 0x0,  2, 14, 13, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04015D00 - 0x04015D20
+const Gfx mario_medium_poly_right_thigh[] = {
+    gsSPLight(&mario_blue_lights_group.l, 1),
+    gsSPLight(&mario_blue_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_right_thigh_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04015D20
+static const Vtx mario_medium_poly_right_leg_shared_dl_vertex[] = {
+    {{{     6,     -1,    -50}, 0, {     0,      0}, {0x8e, 0xf7, 0xca, 0x00}}},
+    {{{     5,    -34,    -11}, 0, {     0,      0}, {0xc9, 0x8e, 0xfe, 0x00}}},
+    {{{     7,     -4,     30}, 0, {     0,      0}, {0x9b, 0xed, 0x4a, 0x00}}},
+    {{{    67,     -9,     34}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+    {{{    64,    -43,    -12}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+    {{{    66,     -7,    -56}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+    {{{    66,     -7,    -56}, 0, {     0,      0}, {0xf1, 0xde, 0x87, 0x00}}},
+    {{{    10,     48,    -33}, 0, {     0,      0}, {0xd6, 0x63, 0xbe, 0x00}}},
+    {{{    10,     46,     16}, 0, {     0,      0}, {0xb1, 0x3f, 0x4b, 0x00}}},
+    {{{    71,     47,     18}, 0, {     0,      0}, {0xfd, 0x73, 0x33, 0x00}}},
+    {{{    67,     -9,     34}, 0, {     0,      0}, {0xf4, 0xd8, 0x77, 0x00}}},
+    {{{    64,    -43,    -12}, 0, {     0,      0}, {0xec, 0x83, 0xfd, 0x00}}},
+    {{{    70,     49,    -37}, 0, {     0,      0}, {0xfa, 0x67, 0xb8, 0x00}}},
+    {{{    71,     47,     18}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+    {{{    70,     49,    -37}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+};
+
+// 0x04015E10 - 0x04015EA0
+const Gfx mario_medium_poly_right_leg_shared_dl[] = {
+    gsSPVertex(mario_medium_poly_right_leg_shared_dl_vertex, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 1,  0,  6, 0x0,  6,  0,  7, 0x0),
+    gsSP2Triangles( 7,  8,  9, 0x0,  8,  2, 10, 0x0),
+    gsSP2Triangles(10,  2,  1, 0x0, 11, 10,  1, 0x0),
+    gsSP2Triangles(10,  9,  8, 0x0,  9, 12,  7, 0x0),
+    gsSP2Triangles(12,  6,  7, 0x0,  6, 11,  1, 0x0),
+    gsSP2Triangles( 5, 13,  3, 0x0,  5, 14, 13, 0x0),
+    gsSP2Triangles( 2,  8,  0, 0x0,  8,  7,  0, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04015EA0
+static const Vtx mario_medium_poly_right_foot_dl_vertex_group1[] = {
+    {{{   -38,     12,     14}, 0, {     0,      0}, {0xa1, 0xcf, 0x43, 0x00}}},
+    {{{   -43,     65,    -12}, 0, {     0,      0}, {0x83, 0x13, 0xff, 0x00}}},
+    {{{   -36,     12,    -41}, 0, {     0,      0}, {0xa1, 0xce, 0xbe, 0x00}}},
+    {{{    25,    -34,    -11}, 0, {     0,      0}, {0xdf, 0x86, 0x07, 0x00}}},
+    {{{    41,    -18,    -55}, 0, {     0,      0}, {0x07, 0xb3, 0x9c, 0x00}}},
+    {{{    79,    -29,     -7}, 0, {     0,      0}, {0x36, 0x8e, 0x08, 0x00}}},
+    {{{    42,    -10,     32}, 0, {     0,      0}, {0xff, 0xba, 0x69, 0x00}}},
+    {{{   -15,     55,     24}, 0, {     0,      0}, {0xcb, 0x04, 0x73, 0x00}}},
+    {{{   -14,     54,    -51}, 0, {     0,      0}, {0xcf, 0x04, 0x8c, 0x00}}},
+    {{{   108,     11,    -36}, 0, {     0,      0}, {0x4e, 0xb0, 0xc6, 0x00}}},
+    {{{    76,     23,    -62}, 0, {     0,      0}, {0x14, 0xdb, 0x89, 0x00}}},
+    {{{   107,     12,     20}, 0, {     0,      0}, {0x45, 0xaf, 0x44, 0x00}}},
+    {{{    74,     24,     40}, 0, {     0,      0}, {0x08, 0xdc, 0x79, 0x00}}},
+    {{{   -15,     55,     24}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   -14,     54,    -51}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   -43,     65,    -12}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+};
+
+// 0x04015FA0
+static const Vtx mario_medium_poly_right_foot_dl_vertex_group2[] = {
+    {{{   -15,     55,     24}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{    76,     23,    -62}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   -14,     54,    -51}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{    74,     24,     40}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   108,     11,    -36}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   107,     12,     20}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+};
+
+// 0x04016000 - 0x040160C8
+const Gfx mario_medium_poly_right_foot_dl[] = {
+    gsSPVertex(mario_medium_poly_right_foot_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 2,  4,  3, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 3,  6,  0, 0x0,  5,  6,  3, 0x0),
+    gsSP2Triangles( 0,  7,  1, 0x0,  1,  8,  2, 0x0),
+    gsSP2Triangles( 9,  5,  4, 0x0,  4, 10,  9, 0x0),
+    gsSP2Triangles( 6,  5, 11, 0x0,  9, 11,  5, 0x0),
+    gsSP2Triangles(11, 12,  6, 0x0, 12,  7,  6, 0x0),
+    gsSP2Triangles( 8,  4,  2, 0x0,  7,  0,  6, 0x0),
+    gsSP2Triangles( 8, 10,  4, 0x0, 13, 14, 15, 0x0),
+    gsSPVertex(mario_medium_poly_right_foot_dl_vertex_group2, 6, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 3,  4,  1, 0x0,  3,  5,  4, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040160C8 - 0x04016108
+const Gfx mario_medium_poly_right_foot[] = {
+    gsSPLight(&mario_brown1_lights_group.l, 1),
+    gsSPLight(&mario_brown1_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_right_foot_dl),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsDPSetEnvColor(255, 255, 255, 255),
+    gsDPSetAlphaCompare(G_AC_NONE),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016108 - 0x04016148
+const Gfx mario_metal_medium_poly_right_foot[] = {
+    gsSPDisplayList(mario_medium_poly_right_foot_dl),
+    gsDPPipeSync(),
+    gsSPClearGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPSetEnvColor(255, 255, 255, 255),
+    gsDPSetAlphaCompare(G_AC_NONE),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016148
+static const Vtx mario_seg4_vertex_04016148[] = {
+    {{{    75,     24,    -60}, 0, {   -74,   -930}, {0x60, 0x27, 0xb8, 0xff}}},
+    {{{    36,     47,    -76}, 0, {  -174,    168}, {0x2e, 0x36, 0x98, 0xff}}},
+    {{{    44,     78,    -35}, 0, {   988,     92}, {0x45, 0x65, 0xe2, 0xff}}},
+    {{{   -26,     49,    -87}, 0, {  -538,   1590}, {0xc4, 0x29, 0x99, 0xff}}},
+    {{{     1,     87,    -53}, 0, {   638,   1164}, {0x0e, 0x74, 0xd1, 0xff}}},
+    {{{     1,     87,     54}, 0, {  2522,    702}, {0x11, 0x74, 0x2f, 0xff}}},
+    {{{     1,     87,     54}, 0, {   272,   1122}, {0x11, 0x74, 0x2f, 0xff}}},
+    {{{    44,     78,     37}, 0, {   -92,    108}, {0x47, 0x5f, 0x2a, 0xff}}},
+    {{{    44,     78,    -35}, 0, { -1398,   -128}, {0x45, 0x65, 0xe2, 0xff}}},
+    {{{   -26,     49,     88}, 0, {  1514,   1490}, {0xc4, 0x29, 0x67, 0xff}}},
+    {{{    36,     47,     77}, 0, {  1110,    130}, {0x2f, 0x37, 0x68, 0xff}}},
+    {{{    75,     24,     60}, 0, {   968,   -926}, {0x62, 0x27, 0x46, 0xff}}},
+};
+
+// 0x04016208
+static const Vtx mario_seg4_vertex_04016208[] = {
+    {{{    82,     37,     28}, 0, {     0,      0}, {0x71, 0x36, 0x0e, 0xff}}},
+    {{{    82,     37,    -28}, 0, {     0,      0}, {0x71, 0x35, 0xea, 0xff}}},
+    {{{    44,     78,    -35}, 0, {     0,      0}, {0x45, 0x65, 0xe2, 0xff}}},
+    {{{    44,     78,     37}, 0, {     0,      0}, {0x47, 0x5f, 0x2a, 0xff}}},
+    {{{    95,    -39,    -25}, 0, {     0,      0}, {0x79, 0xe6, 0xe8, 0xff}}},
+    {{{    95,    -39,     25}, 0, {     0,      0}, {0x75, 0xdb, 0x1d, 0xff}}},
+    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
+    {{{    56,     -4,     79}, 0, {     0,      0}, {0x39, 0x04, 0x71, 0xff}}},
+    {{{    75,     24,     60}, 0, {     0,      0}, {0x62, 0x27, 0x46, 0xff}}},
+    {{{    36,     47,     77}, 0, {     0,      0}, {0x2f, 0x37, 0x68, 0xff}}},
+    {{{     9,      0,     94}, 0, {     0,      0}, {0x0e, 0x03, 0x7e, 0xff}}},
+    {{{    22,    -41,     87}, 0, {     0,      0}, {0x1f, 0xc9, 0x6d, 0xff}}},
+    {{{    83,    -29,     58}, 0, {     0,      0}, {0x54, 0xc8, 0x4c, 0xff}}},
+    {{{    83,    -29,    -58}, 0, {     0,      0}, {0x52, 0xc9, 0xb2, 0xff}}},
+    {{{    40,    -66,    -47}, 0, {     0,      0}, {0x1d, 0x91, 0xcb, 0xff}}},
+    {{{    22,    -41,    -86}, 0, {     0,      0}, {0x1e, 0xca, 0x92, 0xff}}},
+};
+
+// 0x04016308
+static const Vtx mario_seg4_vertex_04016308[] = {
+    {{{    36,     47,    -76}, 0, {     0,      0}, {0x2e, 0x36, 0x98, 0xff}}},
+    {{{    75,     24,    -60}, 0, {     0,      0}, {0x60, 0x27, 0xb8, 0xff}}},
+    {{{    56,     -4,    -77}, 0, {     0,      0}, {0x38, 0x04, 0x8f, 0xff}}},
+    {{{     9,      0,    -93}, 0, {     0,      0}, {0x0e, 0x03, 0x82, 0xff}}},
+    {{{    83,    -29,    -58}, 0, {     0,      0}, {0x52, 0xc9, 0xb2, 0xff}}},
+    {{{    22,    -41,    -86}, 0, {     0,      0}, {0x1e, 0xca, 0x92, 0xff}}},
+    {{{    22,    -41,     87}, 0, {     0,      0}, {0x1f, 0xc9, 0x6d, 0xff}}},
+    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
+    {{{    83,    -29,     58}, 0, {     0,      0}, {0x54, 0xc8, 0x4c, 0xff}}},
+};
+
+// 0x04016398
+static const Vtx mario_seg4_vertex_04016398[] = {
+    {{{    83,    -29,    -58}, 0, {     0,      0}, {0x52, 0xc9, 0xb2, 0xff}}},
+    {{{    95,    -39,    -25}, 0, {     0,      0}, {0x79, 0xe6, 0xe8, 0xff}}},
+    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
+    {{{    75,     24,    -60}, 0, {     0,      0}, {0x60, 0x27, 0xb8, 0xff}}},
+    {{{    82,     37,    -28}, 0, {     0,      0}, {0x71, 0x35, 0xea, 0xff}}},
+    {{{    40,    -66,    -47}, 0, {     0,      0}, {0x1d, 0x91, 0xcb, 0xff}}},
+    {{{    44,     78,    -35}, 0, {     0,      0}, {0x45, 0x65, 0xe2, 0xff}}},
+    {{{    75,     24,     60}, 0, {     0,      0}, {0x62, 0x27, 0x46, 0xff}}},
+    {{{    82,     37,     28}, 0, {     0,      0}, {0x71, 0x36, 0x0e, 0xff}}},
+    {{{    44,     78,     37}, 0, {     0,      0}, {0x47, 0x5f, 0x2a, 0xff}}},
+    {{{    83,    -29,     58}, 0, {     0,      0}, {0x54, 0xc8, 0x4c, 0xff}}},
+    {{{    95,    -39,     25}, 0, {     0,      0}, {0x75, 0xdb, 0x1d, 0xff}}},
+    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
+    {{{     1,     87,    -53}, 0, {     0,      0}, {0x0e, 0x74, 0xd1, 0xff}}},
+    {{{   -30,     88,     42}, 0, {     0,      0}, {0xd3, 0x72, 0x1f, 0xff}}},
+    {{{     1,     87,     54}, 0, {     0,      0}, {0x11, 0x74, 0x2f, 0xff}}},
+};
+
+// 0x04016498
+static const Vtx mario_seg4_vertex_04016498[] = {
+    {{{     1,     87,    -53}, 0, {     0,      0}, {0x0e, 0x74, 0xd1, 0xff}}},
+    {{{   -30,     88,    -41}, 0, {     0,      0}, {0xc7, 0x6a, 0xda, 0xff}}},
+    {{{   -30,     88,     42}, 0, {     0,      0}, {0xd3, 0x72, 0x1f, 0xff}}},
+    {{{   -26,     49,    -87}, 0, {     0,      0}, {0xc4, 0x29, 0x99, 0xff}}},
+    {{{   -71,     56,      0}, 0, {     0,      0}, {0x89, 0x2b, 0x00, 0xff}}},
+    {{{   -26,     49,     88}, 0, {     0,      0}, {0xc4, 0x29, 0x67, 0xff}}},
+    {{{     1,     87,     54}, 0, {     0,      0}, {0x11, 0x74, 0x2f, 0xff}}},
+    {{{   -59,    -44,      0}, 0, {     0,      0}, {0x88, 0xd8, 0x00, 0xff}}},
+    {{{   -26,    -72,    -38}, 0, {     0,      0}, {0xda, 0x8b, 0xe5, 0xff}}},
+    {{{   -26,    -72,     39}, 0, {     0,      0}, {0xda, 0x8b, 0x1b, 0xff}}},
+    {{{   -26,    -41,     85}, 0, {     0,      0}, {0xcc, 0xc2, 0x61, 0xff}}},
+    {{{   -26,    -41,    -84}, 0, {     0,      0}, {0xcc, 0xc2, 0x9f, 0xff}}},
+    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
+    {{{    22,    -41,     87}, 0, {     0,      0}, {0x1f, 0xc9, 0x6d, 0xff}}},
+    {{{     9,      0,     94}, 0, {     0,      0}, {0x0e, 0x03, 0x7e, 0xff}}},
+    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
+};
+
+// 0x04016598
+static const Vtx mario_seg4_vertex_04016598[] = {
+    {{{   -26,     49,     88}, 0, {     0,      0}, {0xc4, 0x29, 0x67, 0xff}}},
+    {{{     9,      0,     94}, 0, {     0,      0}, {0x0e, 0x03, 0x7e, 0xff}}},
+    {{{    36,     47,     77}, 0, {     0,      0}, {0x2f, 0x37, 0x68, 0xff}}},
+    {{{     9,      0,    -93}, 0, {     0,      0}, {0x0e, 0x03, 0x82, 0xff}}},
+    {{{   -26,     49,    -87}, 0, {     0,      0}, {0xc4, 0x29, 0x99, 0xff}}},
+    {{{    36,     47,    -76}, 0, {     0,      0}, {0x2e, 0x36, 0x98, 0xff}}},
+    {{{   -26,    -41,    -84}, 0, {     0,      0}, {0xcc, 0xc2, 0x9f, 0xff}}},
+    {{{    22,    -41,    -86}, 0, {     0,      0}, {0x1e, 0xca, 0x92, 0xff}}},
+    {{{    40,    -66,    -47}, 0, {     0,      0}, {0x1d, 0x91, 0xcb, 0xff}}},
+    {{{   -26,    -72,    -38}, 0, {     0,      0}, {0xda, 0x8b, 0xe5, 0xff}}},
+    {{{    54,    -68,      0}, 0, {     0,      0}, {0x2d, 0x8a, 0x00, 0xff}}},
+    {{{   -26,    -72,     39}, 0, {     0,      0}, {0xda, 0x8b, 0x1b, 0xff}}},
+    {{{    40,    -66,     48}, 0, {     0,      0}, {0x1d, 0x91, 0x35, 0xff}}},
+};
+
+// 0x04016668 - 0x040166B8
+const Gfx mario_medium_poly_yellow_button_dl[] = {
+    gsSPVertex(mario_seg4_vertex_04016148, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 2,  1,  4, 0x0,  4,  5,  2, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  6, 0x0),
+    gsSP2Triangles( 6, 10,  7, 0x0,  7, 10, 11, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040166B8 - 0x04016800
+const Gfx mario_medium_poly_pants_overalls_shared_dl[] = {
+    gsSPVertex(mario_seg4_vertex_04016398, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  0,  3, 0x0),
+    gsSP2Triangles( 3,  4,  1, 0x0,  2,  5,  0, 0x0),
+    gsSP2Triangles( 4,  3,  6, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles( 7, 10, 11, 0x0,  8,  7, 11, 0x0),
+    gsSP2Triangles(11, 10,  2, 0x0, 10, 12,  2, 0x0),
+    gsSP1Triangle(13, 14, 15, 0x0),
+    gsSPVertex(mario_seg4_vertex_04016498, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+    gsSP2Triangles( 4,  2,  1, 0x0,  1,  3,  4, 0x0),
+    gsSP2Triangles( 5,  2,  4, 0x0,  6,  2,  5, 0x0),
+    gsSP2Triangles( 4,  3,  7, 0x0,  8,  9,  7, 0x0),
+    gsSP2Triangles( 5,  4,  7, 0x0,  9, 10,  7, 0x0),
+    gsSP2Triangles(11,  8,  7, 0x0,  3, 11,  7, 0x0),
+    gsSP2Triangles( 7, 10,  5, 0x0, 10,  9, 12, 0x0),
+    gsSP2Triangles(10, 13, 14, 0x0, 12, 13, 10, 0x0),
+    gsSP2Triangles( 5, 10, 14, 0x0,  9,  8, 15, 0x0),
+    gsSPVertex(mario_seg4_vertex_04016598, 13, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  4,  3, 0x0,  6,  3,  7, 0x0),
+    gsSP2Triangles( 8,  9,  6, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 9,  8, 10, 0x0, 11, 10, 12, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016800 - 0x040168A0
+const Gfx mario_medium_poly_tshirt_shared_dl[] = {
+    gsSPVertex(mario_seg4_vertex_04016208, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 1,  0,  4, 0x0,  0,  5,  4, 0x0),
+    gsSP2Triangles( 6,  4,  5, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles( 9, 10,  7, 0x0,  7, 10, 11, 0x0),
+    gsSP2Triangles( 7, 12,  8, 0x0, 11, 12,  7, 0x0),
+    gsSP1Triangle(13, 14, 15, 0x0),
+    gsSPVertex(mario_seg4_vertex_04016308, 9, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 1,  4,  2, 0x0,  2,  4,  5, 0x0),
+    gsSP2Triangles( 5,  3,  2, 0x0,  6,  7,  8, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040168A0 - 0x040168C8
+const Gfx mario_medium_poly_torso_dl[] = {
+    gsSPDisplayList(mario_medium_poly_pants_overalls_shared_dl),
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_medium_poly_tshirt_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040168C8 - 0x04016948
+const Gfx mario_medium_poly_torso[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_yellow_button),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_medium_poly_yellow_button_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_medium_poly_torso_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016948 - 0x04016968
+const Gfx mario_metal_medium_poly_torso[] = {
+    gsSPDisplayList(mario_medium_poly_yellow_button_dl),
+    gsSPDisplayList(mario_medium_poly_pants_overalls_shared_dl),
+    gsSPDisplayList(mario_medium_poly_tshirt_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016968
+static const Vtx mario_low_poly_butt_dl_vertex[] = {
+    {{{   -37,    -37,      0}, 0, {     0,      0}, {0x82, 0xf5, 0x00, 0x00}}},
+    {{{    -2,     52,     92}, 0, {     0,      0}, {0xb1, 0x3c, 0x4e, 0x00}}},
+    {{{   -35,     55,      0}, 0, {     0,      0}, {0x97, 0x45, 0x00, 0x00}}},
+    {{{    -7,    -86,     85}, 0, {     0,      0}, {0xbf, 0xc4, 0x5a, 0x00}}},
+    {{{    49,     46,     96}, 0, {     0,      0}, {0x4b, 0x1d, 0x61, 0x00}}},
+    {{{    -7,    -86,    -85}, 0, {     0,      0}, {0xcf, 0xaa, 0xb2, 0x00}}},
+    {{{    -2,     52,    -92}, 0, {     0,      0}, {0xb0, 0x3b, 0xb2, 0x00}}},
+    {{{    48,     44,    -98}, 0, {     0,      0}, {0x29, 0x22, 0x8e, 0x00}}},
+    {{{    46,    -71,    -89}, 0, {     0,      0}, {0x73, 0xd9, 0xdd, 0x00}}},
+    {{{    46,    -71,     89}, 0, {     0,      0}, {0x44, 0xa1, 0x2f, 0x00}}},
+    {{{    49,     96,      0}, 0, {     0,      0}, {0x2b, 0x77, 0x00, 0x00}}},
+};
+
+// 0x04016A18 - 0x04016AB8
+const Gfx mario_low_poly_butt_dl[] = {
+    gsSPVertex(mario_low_poly_butt_dl_vertex, 11, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+    gsSP2Triangles( 5,  6,  7, 0x0,  0,  2,  6, 0x0),
+    gsSP2Triangles( 6,  5,  0, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 7,  8,  5, 0x0,  3,  9,  4, 0x0),
+    gsSP2Triangles( 8,  7, 10, 0x0,  4,  9,  8, 0x0),
+    gsSP2Triangles( 5,  9,  3, 0x0,  3,  0,  5, 0x0),
+    gsSP2Triangles( 5,  8,  9, 0x0, 10,  7,  6, 0x0),
+    gsSP2Triangles(10,  4,  8, 0x0,  2,  1, 10, 0x0),
+    gsSP2Triangles( 6,  2, 10, 0x0,  1,  4, 10, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016AB8 - 0x04016AE8
+const Gfx mario_low_poly_butt[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPLight(&mario_blue_lights_group.l, 1),
+    gsSPLight(&mario_blue_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_butt_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016AE8 - 0x04016B60
+const Gfx mario_metal_low_poly_butt[] = {
+    gsDPPipeSync(),
+    gsSPSetGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_butt_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016B60
+static const Vtx mario_low_poly_left_arm_shared_dl_vertex[] = {
+    {{{    -6,     28,     10}, 0, {     0,      0}, {0x09, 0x65, 0xb5, 0x00}}},
+    {{{    72,     21,      8}, 0, {     0,      0}, {0x44, 0x4d, 0x48, 0x00}}},
+    {{{    71,    -11,    -34}, 0, {     0,      0}, {0x3f, 0x57, 0xbe, 0x00}}},
+    {{{    -8,    -30,     31}, 0, {     0,      0}, {0x09, 0x26, 0x78, 0x00}}},
+    {{{    71,    -30,     23}, 0, {     0,      0}, {0x5e, 0x15, 0x51, 0x00}}},
+    {{{    -6,     28,     10}, 0, {     0,      0}, {0x07, 0x29, 0x77, 0x00}}},
+    {{{    -8,     -7,    -41}, 0, {     0,      0}, {0x0b, 0x67, 0xb8, 0x00}}},
+    {{{    -8,    -30,     31}, 0, {     0,      0}, {0xa4, 0xad, 0xe5, 0x00}}},
+    {{{    -6,     28,     10}, 0, {     0,      0}, {0x81, 0x02, 0x00, 0x00}}},
+    {{{    -8,     -7,    -41}, 0, {     0,      0}, {0xa4, 0xad, 0xe5, 0x00}}},
+    {{{    71,    -11,    -34}, 0, {     0,      0}, {0xfd, 0x88, 0xd9, 0x00}}},
+    {{{    71,    -30,     23}, 0, {     0,      0}, {0xfd, 0x88, 0xd9, 0x00}}},
+};
+
+// 0x04016C20 - 0x04016C70
+const Gfx mario_low_poly_left_arm_shared_dl[] = {
+    gsSPVertex(mario_low_poly_left_arm_shared_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 5,  3,  1, 0x0,  6,  0,  2, 0x0),
+    gsSP2Triangles( 7,  8,  9, 0x0,  2,  1,  4, 0x0),
+    gsSP2Triangles( 7,  9, 10, 0x0,  7, 10, 11, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016C70 - 0x04016C90
+const Gfx mario_low_poly_left_arm[] = {
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_left_arm_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016C90
+static const Vtx mario_low_poly_left_forearm_shared_dl_vertex[] = {
+    {{{    -5,     20,      6}, 0, {     0,      0}, {0x05, 0x62, 0xb0, 0x00}}},
+    {{{    67,     16,      5}, 0, {     0,      0}, {0x43, 0x4b, 0x4c, 0x00}}},
+    {{{    67,    -14,    -31}, 0, {     0,      0}, {0x3c, 0x55, 0xba, 0x00}}},
+    {{{    -5,    -30,     21}, 0, {     0,      0}, {0x05, 0x20, 0x7a, 0x00}}},
+    {{{    67,    -30,     17}, 0, {     0,      0}, {0x5c, 0x14, 0x54, 0x00}}},
+    {{{    -5,     20,      6}, 0, {     0,      0}, {0x04, 0x22, 0x7a, 0x00}}},
+    {{{    -5,    -12,    -35}, 0, {     0,      0}, {0x07, 0x63, 0xb2, 0x00}}},
+    {{{    -5,    -30,     21}, 0, {     0,      0}, {0xa5, 0xad, 0xe5, 0x00}}},
+    {{{    -5,     20,      6}, 0, {     0,      0}, {0x81, 0x01, 0x00, 0x00}}},
+    {{{    -5,    -12,    -35}, 0, {     0,      0}, {0xa5, 0xad, 0xe5, 0x00}}},
+    {{{    67,    -30,     17}, 0, {     0,      0}, {0xfe, 0x88, 0xd9, 0x00}}},
+    {{{    67,    -14,    -31}, 0, {     0,      0}, {0xfe, 0x88, 0xd9, 0x00}}},
+};
+
+// 0x04016D50 - 0x04016DA0
+const Gfx mario_low_poly_left_forearm_shared_dl[] = {
+    gsSPVertex(mario_low_poly_left_forearm_shared_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 5,  3,  1, 0x0,  6,  0,  2, 0x0),
+    gsSP2Triangles( 7,  8,  9, 0x0,  2,  1,  4, 0x0),
+    gsSP2Triangles(10,  7,  9, 0x0, 10,  9, 11, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016DA0
+static const Vtx mario_low_poly_left_hand_closed_shared_dl_vertex[] = {
+    {{{    -6,     34,    -25}, 0, {     0,      0}, {0xa0, 0x13, 0xb0, 0x00}}},
+    {{{    -9,     39,     24}, 0, {     0,      0}, {0xb3, 0x43, 0x4a, 0x00}}},
+    {{{    91,     80,    -34}, 0, {     0,      0}, {0x13, 0x7c, 0xee, 0x00}}},
+    {{{    90,     35,     33}, 0, {     0,      0}, {0x41, 0x14, 0x6b, 0x00}}},
+    {{{    20,    -34,     21}, 0, {     0,      0}, {0xd4, 0x9a, 0x3c, 0x00}}},
+    {{{   122,      4,    -45}, 0, {     0,      0}, {0x63, 0xbb, 0x25, 0x00}}},
+    {{{   122,      4,    -45}, 0, {     0,      0}, {0xf2, 0x15, 0x84, 0x00}}},
+    {{{    20,    -31,    -44}, 0, {     0,      0}, {0xcb, 0xae, 0xb1, 0x00}}},
+};
+
+// 0x04016E20 - 0x04016E80
+const Gfx mario_low_poly_left_hand_closed_shared_dl[] = {
+    gsSPVertex(mario_low_poly_left_hand_closed_shared_dl_vertex, 8, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+    gsSP2Triangles( 4,  5,  3, 0x0,  0,  6,  7, 0x0),
+    gsSP2Triangles( 0,  2,  6, 0x0,  4,  7,  5, 0x0),
+    gsSP2Triangles( 3,  1,  4, 0x0,  2,  3,  5, 0x0),
+    gsSP2Triangles( 0,  7,  4, 0x0,  4,  1,  0, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016E80 - 0x04016EA0
+const Gfx mario_low_poly_left_hand_closed[] = {
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_left_hand_closed_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016EA0
+static const Vtx mario_low_poly_right_arm_shared_dl_vertex[] = {
+    {{{    65,     30,     23}, 0, {     0,      0}, {0x5e, 0xeb, 0x51, 0x00}}},
+    {{{    66,    -21,      8}, 0, {     0,      0}, {0x45, 0xb3, 0x49, 0x00}}},
+    {{{    65,     11,    -34}, 0, {     0,      0}, {0x40, 0xa9, 0xbf, 0x00}}},
+    {{{   -10,      7,    -41}, 0, {     0,      0}, {0xa4, 0x52, 0xe5, 0x00}}},
+    {{{    -9,    -28,     10}, 0, {     0,      0}, {0x81, 0xfe, 0x00, 0x00}}},
+    {{{   -10,     30,     30}, 0, {     0,      0}, {0xa4, 0x52, 0xe5, 0x00}}},
+    {{{    -9,    -28,     10}, 0, {     0,      0}, {0x09, 0x9a, 0xb6, 0x00}}},
+    {{{   -10,      7,    -41}, 0, {     0,      0}, {0x0c, 0x99, 0xb8, 0x00}}},
+    {{{   -10,     30,     30}, 0, {     0,      0}, {0x0a, 0xdb, 0x78, 0x00}}},
+    {{{    -9,    -28,     10}, 0, {     0,      0}, {0x07, 0xd8, 0x78, 0x00}}},
+    {{{    65,     30,     23}, 0, {     0,      0}, {0xfc, 0x78, 0xd9, 0x00}}},
+    {{{    65,     11,    -34}, 0, {     0,      0}, {0xfc, 0x78, 0xd9, 0x00}}},
+};
+
+// 0x04016F60 - 0x04016FB0
+const Gfx mario_low_poly_right_arm_shared_dl[] = {
+    gsSPVertex(mario_low_poly_right_arm_shared_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 2,  6,  7, 0x0,  1,  8,  9, 0x0),
+    gsSP2Triangles( 1,  0,  8, 0x0,  2,  1,  6, 0x0),
+    gsSP2Triangles( 5, 10, 11, 0x0,  5, 11,  3, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016FB0 - 0x04016FD0
+const Gfx mario_low_poly_right_arm[] = {
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_right_arm_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04016FD0
+static const Vtx mario_low_poly_right_forearm_shared_dl_vertex[] = {
+    {{{   -13,     12,    -35}, 0, {     0,      0}, {0xa5, 0x53, 0xe5, 0x00}}},
+    {{{   -13,    -20,      6}, 0, {     0,      0}, {0x81, 0xff, 0x00, 0x00}}},
+    {{{   -13,     30,     21}, 0, {     0,      0}, {0xa5, 0x53, 0xe5, 0x00}}},
+    {{{    54,     14,    -31}, 0, {     0,      0}, {0x3d, 0xaa, 0xba, 0x00}}},
+    {{{   -13,    -20,      6}, 0, {     0,      0}, {0x05, 0x9e, 0xb1, 0x00}}},
+    {{{   -13,     12,    -35}, 0, {     0,      0}, {0x07, 0x9c, 0xb3, 0x00}}},
+    {{{    55,    -16,      5}, 0, {     0,      0}, {0x43, 0xb5, 0x4c, 0x00}}},
+    {{{   -13,     30,     21}, 0, {     0,      0}, {0x05, 0xe0, 0x7a, 0x00}}},
+    {{{   -13,    -20,      6}, 0, {     0,      0}, {0x04, 0xde, 0x7a, 0x00}}},
+    {{{    54,     30,     17}, 0, {     0,      0}, {0x5c, 0xed, 0x54, 0x00}}},
+    {{{    54,     30,     17}, 0, {     0,      0}, {0xfe, 0x78, 0xd8, 0x00}}},
+    {{{    54,     14,    -31}, 0, {     0,      0}, {0xfe, 0x78, 0xd8, 0x00}}},
+};
+
+// 0x04017090 - 0x040170E0
+const Gfx mario_low_poly_right_forearm_shared_dl[] = {
+    gsSPVertex(mario_low_poly_right_forearm_shared_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  6,  9,  7, 0x0),
+    gsSP2Triangles( 3,  6,  4, 0x0,  2, 10, 11, 0x0),
+    gsSP2Triangles( 2, 11,  0, 0x0,  9,  6,  3, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040170E0
+static const Vtx mario_low_poly_right_hand_closed_dl_vertex[] = {
+    {{{    85,    -38,    -32}, 0, {     0,      0}, {0x3d, 0xe3, 0x96, 0x00}}},
+    {{{   -15,    -35,    -22}, 0, {     0,      0}, {0x99, 0xdc, 0xc1, 0x00}}},
+    {{{    17,     37,    -22}, 0, {     0,      0}, {0xfe, 0x69, 0xb9, 0x00}}},
+    {{{   116,    -10,     36}, 0, {     0,      0}, {0x66, 0x47, 0x16, 0x00}}},
+    {{{    82,    -85,     44}, 0, {     0,      0}, {0x13, 0x8a, 0xd8, 0x00}}},
+    {{{   -15,    -35,     43}, 0, {     0,      0}, {0x9d, 0xec, 0x4c, 0x00}}},
+    {{{    82,    -85,     44}, 0, {     0,      0}, {0x02, 0x15, 0x7d, 0x00}}},
+    {{{    14,     30,     26}, 0, {     0,      0}, {0xca, 0x50, 0x51, 0x00}}},
+};
+
+// 0x04017160 - 0x040171C0
+const Gfx mario_low_poly_right_hand_closed_dl[] = {
+    gsSPVertex(mario_low_poly_right_hand_closed_dl_vertex, 8, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 4,  0,  3, 0x0,  4,  5,  1, 0x0),
+    gsSP2Triangles( 6,  3,  7, 0x0,  5,  6,  7, 0x0),
+    gsSP2Triangles( 0,  4,  1, 0x0,  3,  2,  7, 0x0),
+    gsSP2Triangles( 1,  5,  7, 0x0,  7,  2,  1, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040171C0 - 0x040171E0
+const Gfx mario_low_poly_right_hand_closed[] = {
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_right_hand_closed_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040171E0 - 0x04017210
+const Gfx mario_metal_low_poly_right_hand_closed[] = {
+    gsSPDisplayList(mario_low_poly_right_hand_closed_dl),
+    gsDPPipeSync(),
+    gsSPClearGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017210
+static const Vtx mario_low_poly_left_thigh_dl_vertex[] = {
+    {{{    10,     51,     45}, 0, {     0,      0}, {0x08, 0x73, 0x34, 0x00}}},
+    {{{    17,    -44,     58}, 0, {     0,      0}, {0x0a, 0x11, 0x7d, 0x00}}},
+    {{{    94,     48,     38}, 0, {     0,      0}, {0x38, 0x40, 0x5d, 0x00}}},
+    {{{    11,     51,    -27}, 0, {     0,      0}, {0x0b, 0x5e, 0xad, 0x00}}},
+    {{{    95,     48,    -19}, 0, {     0,      0}, {0x4a, 0x4f, 0xbf, 0x00}}},
+    {{{    18,    -45,    -38}, 0, {     0,      0}, {0x0c, 0x0f, 0x83, 0x00}}},
+    {{{   101,    -28,    -28}, 0, {     0,      0}, {0x5b, 0xca, 0xbc, 0x00}}},
+    {{{   100,    -28,     48}, 0, {     0,      0}, {0x63, 0xbd, 0x29, 0x00}}},
+    {{{    17,    -44,     58}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{    10,     51,     45}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{    18,    -45,    -38}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{    11,     51,    -27}, 0, {     0,      0}, {0x82, 0xf7, 0xff, 0x00}}},
+    {{{    18,    -45,    -38}, 0, {     0,      0}, {0x18, 0x84, 0x01, 0x00}}},
+    {{{    17,    -44,     58}, 0, {     0,      0}, {0x18, 0x84, 0x01, 0x00}}},
+};
+
+// 0x040172F0 - 0x04017360
+const Gfx mario_low_poly_left_thigh_dl[] = {
+    gsSPVertex(mario_low_poly_left_thigh_dl_vertex, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+    gsSP2Triangles( 5,  3,  4, 0x0,  4,  6,  5, 0x0),
+    gsSP2Triangles( 0,  2,  4, 0x0,  1,  7,  2, 0x0),
+    gsSP2Triangles( 8,  9, 10, 0x0,  9, 11, 10, 0x0),
+    gsSP2Triangles( 6,  4,  7, 0x0,  4,  2,  7, 0x0),
+    gsSP2Triangles(12,  7, 13, 0x0, 12,  6,  7, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017360 - 0x04017390
+const Gfx mario_low_poly_left_thigh[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPLight(&mario_blue_lights_group.l, 1),
+    gsSPLight(&mario_blue_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_left_thigh_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017390 - 0x04017408
+const Gfx mario_metal_low_poly_left_thigh[] = {
+    gsDPPipeSync(),
+    gsSPSetGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_left_thigh_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017408
+static const Vtx mario_low_poly_left_leg_shared_dl_vertex[] = {
+    {{{     7,     47,     38}, 0, {     0,      0}, {0xcf, 0x59, 0x4b, 0x00}}},
+    {{{    70,    -39,     53}, 0, {     0,      0}, {0xf8, 0x10, 0x7d, 0x00}}},
+    {{{    75,     52,     42}, 0, {     0,      0}, {0xf4, 0x5e, 0x53, 0x00}}},
+    {{{    75,     52,    -23}, 0, {     0,      0}, {0xf5, 0x72, 0xca, 0x00}}},
+    {{{     7,     47,    -20}, 0, {     0,      0}, {0xab, 0x34, 0xb2, 0x00}}},
+    {{{    71,    -39,    -34}, 0, {     0,      0}, {0xfa, 0x0f, 0x83, 0x00}}},
+    {{{     3,    -29,    -29}, 0, {     0,      0}, {0xbb, 0xa4, 0xcd, 0x00}}},
+    {{{     2,    -29,     48}, 0, {     0,      0}, {0x92, 0xdb, 0x31, 0x00}}},
+    {{{    71,    -39,    -34}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+    {{{    75,     52,    -23}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+    {{{    70,    -39,     53}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+    {{{    75,     52,     42}, 0, {     0,      0}, {0x7e, 0xfa, 0x01, 0x00}}},
+    {{{    71,    -39,    -34}, 0, {     0,      0}, {0xed, 0x83, 0x00, 0x00}}},
+    {{{    70,    -39,     53}, 0, {     0,      0}, {0xed, 0x83, 0x00, 0x00}}},
+};
+
+// 0x040174E8 - 0x04017558
+const Gfx mario_low_poly_left_leg_shared_dl[] = {
+    gsSPVertex(mario_low_poly_left_leg_shared_dl_vertex, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  4, 0x0),
+    gsSP2Triangles( 3,  4,  0, 0x0,  0,  7,  1, 0x0),
+    gsSP2Triangles( 7,  4,  6, 0x0,  7,  0,  4, 0x0),
+    gsSP2Triangles( 8,  9, 10, 0x0,  9, 11, 10, 0x0),
+    gsSP2Triangles( 6, 12, 13, 0x0, 13,  7,  6, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017558
+static const Vtx mario_low_poly_left_foot_shared_dl_vertex[] = {
+    {{{   110,     11,     56}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   109,     10,    -33}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -50,     69,    -36}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{   -49,     70,     63}, 0, {     0,      0}, {0x2b, 0x77, 0xff, 0x00}}},
+    {{{    74,    -39,     51}, 0, {     0,      0}, {0x13, 0xb0, 0x60, 0x00}}},
+    {{{   110,     11,     56}, 0, {     0,      0}, {0x5b, 0xbb, 0x36, 0x00}}},
+    {{{   -49,     70,     63}, 0, {     0,      0}, {0x00, 0xf4, 0x7e, 0x00}}},
+    {{{    73,    -40,    -25}, 0, {     0,      0}, {0x18, 0x96, 0xc0, 0x00}}},
+    {{{   -56,     20,    -30}, 0, {     0,      0}, {0xa4, 0xc5, 0xc2, 0x00}}},
+    {{{   -50,     69,    -36}, 0, {     0,      0}, {0xfe, 0xf0, 0x83, 0x00}}},
+    {{{   -54,     20,     58}, 0, {     0,      0}, {0x99, 0xc2, 0x26, 0x00}}},
+    {{{   109,     10,    -33}, 0, {     0,      0}, {0x44, 0xc2, 0xaa, 0x00}}},
+    {{{   -50,     69,    -36}, 0, {     0,      0}, {0x82, 0x0e, 0x01, 0x00}}},
+    {{{   -49,     70,     63}, 0, {     0,      0}, {0x82, 0x0e, 0x01, 0x00}}},
+};
+
+// 0x04017638 - 0x040176A8
+const Gfx mario_low_poly_left_foot_shared_dl[] = {
+    gsSPVertex(mario_low_poly_left_foot_shared_dl_vertex, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles(10,  4,  6, 0x0,  7,  9, 11, 0x0),
+    gsSP2Triangles(12, 10, 13, 0x0,  7, 10,  8, 0x0),
+    gsSP2Triangles( 7, 11,  5, 0x0,  5,  4,  7, 0x0),
+    gsSP2Triangles( 7,  4, 10, 0x0, 12,  8, 10, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040176A8 - 0x040176C8
+const Gfx mario_low_poly_left_foot[] = {
+    gsSPLight(&mario_brown1_lights_group.l, 1),
+    gsSPLight(&mario_brown1_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_left_foot_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040176C8
+static const Vtx mario_low_poly_right_thigh_shared_dl_vertex[] = {
+    {{{   102,    -25,    -48}, 0, {     0,      0}, {0x64, 0xbf, 0xd5, 0x00}}},
+    {{{   103,    -27,     25}, 0, {     0,      0}, {0x5c, 0xc9, 0x42, 0x00}}},
+    {{{    25,    -45,     35}, 0, {     0,      0}, {0x1b, 0x85, 0xfd, 0x00}}},
+    {{{    24,    -42,    -56}, 0, {     0,      0}, {0x1b, 0x85, 0xfd, 0x00}}},
+    {{{    95,     50,    -36}, 0, {     0,      0}, {0x37, 0x42, 0xa3, 0x00}}},
+    {{{    96,     49,     18}, 0, {     0,      0}, {0x4a, 0x4e, 0x41, 0x00}}},
+    {{{    25,    -45,     35}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{    17,     51,     27}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{    15,     53,    -42}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{    24,    -42,    -56}, 0, {     0,      0}, {0x82, 0xf5, 0x02, 0x00}}},
+    {{{    24,    -42,    -56}, 0, {     0,      0}, {0x09, 0x13, 0x83, 0x00}}},
+    {{{    15,     53,    -42}, 0, {     0,      0}, {0x07, 0x74, 0xce, 0x00}}},
+    {{{    25,    -45,     35}, 0, {     0,      0}, {0x0d, 0x0c, 0x7d, 0x00}}},
+    {{{    17,     51,     27}, 0, {     0,      0}, {0x0b, 0x5c, 0x55, 0x00}}},
+};
+
+// 0x040177A8 - 0x04017818
+const Gfx mario_low_poly_right_thigh_shared_dl[] = {
+    gsSPVertex(mario_low_poly_right_thigh_shared_dl_vertex, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 0,  4,  5, 0x0,  0,  5,  1, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  6,  8,  9, 0x0),
+    gsSP2Triangles( 4,  0, 10, 0x0,  5,  4, 11, 0x0),
+    gsSP2Triangles(12,  1,  5, 0x0,  5, 13, 12, 0x0),
+    gsSP2Triangles( 5, 11, 13, 0x0,  4, 10, 11, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017818 - 0x04017838
+const Gfx mario_low_poly_right_thigh[] = {
+    gsSPLight(&mario_blue_lights_group.l, 1),
+    gsSPLight(&mario_blue_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_right_thigh_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017838
+static const Vtx mario_low_poly_right_leg_shared_dl_vertex[] = {
+    {{{     2,    -29,     27}, 0, {     0,      0}, {0xba, 0xa3, 0x31, 0x00}}},
+    {{{     1,    -26,    -50}, 0, {     0,      0}, {0x91, 0xdd, 0xcf, 0x00}}},
+    {{{    68,    -37,    -56}, 0, {     0,      0}, {0xec, 0x83, 0xfd, 0x00}}},
+    {{{    70,    -40,     30}, 0, {     0,      0}, {0xec, 0x83, 0xfd, 0x00}}},
+    {{{    68,    -37,    -56}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+    {{{    74,     54,    -43}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+    {{{    75,     52,     21}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+    {{{    70,    -40,     30}, 0, {     0,      0}, {0x7e, 0xf9, 0xfe, 0x00}}},
+    {{{     6,     47,     19}, 0, {     0,      0}, {0xad, 0x33, 0x50, 0x00}}},
+    {{{     6,     49,    -38}, 0, {     0,      0}, {0xcf, 0x5b, 0xb7, 0x00}}},
+    {{{    68,    -37,    -56}, 0, {     0,      0}, {0xf8, 0x13, 0x83, 0x00}}},
+    {{{    75,     52,     21}, 0, {     0,      0}, {0xf7, 0x71, 0x38, 0x00}}},
+    {{{    70,    -40,     30}, 0, {     0,      0}, {0xfb, 0x0c, 0x7e, 0x00}}},
+    {{{    74,     54,    -43}, 0, {     0,      0}, {0xf4, 0x60, 0xaf, 0x00}}},
+};
+
+// 0x04017918 - 0x04017988
+const Gfx mario_low_poly_right_leg_shared_dl[] = {
+    gsSPVertex(mario_low_poly_right_leg_shared_dl_vertex, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
+    gsSP2Triangles( 8,  9,  1, 0x0,  0,  8,  1, 0x0),
+    gsSP2Triangles(10,  1,  9, 0x0,  9,  8, 11, 0x0),
+    gsSP2Triangles( 8,  0, 12, 0x0, 12, 11,  8, 0x0),
+    gsSP2Triangles(11, 13,  9, 0x0, 13, 10,  9, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017988
+static const Vtx mario_low_poly_right_foot_dl_vertex[] = {
+    {{{   -55,     19,    -59}, 0, {     0,      0}, {0x9a, 0xc0, 0xda, 0x00}}},
+    {{{   -57,     20,     28}, 0, {     0,      0}, {0xa4, 0xc5, 0x3e, 0x00}}},
+    {{{   -52,     69,     34}, 0, {     0,      0}, {0x82, 0x0c, 0xfd, 0x00}}},
+    {{{    73,    -38,    -50}, 0, {     0,      0}, {0x15, 0xae, 0xa2, 0x00}}},
+    {{{    71,    -37,     25}, 0, {     0,      0}, {0x19, 0x98, 0x42, 0x00}}},
+    {{{   108,     12,    -55}, 0, {     0,      0}, {0x5c, 0xbc, 0xcc, 0x00}}},
+    {{{   106,     13,     33}, 0, {     0,      0}, {0x44, 0xc5, 0x58, 0x00}}},
+    {{{   -50,     68,    -65}, 0, {     0,      0}, {0x82, 0x0c, 0xfd, 0x00}}},
+    {{{   -52,     69,     34}, 0, {     0,      0}, {0xfd, 0xf2, 0x7e, 0x00}}},
+    {{{   -50,     68,    -65}, 0, {     0,      0}, {0x02, 0xf2, 0x82, 0x00}}},
+    {{{   -52,     69,     34}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   108,     12,    -55}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   -50,     68,    -65}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+    {{{   106,     13,     33}, 0, {     0,      0}, {0x29, 0x77, 0x00, 0x00}}},
+};
+
+// 0x04017A68 - 0x04017AD8
+const Gfx mario_low_poly_right_foot_dl[] = {
+    gsSPVertex(mario_low_poly_right_foot_dl_vertex, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  4, 0x0),
+    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  4, 0x0),
+    gsSP2Triangles( 1,  0,  4, 0x0,  7,  0,  2, 0x0),
+    gsSP2Triangles( 6,  8,  4, 0x0,  9,  3,  0, 0x0),
+    gsSP2Triangles( 8,  1,  4, 0x0,  9,  5,  3, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 10, 13, 11, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017AD8 - 0x04017B18
+const Gfx mario_low_poly_right_foot[] = {
+    gsSPLight(&mario_brown1_lights_group.l, 1),
+    gsSPLight(&mario_brown1_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_right_foot_dl),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsDPSetEnvColor(255, 255, 255, 255),
+    gsDPSetAlphaCompare(G_AC_NONE),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017B18 - 0x04017B58
+const Gfx mario_metal_low_poly_right_foot[] = {
+    gsSPDisplayList(mario_low_poly_right_foot_dl),
+    gsDPPipeSync(),
+    gsSPClearGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPSetEnvColor(255, 255, 255, 255),
+    gsDPSetAlphaCompare(G_AC_NONE),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017B58
+static const Vtx mario_seg4_vertex_04017B58[] = {
+    {{{   -28,     41,    -88}, 0, {  -396,   1646}, {0xb7, 0x31, 0xa5, 0xff}}},
+    {{{     0,     98,      0}, 0, {  1968,    722}, {0xf0, 0x7d, 0x00, 0xff}}},
+    {{{    35,     64,    -82}, 0, {  -390,    132}, {0x29, 0x4b, 0xa3, 0xff}}},
+    {{{    39,     90,      0}, 0, {  1698,   -280}, {0x4a, 0x67, 0x00, 0xff}}},
+    {{{   -28,     41,     89}, 0, {  1610,   1512}, {0xd1, 0x37, 0x67, 0xff}}},
+    {{{    35,     64,     83}, 0, {  1070,    -68}, {0x29, 0x4b, 0x5d, 0xff}}},
+    {{{     0,     98,      0}, 0, { -1064,    968}, {0xf0, 0x7d, 0x00, 0xff}}},
+    {{{    39,     90,      0}, 0, { -1146,   -124}, {0x4a, 0x67, 0x00, 0xff}}},
+};
+
+// 0x04017BD8
+static const Vtx mario_seg4_vertex_04017BD8[] = {
+    {{{   -28,    -71,     81}, 0, {     0,      0}, {0x9a, 0xbd, 0x20, 0xff}}},
+    {{{   -28,     41,    -88}, 0, {     0,      0}, {0xb7, 0x31, 0xa5, 0xff}}},
+    {{{   -28,    -71,    -80}, 0, {     0,      0}, {0xb7, 0xb5, 0xba, 0xff}}},
+    {{{    39,    -79,    -73}, 0, {     0,      0}, {0x27, 0xb3, 0xa4, 0xff}}},
+    {{{   -28,     41,     89}, 0, {     0,      0}, {0xd1, 0x37, 0x67, 0xff}}},
+    {{{   -28,     89,      0}, 0, {     0,      0}, {0x97, 0x46, 0x00, 0xff}}},
+    {{{    39,    -79,     74}, 0, {     0,      0}, {0x37, 0xba, 0x59, 0xff}}},
+    {{{    35,     64,     83}, 0, {     0,      0}, {0x29, 0x4b, 0x5d, 0xff}}},
+    {{{     0,     98,      0}, 0, {     0,      0}, {0xf0, 0x7d, 0x00, 0xff}}},
+    {{{    35,     64,    -82}, 0, {     0,      0}, {0x29, 0x4b, 0xa3, 0xff}}},
+    {{{    89,    -45,    -42}, 0, {     0,      0}, {0x70, 0xd0, 0xdf, 0xff}}},
+    {{{    89,    -45,     43}, 0, {     0,      0}, {0x75, 0xe4, 0x28, 0xff}}},
+    {{{    74,     26,    -59}, 0, {     0,      0}, {0x61, 0x25, 0xb9, 0xff}}},
+    {{{    39,     90,      0}, 0, {     0,      0}, {0x4a, 0x67, 0x00, 0xff}}},
+    {{{    74,     26,     60}, 0, {     0,      0}, {0x61, 0x25, 0x47, 0xff}}},
+};
+
+// 0x04017CC8
+static const Vtx mario_seg4_vertex_04017CC8[] = {
+    {{{    74,     26,     60}, 0, {     0,      0}, {0x61, 0x25, 0x47, 0xff}}},
+    {{{    87,     42,      0}, 0, {     0,      0}, {0x76, 0x2d, 0x00, 0xff}}},
+    {{{    39,     90,      0}, 0, {     0,      0}, {0x4a, 0x67, 0x00, 0xff}}},
+    {{{    39,    -79,    -73}, 0, {     0,      0}, {0x27, 0xb3, 0xa4, 0xff}}},
+    {{{    35,     64,    -82}, 0, {     0,      0}, {0x29, 0x4b, 0xa3, 0xff}}},
+    {{{    74,     26,    -59}, 0, {     0,      0}, {0x61, 0x25, 0xb9, 0xff}}},
+    {{{    89,    -45,    -42}, 0, {     0,      0}, {0x70, 0xd0, 0xdf, 0xff}}},
+    {{{    39,    -79,     74}, 0, {     0,      0}, {0x37, 0xba, 0x59, 0xff}}},
+    {{{    89,    -45,     43}, 0, {     0,      0}, {0x75, 0xe4, 0x28, 0xff}}},
+    {{{    35,     64,     83}, 0, {     0,      0}, {0x29, 0x4b, 0x5d, 0xff}}},
+};
+
+// 0x04017D68 - 0x04017D98
+const Gfx mario_low_poly_yellow_button_dl[] = {
+    gsSPVertex(mario_seg4_vertex_04017B58, 8, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  2,  1, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  6,  5,  7, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017D98 - 0x04017E20
+const Gfx mario_low_poly_pants_overalls_shared_dl[] = {
+    gsSPVertex(mario_seg4_vertex_04017BD8, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 0,  4,  5, 0x0,  3,  6,  0, 0x0),
+    gsSP2Triangles( 4,  0,  6, 0x0,  0,  5,  1, 0x0),
+    gsSP2Triangles( 7,  4,  6, 0x0,  5,  4,  8, 0x0),
+    gsSP2Triangles( 8,  1,  5, 0x0,  3,  1,  9, 0x0),
+    gsSP2Triangles( 3,  2,  1, 0x0,  6,  3, 10, 0x0),
+    gsSP2Triangles(10, 11,  6, 0x0, 12,  9, 13, 0x0),
+    gsSP1Triangle(13,  7, 14, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017E20 - 0x04017E78
+const Gfx mario_low_poly_tshirt_shared_dl[] = {
+    gsSPVertex(mario_seg4_vertex_04017CC8, 10, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 5,  6,  3, 0x0,  2,  1,  5, 0x0),
+    gsSP2Triangles( 6,  5,  1, 0x0,  7,  8,  0, 0x0),
+    gsSP2Triangles( 7,  0,  9, 0x0,  8,  6,  1, 0x0),
+    gsSP1Triangle( 1,  0,  8, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017E78 - 0x04017EA0
+const Gfx mario_low_poly_torso_dl[] = {
+    gsSPDisplayList(mario_low_poly_pants_overalls_shared_dl),
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_tshirt_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017EA0 - 0x04017F20
+const Gfx mario_low_poly_torso[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_yellow_button),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_yellow_button_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_torso_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017F20 - 0x04017F40
+const Gfx mario_metal_low_poly_torso[] = {
+    gsSPDisplayList(mario_low_poly_yellow_button_dl),
+    gsSPDisplayList(mario_low_poly_pants_overalls_shared_dl),
+    gsSPDisplayList(mario_low_poly_tshirt_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04017F40
+static const Vtx mario_low_poly_mario_m_logo_dl_vertex[] = {
+    {{{   272,     48,     53}, 0, {   904,      0}, {0x42, 0x51, 0x47, 0xff}}},
+    {{{   174,     79,     -9}, 0, {   452,    816}, {0x51, 0x61, 0xfa, 0xff}}},
+    {{{   146,     27,     92}, 0, {  1238,    962}, {0x03, 0x3a, 0x70, 0xff}}},
+    {{{   272,     48,    -52}, 0, {    -2,      0}, {0x62, 0x27, 0xba, 0xff}}},
+    {{{   146,     27,    -91}, 0, {  -334,    962}, {0x03, 0x39, 0x8f, 0xff}}},
+};
+
+// 0x04017F90
+static const Vtx mario_low_poly_eyes_cap_on_dl_vertex[] = {
+    {{{   146,     27,     92}, 0, {  1316,    212}, {0x03, 0x3a, 0x70, 0xff}}},
+    {{{   168,     79,      0}, 0, {   458,     68}, {0xd9, 0x78, 0x00, 0xff}}},
+    {{{    88,    101,     33}, 0, {   762,    990}, {0x38, 0x55, 0x4b, 0xff}}},
+    {{{    88,    101,    -32}, 0, {   154,    990}, {0x1e, 0x5d, 0xb1, 0xff}}},
+    {{{   146,     27,    -91}, 0, {  -398,    212}, {0x03, 0x39, 0x8f, 0xff}}},
+};
+
+// 0x04017FE0
+static const Vtx mario_low_poly_mustache_cap_on_dl_vertex[] = {
+    {{{    88,    101,    -32}, 0, {   398,    214}, {0x1e, 0x5d, 0xb1, 0xff}}},
+    {{{   146,     27,    -91}, 0, {  1408,   -550}, {0x03, 0x39, 0x8f, 0xff}}},
+    {{{    34,     39,    -98}, 0, {  1306,    732}, {0xcd, 0x40, 0xa0, 0xff}}},
+    {{{    44,    113,      0}, 0, {    10,    800}, {0x9c, 0x4d, 0x00, 0xff}}},
+    {{{    -5,     58,      0}, 0, {   300,   1456}, {0x88, 0x28, 0x00, 0xff}}},
+    {{{    88,    101,     33}, 0, {   294,    258}, {0x38, 0x55, 0x4b, 0xff}}},
+    {{{    44,    113,      0}, 0, {    34,    840}, {0x9c, 0x4d, 0x00, 0xff}}},
+    {{{    34,     39,     99}, 0, {  1314,    634}, {0xcd, 0x40, 0x60, 0xff}}},
+    {{{   146,     27,     92}, 0, {  1132,   -556}, {0x03, 0x3a, 0x70, 0xff}}},
+    {{{    -5,     58,      0}, 0, {   470,   1412}, {0x88, 0x28, 0x00, 0xff}}},
+};
+
+// 0x04018080
+static const Vtx mario_low_poly_face_cap_dl_vertex[] = {
+    {{{   272,     48,    -52}, 0, {     0,      0}, {0x62, 0x27, 0xba, 0xff}}},
+    {{{   272,     48,     53}, 0, {     0,      0}, {0x42, 0x51, 0x47, 0xff}}},
+    {{{   149,    -87,    138}, 0, {     0,      0}, {0x43, 0xb6, 0x4d, 0xff}}},
+    {{{   146,     27,    -91}, 0, {     0,      0}, {0x03, 0x39, 0x8f, 0xff}}},
+    {{{   149,    -87,   -137}, 0, {     0,      0}, {0x33, 0xc2, 0x9f, 0xff}}},
+    {{{   146,     27,     92}, 0, {     0,      0}, {0x03, 0x3a, 0x70, 0xff}}},
+    {{{    58,   -114,     81}, 0, {     0,      0}, {0xba, 0xad, 0x40, 0xff}}},
+    {{{    98,   -165,      0}, 0, {     0,      0}, {0xfd, 0x82, 0x00, 0xff}}},
+    {{{    58,   -114,    -80}, 0, {     0,      0}, {0xbc, 0xb8, 0xb2, 0xff}}},
+    {{{   168,     79,      0}, 0, {     0,      0}, {0xd9, 0x78, 0x00, 0xff}}},
+    {{{   175,    154,      0}, 0, {     0,      0}, {0xe1, 0x6c, 0xc6, 0xff}}},
+    {{{   174,     79,     -9}, 0, {     0,      0}, {0x51, 0x61, 0xfa, 0xff}}},
+};
+
+// 0x04018140
+static const Vtx mario_low_poly_face_part_cap_on_dl_vertex[] = {
+    {{{    94,    146,     33}, 0, {     0,      0}, {0xff, 0x44, 0x6b, 0xff}}},
+    {{{    50,    153,      0}, 0, {     0,      0}, {0xad, 0x5f, 0x00, 0xff}}},
+    {{{    44,    113,      0}, 0, {     0,      0}, {0x9c, 0x4d, 0x00, 0xff}}},
+    {{{    88,    101,     33}, 0, {     0,      0}, {0x38, 0x55, 0x4b, 0xff}}},
+    {{{    94,    146,    -32}, 0, {     0,      0}, {0x3b, 0x35, 0x9e, 0xff}}},
+    {{{    88,    101,    -32}, 0, {     0,      0}, {0x1e, 0x5d, 0xb1, 0xff}}},
+    {{{    34,     39,     99}, 0, {     0,      0}, {0xcd, 0x40, 0x60, 0xff}}},
+    {{{    -5,     58,      0}, 0, {     0,      0}, {0x88, 0x28, 0x00, 0xff}}},
+    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
+    {{{   146,     27,     92}, 0, {     0,      0}, {0x03, 0x3a, 0x70, 0xff}}},
+    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
+    {{{    34,     39,    -98}, 0, {     0,      0}, {0xcd, 0x40, 0xa0, 0xff}}},
+    {{{   146,     27,    -91}, 0, {     0,      0}, {0x03, 0x39, 0x8f, 0xff}}},
+};
+
+// 0x04018210
+static const Vtx mario_low_poly_face_back_hair_cap_on_dl_vertex[] = {
+    {{{    58,   -114,     81}, 0, {     0,      0}, {0xba, 0xad, 0x40, 0xff}}},
+    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
+    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
+    {{{    58,   -114,    -80}, 0, {     0,      0}, {0xbc, 0xb8, 0xb2, 0xff}}},
+    {{{   146,     27,     92}, 0, {     0,      0}, {0x03, 0x3a, 0x70, 0xff}}},
+    {{{   146,     27,    -91}, 0, {     0,      0}, {0x03, 0x39, 0x8f, 0xff}}},
+};
+
+// 0x04018270 - 0x04018298
+const Gfx mario_low_poly_mario_m_logo_dl[] = {
+    gsSPVertex(mario_low_poly_mario_m_logo_dl_vertex, 5, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP1Triangle( 3,  1,  0, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018298 - 0x040182C0
+const Gfx mario_low_poly_eyes_cap_on_dl[] = {
+    gsSPVertex(mario_low_poly_eyes_cap_on_dl_vertex, 5, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  4, 0x0),
+    gsSP1Triangle( 3,  2,  1, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040182C0 - 0x04018300
+const Gfx mario_low_poly_mustache_cap_on_dl[] = {
+    gsSPVertex(mario_low_poly_mustache_cap_on_dl_vertex, 10, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 2,  4,  3, 0x0,  5,  6,  7, 0x0),
+    gsSP2Triangles( 7,  8,  5, 0x0,  6,  9,  7, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018300 - 0x04018370
+const Gfx mario_low_poly_face_part_cap_on_dl[] = {
+    gsSPVertex(mario_low_poly_face_part_cap_on_dl_vertex, 13, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 2,  1,  4, 0x0,  2,  4,  5, 0x0),
+    gsSP2Triangles( 4,  1,  0, 0x0,  4,  0,  3, 0x0),
+    gsSP2Triangles( 5,  4,  3, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 9,  6,  8, 0x0,  8,  7, 10, 0x0),
+    gsSP2Triangles(10,  7, 11, 0x0, 10, 11, 12, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018370 - 0x040183F0
+const Gfx mario_low_poly_face_cap_dl[] = {
+    gsSPVertex(mario_low_poly_face_cap_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  4, 0x0),
+    gsSP2Triangles( 4,  0,  2, 0x0,  2,  1,  5, 0x0),
+    gsSP2Triangles( 6,  2,  5, 0x0,  6,  7,  2, 0x0),
+    gsSP2Triangles( 7,  4,  2, 0x0,  3,  4,  8, 0x0),
+    gsSP2Triangles( 4,  7,  8, 0x0,  9, 10,  3, 0x0),
+    gsSP2Triangles(10, 11,  3, 0x0,  8,  7,  6, 0x0),
+    gsSP2Triangles(10,  5, 11, 0x0, 10,  9,  5, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x040183F0 - 0x04018420
+const Gfx mario_low_poly_face_back_hair_cap_on_dl[] = {
+    gsSPVertex(mario_low_poly_face_back_hair_cap_on_dl_vertex, 6, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 4,  1,  0, 0x0,  3,  2,  5, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018420 - 0x04018460
+const Gfx mario_low_poly_face_cap_on_dl[] = {
+    gsSPDisplayList(mario_low_poly_face_part_cap_on_dl),
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_face_cap_dl),
+    gsSPLight(&mario_brown2_lights_group.l, 1),
+    gsSPLight(&mario_brown2_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_face_back_hair_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018460 - 0x04018530
+const Gfx mario_low_poly_cap_on_eyes_front[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018530 - 0x04018600
+const Gfx mario_low_poly_cap_on_eyes_half_closed[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018600 - 0x040186D0
+const Gfx mario_low_poly_cap_on_eyes_closed[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040186D0 - 0x040187A0
+const Gfx mario_low_poly_cap_on_eyes_right[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040187A0 - 0x04018870
+const Gfx mario_low_poly_cap_on_eyes_left[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018870 - 0x04018940
+const Gfx mario_low_poly_cap_on_eyes_up[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018940 - 0x04018A10
+const Gfx mario_low_poly_cap_on_eyes_down[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018A10 - 0x04018AE0
+const Gfx mario_low_poly_cap_on_eyes_dead[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018AE0 - 0x04018B18
+const Gfx mario_metal_low_poly_cap_on[] = {
+    gsSPDisplayList(mario_low_poly_mario_m_logo_dl),
+    gsSPDisplayList(mario_low_poly_eyes_cap_on_dl),
+    gsSPDisplayList(mario_low_poly_mustache_cap_on_dl),
+    gsSPDisplayList(mario_low_poly_face_part_cap_on_dl),
+    gsSPDisplayList(mario_low_poly_face_cap_dl),
+    gsSPDisplayList(mario_low_poly_face_back_hair_cap_on_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018B18
+static const Vtx mario_low_poly_mario_eyes_cap_off_dl_vertex[] = {
+    {{{   146,     27,     92}, 0, {  1316,    212}, {0x16, 0x25, 0x77, 0xff}}},
+    {{{   168,     79,      0}, 0, {   458,     68}, {0x27, 0x78, 0x00, 0xff}}},
+    {{{    88,    101,     33}, 0, {   762,    990}, {0x38, 0x55, 0x4b, 0xff}}},
+    {{{    88,    101,    -32}, 0, {   154,    990}, {0x1e, 0x5d, 0xb1, 0xff}}},
+    {{{   146,     27,    -91}, 0, {  -398,    212}, {0x14, 0x26, 0x89, 0xff}}},
+};
+
+// 0x04018B68
+static const Vtx mario_low_poly_mustache_cap_off_dl_vertex[] = {
+    {{{    34,     39,    -98}, 0, {  1306,    732}, {0xcd, 0x40, 0xa0, 0xff}}},
+    {{{    44,    113,      0}, 0, {    10,    800}, {0x9c, 0x4d, 0x00, 0xff}}},
+    {{{    88,    101,    -32}, 0, {   398,    214}, {0x1e, 0x5d, 0xb1, 0xff}}},
+    {{{    -5,     58,      0}, 0, {   300,   1456}, {0x88, 0x28, 0x00, 0xff}}},
+    {{{   146,     27,    -91}, 0, {  1408,   -550}, {0x14, 0x26, 0x89, 0xff}}},
+    {{{    88,    101,     33}, 0, {   294,    258}, {0x38, 0x55, 0x4b, 0xff}}},
+    {{{    44,    113,      0}, 0, {    34,    840}, {0x9c, 0x4d, 0x00, 0xff}}},
+    {{{    34,     39,     99}, 0, {  1314,    634}, {0xcd, 0x40, 0x60, 0xff}}},
+    {{{    -5,     58,      0}, 0, {   470,   1412}, {0x88, 0x28, 0x00, 0xff}}},
+    {{{   146,     27,     92}, 0, {  1132,   -556}, {0x16, 0x25, 0x77, 0xff}}},
+};
+
+// 0x04018C08
+static const Vtx mario_low_poly_face_part_cap_off_dl_vertex[] = {
+    {{{    44,    113,      0}, 0, {     0,      0}, {0x9c, 0x4d, 0x00, 0xff}}},
+    {{{    94,    146,    -32}, 0, {     0,      0}, {0x3b, 0x35, 0x9e, 0xff}}},
+    {{{    88,    101,    -32}, 0, {     0,      0}, {0x1e, 0x5d, 0xb1, 0xff}}},
+    {{{    50,    153,      0}, 0, {     0,      0}, {0xad, 0x5f, 0x00, 0xff}}},
+    {{{    88,    101,     33}, 0, {     0,      0}, {0x38, 0x55, 0x4b, 0xff}}},
+    {{{    94,    146,     33}, 0, {     0,      0}, {0xff, 0x44, 0x6b, 0xff}}},
+    {{{   146,     27,     92}, 0, {     0,      0}, {0x16, 0x25, 0x77, 0xff}}},
+    {{{    34,     39,     99}, 0, {     0,      0}, {0xcd, 0x40, 0x60, 0xff}}},
+    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
+    {{{    -5,     58,      0}, 0, {     0,      0}, {0x88, 0x28, 0x00, 0xff}}},
+    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
+    {{{    34,     39,    -98}, 0, {     0,      0}, {0xcd, 0x40, 0xa0, 0xff}}},
+    {{{   146,     27,    -91}, 0, {     0,      0}, {0x14, 0x26, 0x89, 0xff}}},
+};
+
+// 0x04018CD8
+static const Vtx mario_low_poly_face_hair_cap_off_dl_vertex[] = {
+    {{{    58,   -114,     81}, 0, {     0,      0}, {0xd3, 0x9b, 0x3d, 0xff}}},
+    {{{     7,    -85,     79}, 0, {     0,      0}, {0xaa, 0xdc, 0x54, 0xff}}},
+    {{{     7,    -85,    -78}, 0, {     0,      0}, {0xa9, 0xc7, 0xb9, 0xff}}},
+    {{{   146,     27,     92}, 0, {     0,      0}, {0x16, 0x25, 0x77, 0xff}}},
+    {{{   167,   -121,     77}, 0, {     0,      0}, {0x3c, 0xad, 0x4a, 0xff}}},
+    {{{    58,   -114,    -80}, 0, {     0,      0}, {0xd8, 0xa3, 0xb5, 0xff}}},
+    {{{    90,   -136,      0}, 0, {     0,      0}, {0xf0, 0x83, 0x00, 0xff}}},
+    {{{   146,     27,    -91}, 0, {     0,      0}, {0x14, 0x26, 0x89, 0xff}}},
+    {{{   167,   -121,    -81}, 0, {     0,      0}, {0x3a, 0xad, 0xb5, 0xff}}},
+    {{{   218,     48,    -52}, 0, {     0,      0}, {0x5f, 0x3b, 0xc6, 0xff}}},
+    {{{   168,     79,      0}, 0, {     0,      0}, {0x27, 0x78, 0x00, 0xff}}},
+    {{{   192,    -28,    -80}, 0, {     0,      0}, {0x55, 0xf7, 0xa3, 0xff}}},
+    {{{   223,    -38,     -1}, 0, {     0,      0}, {0x7b, 0xe2, 0x00, 0xff}}},
+    {{{   218,     48,     53}, 0, {     0,      0}, {0x60, 0x39, 0x3a, 0xff}}},
+    {{{   192,    -28,     78}, 0, {     0,      0}, {0x56, 0xf4, 0x5c, 0xff}}},
+};
+
+// 0x04018DC8 - 0x04018DF0
+const Gfx mario_low_poly_mario_eyes_cap_off_dl[] = {
+    gsSPVertex(mario_low_poly_mario_eyes_cap_off_dl_vertex, 5, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  4, 0x0),
+    gsSP1Triangle( 3,  2,  1, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018DF0 - 0x04018E30
+const Gfx mario_low_poly_mustache_cap_off_dl[] = {
+    gsSPVertex(mario_low_poly_mustache_cap_off_dl_vertex, 10, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 2,  4,  0, 0x0,  5,  6,  7, 0x0),
+    gsSP2Triangles( 6,  8,  7, 0x0,  7,  9,  5, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018E30 - 0x04018EA0
+const Gfx mario_low_poly_face_part_cap_off_dl[] = {
+    gsSPVertex(mario_low_poly_face_part_cap_off_dl_vertex, 13, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 4,  5,  0, 0x0,  5,  3,  0, 0x0),
+    gsSP2Triangles( 1,  3,  5, 0x0,  2,  1,  4, 0x0),
+    gsSP2Triangles( 1,  5,  4, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 7,  9,  8, 0x0,  8,  9, 10, 0x0),
+    gsSP2Triangles(10,  9, 11, 0x0, 10, 11, 12, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018EA0 - 0x04018F68
+const Gfx mario_low_poly_face_hair_cap_off_dl[] = {
+    gsSPVertex(mario_low_poly_face_hair_cap_off_dl_vertex, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+    gsSP2Triangles( 0,  4,  3, 0x0,  0,  2,  5, 0x0),
+    gsSP2Triangles( 5,  6,  0, 0x0,  0,  6,  4, 0x0),
+    gsSP2Triangles( 5,  2,  7, 0x0,  7,  8,  5, 0x0),
+    gsSP2Triangles( 8,  6,  5, 0x0,  9,  7, 10, 0x0),
+    gsSP2Triangles( 7,  9, 11, 0x0,  7, 11,  8, 0x0),
+    gsSP2Triangles( 6,  8,  4, 0x0,  8, 11, 12, 0x0),
+    gsSP2Triangles( 4,  8, 12, 0x0, 11,  9, 12, 0x0),
+    gsSP2Triangles(13, 14, 12, 0x0, 14,  4, 12, 0x0),
+    gsSP2Triangles( 4, 14,  3, 0x0, 13, 10,  3, 0x0),
+    gsSP2Triangles(14, 13,  3, 0x0,  9, 10, 13, 0x0),
+    gsSP1Triangle( 9, 13, 12, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018F68 - 0x04018F90
+const Gfx mario_low_poly_face_cap_off_dl[] = {
+    gsSPDisplayList(mario_low_poly_face_part_cap_off_dl),
+    gsSPLight(&mario_brown2_lights_group.l, 1),
+    gsSPLight(&mario_brown2_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_face_hair_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04018F90 - 0x04019040
+const Gfx mario_low_poly_cap_off_eyes_front[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_front),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04019040 - 0x040190F0
+const Gfx mario_low_poly_cap_off_eyes_half_closed[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_half_closed),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040190F0 - 0x040191A0
+const Gfx mario_low_poly_cap_off_eyes_closed[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_closed),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040191A0 - 0x04019250
+const Gfx mario_low_poly_cap_off_eyes_right[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_right),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04019250 - 0x04019300
+const Gfx mario_low_poly_cap_off_eyes_left[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_left),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04019300 - 0x040193B0
+const Gfx mario_low_poly_cap_off_eyes_up[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_up),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x040193B0 - 0x04019460
+const Gfx mario_low_poly_cap_off_eyes_down[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_down),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04019460 - 0x04019510
+const Gfx mario_low_poly_cap_off_eyes_dead[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_eyes_dead),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_beige_lights_group.l, 1),
+    gsSPLight(&mario_beige_lights_group.a, 2),
+    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_mustache),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_low_poly_face_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04019510 - 0x04019538
+const Gfx mario_metal_low_poly_cap_off[] = {
+    gsSPDisplayList(mario_low_poly_mario_eyes_cap_off_dl),
+    gsSPDisplayList(mario_low_poly_mustache_cap_off_dl),
+    gsSPDisplayList(mario_low_poly_face_part_cap_off_dl),
+    gsSPDisplayList(mario_low_poly_face_hair_cap_off_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04019538
+static const Vtx mario_left_hand_open_shared_dl_vertex_group1[] = {
+    {{{   121,     73,    -21}, 0, {     0,      0}, {0x47, 0x60, 0x2b, 0x00}}},
+    {{{    70,     89,    -20}, 0, {     0,      0}, {0xec, 0x7c, 0xf6, 0x00}}},
+    {{{    77,     41,     21}, 0, {     0,      0}, {0x1d, 0x2a, 0x74, 0x00}}},
+    {{{   141,     34,     -7}, 0, {     0,      0}, {0x77, 0x0c, 0x29, 0x00}}},
+    {{{    78,     59,    -34}, 0, {     0,      0}, {0xfe, 0x0b, 0x82, 0x00}}},
+    {{{   119,     70,    -42}, 0, {     0,      0}, {0x3d, 0x44, 0xa9, 0x00}}},
+    {{{   133,     28,    -40}, 0, {     0,      0}, {0x45, 0xc9, 0xa6, 0x00}}},
+    {{{    83,    -17,     10}, 0, {     0,      0}, {0x4d, 0xbd, 0x4a, 0x00}}},
+    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
+    {{{    45,    -34,     10}, 0, {     0,      0}, {0xfe, 0x9a, 0x4a, 0x00}}},
+    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+    {{{    41,    -37,    -36}, 0, {     0,      0}, {0xd8, 0x9b, 0xbf, 0x00}}},
+    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
+    {{{    25,     -1,    -44}, 0, {     0,      0}, {0xe4, 0xe0, 0x89, 0x00}}},
+};
+
+// 0x04019618
+static const Vtx mario_left_hand_open_shared_dl_vertex_group2[] = {
+    {{{    -3,     35,     -9}, 0, {     0,      0}, {0xcd, 0x72, 0x13, 0x00}}},
+    {{{     6,     53,     -9}, 0, {     0,      0}, {0xaf, 0x61, 0x00, 0x00}}},
+    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
+    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+    {{{     1,    -33,    -23}, 0, {     0,      0}, {0x9c, 0xbb, 0xe0, 0x00}}},
+    {{{     6,    -38,      7}, 0, {     0,      0}, {0xae, 0xab, 0x2b, 0x00}}},
+    {{{    -6,     -3,     17}, 0, {     0,      0}, {0x90, 0xda, 0x2d, 0x00}}},
+    {{{     2,      3,     26}, 0, {     0,      0}, {0xf5, 0x17, 0x7c, 0x00}}},
+    {{{    20,    -46,     12}, 0, {     0,      0}, {0x26, 0x9e, 0x45, 0x00}}},
+    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
+    {{{   -17,     40,     -8}, 0, {     0,      0}, {0xbc, 0x68, 0x16, 0x00}}},
+    {{{   -10,     14,    -43}, 0, {     0,      0}, {0xd3, 0x19, 0x8d, 0x00}}},
+    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
+    {{{    13,    -39,    -31}, 0, {     0,      0}, {0x18, 0x9a, 0xba, 0x00}}},
+    {{{   -20,     22,     -7}, 0, {     0,      0}, {0x83, 0x06, 0x14, 0x00}}},
+    {{{    70,     89,    -20}, 0, {     0,      0}, {0xec, 0x7c, 0xf6, 0x00}}},
+};
+
+// 0x04019718
+static const Vtx mario_left_hand_open_shared_dl_vertex_group3[] = {
+    {{{    45,    -34,     10}, 0, {     0,      0}, {0xfe, 0x9a, 0x4a, 0x00}}},
+    {{{    83,    -17,     10}, 0, {     0,      0}, {0x4d, 0xbd, 0x4a, 0x00}}},
+    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+    {{{    89,    -47,    -37}, 0, {     0,      0}, {0x56, 0xaa, 0xdf, 0x00}}},
+    {{{    76,    -18,    -48}, 0, {     0,      0}, {0x27, 0x0a, 0x88, 0x00}}},
+    {{{    89,     -6,    -27}, 0, {     0,      0}, {0x5c, 0xf5, 0xab, 0x00}}},
+    {{{     6,     53,     -9}, 0, {     0,      0}, {0xaf, 0x61, 0x00, 0x00}}},
+    {{{    26,     41,    -41}, 0, {     0,      0}, {0x05, 0x34, 0x8d, 0x00}}},
+    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
+    {{{   141,     34,     -7}, 0, {     0,      0}, {0x77, 0x0c, 0x29, 0x00}}},
+    {{{    77,     41,     21}, 0, {     0,      0}, {0x1d, 0x2a, 0x74, 0x00}}},
+    {{{   133,     28,    -40}, 0, {     0,      0}, {0x45, 0xc9, 0xa6, 0x00}}},
+    {{{    69,     10,    -36}, 0, {     0,      0}, {0x35, 0x1c, 0x91, 0x00}}},
+    {{{    78,     59,    -34}, 0, {     0,      0}, {0xfe, 0x0b, 0x82, 0x00}}},
+    {{{   121,     73,    -21}, 0, {     0,      0}, {0x47, 0x60, 0x2b, 0x00}}},
+    {{{   119,     70,    -42}, 0, {     0,      0}, {0x3d, 0x44, 0xa9, 0x00}}},
+};
+
+// 0x04019818
+static const Vtx mario_left_hand_open_shared_dl_vertex_group4[] = {
+    {{{    25,     -1,    -44}, 0, {     0,      0}, {0xe4, 0xe0, 0x89, 0x00}}},
+    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
+    {{{    26,     41,    -41}, 0, {     0,      0}, {0x05, 0x34, 0x8d, 0x00}}},
+    {{{    78,     59,    -34}, 0, {     0,      0}, {0xfe, 0x0b, 0x82, 0x00}}},
+    {{{    69,     10,    -36}, 0, {     0,      0}, {0x35, 0x1c, 0x91, 0x00}}},
+    {{{    89,    -47,    -37}, 0, {     0,      0}, {0x56, 0xaa, 0xdf, 0x00}}},
+    {{{    41,    -37,    -36}, 0, {     0,      0}, {0xd8, 0x9b, 0xbf, 0x00}}},
+    {{{    76,    -18,    -48}, 0, {     0,      0}, {0x27, 0x0a, 0x88, 0x00}}},
+    {{{    45,    -34,     10}, 0, {     0,      0}, {0xfe, 0x9a, 0x4a, 0x00}}},
+    {{{    89,     -6,    -27}, 0, {     0,      0}, {0x5c, 0xf5, 0xab, 0x00}}},
+    {{{    83,    -17,     10}, 0, {     0,      0}, {0x4d, 0xbd, 0x4a, 0x00}}},
+    {{{    70,     89,    -20}, 0, {     0,      0}, {0xec, 0x7c, 0xf6, 0x00}}},
+    {{{     6,     53,     -9}, 0, {     0,      0}, {0xaf, 0x61, 0x00, 0x00}}},
+    {{{   133,     28,    -40}, 0, {     0,      0}, {0x45, 0xc9, 0xa6, 0x00}}},
+    {{{    77,     41,     21}, 0, {     0,      0}, {0x1d, 0x2a, 0x74, 0x00}}},
+    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+};
+
+// 0x04019918
+static const Vtx mario_left_hand_open_shared_dl_vertex_group5[] = {
+    {{{     6,    -38,      7}, 0, {     0,      0}, {0xae, 0xab, 0x2b, 0x00}}},
+    {{{     1,    -33,    -23}, 0, {     0,      0}, {0x9c, 0xbb, 0xe0, 0x00}}},
+    {{{    13,    -39,    -31}, 0, {     0,      0}, {0x18, 0x9a, 0xba, 0x00}}},
+    {{{   -15,      4,    -32}, 0, {     0,      0}, {0x89, 0xdd, 0xe7, 0x00}}},
+    {{{   -10,     14,    -43}, 0, {     0,      0}, {0xd3, 0x19, 0x8d, 0x00}}},
+    {{{   -20,     22,     -7}, 0, {     0,      0}, {0x83, 0x06, 0x14, 0x00}}},
+    {{{    -6,     -3,     17}, 0, {     0,      0}, {0x90, 0xda, 0x2d, 0x00}}},
+    {{{     2,      3,     26}, 0, {     0,      0}, {0xf5, 0x17, 0x7c, 0x00}}},
+    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
+    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
+    {{{     1,     15,    -37}, 0, {     0,      0}, {0xd2, 0x09, 0x8b, 0x00}}},
+    {{{    -3,     35,     -9}, 0, {     0,      0}, {0xcd, 0x72, 0x13, 0x00}}},
+    {{{    11,      5,     17}, 0, {     0,      0}, {0xff, 0x1b, 0x7c, 0x00}}},
+    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+    {{{    11,     29,    -52}, 0, {     0,      0}, {0xba, 0x2a, 0xa0, 0x00}}},
+    {{{    25,     -1,    -44}, 0, {     0,      0}, {0xe4, 0xe0, 0x89, 0x00}}},
+};
+
+// 0x04019A18
+static const Vtx mario_left_hand_open_shared_dl_vertex_group6[] = {
+    {{{    26,    -32,      6}, 0, {     0,      0}, {0x34, 0xa6, 0x47, 0x00}}},
+    {{{    20,    -27,    -27}, 0, {     0,      0}, {0x09, 0xbf, 0x94, 0x00}}},
+    {{{    41,    -37,    -36}, 0, {     0,      0}, {0xd8, 0x9b, 0xbf, 0x00}}},
+    {{{    26,     16,     28}, 0, {     0,      0}, {0xda, 0x0c, 0x78, 0x00}}},
+    {{{    11,      5,     17}, 0, {     0,      0}, {0xff, 0x1b, 0x7c, 0x00}}},
+};
+
+// 0x04019A68 - 0x04019CA0
+const Gfx mario_left_hand_open_shared_dl[] = {
+    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group1, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  6,  3,  7, 0x0),
+    gsSP2Triangles( 1,  0,  5, 0x0,  5,  4,  1, 0x0),
+    gsSP2Triangles( 5,  3,  6, 0x0,  8,  9, 10, 0x0),
+    gsSP2Triangles( 8, 11,  9, 0x0, 12, 13, 11, 0x0),
+    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles( 0, 10,  7, 0x0, 11, 10,  0, 0x0),
+    gsSP2Triangles(12, 13, 11, 0x0,  9,  8, 13, 0x0),
+    gsSP2Triangles( 7,  5,  8, 0x0, 10, 14,  7, 0x0),
+    gsSP2Triangles(11, 14, 10, 0x0, 13,  4, 11, 0x0),
+    gsSP2Triangles( 8,  5, 13, 0x0,  3, 15,  1, 0x0),
+    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group3, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+    gsSP2Triangles( 4,  5,  3, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 1,  9, 10, 0x0,  5, 11,  1, 0x0),
+    gsSP2Triangles(12, 13,  5, 0x0, 14,  9, 15, 0x0),
+    gsSP1Triangle( 4,  7, 12, 0x0),
+    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group4, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
+    gsSP2Triangles( 5,  6,  7, 0x0,  7,  0,  2, 0x0),
+    gsSP2Triangles( 8,  6,  5, 0x0,  5,  9, 10, 0x0),
+    gsSP2Triangles(11,  3,  2, 0x0,  2, 12, 11, 0x0),
+    gsSP2Triangles( 3, 13,  9, 0x0,  6,  0,  7, 0x0),
+    gsSP2Triangles( 7,  4,  9, 0x0, 10, 14, 15, 0x0),
+    gsSP1Triangle(15, 14, 11, 0x0),
+    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group5, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+    gsSP2Triangles( 4,  3,  5, 0x0,  5,  6,  7, 0x0),
+    gsSP2Triangles( 7,  6,  0, 0x0,  2,  8,  9, 0x0),
+    gsSP2Triangles( 4, 10,  8, 0x0, 11, 10,  4, 0x0),
+    gsSP2Triangles( 7, 12, 11, 0x0,  9, 12,  7, 0x0),
+    gsSP2Triangles( 6,  3,  1, 0x0,  6,  5,  3, 0x0),
+    gsSP2Triangles(11, 12, 13, 0x0, 14, 10, 11, 0x0),
+    gsSP2Triangles( 8, 10, 15, 0x0, 10, 14, 15, 0x0),
+    gsSPVertex(mario_left_hand_open_shared_dl_vertex_group6, 5, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x04019CA0 - 0x04019CC0
+const Gfx mario_left_hand_open[] = {
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_left_hand_open_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x04019CC0
+static const Vtx mario_right_hand_open_dl_vertex_group1[] = {
+    {{{    81,     37,    -28}, 0, {     0,      0}, {0x18, 0x20, 0x88, 0x00}}},
+    {{{    76,     88,      9}, 0, {     0,      0}, {0xef, 0x7d, 0x00, 0x00}}},
+    {{{   125,     71,      9}, 0, {     0,      0}, {0x47, 0x5a, 0xcb, 0x00}}},
+    {{{   143,     31,     -1}, 0, {     0,      0}, {0x75, 0x06, 0xd2, 0x00}}},
+    {{{   136,     28,     31}, 0, {     0,      0}, {0x4a, 0xcf, 0x5a, 0x00}}},
+    {{{   124,     69,     30}, 0, {     0,      0}, {0x44, 0x49, 0x4d, 0x00}}},
+    {{{    84,     59,     25}, 0, {     0,      0}, {0x04, 0x15, 0x7c, 0x00}}},
+    {{{    86,    -19,    -13}, 0, {     0,      0}, {0x49, 0xb6, 0xb8, 0x00}}},
+    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+    {{{    48,    -35,     -9}, 0, {     0,      0}, {0xf7, 0x94, 0xbe, 0x00}}},
+    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
+    {{{    46,    -35,     37}, 0, {     0,      0}, {0xd8, 0xa2, 0x4a, 0x00}}},
+    {{{    32,      2,     43}, 0, {     0,      0}, {0xe9, 0xeb, 0x7a, 0x00}}},
+    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
+};
+
+// 0x04019DA0
+static const Vtx mario_right_hand_open_dl_vertex_group2[] = {
+    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
+    {{{    13,     53,      5}, 0, {     0,      0}, {0xb0, 0x62, 0xfc, 0x00}}},
+    {{{     3,     36,      6}, 0, {     0,      0}, {0xce, 0x71, 0xe6, 0x00}}},
+    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+    {{{     0,     -4,    -15}, 0, {     0,      0}, {0x8d, 0xda, 0xdc, 0x00}}},
+    {{{    11,    -38,     -3}, 0, {     0,      0}, {0xa9, 0xaa, 0xe0, 0x00}}},
+    {{{     7,    -30,     26}, 0, {     0,      0}, {0x9b, 0xc0, 0x29, 0x00}}},
+    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
+    {{{    25,    -46,     -9}, 0, {     0,      0}, {0x21, 0x97, 0xc1, 0x00}}},
+    {{{     7,      1,    -26}, 0, {     0,      0}, {0xee, 0x0d, 0x84, 0x00}}},
+    {{{    -9,     41,      5}, 0, {     0,      0}, {0xbc, 0x66, 0xe5, 0x00}}},
+    {{{    -1,     18,     42}, 0, {     0,      0}, {0xd9, 0x23, 0x73, 0x00}}},
+    {{{    19,    -36,     33}, 0, {     0,      0}, {0x1a, 0xa0, 0x4d, 0x00}}},
+    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
+    {{{   -12,     23,      6}, 0, {     0,      0}, {0x83, 0x07, 0xf1, 0x00}}},
+    {{{    76,     88,      9}, 0, {     0,      0}, {0xef, 0x7d, 0x00, 0x00}}},
+};
+
+// 0x04019EA0
+static const Vtx mario_right_hand_open_dl_vertex_group3[] = {
+    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+    {{{    86,    -19,    -13}, 0, {     0,      0}, {0x49, 0xb6, 0xb8, 0x00}}},
+    {{{    48,    -35,     -9}, 0, {     0,      0}, {0xf7, 0x94, 0xbe, 0x00}}},
+    {{{    93,    -45,     36}, 0, {     0,      0}, {0x57, 0xac, 0x23, 0x00}}},
+    {{{    93,     -5,     22}, 0, {     0,      0}, {0x61, 0xfa, 0x50, 0x00}}},
+    {{{    81,    -15,     45}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
+    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
+    {{{    34,     43,     36}, 0, {     0,      0}, {0x0c, 0x3d, 0x6e, 0x00}}},
+    {{{    13,     53,      5}, 0, {     0,      0}, {0xb0, 0x62, 0xfc, 0x00}}},
+    {{{    81,     37,    -28}, 0, {     0,      0}, {0x18, 0x20, 0x88, 0x00}}},
+    {{{   143,     31,     -1}, 0, {     0,      0}, {0x75, 0x06, 0xd2, 0x00}}},
+    {{{   136,     28,     31}, 0, {     0,      0}, {0x4a, 0xcf, 0x5a, 0x00}}},
+    {{{    84,     59,     25}, 0, {     0,      0}, {0x04, 0x15, 0x7c, 0x00}}},
+    {{{    75,     11,     32}, 0, {     0,      0}, {0x3c, 0x23, 0x69, 0x00}}},
+    {{{   124,     69,     30}, 0, {     0,      0}, {0x44, 0x49, 0x4d, 0x00}}},
+    {{{   125,     71,      9}, 0, {     0,      0}, {0x47, 0x5a, 0xcb, 0x00}}},
+};
+
+// 0x04019FA0
+static const Vtx mario_right_hand_open_dl_vertex_group4[] = {
+    {{{    34,     43,     36}, 0, {     0,      0}, {0x0c, 0x3d, 0x6e, 0x00}}},
+    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
+    {{{    32,      2,     43}, 0, {     0,      0}, {0xe9, 0xeb, 0x7a, 0x00}}},
+    {{{    75,     11,     32}, 0, {     0,      0}, {0x3c, 0x23, 0x69, 0x00}}},
+    {{{    84,     59,     25}, 0, {     0,      0}, {0x04, 0x15, 0x7c, 0x00}}},
+    {{{    81,    -15,     45}, 0, {     0,      0}, {0x2f, 0x13, 0x74, 0x00}}},
+    {{{    46,    -35,     37}, 0, {     0,      0}, {0xd8, 0xa2, 0x4a, 0x00}}},
+    {{{    93,    -45,     36}, 0, {     0,      0}, {0x57, 0xac, 0x23, 0x00}}},
+    {{{    48,    -35,     -9}, 0, {     0,      0}, {0xf7, 0x94, 0xbe, 0x00}}},
+    {{{    86,    -19,    -13}, 0, {     0,      0}, {0x49, 0xb6, 0xb8, 0x00}}},
+    {{{    93,     -5,     22}, 0, {     0,      0}, {0x61, 0xfa, 0x50, 0x00}}},
+    {{{    76,     88,      9}, 0, {     0,      0}, {0xef, 0x7d, 0x00, 0x00}}},
+    {{{    13,     53,      5}, 0, {     0,      0}, {0xb0, 0x62, 0xfc, 0x00}}},
+    {{{   136,     28,     31}, 0, {     0,      0}, {0x4a, 0xcf, 0x5a, 0x00}}},
+    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+    {{{    81,     37,    -28}, 0, {     0,      0}, {0x18, 0x20, 0x88, 0x00}}},
+};
+
+// 0x0401A0A0
+static const Vtx mario_right_hand_open_dl_vertex_group5[] = {
+    {{{    19,    -36,     33}, 0, {     0,      0}, {0x1a, 0xa0, 0x4d, 0x00}}},
+    {{{     7,    -30,     26}, 0, {     0,      0}, {0x9b, 0xc0, 0x29, 0x00}}},
+    {{{    11,    -38,     -3}, 0, {     0,      0}, {0xa9, 0xaa, 0xe0, 0x00}}},
+    {{{    -1,     18,     42}, 0, {     0,      0}, {0xd9, 0x23, 0x73, 0x00}}},
+    {{{    -7,      7,     32}, 0, {     0,      0}, {0x8a, 0xe2, 0x20, 0x00}}},
+    {{{   -12,     23,      6}, 0, {     0,      0}, {0x83, 0x07, 0xf1, 0x00}}},
+    {{{     7,      1,    -26}, 0, {     0,      0}, {0xee, 0x0d, 0x84, 0x00}}},
+    {{{     0,     -4,    -15}, 0, {     0,      0}, {0x8d, 0xda, 0xdc, 0x00}}},
+    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
+    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
+    {{{     9,     18,     35}, 0, {     0,      0}, {0xd8, 0x13, 0x76, 0x00}}},
+    {{{     3,     36,      6}, 0, {     0,      0}, {0xce, 0x71, 0xe6, 0x00}}},
+    {{{    16,      4,    -17}, 0, {     0,      0}, {0xf9, 0x11, 0x83, 0x00}}},
+    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+    {{{    20,     33,     48}, 0, {     0,      0}, {0xbf, 0x32, 0x60, 0x00}}},
+    {{{    32,      2,     43}, 0, {     0,      0}, {0xe9, 0xeb, 0x7a, 0x00}}},
+};
+
+// 0x0401A1A0
+static const Vtx mario_right_hand_open_dl_vertex_group6[] = {
+    {{{    46,    -35,     37}, 0, {     0,      0}, {0xd8, 0xa2, 0x4a, 0x00}}},
+    {{{    26,    -24,     28}, 0, {     0,      0}, {0x0d, 0xc8, 0x70, 0x00}}},
+    {{{    30,    -32,     -4}, 0, {     0,      0}, {0x2f, 0x9f, 0xbe, 0x00}}},
+    {{{    16,      4,    -17}, 0, {     0,      0}, {0xf9, 0x11, 0x83, 0x00}}},
+    {{{    30,     13,    -30}, 0, {     0,      0}, {0xd3, 0x03, 0x8a, 0x00}}},
+};
+
+// 0x0401A1F0 - 0x0401A428
+const Gfx mario_right_hand_open_dl[] = {
+    gsSPVertex(mario_right_hand_open_dl_vertex_group1, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  7,  3,  4, 0x0),
+    gsSP2Triangles( 5,  2,  1, 0x0,  1,  6,  5, 0x0),
+    gsSP2Triangles( 4,  3,  5, 0x0,  8,  9, 10, 0x0),
+    gsSP2Triangles( 9, 11, 10, 0x0, 11, 12, 13, 0x0),
+    gsSPVertex(mario_right_hand_open_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles( 9, 10,  2, 0x0,  2, 10, 11, 0x0),
+    gsSP2Triangles(11, 12, 13, 0x0, 12,  8,  7, 0x0),
+    gsSP2Triangles( 8,  5,  9, 0x0,  9, 14, 10, 0x0),
+    gsSP2Triangles(10, 14, 11, 0x0, 11,  6, 12, 0x0),
+    gsSP2Triangles(12,  5,  8, 0x0,  1, 15,  3, 0x0),
+    gsSPVertex(mario_right_hand_open_dl_vertex_group3, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 3,  4,  5, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 9, 10,  1, 0x0,  1, 11,  4, 0x0),
+    gsSP2Triangles( 4, 12, 13, 0x0, 14, 10, 15, 0x0),
+    gsSP1Triangle(13,  7,  5, 0x0),
+    gsSPVertex(mario_right_hand_open_dl_vertex_group4, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+    gsSP2Triangles( 5,  6,  7, 0x0,  0,  2,  5, 0x0),
+    gsSP2Triangles( 7,  6,  8, 0x0,  9, 10,  7, 0x0),
+    gsSP2Triangles( 0,  4, 11, 0x0, 11, 12,  0, 0x0),
+    gsSP2Triangles(10, 13,  4, 0x0,  5,  2,  6, 0x0),
+    gsSP2Triangles(10,  3,  5, 0x0, 14, 15,  9, 0x0),
+    gsSP1Triangle(11, 15, 14, 0x0),
+    gsSPVertex(mario_right_hand_open_dl_vertex_group5, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 5,  4,  3, 0x0,  6,  7,  5, 0x0),
+    gsSP2Triangles( 2,  7,  6, 0x0,  8,  9,  0, 0x0),
+    gsSP2Triangles( 9, 10,  3, 0x0,  3, 10, 11, 0x0),
+    gsSP2Triangles(11, 12,  6, 0x0,  6, 12,  8, 0x0),
+    gsSP2Triangles( 1,  4,  7, 0x0,  4,  5,  7, 0x0),
+    gsSP2Triangles(13, 12, 11, 0x0, 11, 10, 14, 0x0),
+    gsSP2Triangles(15, 10,  9, 0x0, 15, 14, 10, 0x0),
+    gsSPVertex(mario_right_hand_open_dl_vertex_group6, 5, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  4, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401A428 - 0x0401A448
+const Gfx mario_right_hand_open[] = {
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_right_hand_open_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401A448 - 0x0401A478
+const Gfx mario_metal_right_hand_open[] = {
+    gsSPDisplayList(mario_right_hand_open_dl),
+    gsDPPipeSync(),
+    gsSPClearGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401A478
+static const Vtx mario_right_hand_cap_m_logo_dl_vertex[] = {
+    {{{   131,     47,     -1}, 0, {  1104,    228}, {0xd7, 0x60, 0xb8, 0xff}}},
+    {{{   107,    -19,    -33}, 0, {   474,     32}, {0xd1, 0x0e, 0x8c, 0xff}}},
+    {{{    78,     11,     40}, 0, {   772,    818}, {0xd0, 0x3e, 0x9d, 0xff}}},
+    {{{    70,    -52,     35}, 0, {   196,    800}, {0xc5, 0xde, 0x96, 0xff}}},
+    {{{   114,    -92,    -11}, 0, {  -148,    188}, {0xc4, 0xb8, 0xac, 0xff}}},
+};
+
+// 0x0401A4C8
+static const Vtx mario_right_hand_cap_hand_position_dl_vertex_group1[] = {
+    {{{     1,     24,     35}, 0, {     0,      0}, {0xd4, 0x3c, 0x66, 0xff}}},
+    {{{    29,      7,     48}, 0, {     0,      0}, {0xc3, 0xfa, 0x6e, 0xff}}},
+    {{{    29,     62,     34}, 0, {     0,      0}, {0xcd, 0x4c, 0x57, 0xff}}},
+    {{{    11,     60,     -3}, 0, {     0,      0}, {0xab, 0x59, 0xe6, 0xff}}},
+    {{{    56,     11,     65}, 0, {     0,      0}, {0xfc, 0x1b, 0x7b, 0xff}}},
+    {{{    54,     54,     44}, 0, {     0,      0}, {0x1f, 0x50, 0x5c, 0xff}}},
+    {{{    58,     81,      0}, 0, {     0,      0}, {0x13, 0x7a, 0xe8, 0xff}}},
+    {{{    -2,     41,      0}, 0, {     0,      0}, {0xee, 0x71, 0xca, 0xff}}},
+    {{{    35,      9,    -36}, 0, {     0,      0}, {0xe4, 0xf4, 0x85, 0xff}}},
+    {{{   -13,     26,     41}, 0, {     0,      0}, {0xee, 0x3c, 0x6e, 0xff}}},
+    {{{    23,    -25,     35}, 0, {     0,      0}, {0x04, 0xc2, 0x6e, 0xff}}},
+    {{{    75,    -32,     65}, 0, {     0,      0}, {0x08, 0xae, 0x60, 0xff}}},
+    {{{    16,      1,    -22}, 0, {     0,      0}, {0x04, 0x00, 0x82, 0xff}}},
+    {{{     4,     -3,    -32}, 0, {     0,      0}, {0x11, 0x06, 0x83, 0xff}}},
+    {{{   -19,     47,     -4}, 0, {     0,      0}, {0xad, 0x54, 0xd3, 0xff}}},
+};
+
+// 0x0401A5B8
+static const Vtx mario_right_hand_cap_hand_position_dl_vertex_group2[] = {
+    {{{   103,    -25,      1}, 0, {     0,      0}, {0x67, 0xc4, 0xd6, 0xff}}},
+    {{{    95,     -8,     52}, 0, {     0,      0}, {0x60, 0x06, 0x52, 0xff}}},
+    {{{    75,    -32,     65}, 0, {     0,      0}, {0x08, 0xae, 0x60, 0xff}}},
+    {{{    31,    -39,      0}, 0, {     0,      0}, {0x42, 0xa3, 0xca, 0xff}}},
+    {{{    23,    -25,     35}, 0, {     0,      0}, {0x04, 0xc2, 0x6e, 0xff}}},
+    {{{    13,    -37,     41}, 0, {     0,      0}, {0x12, 0xb1, 0x61, 0xff}}},
+    {{{    55,    -43,     -3}, 0, {     0,      0}, {0x00, 0x86, 0xe0, 0xff}}},
+    {{{   -13,     26,     41}, 0, {     0,      0}, {0xee, 0x3c, 0x6e, 0xff}}},
+    {{{     4,     -3,    -32}, 0, {     0,      0}, {0x11, 0x06, 0x83, 0xff}}},
+    {{{    16,      1,    -22}, 0, {     0,      0}, {0x04, 0x00, 0x82, 0xff}}},
+    {{{    35,      9,    -36}, 0, {     0,      0}, {0xe4, 0xf4, 0x85, 0xff}}},
+    {{{    24,    -55,     -4}, 0, {     0,      0}, {0x04, 0x8b, 0xd1, 0xff}}},
+    {{{    56,     11,     65}, 0, {     0,      0}, {0xfc, 0x1b, 0x7b, 0xff}}},
+    {{{   -15,    -12,      7}, 0, {     0,      0}, {0x8c, 0xcf, 0xf8, 0xff}}},
+    {{{    85,     15,     52}, 0, {     0,      0}, {0x40, 0x30, 0x62, 0xff}}},
+    {{{    54,     54,     44}, 0, {     0,      0}, {0x1f, 0x50, 0x5c, 0xff}}},
+};
+
+// 0x0401A6B8
+static const Vtx mario_right_hand_cap_hand_position_dl_vertex_group3[] = {
+    {{{    35,      9,    -36}, 0, {     0,      0}, {0xe4, 0xf4, 0x85, 0xff}}},
+    {{{    85,     30,    -32}, 0, {     0,      0}, {0x4f, 0x21, 0xa3, 0xff}}},
+    {{{   103,    -25,      1}, 0, {     0,      0}, {0x67, 0xc4, 0xd6, 0xff}}},
+    {{{    58,     81,      0}, 0, {     0,      0}, {0x13, 0x7a, 0xe8, 0xff}}},
+    {{{    24,    -55,     -4}, 0, {     0,      0}, {0x04, 0x8b, 0xd1, 0xff}}},
+    {{{   -15,    -12,      7}, 0, {     0,      0}, {0x8c, 0xcf, 0xf8, 0xff}}},
+    {{{     4,     -3,    -32}, 0, {     0,      0}, {0x11, 0x06, 0x83, 0xff}}},
+    {{{   -19,     47,     -4}, 0, {     0,      0}, {0xad, 0x54, 0xd3, 0xff}}},
+    {{{   -13,     26,     41}, 0, {     0,      0}, {0xee, 0x3c, 0x6e, 0xff}}},
+    {{{    13,    -37,     41}, 0, {     0,      0}, {0x12, 0xb1, 0x61, 0xff}}},
+    {{{    96,     39,     24}, 0, {     0,      0}, {0x6b, 0x39, 0x21, 0xff}}},
+    {{{    54,     54,     44}, 0, {     0,      0}, {0x1f, 0x50, 0x5c, 0xff}}},
+    {{{    95,     -8,     52}, 0, {     0,      0}, {0x60, 0x06, 0x52, 0xff}}},
+    {{{    85,     15,     52}, 0, {     0,      0}, {0x40, 0x30, 0x62, 0xff}}},
+};
+
+// 0x0401A798
+static const Vtx mario_right_hand_cap_top_dl_vertex_group1[] = {
+    {{{    29,    -82,     43}, 0, {     0,      0}, {0x95, 0xbd, 0x00, 0xff}}},
+    {{{    70,    -52,     35}, 0, {     0,      0}, {0xc5, 0xde, 0x96, 0xff}}},
+    {{{   106,   -124,     90}, 0, {     0,      0}, {0x9d, 0xb2, 0x09, 0xff}}},
+    {{{    65,    -53,     55}, 0, {     0,      0}, {0xb7, 0x01, 0x67, 0xff}}},
+    {{{   151,   -168,     67}, 0, {     0,      0}, {0xf4, 0x87, 0xdc, 0xff}}},
+    {{{   137,   -137,    134}, 0, {     0,      0}, {0x9f, 0xdf, 0x49, 0xff}}},
+    {{{   114,    -92,    -11}, 0, {     0,      0}, {0xc4, 0xb8, 0xac, 0xff}}},
+    {{{   228,   -121,    117}, 0, {     0,      0}, {0x66, 0xcd, 0xcb, 0xff}}},
+    {{{   182,    -72,     -8}, 0, {     0,      0}, {0x4d, 0xd9, 0xa4, 0xff}}},
+    {{{   181,   -167,    138}, 0, {     0,      0}, {0x06, 0x88, 0x26, 0xff}}},
+    {{{   171,   -129,    178}, 0, {     0,      0}, {0xb3, 0xd1, 0x58, 0xff}}},
+    {{{   160,     65,    148}, 0, {     0,      0}, {0xb3, 0x47, 0x47, 0xff}}},
+    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
+    {{{   183,    100,     86}, 0, {     0,      0}, {0x11, 0x7c, 0xed, 0xff}}},
+    {{{   129,     65,    103}, 0, {     0,      0}, {0xa7, 0x50, 0x27, 0xff}}},
+};
+
+// 0x0401A888
+static const Vtx mario_right_hand_cap_top_dl_vertex_group2[] = {
+    {{{    78,     11,     40}, 0, {     0,      0}, {0xd0, 0x3e, 0x9d, 0xff}}},
+    {{{   129,     65,    103}, 0, {     0,      0}, {0xa7, 0x50, 0x27, 0xff}}},
+    {{{   131,     47,     -1}, 0, {     0,      0}, {0xd7, 0x60, 0xb8, 0xff}}},
+    {{{    45,     49,     53}, 0, {     0,      0}, {0xa8, 0x5a, 0x0a, 0xff}}},
+    {{{    73,     11,     60}, 0, {     0,      0}, {0xbb, 0xfb, 0x6a, 0xff}}},
+    {{{   183,    100,     86}, 0, {     0,      0}, {0x11, 0x7c, 0xed, 0xff}}},
+    {{{   192,     42,    190}, 0, {     0,      0}, {0xb3, 0x23, 0x5d, 0xff}}},
+    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
+    {{{   160,     65,    148}, 0, {     0,      0}, {0xb3, 0x47, 0x47, 0xff}}},
+    {{{    18,    -13,     33}, 0, {     0,      0}, {0x84, 0x10, 0xed, 0xff}}},
+    {{{    70,    -52,     35}, 0, {     0,      0}, {0xc5, 0xde, 0x96, 0xff}}},
+    {{{   192,     11,     -2}, 0, {     0,      0}, {0x4b, 0x29, 0xa3, 0xff}}},
+    {{{   107,    -19,    -33}, 0, {     0,      0}, {0xd1, 0x0e, 0x8c, 0xff}}},
+    {{{   228,   -121,    117}, 0, {     0,      0}, {0x66, 0xcd, 0xcb, 0xff}}},
+    {{{   246,     29,    128}, 0, {     0,      0}, {0x72, 0x20, 0xd4, 0xff}}},
+    {{{   285,     -6,    196}, 0, {     0,      0}, {0x79, 0x23, 0x0b, 0xff}}},
+};
+
+// 0x0401A988
+static const Vtx mario_right_hand_cap_top_dl_vertex_group3[] = {
+    {{{    65,    -53,     55}, 0, {     0,      0}, {0xb7, 0x01, 0x67, 0xff}}},
+    {{{    18,    -13,     33}, 0, {     0,      0}, {0x84, 0x10, 0xed, 0xff}}},
+    {{{    29,    -82,     43}, 0, {     0,      0}, {0x95, 0xbd, 0x00, 0xff}}},
+    {{{    70,    -52,     35}, 0, {     0,      0}, {0xc5, 0xde, 0x96, 0xff}}},
+    {{{    73,     11,     60}, 0, {     0,      0}, {0xbb, 0xfb, 0x6a, 0xff}}},
+    {{{   114,    -92,    -11}, 0, {     0,      0}, {0xc4, 0xb8, 0xac, 0xff}}},
+    {{{   107,    -19,    -33}, 0, {     0,      0}, {0xd1, 0x0e, 0x8c, 0xff}}},
+    {{{   182,    -72,     -8}, 0, {     0,      0}, {0x4d, 0xd9, 0xa4, 0xff}}},
+    {{{   192,     11,     -2}, 0, {     0,      0}, {0x4b, 0x29, 0xa3, 0xff}}},
+    {{{   246,     29,    128}, 0, {     0,      0}, {0x72, 0x20, 0xd4, 0xff}}},
+    {{{   228,   -121,    117}, 0, {     0,      0}, {0x66, 0xcd, 0xcb, 0xff}}},
+    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
+    {{{   285,     -6,    196}, 0, {     0,      0}, {0x79, 0x23, 0x0b, 0xff}}},
+    {{{   273,   -105,    188}, 0, {     0,      0}, {0x5f, 0xbf, 0x34, 0xff}}},
+    {{{   181,   -167,    138}, 0, {     0,      0}, {0x06, 0x88, 0x26, 0xff}}},
+    {{{   228,      1,    228}, 0, {     0,      0}, {0x14, 0x22, 0x78, 0xff}}},
+};
+
+// 0x0401AA88
+static const Vtx mario_right_hand_cap_top_dl_vertex_group4[] = {
+    {{{   181,   -167,    138}, 0, {     0,      0}, {0x06, 0x88, 0x26, 0xff}}},
+    {{{   273,   -105,    188}, 0, {     0,      0}, {0x5f, 0xbf, 0x34, 0xff}}},
+    {{{   216,   -104,    220}, 0, {     0,      0}, {0xe5, 0xcc, 0x70, 0xff}}},
+    {{{   228,      1,    228}, 0, {     0,      0}, {0x14, 0x22, 0x78, 0xff}}},
+    {{{   285,     -6,    196}, 0, {     0,      0}, {0x79, 0x23, 0x0b, 0xff}}},
+    {{{   211,     81,    156}, 0, {     0,      0}, {0x22, 0x6c, 0x37, 0xff}}},
+    {{{   192,     42,    190}, 0, {     0,      0}, {0xb3, 0x23, 0x5d, 0xff}}},
+    {{{   171,   -129,    178}, 0, {     0,      0}, {0xb3, 0xd1, 0x58, 0xff}}},
+};
+
+// 0x0401AB08
+static const Vtx mario_right_hand_cap_bottom_dl_vertex[] = {
+    {{{    65,    -53,     55}, 0, {     0,      0}, {0xb7, 0x01, 0x67, 0xff}}},
+    {{{   106,   -124,     90}, 0, {     0,      0}, {0x9d, 0xb2, 0x09, 0xff}}},
+    {{{   137,   -137,    134}, 0, {     0,      0}, {0x9f, 0xdf, 0x49, 0xff}}},
+    {{{    73,     11,     60}, 0, {     0,      0}, {0xbb, 0xfb, 0x6a, 0xff}}},
+    {{{   129,     65,    103}, 0, {     0,      0}, {0xa7, 0x50, 0x27, 0xff}}},
+    {{{   160,     65,    148}, 0, {     0,      0}, {0xb3, 0x47, 0x47, 0xff}}},
+    {{{   192,     42,    190}, 0, {     0,      0}, {0xb3, 0x23, 0x5d, 0xff}}},
+    {{{   171,   -129,    178}, 0, {     0,      0}, {0xb3, 0xd1, 0x58, 0xff}}},
+    {{{   216,   -104,    220}, 0, {     0,      0}, {0xe5, 0xcc, 0x70, 0xff}}},
+    {{{   228,      1,    228}, 0, {     0,      0}, {0x14, 0x22, 0x78, 0xff}}},
+};
+
+// 0x0401ABA8 - 0x0401ABD0
+const Gfx mario_right_hand_cap_m_logo_dl[] = {
+    gsSPVertex(mario_right_hand_cap_m_logo_dl_vertex, 5, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  2, 0x0),
+    gsSP1Triangle( 1,  4,  3, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401ABD0 - 0x0401AD40
+const Gfx mario_right_hand_cap_top_dl[] = {
+    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group1, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 2,  4,  5, 0x0,  6,  2,  1, 0x0),
+    gsSP2Triangles( 2,  6,  4, 0x0,  7,  4,  8, 0x0),
+    gsSP2Triangles( 8,  4,  6, 0x0,  4,  9,  5, 0x0),
+    gsSP2Triangles( 4,  7,  9, 0x0,  5,  9, 10, 0x0),
+    gsSP2Triangles(11, 12, 13, 0x0, 13, 14, 11, 0x0),
+    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+    gsSP2Triangles( 0,  3,  1, 0x0,  5,  2,  1, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  0,  9,  3, 0x0),
+    gsSP2Triangles(10,  9,  0, 0x0, 11, 12,  2, 0x0),
+    gsSP2Triangles( 2,  5, 11, 0x0,  3,  9,  4, 0x0),
+    gsSP2Triangles(13, 14, 15, 0x0, 11,  5, 14, 0x0),
+    gsSP1Triangle( 7, 14,  5, 0x0),
+    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group3, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 0,  4,  1, 0x0,  5,  6,  7, 0x0),
+    gsSP2Triangles( 7,  8,  9, 0x0,  7,  6,  8, 0x0),
+    gsSP2Triangles(10,  7,  9, 0x0, 11, 12,  9, 0x0),
+    gsSP2Triangles(10, 13, 14, 0x0, 12, 13, 10, 0x0),
+    gsSP1Triangle(13, 12, 15, 0x0),
+    gsSPVertex(mario_right_hand_cap_top_dl_vertex_group4, 8, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  1,  3, 0x0),
+    gsSP2Triangles( 3,  4,  5, 0x0,  3,  5,  6, 0x0),
+    gsSP1Triangle( 7,  0,  2, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401AD40 - 0x0401AED0
+const Gfx mario_right_hand_cap_hand_position_dl[] = {
+    gsSPVertex(mario_right_hand_cap_hand_position_dl_vertex_group1, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 2,  1,  4, 0x0,  2,  5,  6, 0x0),
+    gsSP2Triangles( 6,  3,  2, 0x0,  5,  2,  4, 0x0),
+    gsSP2Triangles( 3,  7,  0, 0x0,  3,  6,  8, 0x0),
+    gsSP2Triangles( 3,  8,  7, 0x0,  9,  0,  7, 0x0),
+    gsSP2Triangles(10,  0,  9, 0x0,  1,  0, 10, 0x0),
+    gsSP2Triangles(11,  1, 10, 0x0, 11,  4,  1, 0x0),
+    gsSP2Triangles( 7, 12, 13, 0x0,  8, 12,  7, 0x0),
+    gsSP2Triangles(13, 14,  7, 0x0,  7, 14,  9, 0x0),
+    gsSPVertex(mario_right_hand_cap_hand_position_dl_vertex_group2, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 4,  3,  6, 0x0,  6,  2,  4, 0x0),
+    gsSP2Triangles( 7,  5,  4, 0x0,  8,  9,  3, 0x0),
+    gsSP2Triangles( 3,  9, 10, 0x0, 10,  6,  3, 0x0),
+    gsSP2Triangles( 5, 11,  3, 0x0,  3, 11,  8, 0x0),
+    gsSP2Triangles(10,  0,  6, 0x0,  6,  0,  2, 0x0),
+    gsSP2Triangles( 2,  1, 12, 0x0,  5, 13, 11, 0x0),
+    gsSP2Triangles( 1, 14, 12, 0x0, 14, 15, 12, 0x0),
+    gsSPVertex(mario_right_hand_cap_hand_position_dl_vertex_group3, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  1,  0, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  6,  5,  7, 0x0),
+    gsSP2Triangles( 7,  5,  8, 0x0,  8,  5,  9, 0x0),
+    gsSP2Triangles( 3, 10,  1, 0x0, 11, 10,  3, 0x0),
+    gsSP2Triangles( 1, 10,  2, 0x0,  2, 10, 12, 0x0),
+    gsSP2Triangles(12, 10, 13, 0x0, 10, 11, 13, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401AED0 - 0x0401AF20
+const Gfx mario_right_hand_cap_bottom_dl[] = {
+    gsSPVertex(mario_right_hand_cap_bottom_dl_vertex, 10, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 4,  3,  2, 0x0,  5,  4,  2, 0x0),
+    gsSP2Triangles( 6,  5,  2, 0x0,  6,  2,  7, 0x0),
+    gsSP2Triangles( 8,  9,  6, 0x0,  6,  7,  8, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401AF20 - 0x0401AF60
+const Gfx mario_right_hand_cap_dl[] = {
+    gsSPDisplayList(mario_right_hand_cap_top_dl),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_right_hand_cap_hand_position_dl),
+    gsSPLight(&mario_brown2_lights_group.l, 1),
+    gsSPLight(&mario_brown2_lights_group.a, 2),
+    gsSPDisplayList(mario_right_hand_cap_bottom_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401AF60
+static const Vtx mario_right_hand_cap_wings_half_1_dl_vertex[] = {
+    {{{   368,    146,      7}, 0, {   990,      0}, {0xbe, 0x65, 0xda, 0xff}}},
+    {{{   166,     37,     68}, 0, {     0,   2012}, {0xbe, 0x65, 0xda, 0xff}}},
+    {{{   212,     96,    143}, 0, {   990,   2012}, {0xbe, 0x65, 0xda, 0xff}}},
+    {{{   368,    146,      7}, 0, {   990,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
+    {{{   322,     87,    -67}, 0, {     0,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
+    {{{   166,     37,     68}, 0, {     0,   2012}, {0xbe, 0x64, 0xd9, 0xff}}},
+    {{{   178,   -177,    128}, 0, {   990,   2012}, {0xa8, 0xb4, 0xcf, 0xff}}},
+    {{{   149,   -100,     60}, 0, {     0,   2012}, {0xa8, 0xb4, 0xcf, 0xff}}},
+    {{{   319,   -248,    -14}, 0, {   990,      0}, {0xa8, 0xb4, 0xcf, 0xff}}},
+    {{{   290,   -171,    -81}, 0, {     0,      0}, {0xa8, 0xb4, 0xcf, 0xff}}},
+};
+
+// 0x0401B000
+static const Vtx mario_right_hand_cap_wings_half_2_dl_vertex[] = {
+    {{{   414,    206,     82}, 0, {   990,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
+    {{{   212,     96,    143}, 0, {     0,   2012}, {0xbe, 0x64, 0xd9, 0xff}}},
+    {{{   258,    156,    218}, 0, {   990,   2012}, {0xbe, 0x64, 0xd9, 0xff}}},
+    {{{   368,    146,      7}, 0, {     0,      0}, {0xbe, 0x64, 0xd9, 0xff}}},
+    {{{   178,   -177,    128}, 0, {     0,   2012}, {0xa8, 0xb3, 0xcf, 0xff}}},
+    {{{   319,   -248,    -14}, 0, {     0,      0}, {0xa8, 0xb3, 0xcf, 0xff}}},
+    {{{   349,   -325,     53}, 0, {   990,      0}, {0xa8, 0xb3, 0xcf, 0xff}}},
+    {{{   207,   -253,    195}, 0, {   990,   2012}, {0xa8, 0xb3, 0xcf, 0xff}}},
+};
+
+// 0x0401B080 - 0x0401B0B0
+const Gfx mario_right_hand_cap_wings_half_1_dl[] = {
+    gsSPVertex(mario_right_hand_cap_wings_half_1_dl_vertex, 10, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  7,  9,  8, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401B0B0 - 0x0401B0E0
+const Gfx mario_right_hand_cap_wings_half_2_dl[] = {
+    gsSPVertex(mario_right_hand_cap_wings_half_2_dl_vertex, 8, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  7,  4,  6, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401B0E0 - 0x0401B138
+const Gfx mario_right_hand_cap_wings_initial_dl[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_MODULATERGBFADEA, G_CC_MODULATERGBFADEA),
+    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401B138 - 0x0401B158
+const Gfx mario_right_hand_cap_wings_end_dl[] = {
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401B158 - 0x0401B1D8
+const Gfx mario_right_hand_cap[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBFADEA, G_CC_BLENDRGBFADEA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_right_hand_cap_m_logo_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPDisplayList(mario_right_hand_cap_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401B1D8 - 0x0401B230
+const Gfx mario_right_hand_cap_wings[] = {
+    gsSPDisplayList(mario_right_hand_cap_wings_initial_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_right_hand_cap_wings_half_1_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_right_hand_cap_wings_half_2_dl),
+    gsSPDisplayList(mario_right_hand_cap_wings_end_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401B230 - 0x0401B278
+const Gfx mario_metal_right_hand_cap_shared_dl[] = {
+    gsSPDisplayList(mario_right_hand_cap_m_logo_dl),
+    gsSPDisplayList(mario_right_hand_cap_top_dl),
+    gsSPDisplayList(mario_right_hand_cap_hand_position_dl),
+    gsSPDisplayList(mario_right_hand_cap_bottom_dl),
+    gsDPPipeSync(),
+    gsSPClearGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401B278 - 0x0401B2D0
+const Gfx mario_metal_right_hand_cap_shared_dl_wings[] = {
+    gsSPDisplayList(mario_right_hand_cap_wings_initial_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_right_hand_cap_wings_half_1_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_right_hand_cap_wings_half_2_dl),
+    gsSPDisplayList(mario_right_hand_cap_wings_end_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401B2D0
+static const Vtx mario_right_hand_peace_shared_dl_vertex_group1[] = {
+    {{{   -21,      9,     33}, 0, {     0,      0}, {0x8a, 0xe1, 0x1f, 0x00}}},
+    {{{   -25,     24,      0}, 0, {     0,      0}, {0x84, 0xf8, 0xea, 0x00}}},
+    {{{    -8,    -12,    -20}, 0, {     0,      0}, {0x93, 0xcf, 0xd7, 0x00}}},
+    {{{     0,    -35,     32}, 0, {     0,      0}, {0x9d, 0xba, 0x22, 0xff}}},
+    {{{     6,    -49,      0}, 0, {     0,      0}, {0xa9, 0xa7, 0xec, 0xff}}},
+    {{{    88,    -34,     39}, 0, {     0,      0}, {0x38, 0xa1, 0x3d, 0xff}}},
+    {{{    90,     -3,     52}, 0, {     0,      0}, {0x50, 0x07, 0x61, 0xff}}},
+    {{{    45,    -29,     52}, 0, {     0,      0}, {0xeb, 0xb9, 0x66, 0xff}}},
+    {{{    23,    -29,     36}, 0, {     0,      0}, {0x12, 0xec, 0x7b, 0xff}}},
+    {{{    18,     30,     41}, 0, {     0,      0}, {0xc1, 0x2b, 0x64, 0xff}}},
+    {{{    46,     49,     45}, 0, {     0,      0}, {0xf8, 0x44, 0x6a, 0xff}}},
+    {{{     0,     21,     37}, 0, {     0,      0}, {0xfe, 0x44, 0x6a, 0xff}}},
+    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0xff}}},
+    {{{    56,     80,      1}, 0, {     0,      0}, {0x1a, 0x6a, 0x40, 0xff}}},
+    {{{     8,     58,     -2}, 0, {     0,      0}, {0xbc, 0x55, 0x40, 0xff}}},
+    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0xff}}},
+};
+
+// 0x0401B3D0
+static const Vtx mario_right_hand_peace_shared_dl_vertex_group2[] = {
+    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
+    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0x00}}},
+    {{{    32,    -43,      0}, 0, {     0,      0}, {0xdd, 0xba, 0x9d, 0x00}}},
+    {{{    45,    -29,     52}, 0, {     0,      0}, {0xeb, 0xb9, 0x66, 0xff}}},
+    {{{    32,    -43,      0}, 0, {     0,      0}, {0xeb, 0x89, 0x24, 0xff}}},
+    {{{    18,     30,     41}, 0, {     0,      0}, {0xc1, 0x2b, 0x64, 0xff}}},
+    {{{     8,     58,     -2}, 0, {     0,      0}, {0xbc, 0x55, 0x40, 0xff}}},
+    {{{    -4,     38,      0}, 0, {     0,      0}, {0xd3, 0x66, 0x3c, 0xff}}},
+    {{{     8,     58,     -2}, 0, {     0,      0}, {0xd0, 0x30, 0x96, 0xff}}},
+    {{{    -4,     38,      0}, 0, {     0,      0}, {0xb3, 0x18, 0x9f, 0xff}}},
+    {{{    24,    -59,     -3}, 0, {     0,      0}, {0xc4, 0xb9, 0xab, 0xff}}},
+    {{{     6,    -49,      0}, 0, {     0,      0}, {0xa9, 0xa7, 0xec, 0xff}}},
+    {{{    -8,    -12,    -20}, 0, {     0,      0}, {0x93, 0xcf, 0xd7, 0xff}}},
+    {{{     2,     -5,    -33}, 0, {     0,      0}, {0xad, 0xda, 0xa9, 0xff}}},
+};
+
+// 0x0401B4B0
+static const Vtx mario_right_hand_peace_shared_dl_vertex_group3[] = {
+    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x31, 0x4d, 0xa8, 0xff}}},
+    {{{    -4,     38,      0}, 0, {     0,      0}, {0x31, 0x4d, 0xa8, 0x00}}},
+    {{{    14,     -1,    -22}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0x00}}},
+    {{{     2,     -5,    -33}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0xff}}},
+    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x86, 0x10, 0xe4, 0xff}}},
+    {{{   -25,     24,      0}, 0, {     0,      0}, {0x84, 0xf8, 0xea, 0xff}}},
+    {{{   -21,      9,     33}, 0, {     0,      0}, {0x8a, 0xe1, 0x1f, 0xff}}},
+    {{{   -15,     23,     43}, 0, {     0,      0}, {0xd6, 0x31, 0x6c, 0xff}}},
+    {{{     0,    -35,     32}, 0, {     0,      0}, {0x9d, 0xba, 0x22, 0xff}}},
+    {{{    15,    -39,     42}, 0, {     0,      0}, {0x0c, 0xbe, 0x6b, 0xff}}},
+    {{{     6,    -49,      0}, 0, {     0,      0}, {0xa9, 0xa7, 0xec, 0xff}}},
+    {{{    24,    -59,     -3}, 0, {     0,      0}, {0xce, 0x92, 0x24, 0xff}}},
+    {{{     8,     58,     -2}, 0, {     0,      0}, {0xd0, 0x30, 0x96, 0xff}}},
+    {{{    56,     80,      1}, 0, {     0,      0}, {0xfe, 0x41, 0x94, 0xff}}},
+    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
+};
+
+// 0x0401B5A0
+static const Vtx mario_right_hand_peace_shared_dl_vertex_group4[] = {
+    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
+    {{{    88,    -34,     39}, 0, {     0,      0}, {0x38, 0xa1, 0x3d, 0x00}}},
+    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0x00}}},
+    {{{    56,     80,      1}, 0, {     0,      0}, {0xfe, 0x41, 0x94, 0xff}}},
+    {{{    84,     60,     -7}, 0, {     0,      0}, {0xfb, 0x44, 0x96, 0xff}}},
+    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
+    {{{   105,     17,      3}, 0, {     0,      0}, {0x0a, 0x7c, 0x14, 0xff}}},
+    {{{    98,     10,     29}, 0, {     0,      0}, {0x0a, 0x7a, 0x21, 0xff}}},
+    {{{   153,      7,     24}, 0, {     0,      0}, {0x0c, 0x7a, 0x1e, 0xff}}},
+    {{{    46,     49,     45}, 0, {     0,      0}, {0xf8, 0x44, 0x6a, 0xff}}},
+    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0xff}}},
+    {{{    56,     80,      1}, 0, {     0,      0}, {0x1a, 0x6a, 0x40, 0xff}}},
+    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
+    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x07, 0xcd, 0x8d, 0xff}}},
+    {{{    14,     -1,    -22}, 0, {     0,      0}, {0xbe, 0xe5, 0x98, 0xff}}},
+    {{{    -4,     38,      0}, 0, {     0,      0}, {0xb3, 0x18, 0x9f, 0xff}}},
+};
+
+// 0x0401B6A0
+static const Vtx mario_right_hand_peace_shared_dl_vertex_group5[] = {
+    {{{    -4,     38,      0}, 0, {     0,      0}, {0xd3, 0x66, 0x3c, 0xff}}},
+    {{{     0,     21,     37}, 0, {     0,      0}, {0xfe, 0x44, 0x6a, 0x00}}},
+    {{{    18,     30,     41}, 0, {     0,      0}, {0xc1, 0x2b, 0x64, 0x00}}},
+    {{{    45,    -29,     52}, 0, {     0,      0}, {0xeb, 0xb9, 0x66, 0xff}}},
+    {{{    23,    -29,     36}, 0, {     0,      0}, {0xe3, 0x8b, 0x25, 0xff}}},
+    {{{    32,    -43,      0}, 0, {     0,      0}, {0xeb, 0x89, 0x24, 0xff}}},
+    {{{    32,    -43,      0}, 0, {     0,      0}, {0xdd, 0xba, 0x9d, 0xff}}},
+    {{{    14,     -1,    -22}, 0, {     0,      0}, {0xbe, 0xe5, 0x98, 0xff}}},
+    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
+    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x7a, 0x08, 0x21, 0xff}}},
+    {{{   162,     14,    -11}, 0, {     0,      0}, {0x79, 0x01, 0x25, 0xff}}},
+    {{{   153,      7,     24}, 0, {     0,      0}, {0x7a, 0x08, 0x21, 0xff}}},
+    {{{   155,    -15,     21}, 0, {     0,      0}, {0x79, 0x06, 0x23, 0xff}}},
+    {{{    84,     60,     -7}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
+    {{{    84,     48,     24}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
+    {{{   126,     84,     -3}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
+};
+
+// 0x0401B7A0
+static const Vtx mario_right_hand_peace_shared_dl_vertex_group6[] = {
+    {{{   146,     59,     -8}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0xff}}},
+    {{{   126,     84,     -3}, 0, {     0,      0}, {0x5f, 0x47, 0x2a, 0x00}}},
+    {{{   123,     72,     21}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0x00}}},
+    {{{   126,     84,     -3}, 0, {     0,      0}, {0xfd, 0x37, 0x8e, 0xff}}},
+    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
+    {{{    84,     60,     -7}, 0, {     0,      0}, {0xfb, 0x44, 0x96, 0xff}}},
+    {{{   146,     59,     -8}, 0, {     0,      0}, {0x15, 0x2a, 0x8b, 0xff}}},
+    {{{   162,     14,    -11}, 0, {     0,      0}, {0x0a, 0x7d, 0x0d, 0xff}}},
+    {{{    89,     18,    -34}, 0, {     0,      0}, {0x06, 0x7e, 0xff, 0xff}}},
+    {{{   105,     17,      3}, 0, {     0,      0}, {0x0a, 0x7c, 0x14, 0xff}}},
+    {{{   162,     14,    -11}, 0, {     0,      0}, {0x26, 0x1e, 0x8b, 0xff}}},
+    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x18, 0xf9, 0x84, 0xff}}},
+    {{{    56,     80,      1}, 0, {     0,      0}, {0x1a, 0x6a, 0x40, 0xff}}},
+    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0xff}}},
+    {{{    84,     60,     -7}, 0, {     0,      0}, {0x4d, 0x5d, 0x24, 0xff}}},
+};
+
+// 0x0401B890
+static const Vtx mario_right_hand_peace_shared_dl_vertex_group7[] = {
+    {{{   139,     53,     25}, 0, {     0,      0}, {0x5b, 0xa8, 0x02, 0xff}}},
+    {{{   105,     17,      3}, 0, {     0,      0}, {0x59, 0xa6, 0xf7, 0x00}}},
+    {{{   146,     59,     -8}, 0, {     0,      0}, {0x57, 0xa6, 0xf0, 0x00}}},
+    {{{    33,      7,    -37}, 0, {     0,      0}, {0xde, 0xf5, 0x87, 0xff}}},
+    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
+    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x07, 0xcd, 0x8d, 0xff}}},
+    {{{    88,    -34,     39}, 0, {     0,      0}, {0x38, 0xa1, 0x3d, 0xff}}},
+    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
+    {{{    90,     -3,     52}, 0, {     0,      0}, {0x50, 0x07, 0x61, 0xff}}},
+    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x1c, 0x85, 0x00, 0xff}}},
+    {{{   155,    -15,     21}, 0, {     0,      0}, {0x19, 0x85, 0xf1, 0xff}}},
+    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x10, 0x83, 0x00, 0xff}}},
+    {{{   101,    -29,     15}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
+    {{{   153,      7,     24}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
+    {{{    98,     10,     29}, 0, {     0,      0}, {0x07, 0xd6, 0x77, 0xff}}},
+};
+
+// 0x0401B980
+static const Vtx mario_right_hand_peace_shared_dl_vertex_group8[] = {
+    {{{   139,     53,     25}, 0, {     0,      0}, {0xfc, 0x13, 0x7d, 0xff}}},
+    {{{   123,     72,     21}, 0, {     0,      0}, {0xfc, 0x15, 0x7d, 0x00}}},
+    {{{    84,     48,     24}, 0, {     0,      0}, {0x32, 0x3d, 0x62, 0x00}}},
+    {{{    98,     10,     29}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
+    {{{   101,    -29,     15}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
+    {{{   155,    -15,     21}, 0, {     0,      0}, {0xf5, 0xef, 0x7d, 0xff}}},
+    {{{   153,      7,     24}, 0, {     0,      0}, {0xff, 0xe2, 0x7b, 0xff}}},
+    {{{    90,     -3,     52}, 0, {     0,      0}, {0x50, 0x07, 0x61, 0xff}}},
+    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
+    {{{   146,     59,     -8}, 0, {     0,      0}, {0x57, 0xa6, 0xf0, 0xff}}},
+    {{{   105,     17,      3}, 0, {     0,      0}, {0x59, 0xa6, 0xf7, 0xff}}},
+    {{{    89,     18,    -34}, 0, {     0,      0}, {0x51, 0xa6, 0xdd, 0xff}}},
+    {{{   166,    -13,    -17}, 0, {     0,      0}, {0x18, 0xf9, 0x84, 0xff}}},
+    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x07, 0xcd, 0x8d, 0xff}}},
+    {{{    89,     18,    -34}, 0, {     0,      0}, {0x0a, 0x1b, 0x85, 0xff}}},
+};
+
+// 0x0401BA70
+static const Vtx mario_right_hand_peace_shared_dl_vertex_group9[] = {
+    {{{    84,     48,     24}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0xff}}},
+    {{{   123,     72,     21}, 0, {     0,      0}, {0xc3, 0x66, 0x29, 0x00}}},
+    {{{   126,     84,     -3}, 0, {     0,      0}, {0xc2, 0x66, 0x28, 0x00}}},
+    {{{   139,     53,     25}, 0, {     0,      0}, {0x5b, 0xa8, 0x02, 0xff}}},
+    {{{    98,     10,     29}, 0, {     0,      0}, {0x5b, 0xa8, 0x02, 0xff}}},
+    {{{   105,     17,      3}, 0, {     0,      0}, {0x59, 0xa6, 0xf7, 0xff}}},
+    {{{   105,     17,      3}, 0, {     0,      0}, {0x0a, 0x7c, 0x14, 0xff}}},
+    {{{   153,      7,     24}, 0, {     0,      0}, {0x0c, 0x7a, 0x1e, 0xff}}},
+    {{{   162,     14,    -11}, 0, {     0,      0}, {0x0a, 0x7d, 0x0d, 0xff}}},
+    {{{   123,     72,     21}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0xff}}},
+    {{{   139,     53,     25}, 0, {     0,      0}, {0x5a, 0x52, 0x21, 0xff}}},
+    {{{   146,     59,     -8}, 0, {     0,      0}, {0x5d, 0x4d, 0x26, 0xff}}},
+    {{{    24,    -59,     -3}, 0, {     0,      0}, {0x68, 0xc7, 0x2c, 0xff}}},
+    {{{    32,    -43,      0}, 0, {     0,      0}, {0x68, 0xc7, 0x2c, 0xff}}},
+    {{{    23,    -29,     36}, 0, {     0,      0}, {0x12, 0xec, 0x7b, 0xff}}},
+    {{{    15,    -39,     42}, 0, {     0,      0}, {0x0c, 0xbe, 0x6b, 0xff}}},
+};
+
+// 0x0401BB70
+static const Vtx mario_right_hand_peace_shared_dl_vertex_group10[] = {
+    {{{     2,     -5,    -33}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0xff}}},
+    {{{    14,     -1,    -22}, 0, {     0,      0}, {0x47, 0x20, 0x9d, 0x00}}},
+    {{{    32,    -43,      0}, 0, {     0,      0}, {0x52, 0xee, 0xa2, 0x00}}},
+    {{{    24,    -59,     -3}, 0, {     0,      0}, {0x52, 0xee, 0xa2, 0xff}}},
+    {{{     2,     -5,    -33}, 0, {     0,      0}, {0xad, 0xda, 0xa9, 0xff}}},
+    {{{    -8,    -12,    -20}, 0, {     0,      0}, {0x93, 0xcf, 0xd7, 0xff}}},
+    {{{   -25,     24,      0}, 0, {     0,      0}, {0x84, 0xf8, 0xea, 0xff}}},
+    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x86, 0x10, 0xe4, 0xff}}},
+    {{{   -15,     23,     43}, 0, {     0,      0}, {0xd6, 0x31, 0x6c, 0xff}}},
+    {{{     0,     21,     37}, 0, {     0,      0}, {0xfe, 0x44, 0x6a, 0xff}}},
+    {{{    -4,     38,      0}, 0, {     0,      0}, {0xd3, 0x66, 0x3c, 0xff}}},
+    {{{   -22,     43,     -3}, 0, {     0,      0}, {0x1a, 0x72, 0x2f, 0xff}}},
+    {{{    15,    -39,     42}, 0, {     0,      0}, {0x0c, 0xbe, 0x6b, 0xff}}},
+    {{{    23,    -29,     36}, 0, {     0,      0}, {0x12, 0xec, 0x7b, 0xff}}},
+};
+
+// 0x0401BC50
+static const Vtx mario_right_hand_peace_shared_dl_vertex_group11[] = {
+    {{{   101,    -29,     15}, 0, {     0,      0}, {0x53, 0xa3, 0x15, 0xff}}},
+    {{{    56,    -47,     -5}, 0, {     0,      0}, {0x0c, 0x87, 0xde, 0x00}}},
+    {{{    94,    -22,    -18}, 0, {     0,      0}, {0x1c, 0x85, 0x00, 0x00}}},
+};
+
+// 0x0401BC80 - 0x0401BF30
+const Gfx mario_right_hand_peace_shared_dl[] = {
+    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  0,  2, 0x0),
+    gsSP2Triangles( 2,  4,  3, 0x0,  5,  6,  7, 0x0),
+    gsSP2Triangles( 8,  7,  9, 0x0,  7,  6, 10, 0x0),
+    gsSP2Triangles( 7, 10,  9, 0x0, 11,  8,  9, 0x0),
+    gsSP2Triangles( 7, 12,  5, 0x0, 10, 13, 14, 0x0),
+    gsSP2Triangles( 6, 15, 10, 0x0, 10, 14,  9, 0x0),
+    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group2, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+    gsSP2Triangles( 5,  6,  7, 0x0,  8,  0,  9, 0x0),
+    gsSP2Triangles(10, 11, 12, 0x0, 10, 12, 13, 0x0),
+    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group3, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
+    gsSP2Triangles( 7,  6,  8, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles( 9,  8, 10, 0x0,  9, 10, 11, 0x0),
+    gsSP1Triangle(12, 13, 14, 0x0),
+    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group4, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles( 2, 12, 13, 0x0,  3,  5, 12, 0x0),
+    gsSP1Triangle(12, 14, 15, 0x0),
+    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group5, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles( 9, 11, 12, 0x0, 13, 14, 15, 0x0),
+    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group6, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 4,  3,  6, 0x0,  7,  8,  9, 0x0),
+    gsSP2Triangles( 4, 10, 11, 0x0, 12, 13, 14, 0x0),
+    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group7, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10,  7, 0x0),
+    gsSP2Triangles(10,  9, 11, 0x0, 12, 13, 14, 0x0),
+    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group8, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  2,  3,  0, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  3,  2,  7, 0x0),
+    gsSP2Triangles( 8,  3,  7, 0x0,  9, 10, 11, 0x0),
+    gsSP1Triangle(12, 13, 14, 0x0),
+    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group9, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles(12, 13, 14, 0x0, 12, 14, 15, 0x0),
+    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group10, 14, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  4,  6,  7, 0x0),
+    gsSP2Triangles( 8,  9, 10, 0x0,  8, 10, 11, 0x0),
+    gsSP2Triangles(12, 13,  9, 0x0, 12,  9,  8, 0x0),
+    gsSPVertex(mario_right_hand_peace_shared_dl_vertex_group11, 3, 0),
+    gsSP1Triangle( 0,  1,  2, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401BF30 - 0x0401BF50
+const Gfx mario_right_hand_peace[] = {
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_right_hand_peace_shared_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401BF50
+static const Vtx mario_cap_unused_m_logo_dl_vertex[] = {
+    {{{    33,     35,    118}, 0, {   728,    758}, {0x30, 0x26, 0x6e, 0xff}}},
+    {{{    96,     22,     45}, 0, {  1240,    876}, {0x48, 0xa4, 0x31, 0xff}}},
+    {{{    71,    101,    113}, 0, {  1028,    148}, {0x55, 0x16, 0x5b, 0xff}}},
+    {{{     0,    110,    143}, 0, {   460,     68}, {0x00, 0x34, 0x73, 0xff}}},
+    {{{   -31,     35,    118}, 0, {   206,    762}, {0xd0, 0x26, 0x6f, 0xff}}},
+    {{{   -70,    101,    113}, 0, {  -106,    158}, {0xab, 0x16, 0x5b, 0xff}}},
+    {{{   -95,     22,     46}, 0, {  -302,    890}, {0xa8, 0xb9, 0x38, 0xff}}},
+};
+
+// 0x0401BFC0
+static const Vtx mario_cap_unused_base_top_dl_vertex_group1[] = {
+    {{{   -66,      2,    139}, 0, {     0,      0}, {0xb0, 0xbb, 0x45, 0xff}}},
+    {{{     0,      0,    163}, 0, {     0,      0}, {0x00, 0xba, 0x69, 0xff}}},
+    {{{   -31,     35,    118}, 0, {     0,      0}, {0xd0, 0x26, 0x6f, 0xff}}},
+    {{{   -32,     17,    109}, 0, {     0,      0}, {0x00, 0x83, 0xf0, 0xff}}},
+    {{{    33,     17,    109}, 0, {     0,      0}, {0xfb, 0x84, 0xea, 0xff}}},
+    {{{   -95,     22,     46}, 0, {     0,      0}, {0xa8, 0xb9, 0x38, 0xff}}},
+    {{{  -101,     10,     -7}, 0, {     0,      0}, {0xd8, 0x89, 0x11, 0xff}}},
+    {{{   -70,    101,    113}, 0, {     0,      0}, {0xab, 0x16, 0x5b, 0xff}}},
+    {{{  -135,     70,     23}, 0, {     0,      0}, {0x84, 0x15, 0x10, 0xff}}},
+    {{{  -125,     38,    -45}, 0, {     0,      0}, {0x8d, 0xec, 0xd1, 0xff}}},
+    {{{   -86,      1,    -60}, 0, {     0,      0}, {0xce, 0x8c, 0xf6, 0xff}}},
+    {{{   -41,    144,     64}, 0, {     0,      0}, {0xdc, 0x79, 0x00, 0xff}}},
+    {{{   -76,     84,    -60}, 0, {     0,      0}, {0xd5, 0x6e, 0xd3, 0xff}}},
+    {{{   136,     70,     22}, 0, {     0,      0}, {0x7b, 0x16, 0x10, 0xff}}},
+    {{{    71,    101,    113}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
+    {{{    96,     22,     45}, 0, {     0,      0}, {0x48, 0xa4, 0x31, 0xff}}},
+};
+
+// 0x0401C0C0
+static const Vtx mario_cap_unused_base_top_dl_vertex_group2[] = {
+    {{{    42,    144,     64}, 0, {     0,      0}, {0x2b, 0x76, 0x0d, 0xff}}},
+    {{{   136,     70,     22}, 0, {     0,      0}, {0x7b, 0x16, 0x10, 0xff}}},
+    {{{    76,     84,    -60}, 0, {     0,      0}, {0x2a, 0x6c, 0xcf, 0xff}}},
+    {{{   103,     10,     -6}, 0, {     0,      0}, {0x42, 0x96, 0x12, 0xff}}},
+    {{{   126,     38,    -46}, 0, {     0,      0}, {0x73, 0xec, 0xd0, 0xff}}},
+    {{{    71,    101,    113}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
+    {{{    96,     22,     45}, 0, {     0,      0}, {0x48, 0xa4, 0x31, 0xff}}},
+    {{{    67,      2,    139}, 0, {     0,      0}, {0x50, 0xba, 0x44, 0xff}}},
+    {{{    33,     17,    109}, 0, {     0,      0}, {0xfb, 0x84, 0xea, 0xff}}},
+    {{{    33,     35,    118}, 0, {     0,      0}, {0x30, 0x26, 0x6e, 0xff}}},
+    {{{    86,      1,    -60}, 0, {     0,      0}, {0x20, 0x86, 0xfe, 0xff}}},
+    {{{     0,      0,    163}, 0, {     0,      0}, {0x00, 0xba, 0x69, 0xff}}},
+    {{{   -31,     35,    118}, 0, {     0,      0}, {0xd0, 0x26, 0x6f, 0xff}}},
+    {{{    53,      0,   -118}, 0, {     0,      0}, {0x2c, 0xb5, 0xa5, 0xff}}},
+    {{{    49,     62,   -139}, 0, {     0,      0}, {0x32, 0x49, 0xa6, 0xff}}},
+};
+
+// 0x0401C1B0
+static const Vtx mario_cap_unused_base_top_dl_vertex_group3[] = {
+    {{{   -76,     84,    -60}, 0, {     0,      0}, {0xd5, 0x6e, 0xd3, 0xff}}},
+    {{{   -41,    144,     64}, 0, {     0,      0}, {0xdc, 0x79, 0x00, 0xff}}},
+    {{{    76,     84,    -60}, 0, {     0,      0}, {0x2a, 0x6c, 0xcf, 0xff}}},
+    {{{     0,    110,    143}, 0, {     0,      0}, {0x00, 0x34, 0x73, 0xff}}},
+    {{{    42,    144,     64}, 0, {     0,      0}, {0x2b, 0x76, 0x0d, 0xff}}},
+    {{{   -70,    101,    113}, 0, {     0,      0}, {0xab, 0x16, 0x5b, 0xff}}},
+    {{{    71,    101,    113}, 0, {     0,      0}, {0x55, 0x16, 0x5b, 0xff}}},
+    {{{    49,     62,   -139}, 0, {     0,      0}, {0x32, 0x49, 0xa6, 0xff}}},
+    {{{   126,     38,    -46}, 0, {     0,      0}, {0x73, 0xec, 0xd0, 0xff}}},
+    {{{   -52,      0,   -118}, 0, {     0,      0}, {0xd2, 0x9d, 0xc1, 0xff}}},
+    {{{   -49,     62,   -138}, 0, {     0,      0}, {0xce, 0x1a, 0x8f, 0xff}}},
+    {{{    53,      0,   -118}, 0, {     0,      0}, {0x2c, 0xb5, 0xa5, 0xff}}},
+    {{{  -125,     38,    -45}, 0, {     0,      0}, {0x8d, 0xec, 0xd1, 0xff}}},
+    {{{    86,      1,    -60}, 0, {     0,      0}, {0x20, 0x86, 0xfe, 0xff}}},
+    {{{   -86,      1,    -60}, 0, {     0,      0}, {0xce, 0x8c, 0xf6, 0xff}}},
+};
+
+// 0x0401C2A0
+static const Vtx mario_cap_unused_base_bottom_dl_vertex[] = {
+    {{{    86,      1,    -60}, 0, {     0,      0}, {0x20, 0x86, 0xfe, 0xff}}},
+    {{{   -86,      1,    -60}, 0, {     0,      0}, {0xce, 0x8c, 0xf6, 0xff}}},
+    {{{   -52,      0,   -118}, 0, {     0,      0}, {0xd2, 0x9d, 0xc1, 0xff}}},
+    {{{    33,     17,    109}, 0, {     0,      0}, {0xfb, 0x84, 0xea, 0xff}}},
+    {{{   -32,     17,    109}, 0, {     0,      0}, {0x00, 0x83, 0xf0, 0xff}}},
+    {{{  -101,     10,     -7}, 0, {     0,      0}, {0xd8, 0x89, 0x11, 0xff}}},
+    {{{    96,     22,     45}, 0, {     0,      0}, {0x48, 0xa4, 0x31, 0xff}}},
+    {{{   103,     10,     -6}, 0, {     0,      0}, {0x42, 0x96, 0x12, 0xff}}},
+    {{{    53,      0,   -118}, 0, {     0,      0}, {0x2c, 0xb5, 0xa5, 0xff}}},
+};
+
+// 0x0401C330 - 0x0401C368
+const Gfx mario_cap_unused_m_logo_dl[] = {
+    gsSPVertex(mario_cap_unused_m_logo_dl_vertex, 7, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  0, 0x0),
+    gsSP2Triangles( 3,  5,  4, 0x0,  2,  3,  0, 0x0),
+    gsSP1Triangle( 5,  6,  4, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C368 - 0x0401C4C8
+const Gfx mario_cap_unused_base_top_dl[] = {
+    gsSPVertex(mario_cap_unused_base_top_dl_vertex_group1, 16, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 3,  1,  0, 0x0,  3,  5,  6, 0x0),
+    gsSP2Triangles( 3,  0,  5, 0x0,  5,  7,  8, 0x0),
+    gsSP2Triangles( 5,  8,  6, 0x0,  0,  2,  5, 0x0),
+    gsSP2Triangles( 6,  9, 10, 0x0,  8,  9,  6, 0x0),
+    gsSP2Triangles(11,  8,  7, 0x0,  8, 12,  9, 0x0),
+    gsSP2Triangles(12,  8, 11, 0x0, 13, 14, 15, 0x0),
+    gsSPVertex(mario_cap_unused_base_top_dl_vertex_group2, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  1, 0x0),
+    gsSP2Triangles( 4,  2,  1, 0x0,  5,  1,  0, 0x0),
+    gsSP2Triangles( 1,  6,  3, 0x0,  6,  7,  8, 0x0),
+    gsSP2Triangles( 9,  7,  6, 0x0, 10,  4,  3, 0x0),
+    gsSP2Triangles( 9, 11,  7, 0x0,  7, 11,  8, 0x0),
+    gsSP2Triangles(12, 11,  9, 0x0, 13, 14,  4, 0x0),
+    gsSPVertex(mario_cap_unused_base_top_dl_vertex_group3, 15, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  1,  3,  4, 0x0),
+    gsSP2Triangles( 5,  3,  1, 0x0,  1,  4,  2, 0x0),
+    gsSP2Triangles( 4,  3,  6, 0x0,  0,  2,  7, 0x0),
+    gsSP2Triangles( 8,  7,  2, 0x0,  9, 10, 11, 0x0),
+    gsSP2Triangles(12, 10,  9, 0x0,  7, 10,  0, 0x0),
+    gsSP2Triangles(10,  7, 11, 0x0,  0, 10, 12, 0x0),
+    gsSP2Triangles(11,  8, 13, 0x0, 14, 12,  9, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C4C8 - 0x0401C510
+const Gfx mario_cap_unused_base_bottom_dl[] = {
+    gsSPVertex(mario_cap_unused_base_bottom_dl_vertex, 9, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  3,  5, 0x0,  7,  6,  5, 0x0),
+    gsSP2Triangles( 0,  7,  5, 0x0,  0,  5,  1, 0x0),
+    gsSP1Triangle( 2,  8,  0, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C510 - 0x0401C538
+const Gfx mario_cap_unused_base_dl[] = {
+    gsSPDisplayList(mario_cap_unused_base_top_dl),
+    gsSPLight(&mario_brown2_lights_group.l, 1),
+    gsSPLight(&mario_brown2_lights_group.a, 2),
+    gsSPDisplayList(mario_cap_unused_base_bottom_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C538
+static const Vtx mario_wings_half_1_unused_dl_vertex[] = {
+    {{{   199,    247,    -55}, 0, {   990,      0}, {0x59, 0xed, 0x58, 0xff}}},
+    {{{   131,    274,     20}, 0, {     0,      0}, {0x59, 0xed, 0x58, 0xff}}},
+    {{{    69,     71,     38}, 0, {     0,   2012}, {0x59, 0xed, 0x58, 0xff}}},
+    {{{   199,    247,    -55}, 0, {   990,      0}, {0x58, 0xee, 0x58, 0xff}}},
+    {{{    69,     71,     38}, 0, {     0,   2012}, {0x58, 0xee, 0x58, 0xff}}},
+    {{{   138,     44,    -37}, 0, {   990,   2012}, {0x58, 0xee, 0x58, 0xff}}},
+    {{{  -137,     44,    -37}, 0, {   990,   2012}, {0xa8, 0xee, 0x58, 0xff}}},
+    {{{   -68,     71,     38}, 0, {     0,   2012}, {0xa8, 0xee, 0x58, 0xff}}},
+    {{{  -198,    247,    -55}, 0, {   990,      0}, {0xa8, 0xee, 0x58, 0xff}}},
+    {{{   -68,     71,     38}, 0, {     0,   2012}, {0xa7, 0xed, 0x58, 0xff}}},
+    {{{  -130,    274,     20}, 0, {     0,      0}, {0xa7, 0xed, 0x58, 0xff}}},
+    {{{  -198,    247,    -55}, 0, {   990,      0}, {0xa7, 0xed, 0x58, 0xff}}},
+};
+
+// 0x0401C5F8
+static const Vtx mario_wings_half_2_unused_dl_vertex[] = {
+    {{{   268,    219,   -132}, 0, {   990,      0}, {0x59, 0xed, 0x57, 0xff}}},
+    {{{   199,    247,    -55}, 0, {     0,      0}, {0x59, 0xed, 0x57, 0xff}}},
+    {{{   138,     44,    -37}, 0, {     0,   2012}, {0x59, 0xed, 0x57, 0xff}}},
+    {{{   207,     16,   -114}, 0, {   990,   2012}, {0x59, 0xed, 0x57, 0xff}}},
+    {{{  -206,     16,   -114}, 0, {   990,   2012}, {0xa7, 0xed, 0x57, 0xff}}},
+    {{{  -137,     44,    -37}, 0, {     0,   2012}, {0xa7, 0xed, 0x57, 0xff}}},
+    {{{  -267,    219,   -132}, 0, {   990,      0}, {0xa7, 0xed, 0x57, 0xff}}},
+    {{{  -198,    247,    -55}, 0, {     0,      0}, {0xa7, 0xed, 0x57, 0xff}}},
+};
+
+// 0x0401C678 - 0x0401C6A8
+const Gfx mario_wings_half_1_unused_dl[] = {
+    gsSPVertex(mario_wings_half_1_unused_dl_vertex, 12, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  3,  4,  5, 0x0),
+    gsSP2Triangles( 6,  7,  8, 0x0,  9, 10, 11, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C6A8 - 0x0401C6D8
+const Gfx mario_wings_half_2_unused_dl[] = {
+    gsSPVertex(mario_wings_half_2_unused_dl_vertex, 8, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSP2Triangles( 4,  5,  6, 0x0,  5,  7,  6, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C6D8 - 0x0401C730
+const Gfx mario_cap_wings_unused_initial_dl[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_MODULATERGBA, G_CC_MODULATERGBA),
+    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C730 - 0x0401C758
+const Gfx mario_cap_wings_unused_end_dl[] = {
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C758 - 0x0401C7E8 # Unreferenced, possibly a early duplicate of the cap object used in segment 03
+const Gfx mario_cap_unused_dl[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_BLENDRGBA, G_CC_BLENDRGBA),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 5, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (32 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_m_logo),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 32 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPLight(&mario_red_lights_group.l, 1),
+    gsSPLight(&mario_red_lights_group.a, 2),
+    gsSPDisplayList(mario_cap_unused_m_logo_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPDisplayList(mario_cap_unused_base_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C7E8 - 0x0401C890 # Unreferenced, possibly an early duplicate of the cap object used in segment 03
+const Gfx mario_metal_cap_unused_dl[] = {
+    gsDPPipeSync(),
+    gsSPSetGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_MODULATERGB, G_CC_MODULATERGB),
+    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsSPDisplayList(mario_cap_unused_m_logo_dl),
+    gsSPDisplayList(mario_cap_unused_base_top_dl),
+    gsSPDisplayList(mario_cap_unused_base_bottom_dl),
+    gsDPPipeSync(),
+    gsSPClearGeometryMode(G_TEXTURE_GEN),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C890 - 0x0401C8E8 # Unreferenced, unused like the duplicated cap, same case
+const Gfx mario_cap_wings_unused[] = {
+    gsSPDisplayList(mario_cap_wings_unused_initial_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_1_unused_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_2_unused_dl),
+    gsSPDisplayList(mario_cap_wings_unused_end_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C8E8 - 0x0401C940 # Unreferenced, unused like the duplicated cap, same case
+const Gfx mario_metal_cap_wings_unused[] = {
+    gsSPDisplayList(mario_cap_wings_unused_initial_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_1_unused_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_2_unused_dl),
+    gsSPDisplayList(mario_cap_wings_unused_end_dl),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C940
+static const Vtx mario_wings_half_1_dl_vertex[] = {
+    {{{  -105,    212,      0}, 0, {     0,      0}, {0x00, 0x00, 0x7f, 0xff}}},
+    {{{  -105,      0,      0}, 0, {     0,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
+    {{{     0,      0,      0}, 0, {   990,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
+    {{{     0,    212,      0}, 0, {   990,      0}, {0x00, 0x00, 0x7f, 0xff}}},
+};
+
+// 0x0401C980
+static const Vtx mario_wings_half_2_dl_vertex[] = {
+    {{{     0,      0,      0}, 0, {     0,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
+    {{{   106,    212,      0}, 0, {   990,      0}, {0x00, 0x00, 0x7f, 0xff}}},
+    {{{     0,    212,      0}, 0, {     0,      0}, {0x00, 0x00, 0x7f, 0xff}}},
+    {{{   106,      0,      0}, 0, {   990,   2012}, {0x00, 0x00, 0x7f, 0xff}}},
+};
+
+// 0x0401C9C0 - 0x0401C9E0
+const Gfx mario_wings_half_1_dl[] = {
+    gsSPVertex(mario_wings_half_1_dl_vertex, 4, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  2,  3, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401C9E0 - 0x0401CA00
+const Gfx mario_wings_half_2_dl[] = {
+    gsSPVertex(mario_wings_half_2_dl_vertex, 4, 0),
+    gsSP2Triangles( 0,  1,  2, 0x0,  0,  3,  1, 0x0),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401CA00 - 0x0401CAB8
+const Gfx mario_cap_wings[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_DECALRGBA, G_CC_DECALRGBA),
+    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_1_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_2_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401CAB8 - 0x0401CB70
+const Gfx mario_cap_wings_transparent[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_DECALFADEA, G_CC_DECALFADEA),
+    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_1),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_1_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_wings_half_2),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_2_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADEFADEA, G_CC_SHADEFADEA),
+    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401CB70 - 0x0401CC28
+const Gfx mario_metal_cap_wings[] = {
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_DECALRGBA, G_CC_DECALRGBA),
+    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsSPLight(&mario_white_lights_group.l, 1),
+    gsSPLight(&mario_white_lights_group.a, 2),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_1_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_2_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+    gsSPSetGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+    gsSPEndDisplayList(),
+};
+
+// 0x0401CC28 - 0x0401CD20
+const Gfx mario_metal_cap_wings_transparent[] = {
+    gsDPPipeSync(),
+    gsSPClearGeometryMode(G_TEXTURE_GEN),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPSetCombineMode(G_CC_DECALFADEA, G_CC_DECALFADEA),
+    gsSPClearGeometryMode(G_CULL_BACK | G_SHADING_SMOOTH),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 0, 0, G_TX_LOADTILE, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD, G_TX_WRAP | G_TX_NOMIRROR, G_TX_NOMASK, G_TX_NOLOD),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_ON),
+    gsDPTileSync(),
+    gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, G_TX_RENDERTILE, 0, G_TX_CLAMP, 6, G_TX_NOLOD, G_TX_CLAMP, 5, G_TX_NOLOD),
+    gsDPSetTileSize(0, 0, 0, (32 - 1) << G_TEXTURE_IMAGE_FRAC, (64 - 1) << G_TEXTURE_IMAGE_FRAC),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_1),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_1_dl),
+    gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, mario_texture_metal_wings_half_2),
+    gsDPLoadSync(),
+    gsDPLoadBlock(G_TX_LOADTILE, 0, 0, 32 * 64 - 1, CALC_DXT(32, G_IM_SIZ_16b_BYTES)),
+    gsSPDisplayList(mario_wings_half_2_dl),
+    gsSPTexture(0xFFFF, 0xFFFF, 0, G_TX_RENDERTILE, G_OFF),
+    gsDPPipeSync(),
+    gsSPSetGeometryMode(G_TEXTURE_GEN | G_CULL_BACK | G_SHADING_SMOOTH),
+    gsDPSetCombineMode(G_CC_DECALFADE, G_CC_DECALFADE),
+    gsDPLoadTextureBlock(mario_texture_metal, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, G_TX_WRAP | G_TX_NOMIRROR, G_TX_WRAP | G_TX_NOMIRROR, 6, 5, G_TX_NOLOD, G_TX_NOLOD),
+    gsSPTexture(0x0F80, 0x07C0, 0, G_TX_RENDERTILE, G_ON),
+    gsSPEndDisplayList(),
 };
-
-Gfx mario_000_offset_013_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_offset_013_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_005_mesh_layer_1[] = {
-	gsSPDisplayList(mat_mario_shoes_v3_001),
-	gsSPDisplayList(mario_000_displaylist_005_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_000_displaylist_005_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_mario_metal_v3_001),
-	gsSPDisplayList(mario_000_displaylist_005_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mario_material_revert_render_settings[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_LIGHTING),
-	gsSPClearGeometryMode(G_TEXTURE_GEN),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 0),
-	gsDPSetEnvColor(255, 255, 255, 255),
-	gsDPSetAlphaCompare(G_AC_NONE),
-	gsSPEndDisplayList(),
-};
-
diff --git a/actors/peach/geo.inc.c b/actors/peach/geo.inc.c
index 8b3a07b9..8307a56e 100644
--- a/actors/peach/geo.inc.c
+++ b/actors/peach/geo.inc.c
@@ -10,11 +10,7 @@ const GeoLayout peach_geo_000098[] = {
             GEO_OPEN_NODE(),
                GEO_ANIMATED_PART(LAYER_OCCLUDE_SILHOUETTE_OPAQUE, 132, 0, 0, NULL),
                GEO_OPEN_NODE(),
-               GEO_ASM(0, geo_peach_head_scaler),
-					   GEO_SCALE_BETTER(LAYER_OCCLUDE_SILHOUETTE_OPAQUE, 65536, 65536, 65536),
-                  GEO_OPEN_NODE(),
                   GEO_SWITCH_CASE(8, geo_switch_peach_eyes),
-                  
                   GEO_OPEN_NODE(),
                      GEO_DISPLAY_LIST(LAYER_OCCLUDE_SILHOUETTE_OPAQUE, peach_seg5_dl_05005CE0),
                      GEO_DISPLAY_LIST(LAYER_OCCLUDE_SILHOUETTE_OPAQUE, peach_seg5_dl_05005D38),
@@ -29,7 +25,6 @@ const GeoLayout peach_geo_000098[] = {
                   GEO_OPEN_NODE(),
                      GEO_ANIMATED_PART(LAYER_OCCLUDE_SILHOUETTE_OPAQUE, 0, 0, 0, peach_seg5_dl_05007AB8),
                   GEO_CLOSE_NODE(),
-                  GEO_CLOSE_NODE(),
                GEO_CLOSE_NODE(),
                GEO_ANIMATED_PART(LAYER_OCCLUDE_SILHOUETTE_OPAQUE, 132, 0, 0, peach_seg5_dl_05009148),
                GEO_ANIMATED_PART(LAYER_OCCLUDE_SILHOUETTE_OPAQUE, 132, 0, 0, peach_seg5_dl_05008F20),
@@ -79,9 +74,6 @@ const GeoLayout peach_geo_000254[] = {
             GEO_OPEN_NODE(),
                GEO_ANIMATED_PART(LAYER_TRANSPARENT, 132, 0, 0, NULL),
                GEO_OPEN_NODE(),
-               GEO_ASM(0, geo_peach_head_scaler),
-					   GEO_SCALE_BETTER(LAYER_TRANSPARENT, 65536, 65536, 65536),
-                  GEO_OPEN_NODE(),
                   GEO_SWITCH_CASE(8, geo_switch_peach_eyes),
                   GEO_OPEN_NODE(),
                      GEO_DISPLAY_LIST(LAYER_TRANSPARENT, peach_seg5_dl_05005CE0),
@@ -98,7 +90,6 @@ const GeoLayout peach_geo_000254[] = {
                      GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, peach_seg5_dl_05007AB8),
                   GEO_CLOSE_NODE(),
                GEO_CLOSE_NODE(),
-               GEO_CLOSE_NODE(),
                GEO_ANIMATED_PART(LAYER_TRANSPARENT, 132, 0, 0, peach_seg5_dl_05009148),
                GEO_ANIMATED_PART(LAYER_TRANSPARENT, 132, 0, 0, peach_seg5_dl_05008F20),
                GEO_ANIMATED_PART(LAYER_TRANSPARENT, 63, 0, 84, NULL),
diff --git a/actors/ragdoll_mario/anim_header.h b/actors/ragdoll_mario/anim_header.h
deleted file mode 100644
index 167adaf6..00000000
--- a/actors/ragdoll_mario/anim_header.h
+++ /dev/null
@@ -1 +0,0 @@
-extern const struct Animation *const ragdoll_mario_anims[];
diff --git a/actors/ragdoll_mario/anims/anim_Action.inc.c b/actors/ragdoll_mario/anims/anim_Action.inc.c
deleted file mode 100644
index 0fac22d2..00000000
--- a/actors/ragdoll_mario/anims/anim_Action.inc.c
+++ /dev/null
@@ -1,1399 +0,0 @@
-static const s16 ragdoll_mario_anim_Action_values[] = {
-	0x0000, 0xFFF4, 0xFFED, 0xFFEC, 0xFFEC, 0xFFED, 0xFFF7, 0x0004, 0x0013, 
-	0x0022, 0x002C, 0x003A, 0x0046, 0x0055, 0x0067, 0x0074, 0x007D, 0x0082, 
-	0x008A, 0x008C, 0x008C, 0x008C, 0x008B, 0x008A, 0x0087, 0x0082, 0x007D, 
-	0x0076, 0x006E, 0x0069, 0x0064, 0x0061, 0x005D, 0x005A, 0x0057, 0x0054, 
-	0x0052, 0x0050, 0x004F, 0x004F, 0x004E, 0x004E, 0x004F, 0x0050, 0x0050, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0050, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 0x0051, 
-	0x0051, 0x0051, 0x0050, 0x0000, 0xFFC8, 0xFFB3, 0xFFA0, 0xFF8E, 0xFF7D, 
-	0xFF6A, 0xFF58, 0xFF49, 0xFF3A, 0xFF30, 0xFF22, 0xFF18, 0xFF14, 0xFF0E, 
-	0xFF07, 0xFF01, 0xFEF7, 0xFEE8, 0xFEDB, 0xFECE, 0xFEC2, 0xFEB6, 0xFEAC, 
-	0xFEA2, 0xFE9A, 0xFE91, 0xFE87, 0xFE7D, 0xFE71, 0xFE65, 0xFE59, 0xFE4F, 
-	0xFE46, 0xFE3E, 0xFE37, 0xFE30, 0xFE2B, 0xFE25, 0xFE1F, 0xFE1B, 0xFE18, 
-	0xFE15, 0xFE13, 0xFE12, 0x00BF, 0x00C5, 0x00C8, 0x00C6, 0x00C2, 0x00B9, 
-	0x00AB, 0x009C, 0x008B, 0x0075, 0x0058, 0x0047, 0x0038, 0x002D, 0x002C, 
-	0x002A, 0x002E, 0x0030, 0x0039, 0x003D, 0x0040, 0x0040, 0x0042, 0x0047, 
-	0x004A, 0x004C, 0x004E, 0x004D, 0x004F, 0x004F, 0x004D, 0x004D, 0x004C, 
-	0x004A, 0x0049, 0x0046, 0x0044, 0x0043, 0x0043, 0x0044, 0x0044, 0x0044, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 0x0045, 
-	0x0045, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 
-	0x0044, 0x0044, 0x0044, 0x0044, 0x0044, 0x0043, 0x7FFF, 0xFFFF, 0x0000, 
-	0xBFFF, 0xBC52, 0xBAB0, 0xB82E, 0xB5B5, 0xB4AF, 0xB280, 0xAFC6, 0xACDE, 
-	0xAA89, 0xA9A8, 0xA742, 0xA2EA, 0x9F26, 0x9D3E, 0x9B2D, 0x9773, 0x94C3, 
-	0x94B9, 0x93D2, 0x91BB, 0x8EDC, 0x8BEB, 0x8950, 0x86AC, 0x83F1, 0x8102, 
-	0x7DCB, 0x7B79, 0x7986, 0x783B, 0x77F7, 0x7880, 0x794D, 0x7ADB, 0x7D39, 
-	0x808A, 0x83C2, 0x856B, 0x8658, 0x86BF, 0x86B9, 0x86A7, 0x86A9, 0x866F, 
-	0x8678, 0x8685, 0x8696, 0x86CD, 0x86F6, 0x86E5, 0x86E0, 0x86DA, 0x86D1, 
-	0x86CB, 0x86C9, 0x86CA, 0x86CB, 0x86CD, 0x86D0, 0x86D4, 0x86DA, 0x86E0, 
-	0x86E7, 0x86EF, 0x86F7, 0x8701, 0x870B, 0x8715, 0x8720, 0x872C, 0x8737, 
-	0x8740, 0x8744, 0x874B, 0x8753, 0x8758, 0x875A, 0x875B, 0x875C, 0x875E, 
-	0x875E, 0x875F, 0x8760, 0x8762, 0x8762, 0x8762, 0x8763, 0x8764, 0x8766, 
-	0x8768, 0x876A, 0x876B, 0x876D, 0x876F, 0x8770, 0x8771, 0x8773, 0x8774, 
-	0x8776, 0x8778, 0x877A, 0x877C, 0x877E, 0x877F, 0x8780, 0x8781, 0x8783, 
-	0x8784, 0x8786, 0x8787, 0x8787, 0x8788, 0x8789, 0x878A, 0x878C, 0x878E, 
-	0x878D, 0x878D, 0x878E, 0x878F, 0x8790, 0x8792, 0x8793, 0x8794, 0x8796, 
-	0x8797, 0x8799, 0x879A, 0x879B, 0x879D, 0x879E, 0x87A0, 0x87A1, 0x87A2, 
-	0x87A4, 0x87A5, 0x87A7, 0x87A9, 0x87AA, 0x87AB, 0x87AD, 0x87AE, 0x87B0, 
-	0x87B1, 0x87B2, 0x87B3, 0x87B3, 0x87B3, 0x87B3, 0x87B5, 0x87B6, 0x87B9, 
-	0x87BB, 0x87BD, 0x87BF, 0x87C0, 0x87C2, 0x87C3, 0x87C5, 0x87C8, 0x87CA, 
-	0x87CB, 0x87CD, 0x87CE, 0x87D0, 0x87D2, 0x87D4, 0x87D6, 0x87D7, 0x87D9, 
-	0x87DB, 0x87DD, 0x87DF, 0x87E2, 0x87E3, 0x87E4, 0x87E4, 0x87E4, 0x87E5, 
-	0x87E6, 0x87E7, 0x87E7, 0x87E8, 0x87E9, 0x87EA, 0x87EB, 0x87EC, 0x87ED, 
-	0x87EE, 0x87EF, 0x87F0, 0x87F1, 0x87F2, 0x87F3, 0x87F4, 0x87F5, 0x87F6, 
-	0x87F7, 0x87F8, 0x87F9, 0x87FB, 0x87FC, 0x87FD, 0x87FE, 0x8800, 0x87FF, 
-	0x87FE, 0x87FD, 0x87FD, 0x87FC, 0x87FA, 0x87F9, 0x87F6, 0x87F5, 0x87F5, 
-	0x87F4, 0x87F3, 0x87F1, 0x87F1, 0x87F0, 0x87EF, 0x87EE, 0x87ED, 0x87EC, 
-	0x87EB, 0x87EA, 0x87E9, 0x87E8, 0x87E6, 0x87E5, 0x87E4, 0x87E3, 0x87E2, 
-	0x87E1, 0x87E0, 0x87DE, 0x87DD, 0x87DC, 0x87DB, 0x87DA, 0x87D9, 0x87D8, 
-	0x87D6, 0x87D5, 0x87D4, 0x87D2, 0x87D1, 0x87D0, 0x87CF, 0xFFFF, 0x0484, 
-	0x0118, 0xFE61, 0xFEB5, 0xFF52, 0xFFDE, 0x0075, 0x003D, 0xFEE1, 0xFDEE, 
-	0x0218, 0x0987, 0x0EBD, 0x0D68, 0x0B9D, 0x0A15, 0x080C, 0x0688, 0x07BB, 
-	0x0AA9, 0x0EB3, 0x1221, 0x1446, 0x1629, 0x1824, 0x1A54, 0x1C56, 0x1D76, 
-	0x1F0C, 0x2082, 0x21E5, 0x2332, 0x249E, 0x25F9, 0x273D, 0x28B5, 0x2A6A, 
-	0x2C78, 0x2DB9, 0x2E74, 0x2EEF, 0x2F33, 0x2F5C, 0x2F6B, 0x2F6A, 0x2F67, 
-	0x2F56, 0x2F55, 0x2F65, 0x2F63, 0x2F58, 0x2F4D, 0x2F3D, 0x2F30, 0x2F26, 
-	0x2F1F, 0x2F1F, 0x2F1E, 0x2F1E, 0x2F1E, 0x2F1E, 0x2F1E, 0x2F1D, 0x2F1D, 
-	0x2F1D, 0x2F1E, 0x2F1F, 0x2F21, 0x2F22, 0x2F24, 0x2F27, 0x2F29, 0x2F29, 
-	0x2F28, 0x2F29, 0x2F28, 0x2F27, 0x2F27, 0x2F25, 0x2F24, 0x2F23, 0x2F21, 
-	0x2F20, 0x2F1D, 0x2F1B, 0x2F19, 0x2F17, 0x2F15, 0x2F12, 0x2F10, 0x2F0E, 
-	0x2F0C, 0x2F0A, 0x2F08, 0x2F07, 0x2F05, 0x2F02, 0x2F00, 0x2EFE, 0x2EFB, 
-	0x2EF9, 0x2EF6, 0x2EF5, 0x2EF3, 0x2EF0, 0x2EEF, 0x2EEC, 0x2EEA, 0x2EE9, 
-	0x2EE7, 0x2EE5, 0x2EE3, 0x2EE1, 0x2EDF, 0x2EDD, 0x2EDB, 0x2ED9, 0x2ED8, 
-	0x2ED6, 0x2ED3, 0x2ED1, 0x2ECF, 0x2ECC, 0x2ECA, 0x2EC8, 0x2EC6, 0x2EC3, 
-	0x2EC1, 0x2EBF, 0x2EBC, 0x2EBA, 0x2EB8, 0x2EB6, 0x2EB3, 0x2EB1, 0x2EAF, 
-	0x2EAC, 0x2EAA, 0x2EA8, 0x2EA5, 0x2EA2, 0x2EA0, 0x2E9D, 0x2E9B, 0x2E99, 
-	0x2E96, 0x2E94, 0x2E92, 0x2E90, 0x2E8E, 0x2E8C, 0x2E89, 0x2E86, 0x2E84, 
-	0x2E81, 0x2E7F, 0x2E7C, 0x2E7A, 0x2E77, 0x2E75, 0x2E72, 0x2E70, 0x2E6E, 
-	0x2E6C, 0x2E69, 0x2E67, 0x2E66, 0x2E65, 0x2E63, 0x2E61, 0x2E60, 0x2E5E, 
-	0x2E5C, 0x2E5B, 0x2E58, 0x2E55, 0x2E54, 0x2E51, 0x2E4F, 0x2E4C, 0x2E48, 
-	0x2E45, 0x2E42, 0x2E3E, 0x2E3B, 0x2E38, 0x2E35, 0x2E32, 0x2E2E, 0x2E2B, 
-	0x2E27, 0x2E24, 0x2E20, 0x2E1D, 0x2E1A, 0x2E16, 0x2E13, 0x2E0F, 0x2E0C, 
-	0x2E08, 0x2E05, 0x2E02, 0x2DFE, 0x2DFA, 0x2DF7, 0x2DF6, 0x2DF6, 0x2DF6, 
-	0x2DF5, 0x2DF4, 0x2DF4, 0x2DF4, 0x2DF4, 0x2DF3, 0x2DF2, 0x2DF2, 0x2DF1, 
-	0x2DF0, 0x2DEE, 0x2DED, 0x2DEC, 0x2DEA, 0x2DE9, 0x2DE8, 0x2DE7, 0x2DE5, 
-	0x2DE4, 0x2DE3, 0x2DE2, 0x2DE1, 0x2DE0, 0x2DDF, 0x2DDE, 0x2DDE, 0x2DDD, 
-	0x2DDC, 0x2DDC, 0x2DDB, 0x2DDB, 0x2DDA, 0x2DDA, 0x2DD8, 0x2DD7, 0x2DD6, 
-	0x2DD5, 0x2DD4, 0x2DD3, 0x2DD3, 0x2DD2, 0x4000, 0x402A, 0x3FFE, 0x407F, 
-	0x4261, 0x4412, 0x41DC, 0x3E97, 0x3ADC, 0x36E2, 0x347A, 0x33ED, 0x334F, 
-	0x3297, 0x326B, 0x31CF, 0x3229, 0x2FFB, 0x2A9F, 0x263E, 0x2299, 0x1EE9, 
-	0x1AFC, 0x174B, 0x13C8, 0x0FDF, 0x0B99, 0x066A, 0x0264, 0x005C, 0xFF73, 
-	0xFF04, 0xFEC8, 0xFE3B, 0xFE3B, 0xFF25, 0x01B6, 0x0450, 0x05DE, 0x06A0, 
-	0x06C1, 0x0690, 0x0627, 0x05B9, 0x055C, 0x0541, 0x054C, 0x056E, 0x05B3, 
-	0x05ED, 0x05E4, 0x05D6, 0x05C2, 0x05AD, 0x05A6, 0x05A5, 0x05A8, 0x05AB, 
-	0x05B0, 0x05B7, 0x05BF, 0x05C9, 0x05D3, 0x05DF, 0x05ED, 0x05FB, 0x060C, 
-	0x061C, 0x062E, 0x0641, 0x0654, 0x0667, 0x0677, 0x0684, 0x0693, 0x06A3, 
-	0x06AD, 0x06B0, 0x06B2, 0x06B5, 0x06B8, 0x06BB, 0x06BD, 0x06C1, 0x06C7, 
-	0x06C8, 0x06C9, 0x06CC, 0x06D0, 0x06D5, 0x06D9, 0x06DD, 0x06E1, 0x06E5, 
-	0x06EA, 0x06ED, 0x06F1, 0x06F5, 0x06FA, 0x06FE, 0x0703, 0x0708, 0x070D, 
-	0x0711, 0x0715, 0x0718, 0x071C, 0x0720, 0x0725, 0x0729, 0x072C, 0x072F, 
-	0x0733, 0x0737, 0x073B, 0x073F, 0x0744, 0x0743, 0x0746, 0x074A, 0x074D, 
-	0x0752, 0x0756, 0x075A, 0x075F, 0x0763, 0x0767, 0x076C, 0x0770, 0x0775, 
-	0x0779, 0x077E, 0x0782, 0x0786, 0x078B, 0x078F, 0x0794, 0x0798, 0x079D, 
-	0x07A1, 0x07A6, 0x07AB, 0x07B0, 0x07B4, 0x07B8, 0x07BD, 0x07C1, 0x07C3, 
-	0x07C5, 0x07C9, 0x07CE, 0x07D3, 0x07D8, 0x07DE, 0x07E4, 0x07E9, 0x07EF, 
-	0x07F5, 0x07FA, 0x0800, 0x0807, 0x080C, 0x0812, 0x0816, 0x081B, 0x0821, 
-	0x0828, 0x082E, 0x0833, 0x0839, 0x083F, 0x0845, 0x084B, 0x0851, 0x0858, 
-	0x085C, 0x085F, 0x0860, 0x0863, 0x0866, 0x086A, 0x086E, 0x0872, 0x0876, 
-	0x087A, 0x087E, 0x0882, 0x0886, 0x088A, 0x088E, 0x0892, 0x0896, 0x089B, 
-	0x089F, 0x08A3, 0x08A7, 0x08AB, 0x08B0, 0x08B4, 0x08B8, 0x08BD, 0x08C1, 
-	0x08C5, 0x08CA, 0x08CF, 0x08D3, 0x08D4, 0x08D3, 0x08D2, 0x08D1, 0x08D0, 
-	0x08CE, 0x08CD, 0x08CA, 0x08C9, 0x08C8, 0x08C7, 0x08C7, 0x08C5, 0x08C5, 
-	0x08C4, 0x08C3, 0x08C2, 0x08C1, 0x08C0, 0x08BF, 0x08BE, 0x08BD, 0x08BC, 
-	0x08BA, 0x08B9, 0x08B8, 0x08B7, 0x08B6, 0x08B5, 0x08B4, 0x08B2, 0x08B1, 
-	0x08B0, 0x08AE, 0x08AD, 0x08AC, 0x08AB, 0x08AA, 0x08A9, 0x08A7, 0x08A6, 
-	0x08A5, 0x08A3, 0x08A2, 0xFFFF, 0x07DC, 0x070B, 0x015E, 0xF5A9, 0xE870, 
-	0xE3CD, 0xE485, 0xE96E, 0xECA3, 0xEADB, 0xECF7, 0xF25D, 0xFABC, 0x06C3, 
-	0x14C0, 0x18F9, 0x186B, 0x10D6, 0x0B5C, 0x0808, 0x06E4, 0x0660, 0x057C, 
-	0x042D, 0x022B, 0x0016, 0xFDFD, 0xFF46, 0x017E, 0x0442, 0x0563, 0x0577, 
-	0x03E8, 0x0304, 0x01BF, 0x006C, 0xFEEF, 0xFDC6, 0xFD14, 0xFCAF, 0xFC4C, 
-	0xFBB8, 0xFB0E, 0xFADD, 0xFAB3, 0xFAB1, 0xFAC2, 0xFABC, 0xFAC3, 0xFAC5, 
-	0xFABD, 0xFAB0, 0xFAA5, 0xFAA7, 0xFAA8, 0xFAA8, 0xFAAB, 0xFAAF, 0xFAB2, 
-	0xFAB6, 0xFAB9, 0xFABD, 0xFAC2, 0xFAC7, 0xFACC, 0xFAD1, 0xFAD7, 0xFADD, 
-	0xFAE3, 0xFAE9, 0xFAF0, 0xFAF8, 0xFB03, 0xFB0C, 0xFB15, 0xFB1A, 0xFB1B, 
-	0xFB1C, 0xFB1E, 0xFB20, 0xFB23, 0xFB25, 0xFB28, 0xFB2F, 0xFB2E, 0xFB2F, 
-	0xFB33, 0xFB36, 0xFB39, 0xFB3B, 0xFB3E, 0xFB41, 0xFB44, 0xFB47, 0xFB49, 
-	0xFB4C, 0xFB50, 0xFB53, 0xFB56, 0xFB59, 0xFB5C, 0xFB5F, 0xFB62, 0xFB65, 
-	0xFB68, 0xFB6C, 0xFB6F, 0xFB72, 0xFB75, 0xFB78, 0xFB7C, 0xFB7F, 0xFB82, 
-	0xFB86, 0xFB89, 0xFB8C, 0xFB8E, 0xFB91, 0xFB94, 0xFB98, 0xFB9C, 0xFB9F, 
-	0xFBA2, 0xFBA6, 0xFBA9, 0xFBAD, 0xFBB0, 0xFBB4, 0xFBB8, 0xFBBB, 0xFBBF, 
-	0xFBC2, 0xFBC6, 0xFBC9, 0xFBCD, 0xFBD1, 0xFBD5, 0xFBD8, 0xFBDC, 0xFBE0, 
-	0xFBE4, 0xFBE8, 0xFBEB, 0xFBEF, 0xFBF3, 0xFBF7, 0xFBFA, 0xFBFD, 0xFC01, 
-	0xFC06, 0xFC0A, 0xFC0E, 0xFC12, 0xFC16, 0xFC1A, 0xFC1F, 0xFC24, 0xFC29, 
-	0xFC2E, 0xFC33, 0xFC37, 0xFC3C, 0xFC40, 0xFC44, 0xFC49, 0xFC4E, 0xFC54, 
-	0xFC58, 0xFC5D, 0xFC62, 0xFC67, 0xFC6B, 0xFC71, 0xFC76, 0xFC7A, 0xFC7D, 
-	0xFC7E, 0xFC81, 0xFC85, 0xFC88, 0xFC8B, 0xFC8F, 0xFC93, 0xFC96, 0xFC9A, 
-	0xFC9D, 0xFCA1, 0xFCA4, 0xFCA8, 0xFCAB, 0xFCAF, 0xFCB3, 0xFCB7, 0xFCBA, 
-	0xFCBD, 0xFCC1, 0xFCC5, 0xFCC9, 0xFCCC, 0xFCD0, 0xFCD3, 0xFCD7, 0xFCDB, 
-	0xFCDE, 0xFCE2, 0xFCE3, 0xFCE4, 0xFCE4, 0xFCE4, 0xFCE5, 0xFCE5, 0xFCE6, 
-	0xFCE6, 0xFCE7, 0xFCE7, 0xFCE7, 0xFCE8, 0xFCE8, 0xFCE8, 0xFCE9, 0xFCE9, 
-	0xFCE9, 0xFCEA, 0xFCEA, 0xFCEA, 0xFCEA, 0xFCEB, 0xFCEB, 0xFCEB, 0xFCEC, 
-	0xFCEC, 0xFCED, 0xFCED, 0xFCED, 0xFCED, 0xFCEE, 0xFCEE, 0xFCEF, 0xFCEF, 
-	0xFCF0, 0xFCF0, 0xFCF0, 0xFCF1, 0xFCF1, 0xFCF2, 0xFCF2, 0xFCF3, 0xFFFF, 
-	0xFD62, 0xF9E2, 0xF9C2, 0xFD64, 0x0191, 0x04E6, 0x0925, 0x0C5F, 0x0C46, 
-	0x09E7, 0x0F99, 0x167A, 0x1AF0, 0x1938, 0x14A8, 0x0E47, 0x08F4, 0x0926, 
-	0x0890, 0x07EB, 0x07FB, 0x0788, 0x055F, 0x026C, 0xFF60, 0xFCF0, 0xFB22, 
-	0xF896, 0xFA00, 0xFBDD, 0xFD87, 0xFF08, 0x00B5, 0x0208, 0x0327, 0x04C6, 
-	0x071F, 0x0A4C, 0x0C9E, 0x0DE4, 0x0EBA, 0x0F87, 0x1012, 0x1049, 0x1057, 
-	0x1056, 0x1040, 0x103F, 0x1057, 0x105D, 0x1053, 0x1048, 0x1038, 0x102B, 
-	0x1023, 0x101E, 0x101F, 0x101F, 0x1020, 0x1021, 0x1022, 0x1023, 0x1024, 
-	0x1024, 0x1025, 0x1028, 0x102A, 0x102C, 0x102F, 0x1033, 0x1038, 0x103B, 
-	0x1038, 0x1036, 0x1036, 0x1035, 0x1034, 0x1033, 0x1032, 0x1030, 0x102E, 
-	0x102D, 0x102A, 0x1027, 0x1026, 0x1023, 0x1021, 0x101F, 0x101C, 0x101A, 
-	0x1018, 0x1016, 0x1013, 0x1011, 0x100F, 0x100D, 0x100A, 0x1007, 0x1004, 
-	0x1001, 0x0FFF, 0x0FFC, 0x0FFA, 0x0FF7, 0x0FF5, 0x0FF2, 0x0FF0, 0x0FED, 
-	0x0FEB, 0x0FE9, 0x0FE7, 0x0FE5, 0x0FE3, 0x0FE0, 0x0FDE, 0x0FDB, 0x0FDA, 
-	0x0FD8, 0x0FD6, 0x0FD3, 0x0FD0, 0x0FCD, 0x0FCA, 0x0FC8, 0x0FC5, 0x0FC3, 
-	0x0FC0, 0x0FBD, 0x0FBA, 0x0FB7, 0x0FB5, 0x0FB2, 0x0FAF, 0x0FAC, 0x0FA9, 
-	0x0FA6, 0x0FA3, 0x0FA1, 0x0F9E, 0x0F9B, 0x0F98, 0x0F95, 0x0F92, 0x0F8F, 
-	0x0F8C, 0x0F89, 0x0F87, 0x0F84, 0x0F82, 0x0F7F, 0x0F7C, 0x0F79, 0x0F75, 
-	0x0F72, 0x0F6F, 0x0F6C, 0x0F68, 0x0F65, 0x0F62, 0x0F5E, 0x0F5B, 0x0F58, 
-	0x0F55, 0x0F52, 0x0F4F, 0x0F4C, 0x0F4A, 0x0F48, 0x0F45, 0x0F42, 0x0F40, 
-	0x0F3D, 0x0F3A, 0x0F38, 0x0F35, 0x0F32, 0x0F30, 0x0F2D, 0x0F29, 0x0F26, 
-	0x0F22, 0x0F1E, 0x0F1B, 0x0F17, 0x0F13, 0x0F0F, 0x0F0B, 0x0F08, 0x0F04, 
-	0x0F00, 0x0EFC, 0x0EF8, 0x0EF4, 0x0EF0, 0x0EEC, 0x0EE8, 0x0EE5, 0x0EE1, 
-	0x0EDD, 0x0ED9, 0x0ED5, 0x0ED2, 0x0ECE, 0x0ECA, 0x0EC6, 0x0EC5, 0x0EC4, 
-	0x0EC4, 0x0EC4, 0x0EC3, 0x0EC2, 0x0EC2, 0x0EC2, 0x0EC1, 0x0EC0, 0x0EBF, 
-	0x0EBE, 0x0EBC, 0x0EBA, 0x0EB9, 0x0EB7, 0x0EB5, 0x0EB3, 0x0EB1, 0x0EAF, 
-	0x0EAE, 0x0EAC, 0x0EAA, 0x0EA9, 0x0EA8, 0x0EA6, 0x0EA5, 0x0EA4, 0x0EA4, 
-	0x0EA3, 0x0EA1, 0x0EA1, 0x0EA0, 0x0EA0, 0x0E9F, 0x0E9E, 0x0E9D, 0x0E9B, 
-	0x0E9A, 0x0E98, 0x0E97, 0x0E95, 0x0E95, 0x0E93, 0x0000, 0xF259, 0xF66E, 
-	0xF908, 0xF72D, 0xF561, 0xF34D, 0xF1D2, 0xF30E, 0xF67B, 0xFABE, 0xFB76, 
-	0xFBCB, 0x02C0, 0x1281, 0x1DEE, 0x2890, 0x2E1E, 0x2E43, 0x29D7, 0x23F5, 
-	0x1D8B, 0x18D7, 0x1655, 0x143D, 0x0F4C, 0x09CA, 0x0352, 0xFF60, 0xFD63, 
-	0xFC1F, 0xFC09, 0xFBFE, 0xFB74, 0xFB47, 0xFB72, 0xFCCC, 0xFE4D, 0xFED3, 
-	0xFF07, 0xFEED, 0xFEB0, 0xFE70, 0xFE26, 0xFDF8, 0xFDDF, 0xFDE1, 0xFDF8, 
-	0xFE20, 0xFE3B, 0xFE3F, 0xFE39, 0xFE2D, 0xFE23, 0xFE23, 0xFE25, 0xFE28, 
-	0xFE2A, 0xFE2D, 0xFE30, 0xFE34, 0xFE3A, 0xFE40, 0xFE47, 0xFE4E, 0xFE56, 
-	0xFE5E, 0xFE67, 0xFE70, 0xFE7A, 0xFE83, 0xFE8D, 0xFE94, 0xFE9B, 0xFEA3, 
-	0xFEAB, 0xFEB0, 0xFEB2, 0xFEB3, 0xFEB5, 0xFEB7, 0xFEB9, 0xFEBB, 0xFEBD, 
-	0xFEC2, 0xFEC2, 0xFEC3, 0xFEC6, 0xFEC9, 0xFECC, 0xFECE, 0xFED1, 0xFED4, 
-	0xFED7, 0xFEDA, 0xFEDC, 0xFEDF, 0xFEE2, 0xFEE4, 0xFEE7, 0xFEEB, 0xFEEE, 
-	0xFEF2, 0xFEF4, 0xFEF7, 0xFEF9, 0xFEFC, 0xFEFF, 0xFF01, 0xFF04, 0xFF06, 
-	0xFF09, 0xFF0B, 0xFF0D, 0xFF10, 0xFF13, 0xFF16, 0xFF16, 0xFF18, 0xFF1A, 
-	0xFF1D, 0xFF20, 0xFF23, 0xFF26, 0xFF29, 0xFF2C, 0xFF2E, 0xFF32, 0xFF35, 
-	0xFF38, 0xFF3B, 0xFF3E, 0xFF41, 0xFF44, 0xFF46, 0xFF49, 0xFF4D, 0xFF50, 
-	0xFF53, 0xFF56, 0xFF59, 0xFF5C, 0xFF5F, 0xFF62, 0xFF65, 0xFF68, 0xFF6B, 
-	0xFF6D, 0xFF6E, 0xFF70, 0xFF74, 0xFF77, 0xFF7B, 0xFF7F, 0xFF83, 0xFF86, 
-	0xFF8A, 0xFF8D, 0xFF91, 0xFF95, 0xFF99, 0xFF9D, 0xFFA0, 0xFFA3, 0xFFA7, 
-	0xFFAA, 0xFFAF, 0xFFB2, 0xFFB5, 0xFFB8, 0xFFBC, 0xFFBF, 0xFFC3, 0xFFC7, 
-	0xFFCB, 0xFFCE, 0xFFD0, 0xFFD1, 0xFFD3, 0xFFD6, 0xFFD9, 0xFFDC, 0xFFDF, 
-	0xFFE2, 0xFFE5, 0xFFE8, 0xFFEB, 0xFFEE, 0xFFF1, 0xFFF4, 0xFFF7, 0xFFFB, 
-	0xFFFE, 0x0002, 0x0006, 0x0008, 0x000C, 0x000F, 0x0012, 0x0015, 0x0019, 
-	0x001C, 0x001F, 0x0023, 0x0026, 0x002A, 0x002A, 0x002A, 0x0029, 0x0028, 
-	0x0028, 0x0027, 0x0026, 0x0025, 0x0024, 0x0024, 0x0024, 0x0023, 0x0023, 
-	0x0023, 0x0023, 0x0023, 0x0023, 0x0023, 0x0022, 0x0022, 0x0022, 0x0022, 
-	0x0022, 0x0021, 0x0021, 0x0020, 0x0020, 0x001F, 0x001F, 0x001F, 0x001E, 
-	0x001D, 0x001D, 0x001C, 0x001B, 0x001B, 0x001A, 0x001A, 0x001A, 0x0019, 
-	0x0019, 0x0018, 0x0017, 0x0000, 0xFD42, 0x00C5, 0x0A26, 0x18FF, 0x2717, 
-	0x2F3E, 0x346C, 0x36C8, 0x3A2E, 0x3E27, 0x3FD8, 0x3FCD, 0x3F0C, 0x3BD4, 
-	0x3255, 0x2D66, 0x2776, 0x236C, 0x1D63, 0x191B, 0x13A5, 0x0CAF, 0x056B, 
-	0xFFB6, 0x03A4, 0x063E, 0x087C, 0x0730, 0x05A4, 0x037A, 0x0222, 0x013E, 
-	0x015C, 0x0086, 0x0002, 0x0001, 0x0057, 0x010D, 0x0167, 0x0172, 0x019F, 
-	0x01D7, 0x020F, 0x0220, 0x0224, 0x0222, 0x0222, 0x0235, 0x023A, 0x0243, 
-	0x0243, 0x0243, 0x0243, 0x0242, 0x0243, 0x0244, 0x0243, 0x0242, 0x0242, 
-	0x0241, 0x0241, 0x0241, 0x0242, 0x0242, 0x0242, 0x0242, 0x0242, 0x0242, 
-	0x0242, 0x0242, 0x0242, 0x0240, 0x023D, 0x023B, 0x0239, 0x0239, 0x0238, 
-	0x0238, 0x0238, 0x0238, 0x0237, 0x0237, 0x0236, 0x0234, 0x0234, 0x0234, 
-	0x0233, 0x0233, 0x0232, 0x0232, 0x0232, 0x0231, 0x0231, 0x0230, 0x0230, 
-	0x022F, 0x022F, 0x022E, 0x022E, 0x022D, 0x022D, 0x022C, 0x022C, 0x022B, 
-	0x022B, 0x022A, 0x0229, 0x0228, 0x0228, 0x0227, 0x0226, 0x0225, 0x0224, 
-	0x0223, 0x0223, 0x0222, 0x0222, 0x0221, 0x0220, 0x021F, 0x021E, 0x021D, 
-	0x021D, 0x021C, 0x021B, 0x021A, 0x021A, 0x0219, 0x0218, 0x0217, 0x0217, 
-	0x0216, 0x0215, 0x0214, 0x0214, 0x0213, 0x0212, 0x0211, 0x0211, 0x0210, 
-	0x020F, 0x020E, 0x020D, 0x020C, 0x020B, 0x020A, 0x0209, 0x0208, 0x0207, 
-	0x0206, 0x0205, 0x0204, 0x0203, 0x0203, 0x0202, 0x0201, 0x01FF, 0x01FE, 
-	0x01FD, 0x01FC, 0x01FB, 0x01FA, 0x01F9, 0x01F8, 0x01F7, 0x01F5, 0x01F4, 
-	0x01F2, 0x01F1, 0x01F0, 0x01EF, 0x01ED, 0x01EC, 0x01EA, 0x01EA, 0x01E9, 
-	0x01E9, 0x01E8, 0x01E7, 0x01E6, 0x01E6, 0x01E5, 0x01E4, 0x01E3, 0x01E3, 
-	0x01E2, 0x01E1, 0x01E1, 0x01E0, 0x01E0, 0x01DF, 0x01DE, 0x01DD, 0x01DD, 
-	0x01DC, 0x01DC, 0x01DB, 0x01DA, 0x01D9, 0x01D9, 0x01D8, 0x01D8, 0x01D7, 
-	0x01D6, 0x01D6, 0x01D6, 0x01D5, 0x01D5, 0x01D4, 0x01D4, 0x01D3, 0x01D3, 
-	0x01D2, 0x01D1, 0x01D1, 0x01D1, 0x01D1, 0x01D1, 0x01D0, 0x01D0, 0x01D0, 
-	0x01D0, 0x01D0, 0x01D0, 0x01D0, 0x01CF, 0x01CF, 0x01CF, 0x01CF, 0x01CF, 
-	0x01CE, 0x01CE, 0x01CE, 0x01CD, 0x01CD, 0x01CC, 0x01CC, 0x01CC, 0x01CB, 
-	0x01CB, 0x01CA, 0x01CA, 0x01CA, 0x01C9, 0x01C9, 0x01C9, 0x01C8, 0xFFFF, 
-	0x026D, 0x0509, 0x04B0, 0xFF9B, 0xF722, 0xED70, 0xE3D0, 0xDC59, 0xDA3D, 
-	0xDE63, 0xDEEF, 0xE0CF, 0xE32A, 0xE250, 0xDA6C, 0xD94A, 0xD796, 0xD74C, 
-	0xD804, 0xD8E7, 0xD980, 0xDAC7, 0xDE00, 0xE30A, 0xEBBD, 0xF4ED, 0xFD0A, 
-	0x04CD, 0x0647, 0x06AB, 0x06F5, 0x071E, 0x071A, 0x0761, 0x07A7, 0x0782, 
-	0x06F2, 0x05E4, 0x04F6, 0x0492, 0x0457, 0x03DA, 0x0385, 0x0373, 0x0361, 
-	0x035F, 0x0367, 0x036B, 0x0368, 0x035F, 0x035C, 0x035B, 0x0359, 0x0359, 
-	0x0357, 0x0355, 0x0355, 0x0354, 0x0354, 0x0353, 0x0353, 0x0352, 0x0353, 
-	0x0353, 0x0353, 0x0353, 0x0354, 0x0354, 0x0354, 0x0354, 0x0353, 0x0354, 
-	0x0357, 0x035A, 0x035C, 0x035D, 0x035E, 0x035E, 0x035F, 0x0360, 0x0360, 
-	0x0360, 0x0362, 0x0364, 0x0363, 0x0363, 0x0364, 0x0364, 0x0365, 0x0365, 
-	0x0366, 0x0366, 0x0367, 0x0368, 0x0368, 0x0369, 0x036A, 0x036B, 0x036C, 
-	0x036D, 0x036E, 0x036F, 0x036F, 0x0370, 0x0371, 0x0372, 0x0373, 0x0374, 
-	0x0375, 0x0375, 0x0376, 0x0377, 0x0377, 0x0378, 0x0379, 0x0379, 0x0379, 
-	0x037A, 0x037B, 0x037B, 0x037D, 0x037E, 0x037E, 0x037F, 0x0380, 0x0381, 
-	0x0382, 0x0383, 0x0384, 0x0385, 0x0386, 0x0387, 0x0388, 0x0389, 0x0389, 
-	0x038A, 0x038B, 0x038C, 0x038D, 0x038E, 0x038F, 0x0390, 0x0391, 0x0392, 
-	0x0393, 0x0394, 0x0395, 0x0396, 0x0397, 0x0398, 0x0399, 0x039A, 0x039B, 
-	0x039C, 0x039D, 0x039F, 0x03A0, 0x03A2, 0x03A3, 0x03A5, 0x03A6, 0x03A7, 
-	0x03A9, 0x03AA, 0x03AB, 0x03AD, 0x03AF, 0x03B0, 0x03B2, 0x03B3, 0x03B5, 
-	0x03B6, 0x03B8, 0x03B9, 0x03BB, 0x03BB, 0x03BB, 0x03BC, 0x03BD, 0x03BE, 
-	0x03BF, 0x03C0, 0x03C1, 0x03C2, 0x03C3, 0x03C4, 0x03C5, 0x03C6, 0x03C7, 
-	0x03C8, 0x03C9, 0x03CA, 0x03CB, 0x03CC, 0x03CC, 0x03CD, 0x03CE, 0x03CF, 
-	0x03D0, 0x03D0, 0x03D1, 0x03D2, 0x03D3, 0x03D4, 0x03D5, 0x03D5, 0x03D5, 
-	0x03D5, 0x03D5, 0x03D5, 0x03D5, 0x03D5, 0x03D5, 0x03D5, 0x03D6, 0x03D6, 
-	0x03D6, 0x03D6, 0x03D7, 0x03D7, 0x03D8, 0x03D9, 0x03D9, 0x03D9, 0x03DA, 
-	0x03DA, 0x03DB, 0x03DB, 0x03DC, 0x03DC, 0x03DC, 0x03DC, 0x03DC, 0x03DC, 
-	0x03DC, 0x03DD, 0x03DD, 0x03DD, 0x03DD, 0x03DD, 0x03DD, 0x03DD, 0x03DE, 
-	0x03DE, 0x03DF, 0x03DF, 0x03DF, 0x03DF, 0x03E0, 0xFFFF, 0x0185, 0x000D, 
-	0x0210, 0x065B, 0x06FA, 0x02BA, 0xFC02, 0xF5C3, 0xEF62, 0xE985, 0xE454, 
-	0xE0C8, 0xDB10, 0xD379, 0xD41F, 0xD251, 0xD344, 0xD6CF, 0xDDC1, 0xE362, 
-	0xEAB9, 0xF1DD, 0xF7A3, 0xFC98, 0xFBC4, 0xFC7C, 0xFFE9, 0x022A, 0x02B3, 
-	0x0345, 0x0324, 0x033A, 0x03BC, 0x03F1, 0x0436, 0x043B, 0x03E2, 0x03D8, 
-	0x03B3, 0x039E, 0x03A0, 0x0388, 0x0370, 0x0369, 0x0367, 0x0369, 0x0369, 
-	0x0362, 0x0360, 0x035D, 0x035C, 0x035C, 0x035C, 0x035D, 0x035C, 0x035C, 
-	0x035C, 0x035D, 0x035D, 0x035D, 0x035D, 0x035D, 0x035C, 0x035C, 0x035C, 
-	0x035C, 0x035C, 0x035C, 0x035C, 0x035C, 0x035C, 0x035D, 0x035F, 0x0360, 
-	0x0361, 0x0361, 0x0361, 0x0361, 0x0361, 0x0361, 0x0362, 0x0362, 0x0362, 
-	0x0363, 0x0363, 0x0363, 0x0363, 0x0363, 0x0364, 0x0364, 0x0364, 0x0364, 
-	0x0364, 0x0364, 0x0364, 0x0365, 0x0365, 0x0365, 0x0365, 0x0366, 0x0366, 
-	0x0366, 0x0366, 0x0366, 0x0367, 0x0367, 0x0367, 0x0367, 0x0368, 0x0368, 
-	0x0368, 0x0369, 0x0369, 0x036A, 0x036A, 0x036A, 0x036A, 0x036B, 0x036B, 
-	0x036B, 0x036C, 0x036C, 0x036C, 0x036D, 0x036D, 0x036D, 0x036D, 0x036E, 
-	0x036E, 0x036E, 0x036F, 0x036F, 0x036F, 0x0370, 0x0370, 0x0370, 0x0371, 
-	0x0371, 0x0371, 0x0372, 0x0372, 0x0372, 0x0373, 0x0373, 0x0373, 0x0374, 
-	0x0374, 0x0375, 0x0375, 0x0376, 0x0376, 0x0376, 0x0377, 0x0377, 0x0377, 
-	0x0378, 0x0378, 0x0379, 0x0379, 0x037A, 0x037A, 0x037A, 0x037B, 0x037B, 
-	0x037C, 0x037C, 0x037D, 0x037D, 0x037E, 0x037E, 0x037F, 0x037F, 0x0380, 
-	0x0380, 0x0381, 0x0381, 0x0381, 0x0381, 0x0382, 0x0382, 0x0382, 0x0383, 
-	0x0383, 0x0383, 0x0384, 0x0384, 0x0384, 0x0384, 0x0385, 0x0385, 0x0385, 
-	0x0385, 0x0386, 0x0386, 0x0386, 0x0386, 0x0386, 0x0387, 0x0387, 0x0387, 
-	0x0387, 0x0388, 0x0388, 0x0388, 0x0389, 0x0389, 0x0389, 0x0389, 0x0389, 
-	0x0389, 0x038A, 0x038A, 0x038A, 0x038A, 0x038B, 0x038B, 0x038B, 0x038B, 
-	0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 0x038B, 
-	0x038B, 0x038B, 0x038C, 0x038C, 0x038C, 0x038C, 0x038C, 0x038C, 0x038C, 
-	0x038D, 0x038D, 0x038D, 0x038D, 0x038D, 0x038D, 0x038D, 0x038E, 0x0000, 
-	0x4000, 0x0000, 0x227F, 0x26F3, 0x3964, 0x4973, 0x4F09, 0x52AB, 0x58B3, 
-	0x607B, 0x71D7, 0x0721, 0x099C, 0x0A74, 0x84D1, 0x7C5E, 0xF630, 0xE48B, 
-	0xD41C, 0xCDCC, 0xD2FB, 0xD4C8, 0xD843, 0xDB6E, 0xDAC0, 0xD565, 0xCFBD, 
-	0xCC0F, 0xC9C7, 0xC8FF, 0xC54B, 0x4233, 0x3EDB, 0x3A15, 0x34E2, 0x2F8F, 
-	0x2A5D, 0x256C, 0x20C6, 0x1CE7, 0x1A16, 0x188B, 0x1997, 0x1B80, 0x1E59, 
-	0x2214, 0x26A4, 0x2BE8, 0x31C2, 0x37E3, 0x3E18, 0xC409, 0xC5E8, 0xC75C, 
-	0xC84B, 0xC8A5, 0xC875, 0xC7D4, 0xC6C9, 0xC563, 0xC3B2, 0xC1CA, 0xBFBC, 
-	0x3D9D, 0x3B7A, 0x3965, 0x3770, 0x35AD, 0x3429, 0x32F3, 0x3218, 0x31A1, 
-	0x3192, 0x31EC, 0x32AA, 0x33C0, 0x3526, 0x36CD, 0x38A4, 0x3A9D, 0x3CA5, 
-	0x3EAA, 0xC099, 0xC263, 0xC3F4, 0xC4AF, 0xC4A5, 0xC446, 0xC399, 0xC2A4, 
-	0xC174, 0xC014, 0x3E93, 0x3CFF, 0x3B67, 0x39D9, 0x3865, 0x3716, 0x35FA, 
-	0x351B, 0x3481, 0x3434, 0x3435, 0x3484, 0x351E, 0x35FD, 0x3716, 0x3860, 
-	0x39CF, 0x3B53, 0x3CE0, 0x3E67, 0x3FDA, 0xC12A, 0xC24C, 0xC332, 0xC3D4, 
-	0xC42A, 0xC431, 0xC3E8, 0xC354, 0xC27A, 0xC165, 0xC021, 0x3EBA, 0x3D3E, 
-	0x3BBB, 0x3A40, 0x38DA, 0x3796, 0x3680, 0x35A3, 0x3506, 0x34B1, 0x34A7, 
-	0x34E6, 0x356E, 0x3638, 0x373C, 0x386F, 0x39C7, 0x3B35, 0x3CAE, 0x3E23, 
-	0x3F86, 0xC0C9, 0xC1E1, 0xC2C2, 0xC362, 0xC3BB, 0xC3C8, 0xC38A, 0xC303, 
-	0xC23A, 0xC137, 0xC006, 0x3EB3, 0x3D4B, 0x3BDC, 0x3A74, 0x391F, 0x37EA, 
-	0x36E0, 0x360D, 0x3577, 0x3525, 0x351A, 0x3557, 0x35D8, 0x3698, 0x3790, 
-	0x38B5, 0x39FC, 0x3B59, 0x3CC0, 0x3E22, 0x3F72, 0xC0A4, 0xC1AB, 0xC27D, 
-	0xC310, 0xC35E, 0xC364, 0xC323, 0xC29C, 0xC1D7, 0xC0DB, 0xBFB5, 0x3E70, 
-	0x3D17, 0x3BBA, 0x3A64, 0x3923, 0x3803, 0x370E, 0x364D, 0x35C9, 0x3587, 
-	0x3588, 0x35CE, 0x3654, 0x3715, 0x3809, 0x3927, 0x3A64, 0x3BB3, 0x3D08, 
-	0x3E56, 0xBF90, 0xC0AB, 0xC19B, 0xC255, 0xC2D2, 0xC30C, 0xC302, 0xC2B4, 
-	0xC225, 0xC15C, 0xC062, 0x3F42, 0x3E06, 0x3CBC, 0x3B71, 0x3A2F, 0x3904, 
-	0x37FB, 0x371E, 0x3675, 0x3608, 0x35D9, 0x35EB, 0x363D, 0x36CC, 0x3791, 
-	0x3884, 0x399C, 0x3ACE, 0x3C0F, 0x3D52, 0x3E8B, 0xBFAE, 0xC0B0, 0xC186, 
-	0xC228, 0xC28E, 0xC2B4, 0xC29A, 0xC23F, 0xC1A9, 0xC0DE, 0xBFE6, 0x3ECE, 
-	0x289C, 0x1CEE, 0x1608, 0x0977, 0x00F1, 0xF91F, 0xF5E5, 0xF78E, 0xFBB7, 
-	0x7B98, 0x7AD2, 0x78D4, 0x0194, 0x056D, 0x6A5E, 0x59FC, 0x5458, 0x5445, 
-	0x5455, 0x5AC8, 0x616C, 0x67BF, 0x6B75, 0x6F21, 0x753B, 0x7AB9, 0x7EC4, 
-	0x8026, 0x82F5, 0xFF0E, 0x01A5, 0x0395, 0x0498, 0x046C, 0x0393, 0x032D, 
-	0x039E, 0x050A, 0x0726, 0x0862, 0x06DE, 0x04AC, 0x0378, 0x0337, 0x0365, 
-	0x0317, 0x01CD, 0xFEB9, 0xFA4D, 0x8A6E, 0x8BC3, 0x8CD5, 0x8D8E, 0x8DE2, 
-	0x8DD5, 0x8D71, 0x8CB5, 0x8BA8, 0x8A50, 0x88B4, 0x86E2, 0xFB0F, 0xFD0A, 
-	0xFEFB, 0x00D2, 0x027A, 0x03E8, 0x0510, 0x05E9, 0x066C, 0x0694, 0x0665, 
-	0x05DB, 0x04EA, 0x03AA, 0x022C, 0x0082, 0xFEB9, 0xFCE2, 0xFB12, 0x86A3, 
-	0x8830, 0x8985, 0x8A22, 0x8A1C, 0x89CB, 0x8939, 0x8869, 0x8762, 0x862D, 
-	0xFB28, 0xFC94, 0xFE06, 0xFF70, 0x00C5, 0x01F5, 0x02F7, 0x03C1, 0x044C, 
-	0x0493, 0x0496, 0x0452, 0x03CC, 0x0307, 0x020B, 0x00E1, 0xFF95, 0xFE35, 
-	0xFCCE, 0xFB70, 0xFA26, 0x8701, 0x87FD, 0x88C3, 0x894E, 0x8997, 0x899E, 
-	0x8961, 0x88E5, 0x882C, 0x873E, 0x8622, 0xFB1A, 0xFC6E, 0xFDCB, 0xFF23, 
-	0x0069, 0x018E, 0x0289, 0x0350, 0x03DC, 0x0428, 0x0432, 0x03FA, 0x0381, 
-	0x02CC, 0x01E1, 0x00CA, 0xFF92, 0xFE45, 0xFCEF, 0xFB9F, 0xFA62, 0x86BA, 
-	0x87AE, 0x8870, 0x88FA, 0x8946, 0x8952, 0x891F, 0x88AE, 0x8803, 0x8725, 
-	0x861A, 0xFB10, 0xFC51, 0xFD9B, 0xFEE1, 0x0017, 0x012F, 0x021E, 0x02DC, 
-	0x0362, 0x03AB, 0x03B4, 0x037E, 0x030A, 0x025C, 0x017C, 0x0072, 0xFF48, 
-	0xFE0A, 0xFCC6, 0xFB87, 0xFA5B, 0x86B1, 0x8797, 0x884B, 0x88CA, 0x890D, 
-	0x8912, 0x88DB, 0x8869, 0x87C0, 0x86E6, 0x85E4, 0xFB3C, 0xFC70, 0xFDAA, 
-	0xFEDF, 0x0003, 0x0108, 0x01E5, 0x0291, 0x0308, 0x0343, 0x0340, 0x0302, 
-	0x0288, 0x01D8, 0x00FA, 0xFFF5, 0xFED6, 0xFDA7, 0xFC74, 0xFB49, 0x85CC, 
-	0x86C3, 0x8793, 0x8831, 0x889B, 0x88CA, 0x88C0, 0x887B, 0x8801, 0x8752, 
-	0x8676, 0xFA88, 0xFBA3, 0xFCCD, 0xFDFA, 0xFF1F, 0x0030, 0x0122, 0x01EB, 
-	0x0285, 0x02E9, 0x0314, 0x0305, 0x02BD, 0x023E, 0x018E, 0x00B3, 0xFFB5, 
-	0xFEA1, 0xFD81, 0xFC5D, 0xFB45, 0x85BB, 0x869D, 0x8756, 0x87E0, 0x8837, 
-	0x8857, 0x8840, 0x87F3, 0x8772, 0x86C1, 0x85E7, 0xFB11, 0xB5C4, 0xC273, 
-	0xC2E7, 0xC709, 0xD4E5, 0xDFC8, 0xE032, 0xDAD9, 0xCA8C, 0x35EC, 0x3089, 
-	0x3BD0, 0xC6C4, 0xCAE4, 0x4399, 0x2DF8, 0x213F, 0x1E31, 0x231D, 0x234D, 
-	0x2282, 0x1FAA, 0x189E, 0x0ED7, 0x0662, 0x0136, 0xFE25, 0xFCA9, 0xFABD, 
-	0x7913, 0x7700, 0x750E, 0x73BA, 0x743C, 0x74A8, 0x75E4, 0x76EC, 0x7742, 
-	0x76F3, 0x7686, 0x7814, 0x79A8, 0x79EA, 0x795B, 0x788C, 0x7821, 0x77A6, 
-	0x77B4, 0x77AA, 0xF6D7, 0xF67D, 0xF642, 0xF62C, 0xF640, 0xF682, 0xF6E7, 
-	0xF767, 0xF7F9, 0xF88B, 0xF90D, 0xF974, 0x79B8, 0x79E2, 0x79F2, 0x79ED, 
-	0x79D8, 0x79B6, 0x7996, 0x7980, 0x797B, 0x798C, 0x79B1, 0x79E1, 0x7A0A, 
-	0x7A3A, 0x7A64, 0x7A7E, 0x7A83, 0x7A70, 0x7A46, 0xFA09, 0xF9C0, 0xF972, 
-	0xF94A, 0xF94F, 0xF963, 0xF988, 0xF9B9, 0xF9EE, 0xFA21, 0x7A4E, 0x7A6F, 
-	0x7A81, 0x7A86, 0x7A7D, 0x7A6C, 0x7A55, 0x7A3E, 0x7A2D, 0x7A23, 0x7A24, 
-	0x7A2D, 0x7A3F, 0x7A55, 0x7A6B, 0x7A7D, 0x7A86, 0x7A82, 0x7A71, 0x7A53, 
-	0x7A2A, 0xF9FC, 0xF9CD, 0xF9A4, 0xF984, 0xF974, 0xF973, 0xF983, 0xF9A3, 
-	0xF9CE, 0xF9FE, 0xFA2E, 0x7A5A, 0x7A7B, 0x7A91, 0x7A99, 0x7A95, 0x7A88, 
-	0x7A76, 0x7A64, 0x7A54, 0x7A4B, 0x7A4B, 0x7A53, 0x7A63, 0x7A78, 0x7A8D, 
-	0x7A9D, 0x7AA6, 0x7AA4, 0x7A96, 0x7A7C, 0x7A59, 0xFA2F, 0xFA04, 0xF9DE, 
-	0xF9C1, 0xF9B0, 0xF9B0, 0xF9BE, 0xF9DB, 0xFA02, 0xFA2E, 0xFA5B, 0x7A84, 
-	0x7AA4, 0x7ABA, 0x7AC4, 0x7AC3, 0x7ABA, 0x7AAC, 0x7A9D, 0x7A90, 0x7A89, 
-	0x7A8A, 0x7A92, 0x7AA1, 0x7AB4, 0x7AC7, 0x7AD6, 0x7ADE, 0x7ADB, 0x7ACE, 
-	0x7AB6, 0x7A96, 0xFA6F, 0xFA48, 0xFA24, 0xFA09, 0xF9FB, 0xF9FA, 0xFA08, 
-	0xFA23, 0xFA47, 0xFA70, 0xFA99, 0x7ABE, 0x7ADA, 0x7AED, 0x7AF5, 0x7AF4, 
-	0x7AEB, 0x7ADE, 0x7AD0, 0x7AC4, 0x7ABE, 0x7ABF, 0x7AC7, 0x7AD3, 0x7AE2, 
-	0x7AF0, 0x7AF9, 0x7AFB, 0x7AF6, 0x7AE5, 0x7ACC, 0xFAAA, 0xFA85, 0xFA60, 
-	0xFA41, 0xFA2A, 0xFA1F, 0xFA20, 0xFA2F, 0xFA48, 0xFA6A, 0xFA8E, 0x7AB2, 
-	0x7AD2, 0x7AE9, 0x7AF6, 0x7AF9, 0x7AF6, 0x7AEB, 0x7ADD, 0x7AD0, 0x7AC6, 
-	0x7AC1, 0x7AC2, 0x7AC8, 0x7AD4, 0x7AE0, 0x7AEB, 0x7AF1, 0x7AF1, 0x7AE6, 
-	0x7AD3, 0x7AB8, 0xFA97, 0xFA75, 0xFA54, 0xFA38, 0xFA25, 0xFA1E, 0xFA23, 
-	0xFA33, 0xFA4C, 0xFA6C, 0xFA8E, 0x7AAE, 0xF56C, 0x0102, 0xE125, 0xEF6B, 
-	0x03E8, 0x1C0D, 0x36F2, 0x5260, 0x6987, 0x6D16, 0x7DCF, 0x9347, 0x954B, 
-	0x96A9, 0xA8C5, 0xC0F2, 0xC909, 0xCF2E, 0xC8CB, 0xBD89, 0xB08F, 0xA46B, 
-	0x97F1, 0x8B58, 0x7F41, 0x777F, 0x739C, 0xF2BF, 0x87BA, 0x9E82, 0xAED1, 
-	0xB8F2, 0xBFE2, 0xC72C, 0xCE1C, 0xD17B, 0xD449, 0xD5A3, 0xD5CA, 0xD838, 
-	0xDAF6, 0xDB3F, 0xD86C, 0xD385, 0xCDAC, 0xC905, 0xC638, 0xBFBF, 0xB9BA, 
-	0xB536, 0xB374, 0xB1F4, 0xB0CE, 0xB00D, 0xAFA8, 0xAF8C, 0xAFB8, 0xB035, 
-	0xB0F7, 0xB1FA, 0xB336, 0xB498, 0xB5FD, 0xB755, 0xB890, 0xB9A2, 0xBA8A, 
-	0xBB34, 0xBB9B, 0xBBB8, 0xBB89, 0xBB0C, 0xBA62, 0xB99F, 0xB89D, 0xB768, 
-	0xB60A, 0xB491, 0xB308, 0xB17E, 0xB002, 0xAEA1, 0xAD6B, 0xACD9, 0xACDE, 
-	0xAD27, 0xADAC, 0xAE67, 0xAF51, 0xB061, 0xB188, 0xB2BE, 0xB3F4, 0xB521, 
-	0xB638, 0xB730, 0xB801, 0xB8A3, 0xB912, 0xB94A, 0xB948, 0xB90E, 0xB89E, 
-	0xB7FB, 0xB72C, 0xB637, 0xB524, 0xB3FE, 0xB2D0, 0xB1A4, 0xB086, 0xAF80, 
-	0xAE9F, 0xADEB, 0xAD6C, 0xAD28, 0xAD22, 0xAD59, 0xADCA, 0xAE72, 0xAF48, 
-	0xB042, 0xB157, 0xB27B, 0xB3A2, 0xB4C3, 0xB5D1, 0xB6C4, 0xB793, 0xB836, 
-	0xB8A9, 0xB8E7, 0xB8EF, 0xB8BF, 0xB85A, 0xB7C4, 0xB702, 0xB61A, 0xB516, 
-	0xB3FD, 0xB2DB, 0xB1BA, 0xB0A5, 0xAFA8, 0xAECD, 0xAE1C, 0xAD9E, 0xAD58, 
-	0xAD4B, 0xAD7A, 0xADE1, 0xAE7C, 0xAF45, 0xB032, 0xB139, 0xB250, 0xB36B, 
-	0xB480, 0xB585, 0xB670, 0xB738, 0xB7D7, 0xB847, 0xB884, 0xB88B, 0xB85D, 
-	0xB7FB, 0xB768, 0xB6AB, 0xB5CA, 0xB4CC, 0xB3BD, 0xB2A4, 0xB18E, 0xB084, 
-	0xAF92, 0xAEC2, 0xAE1D, 0xADA8, 0xAD6A, 0xAD64, 0xAD96, 0xADFF, 0xAE98, 
-	0xAF5D, 0xB044, 0xB144, 0xB252, 0xB363, 0xB46E, 0xB567, 0xB646, 0xB703, 
-	0xB797, 0xB7FC, 0xB82F, 0xB82D, 0xB7F8, 0xB791, 0xB6FD, 0xB640, 0xB562, 
-	0xB46B, 0xB362, 0xB255, 0xB14C, 0xB052, 0xAF72, 0xAEB4, 0xAE21, 0xADBE, 
-	0xAD8F, 0xAD97, 0xADD4, 0xAE45, 0xAEE3, 0xAFAA, 0xB08F, 0xB188, 0xB28E, 
-	0xB394, 0xB492, 0xB57C, 0xB64C, 0xB6F8, 0xB77B, 0xB7D0, 0xB7F4, 0xB7E7, 
-	0xB7A7, 0xB739, 0xB6A0, 0xB5E3, 0xB507, 0xB416, 0xB31A, 0xB21A, 0xB122, 
-	0xB03A, 0xAF6D, 0xAEC3, 0xAE43, 0xADF2, 0xADD3, 0xADE8, 0xAE30, 0xAEA7, 
-	0xAF48, 0xB00C, 0xB0EC, 0xFC2C, 0xD4DD, 0xDBC2, 0xEEBD, 0xF138, 0xF32E, 
-	0xFA31, 0x0477, 0x181C, 0x2837, 0x2669, 0x1B36, 0xFC2C, 0xE5E8, 0xDE62, 
-	0xEA07, 0xEE8A, 0xE8F1, 0xE591, 0xE56D, 0xE604, 0xE847, 0xECEE, 0xF3A3, 
-	0xFAC3, 0x08A1, 0x18F9, 0x57EB, 0x2D80, 0x2B87, 0x2456, 0x19B7, 0x0C45, 
-	0xFE07, 0xF51F, 0xF0A5, 0xEE44, 0xEBA6, 0xE991, 0xE7DA, 0xE6CC, 0xE639, 
-	0xE5C0, 0xE555, 0xE61B, 0xE870, 0xEBFF, 0xF06B, 0xF4C5, 0xF8F7, 0xFA22, 
-	0xFAC1, 0xFAF4, 0xFAC6, 0xFA3F, 0xF972, 0xF867, 0xF71B, 0xF5A5, 0xF415, 
-	0xF27A, 0xF0DC, 0xEF30, 0xED82, 0xEBE1, 0xEA5F, 0xE917, 0xE80A, 0xE745, 
-	0xE6CD, 0xE6A5, 0xE6CE, 0xE74E, 0xE82D, 0xE93E, 0xEA80, 0xEBE8, 0xED67, 
-	0xEEE7, 0xF05B, 0xF1AF, 0xF2D9, 0xF3D1, 0xF43F, 0xF431, 0xF3F9, 0xF38D, 
-	0xF2F1, 0xF22C, 0xF141, 0xF037, 0xEF19, 0xEDF1, 0xECC9, 0xEBAF, 0xEAAC, 
-	0xE9D0, 0xE921, 0xE8A6, 0xE867, 0xE867, 0xE8A5, 0xE91E, 0xE9CC, 0xEAA8, 
-	0xEBA5, 0xECB9, 0xEDD8, 0xEEFA, 0xF00D, 0xF10B, 0xF1E8, 0xF29F, 0xF32D, 
-	0xF38B, 0xF3BB, 0xF3BC, 0xF38D, 0xF32C, 0xF2A0, 0xF1EB, 0xF10F, 0xF016, 
-	0xEF08, 0xEDEE, 0xECD4, 0xEBC4, 0xEAC9, 0xE9F0, 0xE941, 0xE8C4, 0xE87E, 
-	0xE873, 0xE8A1, 0xE908, 0xE9A1, 0xEA66, 0xEB4D, 0xEC4D, 0xED5B, 0xEE69, 
-	0xEF6D, 0xF05D, 0xF132, 0xF1E4, 0xF26D, 0xF2CB, 0xF2FE, 0xF2FD, 0xF2D2, 
-	0xF278, 0xF1F3, 0xF149, 0xF07B, 0xEF8F, 0xEE90, 0xED83, 0xEC73, 0xEB6F, 
-	0xEA7F, 0xE9AE, 0xE906, 0xE88E, 0xE848, 0xE83B, 0xE864, 0xE8C2, 0xE94F, 
-	0xEA06, 0xEADE, 0xEBCC, 0xECC7, 0xEDC4, 0xEEB7, 0xEF97, 0xF05F, 0xF107, 
-	0xF18D, 0xF1E4, 0xF212, 0xF213, 0xF1E7, 0xF18F, 0xF10D, 0xF066, 0xEF9E, 
-	0xEEBD, 0xEDCA, 0xECCD, 0xEBD0, 0xEADF, 0xEA03, 0xE946, 0xE8B1, 0xE84A, 
-	0xE814, 0xE814, 0xE847, 0xE8AC, 0xE93F, 0xE9F9, 0xEAD1, 0xEBBB, 0xECAA, 
-	0xED9B, 0xEE82, 0xEF57, 0xF012, 0xF0AE, 0xF122, 0xF170, 0xF194, 0xF18F, 
-	0xF15E, 0xF104, 0xF082, 0xEFE1, 0xEF21, 0xEE49, 0xED63, 0xEC79, 0xEB92, 
-	0xEAB6, 0xE9F3, 0xE94E, 0xE8CF, 0xE87D, 0xE85B, 0xE86B, 0xE8AC, 0xE918, 
-	0xE9B0, 0xEA66, 0xEB37, 0xEC18, 0xED02, 0xEDE7, 0xEEC0, 0xEF86, 0xF031, 
-	0xF0BC, 0xF124, 0xF163, 0xF17C, 0xF16C, 0xF133, 0xF0D3, 0xF051, 0xEFAD, 
-	0xEEF1, 0x05D0, 0xFEA9, 0x30C2, 0x3267, 0x2ED6, 0x2617, 0x1F89, 0x1E7E, 
-	0x1963, 0xFEAB, 0xFD0C, 0x1ABE, 0x2DB6, 0x3573, 0x2144, 0x081E, 0xFA98, 
-	0xED25, 0xE901, 0xE764, 0xE652, 0xE364, 0xDFB7, 0xDB56, 0xD64E, 0xD533, 
-	0xD5A4, 0x5993, 0xEC6D, 0x0208, 0x109F, 0x173C, 0x174B, 0x11A6, 0x08E7, 
-	0x01A1, 0xFCC5, 0xF9E5, 0xF8C7, 0xF6A3, 0xF419, 0xF503, 0xFB6D, 0x0588, 
-	0x1133, 0x1A78, 0x1FC9, 0x20D1, 0x1E42, 0x1A01, 0x187C, 0x174E, 0x1686, 
-	0x1621, 0x1613, 0x164E, 0x16D0, 0x1792, 0x1888, 0x19A6, 0x1AE1, 0x1C2A, 
-	0x1D6C, 0x1E98, 0x1FA5, 0x2088, 0x213F, 0x21C3, 0x2210, 0x2224, 0x21FA, 
-	0x2197, 0x2104, 0x2076, 0x1FBE, 0x1EDD, 0x1DDF, 0x1CC5, 0x1B96, 0x1A60, 
-	0x1930, 0x1812, 0x1715, 0x169D, 0x16A0, 0x16DB, 0x1747, 0x17DF, 0x189A, 
-	0x1971, 0x1A5A, 0x1B49, 0x1C34, 0x1D14, 0x1DE0, 0x1E93, 0x1F27, 0x1F98, 
-	0x1FE5, 0x200D, 0x200F, 0x1FEA, 0x1F9F, 0x1F2E, 0x1E9B, 0x1DE9, 0x1D1F, 
-	0x1C43, 0x1B5C, 0x1A73, 0x1992, 0x18C2, 0x180D, 0x177B, 0x1714, 0x16DD, 
-	0x16D7, 0x1702, 0x175C, 0x17E2, 0x1889, 0x194E, 0x1A24, 0x1B02, 0x1BE0, 
-	0x1CB4, 0x1D76, 0x1E21, 0x1EB0, 0x1F1F, 0x1F6C, 0x1F95, 0x1F99, 0x1F7A, 
-	0x1F35, 0x1ECF, 0x1E48, 0x1DA5, 0x1CEB, 0x1C1F, 0x1B48, 0x1A70, 0x199D, 
-	0x18DB, 0x1831, 0x17A7, 0x1745, 0x170D, 0x1703, 0x1727, 0x1777, 0x17F0, 
-	0x188A, 0x193E, 0x1A03, 0x1AD2, 0x1B9F, 0x1C64, 0x1D19, 0x1DB9, 0x1E3E, 
-	0x1EA5, 0x1EEC, 0x1F12, 0x1F16, 0x1EF7, 0x1EB7, 0x1E56, 0x1DD7, 0x1D40, 
-	0x1C92, 0x1BD5, 0x1B0E, 0x1A46, 0x1983, 0x18D1, 0x1835, 0x17B6, 0x175B, 
-	0x172A, 0x1725, 0x174B, 0x179A, 0x180E, 0x189F, 0x1949, 0x1A02, 0x1AC0, 
-	0x1B7D, 0x1C31, 0x1CD6, 0x1D66, 0x1DDD, 0x1E37, 0x1E74, 0x1E91, 0x1E8D, 
-	0x1E6A, 0x1E26, 0x1DC5, 0x1D48, 0x1CB3, 0x1C0C, 0x1B5A, 0x1AA1, 0x19E7, 
-	0x1936, 0x1893, 0x1806, 0x1799, 0x1750, 0x172E, 0x1731, 0x175D, 0x17AD, 
-	0x1821, 0x18AF, 0x1952, 0x1A02, 0x1AB7, 0x1B67, 0x1C0F, 0x1CA8, 0x1D2C, 
-	0x1D98, 0x1DE9, 0x1E1C, 0x1E32, 0x1E28, 0x1DFF, 0x1DBB, 0x1D59, 0x1CE0, 
-	0x1C4F, 0x1BAF, 0x1B01, 0x1A4E, 0x199C, 0x18F5, 0x185E, 0x17E1, 0x1780, 
-	0x1743, 0x172B, 0x1738, 0x176A, 0x17BF, 0x1832, 0x18BF, 0x195C, 0x0A05, 
-	0xF69F, 0xDC8B, 0xD319, 0xCA9F, 0xBE0D, 0xAE4E, 0x9C92, 0x8941, 0x7432, 
-	0x5F15, 0x5C9F, 0x6648, 0x6C37, 0x75BA, 0x7ED4, 0x854F, 0x8243, 0x98F1, 
-	0xBAFC, 0xCF1F, 0xD8E2, 0xDF41, 0xE3EA, 0xE705, 0xDDAB, 0xDA52, 0xDC28, 
-	0xDFA8, 0xE482, 0xE9FB, 0xEF0D, 0xF248, 0xF45F, 0xFC4B, 0x0666, 0x1121, 
-	0x1D76, 0x2B47, 0x3864, 0x3F51, 0x40C2, 0x3F83, 0x3DB4, 0x3A29, 0x34A1, 
-	0x3246, 0x3647, 0x3972, 0x39B4, 0x3A0F, 0x3A66, 0x3AC7, 0x3B29, 0x3B8A, 
-	0x3BEC, 0x3C4E, 0x3C9C, 0x3CDF, 0x3D13, 0x3D35, 0x3D48, 0x3D59, 0x3D69, 
-	0x3D7B, 0x3D8D, 0x3D9A, 0x3DAB, 0x3DBE, 0x3DD5, 0x3DEE, 0x3E0A, 0x3E0F, 
-	0x3E08, 0x3E05, 0x3E03, 0x3E01, 0x3E01, 0x3E00, 0x3DFF, 0x3DFE, 0x3DFD, 
-	0x3DFC, 0x3DFB, 0x3DF9, 0x3DF8, 0x3DF8, 0x3DF6, 0x3DF6, 0x3DF5, 0x3DF5, 
-	0x3DF4, 0x3DF4, 0x3DF3, 0x3DF2, 0x3DF1, 0x3DF0, 0x3DEF, 0x3DEE, 0x3DED, 
-	0x3DEC, 0x3DEB, 0x3DEA, 0x3DE9, 0x3DE9, 0x3DE7, 0x3DE6, 0x3DE5, 0x3DE4, 
-	0x3DE3, 0x3DE1, 0x3DE0, 0x3DDF, 0x3DDE, 0x3DDC, 0x3DDB, 0x3DDA, 0x3DDA, 
-	0x3DD8, 0x3DD8, 0x3DD7, 0x3DD6, 0x3DD5, 0x3DD4, 0x3DD3, 0x3DD3, 0x3DD2, 
-	0x3DD1, 0x3DD0, 0x3DCF, 0x3DCF, 0x3DCD, 0x3DCD, 0x3DCC, 0x3DCB, 0x3DCA, 
-	0x3DC9, 0x3DC8, 0x3DC7, 0x3DC6, 0x3DC5, 0x3DC4, 0x3DC3, 0x3DC2, 0x3DC1, 
-	0x3DBF, 0x3DBE, 0x3DBD, 0x3DBB, 0x3DBA, 0x3DB8, 0x3DB7, 0x3DB7, 0x3DB6, 
-	0x3DB5, 0x3DB4, 0x3DB3, 0x3DB2, 0x3DB1, 0x3DAF, 0x3DAE, 0x3DAD, 0x3DAC, 
-	0x3DAB, 0x3DAA, 0x3DA8, 0x3DA7, 0x3DA5, 0x3DA4, 0x3DA2, 0x3DA1, 0x3D9F, 
-	0x3D9D, 0x3D9C, 0x3D9A, 0x3D98, 0x3D98, 0x3D97, 0x3D95, 0x3D94, 0x3D93, 
-	0x3D92, 0x3D91, 0x3D90, 0x3D8F, 0x3D8E, 0x3D8D, 0x3D8C, 0x3D8B, 0x3D8A, 
-	0x3D89, 0x3D88, 0x3D87, 0x3D86, 0x3D85, 0x3D84, 0x3D83, 0x3D82, 0x3D81, 
-	0x3D80, 0x3D7F, 0x3D7E, 0x3D7D, 0x3D7B, 0x3D7A, 0x3D79, 0x3D79, 0x3D78, 
-	0x3D76, 0x3D76, 0x3D75, 0x3D74, 0x3D74, 0x3D73, 0x3D72, 0x3D72, 0x3D71, 
-	0x3D71, 0x3D70, 0x3D70, 0x3D70, 0x3D70, 0x3D6F, 0x3D6F, 0x3D6F, 0x3D6E, 
-	0x3D6E, 0x3D6E, 0x3D6E, 0x3D6D, 0x3D6D, 0x3D6C, 0x3D6C, 0x3D6B, 0x3D6A, 
-	0x3D6A, 0x3D69, 0x3D68, 0x3D68, 0x3D67, 0x3D67, 0x3D66, 0x3D65, 0x3D65, 
-	0x3D64, 0x3D64, 0x3D64, 0x3D63, 0x3D63, 0x3D62, 0xFC13, 0x14BE, 0x12D2, 
-	0x072C, 0xFFC3, 0x001B, 0x0246, 0x0953, 0x1364, 0x1BCF, 0x1B1B, 0x0D97, 
-	0xFA2E, 0xEF95, 0xDF85, 0xD5B7, 0xD070, 0xCDF9, 0xCCB7, 0xD302, 0xDC6F, 
-	0xE5B3, 0xEEFA, 0xF7A3, 0xFCF2, 0x0210, 0x0CA2, 0x172C, 0x18EC, 0x198D, 
-	0x1950, 0x177C, 0x141E, 0x0F00, 0x057A, 0xFE89, 0xF96F, 0xF5B4, 0xF30F, 
-	0xF3A9, 0xF8EA, 0x0022, 0x07ED, 0x10EE, 0x1A03, 0x20B0, 0x2459, 0x23D9, 
-	0x2198, 0x201C, 0x1F00, 0x1E1C, 0x1D67, 0x1CC3, 0x1C11, 0x1B4C, 0x1A78, 
-	0x19AA, 0x18E7, 0x1837, 0x17A5, 0x1733, 0x16CA, 0x1662, 0x15F0, 0x1574, 
-	0x14F6, 0x1468, 0x13C6, 0x130C, 0x123A, 0x1150, 0x1085, 0x106D, 0x1061, 
-	0x1057, 0x1050, 0x104D, 0x1047, 0x1042, 0x103E, 0x1039, 0x1034, 0x102E, 
-	0x1026, 0x1022, 0x101F, 0x101A, 0x1014, 0x1012, 0x100E, 0x100C, 0x1008, 
-	0x1002, 0x0FFB, 0x0FF5, 0x0FEF, 0x0FE9, 0x0FE4, 0x0FDE, 0x0FD9, 0x0FD5, 
-	0x0FD1, 0x0FCA, 0x0FC3, 0x0FBE, 0x0FB7, 0x0FB1, 0x0FAC, 0x0FA5, 0x0FA1, 
-	0x0F9B, 0x0F96, 0x0F92, 0x0F8E, 0x0F8A, 0x0F87, 0x0F83, 0x0F7E, 0x0F7B, 
-	0x0F76, 0x0F72, 0x0F6E, 0x0F6A, 0x0F67, 0x0F63, 0x0F60, 0x0F5D, 0x0F59, 
-	0x0F55, 0x0F51, 0x0F4D, 0x0F49, 0x0F45, 0x0F42, 0x0F3E, 0x0F3B, 0x0F37, 
-	0x0F33, 0x0F30, 0x0F2C, 0x0F28, 0x0F24, 0x0F20, 0x0F1D, 0x0F19, 0x0F15, 
-	0x0F12, 0x0F0C, 0x0F07, 0x0F01, 0x0EFC, 0x0EF9, 0x0EF6, 0x0EF2, 0x0EEF, 
-	0x0EEB, 0x0EE6, 0x0EE2, 0x0EDE, 0x0ED9, 0x0ED5, 0x0ED1, 0x0ECD, 0x0EC9, 
-	0x0EC5, 0x0EC0, 0x0EBB, 0x0EB5, 0x0EB0, 0x0EAA, 0x0EA4, 0x0E9F, 0x0E99, 
-	0x0E92, 0x0E8C, 0x0E88, 0x0E84, 0x0E7D, 0x0E77, 0x0E71, 0x0E6D, 0x0E68, 
-	0x0E62, 0x0E5D, 0x0E59, 0x0E54, 0x0E50, 0x0E4B, 0x0E45, 0x0E3F, 0x0E3A, 
-	0x0E34, 0x0E2F, 0x0E2A, 0x0E25, 0x0E20, 0x0E1B, 0x0E15, 0x0E0E, 0x0E08, 
-	0x0E01, 0x0DFB, 0x0DF3, 0x0DEE, 0x0DEA, 0x0DE5, 0x0DDF, 0x0DDA, 0x0DD6, 
-	0x0DD2, 0x0DCE, 0x0DC8, 0x0DC3, 0x0DBD, 0x0DB8, 0x0DB3, 0x0DAF, 0x0DA9, 
-	0x0DA6, 0x0D9F, 0x0D9C, 0x0D97, 0x0D93, 0x0D8F, 0x0D8C, 0x0D89, 0x0D85, 
-	0x0D82, 0x0D7C, 0x0D78, 0x0D72, 0x0D6E, 0x0D69, 0x0D65, 0x0D5F, 0x0D5A, 
-	0x0D55, 0x0D51, 0x0D4C, 0x0D46, 0x0D41, 0x0D3D, 0x0D39, 0x0D35, 0x0D31, 
-	0x0D2E, 0x0D2A, 0x0D26, 0x0D23, 0xF057, 0xEC08, 0xD895, 0xD5B5, 0xDF82, 
-	0xEB2B, 0xF5BE, 0xFC1F, 0xFD23, 0xF46D, 0xE4EA, 0xE6D1, 0xED6E, 0xF145, 
-	0xF2C8, 0xEDC6, 0xF2A7, 0x0685, 0xFBA2, 0xE255, 0xD65B, 0xD10F, 0xCF1F, 
-	0xD097, 0xD4DC, 0xDDAC, 0xE734, 0xF288, 0xFC20, 0x05AD, 0x0F91, 0x1A24, 
-	0x2538, 0x2F63, 0x32D6, 0x317B, 0x30BA, 0x2F6E, 0x2DB6, 0x2B26, 0x2721, 
-	0x2104, 0x1E7E, 0x1B80, 0x1787, 0x1316, 0x10F1, 0x1465, 0x174A, 0x1732, 
-	0x1747, 0x1797, 0x1810, 0x1898, 0x1923, 0x19B0, 0x1A3B, 0x1AB6, 0x1B1E, 
-	0x1B69, 0x1B8F, 0x1B96, 0x1B9B, 0x1BA0, 0x1BA6, 0x1BAB, 0x1BA1, 0x1B9A, 
-	0x1B92, 0x1B89, 0x1B81, 0x1B76, 0x1B54, 0x1B41, 0x1B42, 0x1B44, 0x1B45, 
-	0x1B42, 0x1B3F, 0x1B39, 0x1B37, 0x1B36, 0x1B37, 0x1B36, 0x1B36, 0x1B34, 
-	0x1B33, 0x1B32, 0x1B2F, 0x1B2D, 0x1B2B, 0x1B29, 0x1B25, 0x1B21, 0x1B1C, 
-	0x1B18, 0x1B14, 0x1B10, 0x1B0E, 0x1B0B, 0x1B08, 0x1B05, 0x1B02, 0x1AFE, 
-	0x1AFA, 0x1AF8, 0x1AF6, 0x1AF4, 0x1AF2, 0x1AF1, 0x1AEF, 0x1AF0, 0x1AF2, 
-	0x1AF4, 0x1AF6, 0x1AF8, 0x1AF9, 0x1AF8, 0x1AF9, 0x1AF9, 0x1AF8, 0x1AF8, 
-	0x1AF8, 0x1AF7, 0x1AF7, 0x1AF6, 0x1AF6, 0x1AF5, 0x1AF5, 0x1AF5, 0x1AF5, 
-	0x1AF5, 0x1AF4, 0x1AF4, 0x1AF5, 0x1AF7, 0x1AF8, 0x1AF9, 0x1AFA, 0x1AFB, 
-	0x1AFD, 0x1AFE, 0x1B01, 0x1B03, 0x1B05, 0x1B08, 0x1B0B, 0x1B0C, 0x1B11, 
-	0x1B11, 0x1B12, 0x1B13, 0x1B13, 0x1B13, 0x1B14, 0x1B14, 0x1B16, 0x1B18, 
-	0x1B19, 0x1B1A, 0x1B1C, 0x1B1D, 0x1B1E, 0x1B20, 0x1B22, 0x1B24, 0x1B27, 
-	0x1B29, 0x1B2C, 0x1B2F, 0x1B31, 0x1B33, 0x1B36, 0x1B38, 0x1B3B, 0x1B3C, 
-	0x1B3E, 0x1B3D, 0x1B3D, 0x1B3C, 0x1B3B, 0x1B3B, 0x1B3B, 0x1B3B, 0x1B3A, 
-	0x1B3A, 0x1B39, 0x1B37, 0x1B36, 0x1B35, 0x1B33, 0x1B32, 0x1B31, 0x1B2F, 
-	0x1B2D, 0x1B2C, 0x1B2B, 0x1B2A, 0x1B28, 0x1B26, 0x1B22, 0x1B1E, 0x1B1B, 
-	0x1B1B, 0x1B1C, 0x1B1C, 0x1B1B, 0x1B18, 0x1B16, 0x1B16, 0x1B14, 0x1B12, 
-	0x1B0E, 0x1B0B, 0x1B08, 0x1B05, 0x1B00, 0x1AFC, 0x1AF9, 0x1AF5, 0x1AEE, 
-	0x1AE9, 0x1AE5, 0x1AE0, 0x1ADC, 0x1AD8, 0x1AD5, 0x1AD2, 0x1ACE, 0x1AC9, 
-	0x1AC7, 0x1AC2, 0x1AC0, 0x1ABE, 0x1ABC, 0x1AB8, 0x1AB5, 0x1AB3, 0x1AB0, 
-	0x1AAE, 0x1AAB, 0x1AA8, 0x1AA7, 0x1AA3, 0x1AA0, 0x1A9E, 0x1A9C, 0x1A9A, 
-	0x1A97, 0x1A95, 0x0000, 0xBFFF, 0x0000, 0xC454, 0x4647, 0xCEE7, 0xDC51, 
-	0xF3D4, 0x0609, 0x10C2, 0x2414, 0x39E8, 0x44BD, 0x4E35, 0xD2EF, 0xD146, 
-	0xDFFB, 0xEE2C, 0xFE2B, 0x11AF, 0x29A9, 0x3244, 0x3558, 0x32C9, 0x2D48, 
-	0x283E, 0x29AC, 0x2C2B, 0x2F7D, 0x33E0, 0x3897, 0x3E4A, 0x4612, 0x4E66, 
-	0x5935, 0xE50C, 0xF002, 0xF5AF, 0xF901, 0xFB29, 0xFDB1, 0x0044, 0x0030, 
-	0xFCB3, 0xFAC6, 0xFA60, 0xF90F, 0xF844, 0xF809, 0xF7FF, 0xF817, 0xF825, 
-	0xF820, 0xF809, 0xF800, 0xF7FB, 0xF7F4, 0xF7F1, 0xF7EE, 0xF7E9, 0xF7E6, 
-	0xF7E4, 0xF7E2, 0xF7E0, 0xF7DF, 0xF7E1, 0xF7E3, 0xF7E6, 0xF7E7, 0xF7E9, 
-	0xF7EB, 0xF7ED, 0xF7EE, 0xF7EF, 0xF7ED, 0xF7ED, 0xF7F4, 0xF7FA, 0xF801, 
-	0xF806, 0xF808, 0xF80B, 0xF80D, 0xF811, 0xF812, 0xF814, 0xF817, 0xF81B, 
-	0xF81B, 0xF81C, 0xF81E, 0xF820, 0xF822, 0xF824, 0xF827, 0xF829, 0xF82C, 
-	0xF82E, 0xF830, 0xF832, 0xF835, 0xF837, 0xF83A, 0xF83D, 0xF840, 0xF843, 
-	0xF845, 0xF847, 0xF84A, 0xF84D, 0xF84F, 0xF851, 0xF854, 0xF856, 0xF859, 
-	0xF85B, 0xF85D, 0xF85E, 0xF861, 0xF863, 0xF864, 0xF865, 0xF868, 0xF86A, 
-	0xF86C, 0xF86F, 0xF871, 0xF874, 0xF876, 0xF878, 0xF87B, 0xF87E, 0xF880, 
-	0xF883, 0xF885, 0xF888, 0xF88B, 0xF88D, 0xF890, 0xF893, 0xF895, 0xF898, 
-	0xF89B, 0xF89D, 0xF8A0, 0xF8A2, 0xF8A4, 0xF8A6, 0xF8A8, 0xF8AA, 0xF8AB, 
-	0xF8AD, 0xF8AF, 0xF8B3, 0xF8B6, 0xF8B9, 0xF8BC, 0xF8C0, 0xF8C4, 0xF8C9, 
-	0xF8CE, 0xF8D2, 0xF8D7, 0xF8DC, 0xF8E0, 0xF8E4, 0xF8E9, 0xF8ED, 0xF8F1, 
-	0xF8F6, 0xF8FB, 0xF8FF, 0xF904, 0xF909, 0xF90E, 0xF912, 0xF917, 0xF91C, 
-	0xF91F, 0xF920, 0xF921, 0xF922, 0xF923, 0xF926, 0xF928, 0xF92B, 0xF92D, 
-	0xF930, 0xF933, 0xF936, 0xF939, 0xF93C, 0xF93F, 0xF942, 0xF945, 0xF947, 
-	0xF94A, 0xF94E, 0xF951, 0xF954, 0xF956, 0xF958, 0xF95B, 0xF95D, 0xF960, 
-	0xF961, 0xF963, 0xF966, 0xF968, 0xF96A, 0xF96B, 0xF96C, 0xF96D, 0xF96E, 
-	0xF96F, 0xF96F, 0xF96E, 0xF96F, 0xF970, 0xF971, 0xF972, 0xF973, 0xF975, 
-	0xF977, 0xF979, 0xF97B, 0xF97D, 0xF97F, 0xF980, 0xF982, 0xF984, 0xF985, 
-	0xF986, 0xF987, 0xF988, 0xF989, 0xF98A, 0xF98A, 0xF98B, 0xF98C, 0xF98D, 
-	0xF98D, 0xF98E, 0xF98F, 0xF990, 0xF991, 0xF992, 0xF994, 0xF995, 0xF996, 
-	0xF997, 0xF998, 0xF999, 0x642D, 0x020B, 0x938F, 0x99B3, 0x9EB5, 0x9DBC, 
-	0x946A, 0x8F62, 0x90EE, 0x9335, 0x9B73, 0xEDAF, 0xFD6D, 0x04D2, 0x0261, 
-	0xFBFE, 0xF867, 0xF991, 0x0087, 0x0030, 0xFDF3, 0xFC63, 0xFC56, 0xFC6B, 
-	0xFBA3, 0xF973, 0xF80C, 0xF6C9, 0xF686, 0xF49C, 0xF200, 0xF0BD, 0x8FF1, 
-	0x9110, 0x945E, 0x9882, 0x9AB4, 0x9A4C, 0x98BF, 0x967F, 0x951A, 0x94B7, 
-	0x93A9, 0x92D5, 0x9273, 0x9258, 0x9258, 0x9260, 0x9240, 0x9235, 0x921D, 
-	0x9218, 0x9216, 0x9214, 0x9215, 0x9213, 0x920F, 0x9210, 0x9211, 0x9211, 
-	0x9211, 0x9212, 0x9211, 0x9212, 0x9212, 0x9213, 0x9214, 0x9214, 0x9214, 
-	0x9214, 0x9214, 0x9214, 0x9217, 0x921F, 0x9226, 0x922B, 0x922E, 0x922F, 
-	0x9231, 0x9232, 0x9234, 0x9235, 0x9237, 0x9239, 0x923E, 0x923D, 0x923E, 
-	0x9240, 0x9242, 0x9244, 0x9245, 0x9247, 0x9248, 0x924A, 0x924C, 0x924D, 
-	0x924F, 0x9251, 0x9253, 0x9255, 0x9256, 0x9258, 0x925A, 0x925C, 0x925E, 
-	0x9260, 0x9262, 0x9264, 0x9266, 0x9268, 0x926A, 0x926D, 0x926F, 0x9272, 
-	0x9274, 0x9276, 0x9278, 0x9279, 0x927C, 0x927E, 0x9280, 0x9283, 0x9285, 
-	0x9287, 0x928A, 0x928B, 0x928E, 0x9290, 0x9292, 0x9295, 0x9297, 0x9299, 
-	0x929B, 0x929E, 0x92A0, 0x92A3, 0x92A5, 0x92A8, 0x92AA, 0x92AC, 0x92AF, 
-	0x92B1, 0x92B4, 0x92B6, 0x92B8, 0x92BB, 0x92BE, 0x92BF, 0x92C2, 0x92C5, 
-	0x92C9, 0x92CC, 0x92CE, 0x92D0, 0x92D3, 0x92D6, 0x92D9, 0x92DE, 0x92E1, 
-	0x92E5, 0x92E9, 0x92EC, 0x92EF, 0x92F3, 0x92F6, 0x92FA, 0x92FE, 0x9302, 
-	0x9306, 0x930A, 0x930E, 0x9312, 0x9316, 0x931A, 0x931F, 0x9321, 0x9323, 
-	0x9324, 0x9326, 0x9328, 0x932A, 0x932C, 0x932F, 0x9331, 0x9333, 0x9336, 
-	0x9338, 0x933A, 0x933C, 0x933F, 0x9341, 0x9343, 0x9345, 0x9347, 0x9349, 
-	0x934C, 0x934E, 0x9350, 0x9352, 0x9354, 0x9356, 0x9358, 0x9359, 0x935C, 
-	0x935E, 0x9360, 0x9361, 0x9362, 0x9363, 0x9364, 0x9365, 0x9367, 0x9368, 
-	0x9369, 0x936A, 0x936B, 0x936C, 0x936C, 0x936D, 0x936E, 0x936F, 0x936F, 
-	0x9371, 0x9372, 0x9373, 0x9373, 0x9374, 0x9375, 0x9376, 0x9377, 0x9377, 
-	0x9378, 0x9379, 0x937A, 0x937B, 0x937C, 0x937D, 0x937E, 0x937F, 0x9380, 
-	0x9381, 0x9382, 0x9383, 0x9384, 0x9385, 0x9386, 0x9387, 0x9388, 0x9389, 
-	0x938A, 0xF723, 0x9375, 0x10DC, 0x06EC, 0xF9DB, 0xEB1E, 0xED46, 0xF829, 
-	0x05A2, 0x0AD9, 0x099D, 0x898E, 0x8C02, 0x91E5, 0x98BB, 0xA12D, 0x9445, 
-	0x892E, 0x79A8, 0x6EBC, 0x6763, 0x6293, 0x5F29, 0x5BB7, 0x58D1, 0x5479, 
-	0x50AB, 0x4E64, 0x5032, 0x4E81, 0x4DDE, 0x4E1B, 0xCDF0, 0xCD0E, 0xCD67, 
-	0xCDED, 0xCDD7, 0xCCFD, 0xCC16, 0xCBC2, 0xCB22, 0xCB25, 0xCB91, 0xCBA4, 
-	0xCBCF, 0xCBDC, 0xCBE0, 0xCBD7, 0xCBB0, 0xCBA9, 0xCBA2, 0xCBA1, 0xCBA3, 
-	0xCBA5, 0xCBA7, 0xCBA8, 0xCBA7, 0xCBAA, 0xCBAC, 0xCBAD, 0xCBAF, 0xCBAF, 
-	0xCBAF, 0xCBAE, 0xCBAD, 0xCBAD, 0xCBAC, 0xCBAB, 0xCBAA, 0xCBA9, 0xCBA9, 
-	0xCBA9, 0xCBAB, 0xCBAE, 0xCBAF, 0xCBB0, 0xCBB0, 0xCBB0, 0xCBB0, 0xCBB0, 
-	0xCBB0, 0xCBB0, 0xCBB0, 0xCBB1, 0xCBB2, 0xCBB2, 0xCBB3, 0xCBB3, 0xCBB4, 
-	0xCBB4, 0xCBB4, 0xCBB4, 0xCBB4, 0xCBB4, 0xCBB4, 0xCBB4, 0xCBB5, 0xCBB5, 
-	0xCBB5, 0xCBB5, 0xCBB5, 0xCBB4, 0xCBB4, 0xCBB4, 0xCBB5, 0xCBB6, 0xCBB6, 
-	0xCBB7, 0xCBB7, 0xCBB7, 0xCBB8, 0xCBB9, 0xCBB9, 0xCBBA, 0xCBBB, 0xCBBC, 
-	0xCBBC, 0xCBBD, 0xCBBE, 0xCBBF, 0xCBC0, 0xCBC1, 0xCBC2, 0xCBC2, 0xCBC3, 
-	0xCBC3, 0xCBC4, 0xCBC5, 0xCBC5, 0xCBC6, 0xCBC6, 0xCBC7, 0xCBC7, 0xCBC8, 
-	0xCBC8, 0xCBC9, 0xCBCA, 0xCBCA, 0xCBCB, 0xCBCB, 0xCBCC, 0xCBCC, 0xCBCD, 
-	0xCBCE, 0xCBCF, 0xCBD0, 0xCBD2, 0xCBD3, 0xCBD4, 0xCBD5, 0xCBD6, 0xCBD7, 
-	0xCBD7, 0xCBD7, 0xCBD7, 0xCBD7, 0xCBD8, 0xCBD9, 0xCBD9, 0xCBDA, 0xCBDB, 
-	0xCBDB, 0xCBDB, 0xCBDC, 0xCBDC, 0xCBDD, 0xCBDE, 0xCBDE, 0xCBDF, 0xCBE0, 
-	0xCBE1, 0xCBE1, 0xCBE2, 0xCBE3, 0xCBE3, 0xCBE4, 0xCBE4, 0xCBE5, 0xCBE6, 
-	0xCBE7, 0xCBE8, 0xCBE8, 0xCBE9, 0xCBE9, 0xCBE9, 0xCBEA, 0xCBEA, 0xCBEA, 
-	0xCBEA, 0xCBEB, 0xCBEB, 0xCBEB, 0xCBEB, 0xCBEC, 0xCBEC, 0xCBEC, 0xCBEC, 
-	0xCBEC, 0xCBED, 0xCBED, 0xCBED, 0xCBED, 0xCBEE, 0xCBEF, 0xCBEF, 0xCBEF, 
-	0xCBEF, 0xCBF0, 0xCBF0, 0xCBF1, 0xCBF1, 0xCBF2, 0xCBF3, 0xCBF5, 0xCBF5, 
-	0xCBF5, 0xCBF5, 0xCBF5, 0xCBF5, 0xCBF4, 0xCBF4, 0xCBF4, 0xCBF4, 0xCBF4, 
-	0xCBF3, 0xCBF3, 0xCBF2, 0xCBF2, 0xCBF2, 0xCBF2, 0xCBF2, 0xCBF2, 0xCBF2, 
-	0xCBF2, 0xCBF3, 0xCBF3, 0xCBF4, 0xCBF4, 0xCBF5, 0xCBF5, 0xCBF6, 0xCBF6, 
-	0xCBF6, 0xCBF6, 0xCBF6, 0xCBF6, 0xCBF7, 0xFF38, 0x157A, 0x123A, 0x0EE7, 
-	0xFBD4, 0xEB0A, 0xDD9C, 0xC743, 0xADE5, 0x9FC9, 0x1042, 0x0890, 0x10D5, 
-	0x202B, 0x2912, 0x338F, 0x3E05, 0xCC14, 0xCF5A, 0xD5ED, 0xD6C8, 0xDD0E, 
-	0xEF75, 0x003B, 0x0C03, 0x1582, 0x1997, 0x19C3, 0x19D2, 0x1856, 0x16E7, 
-	0xF951, 0xCE19, 0xC5ED, 0xC995, 0xCE0E, 0xD1CA, 0xD41D, 0xD380, 0xCDC2, 
-	0xCAAB, 0xCAD1, 0xCA02, 0xC9AF, 0xC995, 0xC98D, 0xC98F, 0xC98F, 0xC974, 
-	0xC96D, 0xC962, 0xC95F, 0xC95F, 0xC95E, 0xC960, 0xC95F, 0xC95D, 0xC95F, 
-	0xC960, 0xC961, 0xC961, 0xC961, 0xC961, 0xC961, 0xC961, 0xC961, 0xC961, 
-	0xC961, 0xC961, 0xC960, 0xC960, 0xC960, 0xC962, 0xC967, 0xC969, 0xC96C, 
-	0xC96D, 0xC96D, 0xC96E, 0xC96E, 0xC96F, 0xC970, 0xC970, 0xC972, 0xC974, 
-	0xC974, 0xC974, 0xC975, 0xC976, 0xC977, 0xC978, 0xC978, 0xC979, 0xC97A, 
-	0xC97A, 0xC97B, 0xC97C, 0xC97D, 0xC97D, 0xC97E, 0xC97F, 0xC97F, 0xC980, 
-	0xC981, 0xC982, 0xC983, 0xC984, 0xC985, 0xC986, 0xC987, 0xC988, 0xC989, 
-	0xC98A, 0xC98C, 0xC98D, 0xC98E, 0xC98F, 0xC990, 0xC991, 0xC992, 0xC994, 
-	0xC995, 0xC996, 0xC997, 0xC998, 0xC999, 0xC99A, 0xC99C, 0xC99D, 0xC99E, 
-	0xC99F, 0xC9A0, 0xC9A1, 0xC9A2, 0xC9A4, 0xC9A5, 0xC9A6, 0xC9A7, 0xC9A8, 
-	0xC9A9, 0xC9AA, 0xC9AC, 0xC9AD, 0xC9AE, 0xC9B0, 0xC9B1, 0xC9B3, 0xC9B4, 
-	0xC9B5, 0xC9B7, 0xC9B9, 0xC9BA, 0xC9BB, 0xC9BC, 0xC9BD, 0xC9BE, 0xC9C0, 
-	0xC9C2, 0xC9C4, 0xC9C5, 0xC9C7, 0xC9C9, 0xC9CA, 0xC9CC, 0xC9CD, 0xC9CF, 
-	0xC9D1, 0xC9D3, 0xC9D5, 0xC9D7, 0xC9D9, 0xC9DA, 0xC9DC, 0xC9DE, 0xC9E0, 
-	0xC9E2, 0xC9E3, 0xC9E4, 0xC9E5, 0xC9E6, 0xC9E7, 0xC9E8, 0xC9E9, 0xC9EA, 
-	0xC9EB, 0xC9EC, 0xC9ED, 0xC9EE, 0xC9EF, 0xC9F0, 0xC9F1, 0xC9F2, 0xC9F3, 
-	0xC9F4, 0xC9F5, 0xC9F6, 0xC9F7, 0xC9F8, 0xC9F9, 0xC9FA, 0xC9FB, 0xC9FC, 
-	0xC9FD, 0xC9FE, 0xC9FF, 0xC9FF, 0xCA00, 0xCA01, 0xCA01, 0xCA02, 0xCA02, 
-	0xCA03, 0xCA04, 0xCA05, 0xCA06, 0xCA06, 0xCA06, 0xCA06, 0xCA06, 0xCA07, 
-	0xCA07, 0xCA07, 0xCA08, 0xCA08, 0xCA09, 0xCA08, 0xCA09, 0xCA09, 0xCA09, 
-	0xCA09, 0xCA0A, 0xCA0A, 0xCA0B, 0xCA0B, 0xCA0C, 0xCA0C, 0xCA0D, 0xCA0E, 
-	0xCA0E, 0xCA0F, 0xCA0F, 0xCA10, 0xCA10, 0xCA11, 0xCA11, 0xCA12, 0xCA12, 
-	0xCA13, 0xCA13, 0xCA14, 0xF6FF, 0xEBC4, 0xF940, 0x0836, 0x0B0B, 0x0D13, 
-	0x1853, 0x1DB2, 0x2211, 0x285A, 0x52BE, 0x55A6, 0x5B94, 0x6272, 0x5F9C, 
-	0x595F, 0x5952, 0x1F65, 0x1CA0, 0x1856, 0x1BDA, 0x24C8, 0x2D7E, 0x2FB0, 
-	0x2E97, 0x2A62, 0x2397, 0x1C60, 0x1782, 0x2193, 0x2D84, 0x368A, 0x305C, 
-	0x22EB, 0x1762, 0x0C76, 0x053B, 0x015A, 0xFEA0, 0x0039, 0x061C, 0x082D, 
-	0x087C, 0x0A33, 0x0B41, 0x0B78, 0x0B7E, 0x0B71, 0x0B98, 0x0BA4, 0x0BC8, 
-	0x0BD5, 0x0BDA, 0x0BE0, 0x0BE1, 0x0BE3, 0x0BE8, 0x0BE9, 0x0BEA, 0x0BEA, 
-	0x0BEA, 0x0BEA, 0x0BE9, 0x0BE7, 0x0BE5, 0x0BE4, 0x0BE3, 0x0BE2, 0x0BE1, 
-	0x0BE1, 0x0BE1, 0x0BE3, 0x0BE2, 0x0BDB, 0x0BD3, 0x0BCB, 0x0BC5, 0x0BC1, 
-	0x0BBE, 0x0BBA, 0x0BB6, 0x0BB5, 0x0BB3, 0x0BB2, 0x0BAE, 0x0BAE, 0x0BAD, 
-	0x0BAB, 0x0BAA, 0x0BA9, 0x0BA8, 0x0BA7, 0x0BA5, 0x0BA3, 0x0BA2, 0x0BA0, 
-	0x0B9E, 0x0B9C, 0x0B9A, 0x0B98, 0x0B96, 0x0B93, 0x0B91, 0x0B8E, 0x0B8D, 
-	0x0B8B, 0x0B89, 0x0B87, 0x0B86, 0x0B84, 0x0B82, 0x0B81, 0x0B7F, 0x0B7D, 
-	0x0B7B, 0x0B7A, 0x0B78, 0x0B77, 0x0B76, 0x0B74, 0x0B72, 0x0B70, 0x0B6F, 
-	0x0B6D, 0x0B6B, 0x0B6A, 0x0B68, 0x0B66, 0x0B65, 0x0B63, 0x0B62, 0x0B60, 
-	0x0B5E, 0x0B5C, 0x0B5B, 0x0B59, 0x0B57, 0x0B55, 0x0B54, 0x0B52, 0x0B50, 
-	0x0B4E, 0x0B4D, 0x0B4C, 0x0B4A, 0x0B49, 0x0B48, 0x0B47, 0x0B45, 0x0B41, 
-	0x0B3D, 0x0B39, 0x0B35, 0x0B32, 0x0B2D, 0x0B28, 0x0B22, 0x0B1B, 0x0B15, 
-	0x0B0E, 0x0B07, 0x0B01, 0x0AFB, 0x0AF6, 0x0AF0, 0x0AEA, 0x0AE4, 0x0ADE, 
-	0x0AD7, 0x0AD1, 0x0ACB, 0x0AC4, 0x0ABE, 0x0AB8, 0x0AB2, 0x0AAE, 0x0AAD, 
-	0x0AAC, 0x0AAB, 0x0AAA, 0x0AA7, 0x0AA4, 0x0AA1, 0x0A9E, 0x0A9C, 0x0A99, 
-	0x0A97, 0x0A94, 0x0A91, 0x0A8E, 0x0A8B, 0x0A88, 0x0A85, 0x0A82, 0x0A7F, 
-	0x0A7B, 0x0A79, 0x0A76, 0x0A74, 0x0A71, 0x0A6F, 0x0A6C, 0x0A6B, 0x0A69, 
-	0x0A67, 0x0A65, 0x0A63, 0x0A62, 0x0A61, 0x0A5F, 0x0A5E, 0x0A5C, 0x0A5B, 
-	0x0A5A, 0x0A59, 0x0A58, 0x0A58, 0x0A57, 0x0A57, 0x0A56, 0x0A56, 0x0A55, 
-	0x0A52, 0x0A51, 0x0A50, 0x0A50, 0x0A50, 0x0A4F, 0x0A4E, 0x0A4E, 0x0A4E, 
-	0x0A4E, 0x0A4D, 0x0A4B, 0x0A4B, 0x0A4B, 0x0A4A, 0x0A4A, 0x0A4A, 0x0A4A, 
-	0x0A48, 0x0A47, 0x0A45, 0x0A44, 0x0A43, 0x0A42, 0x0A40, 0x0A3F, 0x0A3F, 
-	0x0A3D, 0xEA3E, 0xD4DA, 0xD95D, 0xF420, 0xFEED, 0xF63C, 0xF11C, 0xEB0A, 
-	0xE058, 0xD388, 0x448F, 0x2BD5, 0x1E4C, 0x18FB, 0x1428, 0x1305, 0x1D48, 
-	0xA959, 0xB2E1, 0xBAEF, 0xC175, 0xC9F5, 0xDD57, 0xEDC4, 0xFBDB, 0x0A87, 
-	0x14C1, 0x1BEB, 0x2395, 0x232A, 0x1DED, 0x0034, 0xD3D5, 0xCA99, 0xCAC2, 
-	0xCCC1, 0xCDF1, 0xCDB0, 0xCD17, 0xCBC0, 0xCA4C, 0xCA84, 0xCB2E, 0xCBA5, 
-	0xCC04, 0xCC14, 0xCC16, 0xCC0F, 0xCC0B, 0xCC0C, 0xCC12, 0xCC13, 0xCC14, 
-	0xCC16, 0xCC17, 0xCC18, 0xCC19, 0xCC1A, 0xCC1B, 0xCC1C, 0xCC1C, 0xCC1C, 
-	0xCC1C, 0xCC1B, 0xCC1A, 0xCC1A, 0xCC1A, 0xCC1A, 0xCC19, 0xCC19, 0xCC19, 
-	0xCC19, 0xCC19, 0xCC18, 0xCC17, 0xCC16, 0xCC15, 0xCC14, 0xCC13, 0xCC13, 
-	0xCC12, 0xCC12, 0xCC12, 0xCC12, 0xCC12, 0xCC12, 0xCC12, 0xCC13, 0xCC13, 
-	0xCC13, 0xCC13, 0xCC13, 0xCC13, 0xCC13, 0xCC13, 0xCC13, 0xCC13, 0xCC14, 
-	0xCC13, 0xCC13, 0xCC12, 0xCC12, 0xCC11, 0xCC11, 0xCC11, 0xCC12, 0xCC12, 
-	0xCC12, 0xCC12, 0xCC12, 0xCC12, 0xCC13, 0xCC13, 0xCC13, 0xCC14, 0xCC14, 
-	0xCC14, 0xCC15, 0xCC15, 0xCC16, 0xCC16, 0xCC16, 0xCC17, 0xCC17, 0xCC17, 
-	0xCC18, 0xCC18, 0xCC18, 0xCC19, 0xCC19, 0xCC19, 0xCC1A, 0xCC1A, 0xCC1A, 
-	0xCC1B, 0xCC1B, 0xCC1B, 0xCC1B, 0xCC1C, 0xCC1C, 0xCC1C, 0xCC1D, 0xCC1D, 
-	0xCC1E, 0xCC1E, 0xCC1F, 0xCC1F, 0xCC20, 0xCC20, 0xCC20, 0xCC1F, 0xCC1F, 
-	0xCC1E, 0xCC1E, 0xCC1D, 0xCC1C, 0xCC1B, 0xCC19, 0xCC18, 0xCC17, 0xCC16, 
-	0xCC14, 0xCC13, 0xCC12, 0xCC11, 0xCC10, 0xCC0F, 0xCC0E, 0xCC0D, 0xCC0C, 
-	0xCC0A, 0xCC09, 0xCC08, 0xCC07, 0xCC06, 0xCC05, 0xCC06, 0xCC06, 0xCC07, 
-	0xCC07, 0xCC07, 0xCC07, 0xCC06, 0xCC06, 0xCC06, 0xCC05, 0xCC05, 0xCC05, 
-	0xCC05, 0xCC04, 0xCC04, 0xCC03, 0xCC03, 0xCC02, 0xCC02, 0xCC02, 0xCC01, 
-	0xCC01, 0xCC01, 0xCC01, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 
-	0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC01, 0xCC01, 
-	0xCC01, 0xCC01, 0xCC01, 0xCC01, 0xCC01, 0xCC01, 0xCC00, 0xCC00, 0xCC00, 
-	0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 0xCC00, 
-	0xCC00, 0xCC01, 0xCC01, 0xCC01, 0xCC01, 0xCC02, 0xCC02, 0xCC02, 0xCC01, 
-	0x3995, 0x2B69, 0x36B2, 0xC976, 0x2B7B, 0x1925, 0x1C4E, 0x1979, 0x1D4A, 
-	0x196A, 0x0C23, 0x078C, 0x0673, 0x0330, 0xFD9E, 0xF36A, 0xE1A5, 0xD55E, 
-	0xCAE8, 0xC194, 0xBFFC, 0xBE8B, 0xBC56, 0xBB0F, 0xBBA3, 0xBBD4, 0xBB4A, 
-	0xBAA5, 0xBBB2, 0xC091, 0xC2D1, 0xC564, 0xC4F0, 0xC308, 0xBF93, 0xBE0C, 
-	0xBC9D, 0xBA62, 0xB90F, 0xBB8F, 0xBD3D, 0xBD0A, 0xBD1A, 0xBD3B, 0xBD52, 
-	0xBD57, 0xBD56, 0xBD56, 0xBD5C, 0xBD5E, 0xBD60, 0xBD62, 0xBD62, 0xBD62, 
-	0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 
-	0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 
-	0xBD63, 0xBD62, 0xBD61, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD5F, 0xBD5F, 
-	0xBD5F, 0xBD5F, 0xBD5F, 0xBD5F, 0xBD5F, 0xBD5F, 0xBD5F, 0xBD5F, 0xBD60, 
-	0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 
-	0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 
-	0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD60, 0xBD61, 0xBD61, 
-	0xBD61, 0xBD61, 0xBD61, 0xBD61, 0xBD61, 0xBD61, 0xBD61, 0xBD61, 0xBD61, 
-	0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 0xBD62, 
-	0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 
-	0xBD63, 0xBD63, 0xBD64, 0xBD64, 0xBD64, 0xBD63, 0xBD63, 0xBD63, 0xBD63, 
-	0xBD63, 0xBD62, 0xBD62, 0xBD61, 0xBD61, 0xBD60, 0xBD5F, 0xBD5F, 0xBD5E, 
-	0xBD5E, 0xBD5D, 0xBD5D, 0xBD5C, 0xBD5C, 0xBD5B, 0xBD5A, 0xBD5A, 0xBD59, 
-	0xBD59, 0xBD58, 0xBD58, 0xBD57, 0xBD57, 0xBD57, 0xBD57, 0xBD57, 0xBD57, 
-	0xBD57, 0xBD57, 0xBD56, 0xBD56, 0xBD56, 0xBD56, 0xBD56, 0xBD56, 0xBD56, 
-	0xBD56, 0xBD56, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 
-	0xBD55, 0xBD55, 0xBD55, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD55, 0xBD54, 
-	0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 0xBD54, 
-	0xBD54, 0xBD54, 0xBD54, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 0xBD55, 
-	0xBD55, 0xBD55, 0xBD55, 0xBD56, 0xBD56, 0xBD56, 0xBD56, 0xBD55, 0xBD56, 
-	0x0BA1, 0xF7EF, 0xDBB6, 0xA088, 0xE67D, 0xFFE3, 0x00D1, 0xFF3E, 0x096E, 
-	0x16FC, 0x2174, 0x1A27, 0x08CB, 0xFD41, 0xF453, 0xE917, 0xE0CD, 0xE1F9, 
-	0xEB45, 0xF7DF, 0xFF4D, 0x00F1, 0x011F, 0xFE60, 0x009F, 0x0326, 0x059D, 
-	0x07B9, 0x08B2, 0x0690, 0xFE28, 0xF66E, 0xF1A7, 0xEFE8, 0xF204, 0xF77F, 
-	0xFD89, 0x00A2, 0x010A, 0xFC07, 0xF8FD, 0xF8E8, 0xF915, 0xF927, 0xF935, 
-	0xF935, 0xF935, 0xF935, 0xF939, 0xF939, 0xF93D, 0xF93C, 0xF93B, 0xF93B, 
-	0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 
-	0xF93C, 0xF93B, 0xF93C, 0xF93C, 0xF93C, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 
-	0xF93C, 0xF93C, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93A, 0xF93B, 
-	0xF93B, 0xF93A, 0xF93A, 0xF93A, 0xF93A, 0xF93A, 0xF93B, 0xF93B, 0xF93B, 
-	0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 
-	0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 
-	0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 0xF93B, 
-	0xF93B, 0xF93B, 0xF93B, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 
-	0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93C, 
-	0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 
-	0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 0xF93D, 
-	0xF93C, 0xF93C, 0xF93C, 0xF93C, 0xF93B, 0xF93B, 0xF93A, 0xF93A, 0xF93A, 
-	0xF93A, 0xF939, 0xF939, 0xF939, 0xF938, 0xF938, 0xF938, 0xF937, 0xF937, 
-	0xF937, 0xF936, 0xF936, 0xF936, 0xF935, 0xF936, 0xF936, 0xF936, 0xF936, 
-	0xF936, 0xF935, 0xF935, 0xF935, 0xF935, 0xF935, 0xF935, 0xF935, 0xF935, 
-	0xF935, 0xF935, 0xF935, 0xF935, 0xF934, 0xF935, 0xF935, 0xF934, 0xF934, 
-	0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 
-	0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 
-	0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF934, 0xF935, 0xF5F4, 0xE9E6, 
-	0xCDE4, 0x22F8, 0xBCC4, 0xE9B8, 0x06A6, 0x184A, 0x1F18, 0x14CF, 0xFCB9, 
-	0xF253, 0xFB92, 0xFA8C, 0xF4C2, 0xEA28, 0xEEA6, 0xF264, 0xF524, 0xF427, 
-	0xECCB, 0xE387, 0xD9B0, 0xD78F, 0xD7D9, 0xD57E, 0xD2BD, 0xD0E8, 0xD075, 
-	0xD8B0, 0xE03A, 0xE576, 0xEC81, 0xF56C, 0x00F1, 0x0BD7, 0x1215, 0x1465, 
-	0x1555, 0x155E, 0x140D, 0x1457, 0x1451, 0x1390, 0x12F5, 0x12DF, 0x12DF, 
-	0x12DF, 0x12BC, 0x12B5, 0x12A3, 0x129D, 0x129B, 0x129A, 0x129A, 0x1299, 
-	0x1298, 0x1298, 0x1298, 0x1299, 0x1299, 0x1299, 0x1299, 0x1299, 0x1299, 
-	0x1299, 0x1298, 0x1297, 0x1296, 0x1294, 0x1293, 0x1293, 0x1294, 0x1296, 
-	0x129A, 0x129F, 0x12A2, 0x12A4, 0x12A6, 0x12A9, 0x12AA, 0x12A9, 0x12AA, 
-	0x12A9, 0x12A9, 0x12A9, 0x12A8, 0x12A8, 0x12A7, 0x12A6, 0x12A5, 0x12A5, 
-	0x12A4, 0x12A4, 0x12A4, 0x12A4, 0x12A4, 0x12A4, 0x12A4, 0x12A4, 0x12A4, 
-	0x12A5, 0x12A5, 0x12A5, 0x12A5, 0x12A4, 0x12A4, 0x12A3, 0x12A3, 0x12A2, 
-	0x12A2, 0x12A2, 0x12A1, 0x12A1, 0x12A1, 0x12A0, 0x129F, 0x129F, 0x129E, 
-	0x129E, 0x129E, 0x129D, 0x129D, 0x129C, 0x129B, 0x129B, 0x129A, 0x129A, 
-	0x1299, 0x1298, 0x1298, 0x1297, 0x1296, 0x1296, 0x1295, 0x1294, 0x1294, 
-	0x1293, 0x1292, 0x1292, 0x1291, 0x1291, 0x1290, 0x128F, 0x128F, 0x128E, 
-	0x128E, 0x128D, 0x128D, 0x128F, 0x1290, 0x1291, 0x1292, 0x1293, 0x1295, 
-	0x1299, 0x129C, 0x12A0, 0x12A3, 0x12A7, 0x12AA, 0x12AE, 0x12B1, 0x12B4, 
-	0x12B7, 0x12BA, 0x12BD, 0x12C1, 0x12C4, 0x12C7, 0x12CB, 0x12CE, 0x12D1, 
-	0x12D5, 0x12D8, 0x12DA, 0x12DA, 0x12DA, 0x12DA, 0x12DB, 0x12DB, 0x12DC, 
-	0x12DD, 0x12DD, 0x12DE, 0x12DE, 0x12DE, 0x12DF, 0x12E0, 0x12E1, 0x12E2, 
-	0x12E3, 0x12E3, 0x12E4, 0x12E5, 0x12E5, 0x12E6, 0x12E6, 0x12E7, 0x12E7, 
-	0x12E8, 0x12E8, 0x12E9, 0x12E9, 0x12E9, 0x12E8, 0x12E8, 0x12E9, 0x12E9, 
-	0x12E9, 0x12E9, 0x12EA, 0x12EA, 0x12EB, 0x12EB, 0x12EB, 0x12EA, 0x12EA, 
-	0x12E9, 0x12E9, 0x12E8, 0x12E8, 0x12E8, 0x12E8, 0x12E7, 0x12E6, 0x12E5, 
-	0x12E5, 0x12E4, 0x12E3, 0x12E3, 0x12E2, 0x12E2, 0x12E3, 0x12E2, 0x12E1, 
-	0x12E1, 0x12E0, 0x12DF, 0x12DE, 0x12DF, 0x12DF, 0x12E0, 0x3ADB, 0x3086, 
-	0x3D87, 0x3B8F, 0x3520, 0x36CD, 0x3BEB, 0x424D, 0x487B, 0x536E, 0x5BB6, 
-	0x634E, 0xD6E7, 0x4C7C, 0x4217, 0x3826, 0x38FE, 0x3D8A, 0x37D2, 0x3F7C, 
-	0x466C, 0x43EA, 0x40FC, 0x3E7A, 0x3A6F, 0x33F9, 0x318D, 0x311D, 0x2F4D, 
-	0x32D7, 0x3678, 0x385F, 0x392F, 0x39E3, 0x39D7, 0x3ABE, 0x3DFC, 0x4553, 
-	0xCDC1, 0xD4F3, 0xD68D, 0xD754, 0xD908, 0xDA9C, 0xDB20, 0xDB78, 0xDB68, 
-	0xDB29, 0xDB11, 0xDAE6, 0xDA34, 0xD9BB, 0xD97D, 0xD971, 0xD96E, 0xD97C, 
-	0xD98E, 0xD996, 0xD99A, 0xD99C, 0xD99C, 0xD99A, 0xD997, 0xD992, 0xD98B, 
-	0xD982, 0xD979, 0xD96F, 0xD964, 0xD958, 0xD94C, 0xD942, 0xD933, 0xD91C, 
-	0xD908, 0xD8F6, 0xD8ED, 0xD8EC, 0xD8EB, 0xD8E9, 0xD8E5, 0xD8DC, 0xD8D6, 
-	0xD8BA, 0xD8A7, 0xD8A7, 0xD8A5, 0xD89C, 0xD893, 0xD889, 0xD881, 0xD878, 
-	0xD870, 0xD867, 0xD85D, 0xD854, 0xD84B, 0xD841, 0xD836, 0xD82C, 0xD821, 
-	0xD816, 0xD80B, 0xD801, 0xD7F6, 0xD7EC, 0xD7E1, 0xD7D7, 0xD7CD, 0xD7C2, 
-	0xD7B7, 0xD7AC, 0xD7A2, 0xD797, 0xD78B, 0xD77F, 0xD775, 0xD772, 0xD767, 
-	0xD75C, 0xD750, 0xD745, 0xD739, 0xD72D, 0xD721, 0xD717, 0xD709, 0xD6FD, 
-	0xD6F0, 0xD6E4, 0xD6D8, 0xD6CB, 0xD6BE, 0xD6B3, 0xD6A6, 0xD69A, 0xD68C, 
-	0xD67F, 0xD674, 0xD666, 0xD658, 0xD649, 0xD63C, 0xD631, 0xD622, 0xD614, 
-	0xD606, 0xD5FD, 0xD5F3, 0xD5E5, 0xD5D7, 0xD5C8, 0xD5BA, 0xD5AB, 0xD59C, 
-	0xD58D, 0xD57C, 0xD56B, 0xD55A, 0xD549, 0xD536, 0xD529, 0xD519, 0xD50B, 
-	0xD4FB, 0xD4EA, 0xD4D8, 0xD4C7, 0xD4B8, 0xD4A8, 0xD497, 0xD487, 0xD477, 
-	0xD465, 0xD453, 0xD445, 0xD43A, 0xD434, 0xD42B, 0xD420, 0xD413, 0xD406, 
-	0xD3F9, 0xD3EC, 0xD3DD, 0xD3D1, 0xD3C5, 0xD3B6, 0xD3AB, 0xD39D, 0xD38F, 
-	0xD381, 0xD373, 0xD365, 0xD359, 0xD34D, 0xD33E, 0xD330, 0xD322, 0xD314, 
-	0xD307, 0xD2FA, 0xD2EC, 0xD2DE, 0xD2D0, 0xD2C1, 0xD2BE, 0xD2BD, 0xD2BD, 
-	0xD2BB, 0xD2BB, 0xD2BA, 0xD2B8, 0xD2B7, 0xD2B7, 0xD2B6, 0xD2B4, 0xD2B3, 
-	0xD2B2, 0xD2B1, 0xD2AF, 0xD2AE, 0xD2AC, 0xD2AA, 0xD2A9, 0xD2A7, 0xD2A6, 
-	0xD2A4, 0xD2A2, 0xD29F, 0xD29E, 0xD29D, 0xD29B, 0xD29B, 0xD29B, 0xD29A, 
-	0xD298, 0xD298, 0xD298, 0xD296, 0xD294, 0xD293, 0xD292, 0xD291, 0xD28F, 
-	0xD28E, 0xD28C, 0xD28A, 0xD289, 0xD288, 0x2FED, 0xFA99, 0xFE75, 0xFC48, 
-	0xF647, 0xF37A, 0xF12C, 0xEFD4, 0xF004, 0xF49E, 0x06C4, 0x1AA9, 0x59BB, 
-	0x15B5, 0x0025, 0xF81D, 0xF946, 0xFA9A, 0xEE78, 0xEEEC, 0xEE71, 0xED76, 
-	0xED5F, 0xEE10, 0xF03D, 0xF4EE, 0xF95B, 0xFB93, 0xFDD5, 0xFFA4, 0x0155, 
-	0x046A, 0x078D, 0x0AE1, 0x0EAE, 0x1213, 0x1550, 0x1800, 0x680E, 0x6852, 
-	0x6AC0, 0x6CC7, 0x6E06, 0x6EC2, 0x6EE0, 0x6EA4, 0x6E42, 0x6E1E, 0x6E24, 
-	0x6DFD, 0x6B85, 0x69C3, 0x68AA, 0x682C, 0x682F, 0x6864, 0x68B0, 0x6901, 
-	0x6946, 0x6984, 0x69BF, 0x69FA, 0x6A35, 0x6A71, 0x6AAD, 0x6AEB, 0x6B2A, 
-	0x6B6A, 0x6BAC, 0x6BEF, 0x6C34, 0x6C7B, 0x6CC4, 0x6D08, 0x6D4B, 0x6D8F, 
-	0x6DAC, 0x6DBD, 0x6DCB, 0x6DD7, 0x6DDE, 0x6DE5, 0x6DEB, 0x6DB7, 0x6DB2, 
-	0x6DBB, 0x6DC7, 0x6DD0, 0x6DD4, 0x6DD8, 0x6DDC, 0x6DDF, 0x6DE1, 0x6DE4, 
-	0x6DE6, 0x6DE8, 0x6DEA, 0x6DEB, 0x6DEC, 0x6DEC, 0x6DEC, 0x6DED, 0x6DED, 
-	0x6DEE, 0x6DEE, 0x6DEE, 0x6DEE, 0x6DEE, 0x6DEE, 0x6DED, 0x6DED, 0x6DED, 
-	0x6DEE, 0x6DEE, 0x6DED, 0x6DEC, 0x6DEA, 0x6DED, 0x6DED, 0x6DED, 0x6DEB, 
-	0x6DE9, 0x6DE8, 0x6DE7, 0x6DE5, 0x6DE3, 0x6DE2, 0x6DE0, 0x6DDE, 0x6DDC, 
-	0x6DDA, 0x6DD8, 0x6DD5, 0x6DD2, 0x6DD0, 0x6DCE, 0x6DCB, 0x6DC8, 0x6DC5, 
-	0x6DC3, 0x6DC0, 0x6DBC, 0x6DB9, 0x6DB6, 0x6DB3, 0x6DB0, 0x6DAC, 0x6DAB, 
-	0x6DAB, 0x6DA8, 0x6DA3, 0x6DA0, 0x6D9C, 0x6D99, 0x6D95, 0x6D92, 0x6D8D, 
-	0x6D89, 0x6D85, 0x6D81, 0x6D7D, 0x6D78, 0x6D74, 0x6D71, 0x6D6E, 0x6D6A, 
-	0x6D66, 0x6D63, 0x6D61, 0x6D5E, 0x6D5A, 0x6D57, 0x6D54, 0x6D4F, 0x6D4C, 
-	0x6D48, 0x6D44, 0x6D44, 0x6D42, 0x6D3F, 0x6D3B, 0x6D38, 0x6D35, 0x6D31, 
-	0x6D2D, 0x6D27, 0x6D25, 0x6D21, 0x6D1C, 0x6D17, 0x6D14, 0x6D10, 0x6D0C, 
-	0x6D08, 0x6D03, 0x6CFE, 0x6CFA, 0x6CF6, 0x6CF2, 0x6CED, 0x6CE9, 0x6CE5, 
-	0x6CE2, 0x6CDF, 0x6CDA, 0x6CD5, 0x6CD6, 0x6CD9, 0x6CDB, 0x6CDC, 0x6CDD, 
-	0x6CDF, 0x6CE0, 0x6CE2, 0x6CE3, 0x6CE4, 0x6CE5, 0x6CE6, 0x6CE6, 0x6CE4, 
-	0x6CE3, 0x6CE1, 0x6CE0, 0x6CDE, 0x6CDD, 0x6CDC, 0x6CDB, 0x6CDA, 0x6CD9, 
-	0x6CD9, 0x6CDB, 0x6CDB, 0x6CDA, 0x6CDB, 0x6CDC, 0x6CDD, 0x6CDC, 0x6CDD, 
-	0x6CDE, 0x6CDF, 0x6CDE, 0x6CDE, 0x6CDC, 0x6CDC, 0x6CDA, 0x6CD9, 0x6CD8, 
-	0x6CD7, 0x6CD7, 0x6CD6, 0x410B, 0x3887, 0x2093, 0x2BD1, 0x3770, 0x39F2, 
-	0x32EC, 0x279F, 0x1B59, 0x08AC, 0xF0D7, 0xD6A2, 0x30FC, 0xA3EE, 0xB86C, 
-	0xC866, 0xD7C2, 0xEE2F, 0xFAC0, 0xFAFB, 0xFE8E, 0x073A, 0x0AB6, 0x0BD6, 
-	0x0EF6, 0x15AA, 0x1AA2, 0x1C7A, 0x1BC5, 0x1993, 0x184B, 0x17FC, 0x19B6, 
-	0x1DDB, 0x2432, 0x2E08, 0x3C7A, 0x4F98, 0xDE93, 0xE8CD, 0xEC32, 0xEE4F, 
-	0xF050, 0xF206, 0xF294, 0xF2BB, 0xF291, 0xF278, 0xF29D, 0xF27B, 0xF125, 
-	0xF03C, 0xEFB4, 0xEF8D, 0xEF9F, 0xEFCF, 0xF00D, 0xF03E, 0xF06A, 0xF093, 
-	0xF0BB, 0xF0E3, 0xF10A, 0xF133, 0xF15B, 0xF182, 0xF1AC, 0xF1D6, 0xF201, 
-	0xF22D, 0xF25A, 0xF288, 0xF2B5, 0xF2DC, 0xF308, 0xF333, 0xF345, 0xF353, 
-	0xF35E, 0xF368, 0xF36C, 0xF36E, 0xF373, 0xF351, 0xF34B, 0xF354, 0xF361, 
-	0xF366, 0xF369, 0xF36C, 0xF36F, 0xF371, 0xF371, 0xF374, 0xF375, 0xF376, 
-	0xF376, 0xF376, 0xF377, 0xF378, 0xF375, 0xF378, 0xF378, 0xF379, 0xF378, 
-	0xF377, 0xF375, 0xF377, 0xF378, 0xF376, 0xF375, 0xF372, 0xF372, 0xF370, 
-	0xF36E, 0xF36B, 0xF36B, 0xF36E, 0xF36D, 0xF36C, 0xF369, 0xF366, 0xF366, 
-	0xF364, 0xF362, 0xF363, 0xF361, 0xF35E, 0xF35C, 0xF35D, 0xF35B, 0xF359, 
-	0xF356, 0xF354, 0xF351, 0xF350, 0xF34E, 0xF34B, 0xF34B, 0xF349, 0xF347, 
-	0xF343, 0xF341, 0xF341, 0xF33D, 0xF339, 0xF336, 0xF337, 0xF337, 0xF336, 
-	0xF331, 0xF32D, 0xF32D, 0xF32B, 0xF32A, 0xF329, 0xF322, 0xF31C, 0xF319, 
-	0xF315, 0xF310, 0xF30E, 0xF30C, 0xF307, 0xF304, 0xF301, 0xF2FB, 0xF2F7, 
-	0xF2F4, 0xF2EF, 0xF2E9, 0xF2E7, 0xF2E1, 0xF2DB, 0xF2D5, 0xF2D5, 0xF2D5, 
-	0xF2D7, 0xF2D9, 0xF2DB, 0xF2DA, 0xF2DA, 0xF2DA, 0xF2DA, 0xF2D8, 0xF2D7, 
-	0xF2D8, 0xF2D7, 0xF2D9, 0xF2D8, 0xF2D9, 0xF2DA, 0xF2DB, 0xF2DA, 0xF2DC, 
-	0xF2DC, 0xF2DA, 0xF2DD, 0xF2DB, 0xF2DB, 0xF2DE, 0xF2DF, 0xF2E1, 0xF2E2, 
-	0xF2E1, 0xF2E0, 0xF2E7, 0xF2ED, 0xF2F4, 0xF2F9, 0xF300, 0xF305, 0xF30B, 
-	0xF310, 0xF316, 0xF31D, 0xF323, 0xF329, 0xF32F, 0xF335, 0xF33A, 0xF33F, 
-	0xF343, 0xF348, 0xF34D, 0xF352, 0xF357, 0xF35D, 0xF364, 0xF36A, 0xF372, 
-	0xF377, 0xF37D, 0xF385, 0xF38B, 0xF392, 0xF396, 0xF39B, 0xF3A1, 0xF3A8, 
-	0xF3AC, 0xF3B0, 0xF3B6, 0xF3BB, 0xF3C0, 0xF3C4, 0xF3C9, 0xF3CD, 0xF3D2, 
-	0xF3D7, 0x0B32, 0xF4B7, 0x3FA0, 0xCFDD, 0xDFF3, 0x2E03, 0x38BA, 0x4161, 
-	0x4E19, 0x59BA, 0x6462, 0x6F0D, 0x7DBA, 0x9A4B, 0xF63A, 0x0CC8, 0xFEB9, 
-	0xDEB1, 0xD7F8, 0xCF16, 0xB7B8, 0xA7B7, 0xA781, 0xA28E, 0x97B4, 0x9211, 
-	0x9228, 0x94B6, 0x92E1, 0x9298, 0x9356, 0x98A3, 0x9715, 0x94E1, 0x905C, 
-	0x8742, 0x7D6C, 0x7530, 0x6753, 0x593F, 0x4CE7, 0x49C4, 0x4AD4, 0x4B44, 
-	0x4ACA, 0x47B5, 0x4591, 0x455C, 0x4500, 0x441D, 0x41E1, 0x41CF, 0x4247, 
-	0x4689, 0x495B, 0x4B09, 0x4BAA, 0x4B7A, 0x4AEB, 0x4A33, 0x498F, 0x4904, 
-	0x4888, 0x4813, 0x47A0, 0x472E, 0x46BC, 0x464C, 0x45DC, 0x456C, 0x44FB, 
-	0x4488, 0x4413, 0x439D, 0x4324, 0x42AC, 0x423D, 0x41CC, 0x415E, 0x412E, 
-	0x4109, 0x40E9, 0x40CD, 0x40BA, 0x40AA, 0x4097, 0x40EC, 0x40F4, 0x40DC, 
-	0x40BE, 0x40AA, 0x409C, 0x408E, 0x4082, 0x4077, 0x406F, 0x4063, 0x405A, 
-	0x404F, 0x4048, 0x4040, 0x4039, 0x4032, 0x402D, 0x4024, 0x401D, 0x4017, 
-	0x4010, 0x400C, 0x4006, 0x4000, 0x3FFB, 0x3FF8, 0x3FF3, 0x3FF0, 0x3FE9, 
-	0x3FE5, 0x3FE3, 0x3FE1, 0x3FDE, 0x3FD3, 0x3FCF, 0x3FCB, 0x3FCA, 0x3FC9, 
-	0x3FC6, 0x3FC3, 0x3FC2, 0x3FBF, 0x3FBE, 0x3FBE, 0x3FBC, 0x3FB8, 0x3FB7, 
-	0x3FB7, 0x3FB9, 0x3FBA, 0x3FBA, 0x3FB9, 0x3FB8, 0x3FB9, 0x3FB9, 0x3FB9, 
-	0x3FB9, 0x3FBB, 0x3FBC, 0x3FBD, 0x3FBF, 0x3FC1, 0x3FC2, 0x3FBF, 0x3FBB, 
-	0x3FBB, 0x3FC1, 0x3FC4, 0x3FC3, 0x3FC5, 0x3FC7, 0x3FC7, 0x3FCF, 0x3FD5, 
-	0x3FD8, 0x3FDB, 0x3FE0, 0x3FE4, 0x3FE7, 0x3FEB, 0x3FED, 0x3FF1, 0x3FF6, 
-	0x3FFB, 0x3FFE, 0x4003, 0x4009, 0x400C, 0x4012, 0x401A, 0x4020, 0x4021, 
-	0x4020, 0x401C, 0x4017, 0x4015, 0x4015, 0x4014, 0x4013, 0x4012, 0x4012, 
-	0x4016, 0x4014, 0x4013, 0x4013, 0x4013, 0x4011, 0x400F, 0x400D, 0x400D, 
-	0x400D, 0x400D, 0x400D, 0x400A, 0x400C, 0x400C, 0x400A, 0x4007, 0x4004, 
-	0x4003, 0x4005, 0x4006, 0x3FFC, 0x3FF3, 0x3FEA, 0x3FE3, 0x3FD9, 0x3FD0, 
-	0x3FC9, 0x3FBF, 0x3FB7, 0x3FAE, 0x3FA7, 0x3F9F, 0x3F98, 0x3F94, 0x3F8F, 
-	0x3F8B, 0x3F87, 0x3F83, 0x3F7E, 0x3F79, 0x3F74, 0x3F6E, 0x3F67, 0x3F5F, 
-	0x3F54, 0x3F4D, 0x3F47, 0x3F3C, 0x3F35, 0x3F2C, 0x3F27, 0x3F21, 0x3F1A, 
-	0x3F10, 0x3F0C, 0x3F07, 0x3F01, 0x3EFC, 0x3EF7, 0x3EF2, 0x3EEE, 0x3EE9, 
-	0x3EE4, 0x3EDF, 0x3920, 0x21F8, 0x1709, 0x0B81, 0xFD51, 0xF727, 0xF728, 
-	0xFA83, 0x0051, 0x0E6E, 0x26C6, 0x3318, 0x20BA, 0x1E40, 0x0ABC, 0xFB0A, 
-	0x0375, 0x105C, 0x08CC, 0x1191, 0x1AD4, 0x18B5, 0x166A, 0x1655, 0x15D8, 
-	0x14AD, 0x157A, 0x1626, 0x163A, 0x1809, 0x1A70, 0x1D62, 0x1FFE, 0x236E, 
-	0x2679, 0x2609, 0x2045, 0x1A11, 0x18B6, 0x1C32, 0x1AE9, 0x199D, 0x1995, 
-	0x19B0, 0x19C8, 0x199B, 0x194E, 0x190B, 0x18EE, 0x18EB, 0x197F, 0x19CF, 
-	0x19FE, 0x1A18, 0x1A12, 0x1A09, 0x19FC, 0x19E2, 0x19C7, 0x19AC, 0x1990, 
-	0x1972, 0x1952, 0x1930, 0x190C, 0x18E6, 0x18BE, 0x1894, 0x1869, 0x183C, 
-	0x180D, 0x17DE, 0x17AA, 0x1771, 0x1739, 0x1705, 0x16EF, 0x16E3, 0x16DA, 
-	0x16D2, 0x16CA, 0x16C1, 0x16B7, 0x16B9, 0x16AD, 0x16A7, 0x169D, 0x1690, 
-	0x1686, 0x167B, 0x1672, 0x1669, 0x1662, 0x1659, 0x164F, 0x1646, 0x163E, 
-	0x1635, 0x162B, 0x1622, 0x161A, 0x1610, 0x1606, 0x15FD, 0x15F4, 0x15EB, 
-	0x15E2, 0x15D9, 0x15D1, 0x15C8, 0x15BE, 0x15B6, 0x15AD, 0x15A4, 0x159B, 
-	0x1592, 0x158B, 0x1585, 0x157C, 0x1573, 0x156B, 0x1562, 0x1559, 0x1550, 
-	0x1547, 0x153F, 0x1535, 0x152C, 0x1522, 0x1519, 0x1510, 0x1506, 0x14FD, 
-	0x14F6, 0x14EC, 0x14E3, 0x14D9, 0x14D0, 0x14C8, 0x14BE, 0x14B3, 0x14AA, 
-	0x14A0, 0x1498, 0x148E, 0x1484, 0x147B, 0x1473, 0x146A, 0x145F, 0x1458, 
-	0x144D, 0x1443, 0x1438, 0x142E, 0x1422, 0x1419, 0x140D, 0x1402, 0x13F7, 
-	0x13EB, 0x13E2, 0x13D7, 0x13CE, 0x13C3, 0x13B7, 0x13AC, 0x13A0, 0x1395, 
-	0x138B, 0x1380, 0x1375, 0x136A, 0x135F, 0x1354, 0x134A, 0x1342, 0x133C, 
-	0x1335, 0x132C, 0x1322, 0x1319, 0x130F, 0x1305, 0x12FB, 0x12F4, 0x12EA, 
-	0x12DF, 0x12D8, 0x12CD, 0x12C3, 0x12B8, 0x12AE, 0x12A3, 0x129B, 0x1292, 
-	0x1288, 0x127D, 0x1273, 0x126A, 0x1260, 0x1256, 0x124B, 0x1240, 0x1237, 
-	0x122D, 0x1227, 0x1222, 0x121E, 0x1219, 0x1216, 0x1211, 0x120C, 0x1208, 
-	0x1204, 0x1200, 0x11FC, 0x11F7, 0x11F4, 0x11F1, 0x11EE, 0x11EB, 0x11E8, 
-	0x11E5, 0x11E1, 0x11DE, 0x11DA, 0x11D6, 0x11D2, 0x11CB, 0x11C6, 0x11C3, 
-	0x11BE, 0x11BA, 0x11B8, 0x11B3, 0x11AF, 0x11AC, 0x11A9, 0x11A4, 0x11A1, 
-	0x119E, 0x119B, 0x1197, 0x1194, 0x1191, 0x118E, 0x118A, 0x1187, 0x1183, 
-	0xD6B6, 0xE3CB, 0x1F4A, 0x1C4B, 0x1127, 0x0807, 0x0000, 0xF818, 0xF131, 
-	0xEAFB, 0xF436, 0x4194, 0x49FE, 0x288F, 0x070F, 0x08BA, 0x0567, 0x00B7, 
-	0xF7C7, 0xFE9C, 0xFB7E, 0xF6C0, 0xF78F, 0xFA62, 0xFE0C, 0xFF1C, 0xFF6F, 
-	0xFEDD, 0x0163, 0x034D, 0x06FF, 0x0B1D, 0x0C8D, 0x0AE9, 0x0514, 0xF982, 
-	0xF359, 0xF1E1, 0xF3E5, 0xF64C, 0xF55C, 0xF536, 0xF3E1, 0xF3D5, 0xF49F, 
-	0xF5DB, 0xF73C, 0xF834, 0xF82C, 0xF880, 0xFBE1, 0xFE1A, 0xFF74, 0x0002, 
-	0xFFE5, 0xFF7C, 0xFEF1, 0xFE73, 0xFE0B, 0xFDB1, 0xFD5C, 0xFD0A, 0xFCB9, 
-	0xFC68, 0xFC19, 0xFBCB, 0xFB7D, 0xFB2F, 0xFADF, 0xFA8F, 0xFA3E, 0xF9EC, 
-	0xF99A, 0xF950, 0xF907, 0xF8BE, 0xF89C, 0xF883, 0xF86B, 0xF857, 0xF848, 
-	0xF839, 0xF82A, 0xF86B, 0xF872, 0xF860, 0xF84D, 0xF83F, 0xF834, 0xF82A, 
-	0xF821, 0xF818, 0xF80F, 0xF807, 0xF7FF, 0xF7F7, 0xF7EF, 0xF7E9, 0xF7E3, 
-	0xF7DE, 0xF7D8, 0xF7D2, 0xF7CD, 0xF7C7, 0xF7C2, 0xF7BD, 0xF7B7, 0xF7B3, 
-	0xF7B0, 0xF7AD, 0xF7A9, 0xF7A4, 0xF79F, 0xF79A, 0xF797, 0xF793, 0xF791, 
-	0xF78A, 0xF787, 0xF784, 0xF781, 0xF77F, 0xF77D, 0xF77A, 0xF778, 0xF779, 
-	0xF777, 0xF775, 0xF774, 0xF773, 0xF772, 0xF771, 0xF771, 0xF772, 0xF771, 
-	0xF772, 0xF771, 0xF772, 0xF774, 0xF774, 0xF774, 0xF775, 0xF775, 0xF778, 
-	0xF779, 0xF779, 0xF77A, 0xF779, 0xF778, 0xF779, 0xF77D, 0xF77E, 0xF781, 
-	0xF783, 0xF785, 0xF788, 0xF78B, 0xF78F, 0xF791, 0xF794, 0xF797, 0xF79C, 
-	0xF7A0, 0xF7A2, 0xF7A4, 0xF7A7, 0xF7AA, 0xF7AD, 0xF7B1, 0xF7B4, 0xF7B8, 
-	0xF7BC, 0xF7BE, 0xF7C3, 0xF7C7, 0xF7CB, 0xF7CB, 0xF7C9, 0xF7C9, 0xF7CC, 
-	0xF7CD, 0xF7CD, 0xF7CF, 0xF7D1, 0xF7D2, 0xF7D6, 0xF7D8, 0xF7D9, 0xF7DC, 
-	0xF7DF, 0xF7E0, 0xF7E2, 0xF7E3, 0xF7E5, 0xF7E8, 0xF7EC, 0xF7ED, 0xF7EF, 
-	0xF7F1, 0xF7F4, 0xF7F6, 0xF7F8, 0xF7F9, 0xF7FB, 0xF7FE, 0xF801, 0xF7FF, 
-	0xF7FC, 0xF7F9, 0xF7F8, 0xF7F5, 0xF7F2, 0xF7F0, 0xF7EE, 0xF7ED, 0xF7EB, 
-	0xF7EA, 0xF7E8, 0xF7E8, 0xF7EA, 0xF7EB, 0xF7EC, 0xF7EE, 0xF7EF, 0xF7F1, 
-	0xF7F1, 0xF7F3, 0xF7F4, 0xF7F5, 0xF7F4, 0xF7F2, 0xF7F1, 0xF7F1, 0xF7EF, 
-	0xF7EE, 0xF7ED, 0xF7EC, 0xF7EB, 0xF7EA, 0xF7E9, 0xF7E9, 0xF7E9, 0xF7EA, 
-	0xF7EA, 0xF7EB, 0xF7EC, 0xF7ED, 0xF7ED, 0xF7EE, 0xD3BB, 0xF8F5, 0xE801, 
-	0xD296, 0xABB1, 0x97D1, 0x95F5, 0x9B23, 0xA53C, 0xAEE6, 0xB680, 0xBD25, 
-	0xBB0D, 0xC823, 0xD3B9, 0xD690, 0xC327, 0xBA59, 0xB2BD, 0x33A4, 0x2DD9, 
-	0x2757, 0x22CA, 0xA04B, 0x9F4F, 0x1EA1, 0x2345, 0x2D32, 0x477D, 0x361E, 
-	0x2FD5, 0x2DE5, 0x2AAF, 0x29AD, 0x2DE5, 0x3104, 0x2B1B, 0x2A67, 0x31E1, 
-	0x4C2C, 0xEFC4, 0x056F, 0x0419, 0x058F, 0x046E, 0x0258, 0xF6AC, 0x2511, 
-	0x2768, 0x26DE, 0x22AD, 0x23C5, 0x259C, 0x26C0, 0x27F1, 0x2A88, 0x2CFD, 
-	0x2E3C, 0x2F0C, 0x2FA4, 0x301E, 0x3083, 0x30DA, 0x3124, 0x315F, 0x318F, 
-	0x31BB, 0x31E2, 0x3208, 0x322D, 0x3250, 0x3276, 0x3290, 0x3288, 0x3289, 
-	0x3294, 0x32AE, 0x32D3, 0x32FB, 0x3320, 0x333D, 0x3355, 0x3376, 0x336B, 
-	0x3361, 0x337E, 0x3393, 0x33A9, 0x33BF, 0x33D1, 0x33E6, 0x33FB, 0x3410, 
-	0x3424, 0x3439, 0x3449, 0x345C, 0x346D, 0x347F, 0x348E, 0x349E, 0x34AF, 
-	0x34BE, 0x34D0, 0x34E0, 0x34EF, 0x34FC, 0x350D, 0x351A, 0x3527, 0x3533, 
-	0x3541, 0x354C, 0x355B, 0x3568, 0x3574, 0x357D, 0x358A, 0x3590, 0x359B, 
-	0x35A6, 0x35AE, 0x35B5, 0x35BE, 0x35CA, 0x35CF, 0x35D9, 0x35E4, 0x35EC, 
-	0x35F5, 0x3600, 0x3607, 0x3610, 0x3616, 0x361E, 0x3622, 0x3628, 0x362F, 
-	0x3633, 0x363A, 0x3641, 0x3648, 0x3650, 0x3654, 0x365A, 0x3661, 0x3665, 
-	0x3671, 0x3675, 0x3678, 0x367F, 0x3683, 0x3683, 0x368B, 0x3691, 0x3694, 
-	0x369B, 0x369B, 0x369F, 0x36A4, 0x36A7, 0x36A8, 0x36A9, 0x36AE, 0x36B3, 
-	0x36B7, 0x36BA, 0x36BE, 0x36BF, 0x36C2, 0x36C4, 0x36C6, 0x36CA, 0x36CB, 
-	0x36CB, 0x36CE, 0x36D5, 0x36DE, 0x36E1, 0x36E2, 0x36E8, 0x36EF, 0x36F2, 
-	0x36F5, 0x36FA, 0x3700, 0x3703, 0x3706, 0x370A, 0x370E, 0x3712, 0x3716, 
-	0x371D, 0x3720, 0x3726, 0x3728, 0x372C, 0x3730, 0x3736, 0x373A, 0x373D, 
-	0x3741, 0x3745, 0x374A, 0x374F, 0x3751, 0x3757, 0x375D, 0x3764, 0x376A, 
-	0x376F, 0x3774, 0x377C, 0x3780, 0x3785, 0x378B, 0x3791, 0x3796, 0x379C, 
-	0x37A1, 0x37A5, 0x37A9, 0x37AD, 0x37B0, 0x37B4, 0x37B8, 0x37BB, 0x37BF, 
-	0x37C3, 0x37C6, 0x37CC, 0x37D4, 0x37D6, 0x37DD, 0x37E1, 0x37E6, 0x37ED, 
-	0x37F1, 0x37F5, 0x37F8, 0x37FE, 0x3805, 0x380A, 0x380E, 0x3812, 0x3816, 
-	0x381A, 0x381D, 0x3821, 0x3825, 0xE57F, 0x0133, 0xFFA1, 0xEB40, 0xE8D7, 
-	0xF6FF, 0x04FF, 0x11A9, 0x1C5B, 0x2042, 0x2105, 0x2021, 0x1CD0, 0x2864, 
-	0x2BB1, 0x2EA8, 0x2ED0, 0x2C25, 0x2A5E, 0x5997, 0x5AFA, 0x5CEA, 0x62DC, 
-	0x18CE, 0x1AB1, 0x59F4, 0x50CE, 0x4B19, 0x45EC, 0x472F, 0x4C1C, 0x5313, 
-	0x5AF4, 0x5FBB, 0x5E00, 0x5B78, 0x5997, 0x54E5, 0x4C6C, 0x4612, 0x3A8F, 
-	0x3A1E, 0x3A43, 0x3AB8, 0x3AFD, 0x3C09, 0x3DEF, 0x4196, 0x41A7, 0x41A1, 
-	0x4141, 0x411E, 0x410D, 0x4107, 0x4115, 0x413D, 0x4170, 0x419B, 0x41BF, 
-	0x41DF, 0x41FD, 0x421A, 0x4238, 0x4255, 0x4272, 0x428E, 0x42AB, 0x42C7, 
-	0x42E4, 0x4301, 0x431F, 0x433E, 0x435B, 0x4374, 0x438D, 0x43A6, 0x43B5, 
-	0x43C3, 0x43D1, 0x43DE, 0x43EA, 0x43F5, 0x4403, 0x4402, 0x4406, 0x4410, 
-	0x4419, 0x4425, 0x4430, 0x443C, 0x4447, 0x4453, 0x445D, 0x4469, 0x4474, 
-	0x447F, 0x448A, 0x4495, 0x44A0, 0x44AB, 0x44B6, 0x44C2, 0x44CE, 0x44D8, 
-	0x44E3, 0x44EE, 0x44F9, 0x4505, 0x450F, 0x451A, 0x4524, 0x452E, 0x4539, 
-	0x4544, 0x454F, 0x4559, 0x4562, 0x456B, 0x4575, 0x457F, 0x4589, 0x4592, 
-	0x459D, 0x45A8, 0x45B1, 0x45BB, 0x45C6, 0x45D0, 0x45DA, 0x45E5, 0x45EF, 
-	0x45F9, 0x4602, 0x460A, 0x4614, 0x461E, 0x4628, 0x4631, 0x463A, 0x4644, 
-	0x464E, 0x4659, 0x4662, 0x466A, 0x4674, 0x467D, 0x4687, 0x4690, 0x469A, 
-	0x46A4, 0x46AB, 0x46B5, 0x46BE, 0x46C9, 0x46D3, 0x46DD, 0x46E5, 0x46EE, 
-	0x46F8, 0x4703, 0x470D, 0x4715, 0x471E, 0x4726, 0x4730, 0x473A, 0x4744, 
-	0x474E, 0x4756, 0x4760, 0x4768, 0x4771, 0x477B, 0x4782, 0x478B, 0x4795, 
-	0x479D, 0x47A4, 0x47AE, 0x47B6, 0x47BF, 0x47C9, 0x47D1, 0x47DB, 0x47E5, 
-	0x47EB, 0x47F4, 0x47FE, 0x4806, 0x480F, 0x4819, 0x4824, 0x482E, 0x4837, 
-	0x483F, 0x4847, 0x4851, 0x485C, 0x4863, 0x486C, 0x4876, 0x4880, 0x488B, 
-	0x4895, 0x489C, 0x48A6, 0x48AF, 0x48B5, 0x48BC, 0x48C2, 0x48C9, 0x48D0, 
-	0x48D7, 0x48DF, 0x48E5, 0x48EB, 0x48F2, 0x48F8, 0x48FD, 0x4902, 0x4906, 
-	0x490A, 0x490E, 0x4913, 0x4917, 0x491B, 0x4920, 0x4925, 0x492B, 0x4931, 
-	0x493A, 0x493F, 0x4945, 0x494D, 0x4952, 0x4958, 0x495E, 0x4963, 0x4968, 
-	0x496F, 0x4975, 0x497A, 0x497F, 0x4984, 0x4989, 0x498E, 0x4992, 0x4997, 
-	0x499C, 0x49A0, 0xEEE0, 0xF8EB, 0xE9B5, 0xE9D6, 0xFF6A, 0x0B34, 0x0ED3, 
-	0x1415, 0x1D85, 0x2404, 0x2608, 0x2248, 0x1DE9, 0x32AC, 0x42EF, 0x49C9, 
-	0x3D4B, 0x3BC7, 0x45AF, 0xD3C6, 0xD24A, 0xCD0F, 0xC80D, 0x42C5, 0x3F5C, 
-	0xBF5F, 0xC388, 0xCC82, 0xE5C5, 0xD480, 0xCFE0, 0xCF20, 0xCDC0, 0xCF0D, 
-	0xD3D4, 0xD834, 0xD705, 0xD750, 0xDF4F, 0xFB7D, 0x9F3A, 0xB4F6, 0xB3A0, 
-	0xB51B, 0xB3F5, 0xB164, 0xA544, 0xD396, 0xD5DF, 0xD555, 0xD151, 0xD291, 
-	0xD486, 0xD5B9, 0xD6E6, 0xD976, 0xDBDF, 0xDD11, 0xDDD7, 0xDE64, 0xDED4, 
-	0xDF2F, 0xDF7C, 0xDFBC, 0xDFEC, 0xE011, 0xE032, 0xE04E, 0xE06A, 0xE083, 
-	0xE09B, 0xE0B7, 0xE0C5, 0xE0B0, 0xE0A7, 0xE0A7, 0xE0BE, 0xE0E1, 0xE108, 
-	0xE12B, 0xE147, 0xE15C, 0xE17C, 0xE16F, 0xE163, 0xE17F, 0xE192, 0xE1A5, 
-	0xE1BA, 0xE1C9, 0xE1DD, 0xE1F0, 0xE203, 0xE216, 0xE228, 0xE237, 0xE248, 
-	0xE257, 0xE267, 0xE274, 0xE282, 0xE291, 0xE29E, 0xE2AE, 0xE2BC, 0xE2C9, 
-	0xE2D4, 0xE2E4, 0xE2EF, 0xE2FA, 0xE305, 0xE310, 0xE319, 0xE327, 0xE331, 
-	0xE33C, 0xE343, 0xE34F, 0xE353, 0xE35D, 0xE366, 0xE36C, 0xE371, 0xE378, 
-	0xE382, 0xE385, 0xE38E, 0xE397, 0xE39D, 0xE3A4, 0xE3AD, 0xE3B2, 0xE3B9, 
-	0xE3BE, 0xE3C3, 0xE3C6, 0xE3C9, 0xE3CF, 0xE3D1, 0xE3D7, 0xE3DB, 0xE3E1, 
-	0xE3E6, 0xE3E8, 0xE3ED, 0xE3F1, 0xE3F3, 0xE3FE, 0xE400, 0xE402, 0xE406, 
-	0xE408, 0xE407, 0xE40D, 0xE410, 0xE412, 0xE416, 0xE414, 0xE416, 0xE418, 
-	0xE419, 0xE418, 0xE417, 0xE41A, 0xE41D, 0xE41F, 0xE420, 0xE421, 0xE420, 
-	0xE421, 0xE420, 0xE421, 0xE422, 0xE421, 0xE41F, 0xE420, 0xE425, 0xE42D, 
-	0xE42F, 0xE42F, 0xE433, 0xE438, 0xE43A, 0xE43B, 0xE43E, 0xE443, 0xE444, 
-	0xE446, 0xE449, 0xE44B, 0xE44D, 0xE450, 0xE455, 0xE456, 0xE45B, 0xE45B, 
-	0xE45D, 0xE460, 0xE464, 0xE466, 0xE467, 0xE46A, 0xE46C, 0xE470, 0xE472, 
-	0xE474, 0xE479, 0xE47E, 0xE485, 0xE48B, 0xE490, 0xE494, 0xE49C, 0xE4A0, 
-	0xE4A5, 0xE4AB, 0xE4B1, 0xE4B5, 0xE4BB, 0xE4C0, 0xE4C4, 0xE4C8, 0xE4CB, 
-	0xE4CE, 0xE4D2, 0xE4D6, 0xE4D9, 0xE4DC, 0xE4E0, 0xE4E3, 0xE4E9, 0xE4F0, 
-	0xE4F2, 0xE4F9, 0xE4FD, 0xE502, 0xE508, 0xE50C, 0xE510, 0xE513, 0xE519, 
-	0xE51F, 0xE524, 0xE529, 0xE52D, 0xE530, 0xE534, 0xE537, 0xE53B, 0xE53E, 
-	0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 
-	0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 
-	0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 
-	0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 
-	0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 
-	0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 
-	0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 
-	0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 
-	0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 
-	0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 
-	0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 
-	0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 
-	0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 
-	0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 
-	0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 
-	0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 
-	0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 
-	0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 
-	0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 
-	0xFFFF, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 
-	0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
-	0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 
-	0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 
-	0xFFFF, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0000, 
-	0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x1B6E, 
-	0xB65A, 0xCA7C, 0xDC76, 0xEE55, 0x03E6, 0xA1FD, 0xC23E, 0xE123, 0xED94, 
-	0x0B2A, 0x2000, 0xB074, 0xC261, 0x004C, 0xF943, 0xFE52, 0x0804, 0x0BEC, 
-	0x0E94, 0x10DD, 0x163E, 0x1D69, 0x242F, 0x2A59, 0x3044, 0x3675, 0x3E16, 
-	0x4856, 0x5259, 0xE020, 0xED81, 0xF935, 0x01E3, 0x0774, 0x0BA2, 0x0D31, 
-	0x0EA6, 0x0D47, 0x0AD0, 0x0722, 0x0330, 0xFF51, 0xF77E, 0xEE0F, 0xE3F7, 
-	0xDA5A, 0xD185, 0xCB71, 0xC8B9, 0xC89D, 0xC905, 0xC999, 0xCA2E, 0xCAD4, 
-	0xCB7C, 0xCC62, 0xCDD4, 0xCFCA, 0xD23B, 0xD518, 0xD84F, 0xDBC6, 0xDF5F, 
-	0xE2F5, 0xE661, 0xE976, 0xEC0D, 0xEE05, 0xEF47, 0xEFC1, 0xEF6C, 0xEE45, 
-	0xEC62, 0xE9DA, 0xE6D1, 0xE370, 0xDFDD, 0xDC41, 0xD8C3, 0xD583, 0xD29B, 
-	0xD01B, 0xCE10, 0xCD0A, 0xCD28, 0xCD9A, 0xCE85, 0xCFE4, 0xD1AF, 0xD3DB, 
-	0xD659, 0xD914, 0xDBF7, 0xDEE4, 0xE1BB, 0xE45A, 0xE6A2, 0xE876, 0xE9BD, 
-	0xEA68, 0xEA6D, 0xE9CE, 0xE892, 0xE6C9, 0xE48A, 0xE1F2, 0xDF23, 0xDC3C, 
-	0xD95D, 0xD6A4, 0xD427, 0xD1F9, 0xD029, 0xCEC2, 0xCDD1, 0xCDDA, 0xCE3C, 
-	0xCF0C, 0xD046, 0xD1E1, 0xD3D4, 0xD611, 0xD884, 0xDB19, 0xDDB6, 0xE03D, 
-	0xE292, 0xE498, 0xE634, 0xE752, 0xE7E3, 0xE7E0, 0xE749, 0xE625, 0xE484, 
-	0xE27B, 0xE025, 0xDD9E, 0xDB04, 0xD873, 0xD605, 0xD3CF, 0xD1E3, 0xD04C, 
-	0xCF16, 0xCE9D, 0xCED5, 0xCF6C, 0xD062, 0xD1B4, 0xD357, 0xD53F, 0xD75B, 
-	0xD99B, 0xDBE5, 0xDE21, 0xE039, 0xE20E, 0xE38C, 0xE49F, 0xE53A, 0xE551, 
-	0xE4E5, 0xE3F8, 0xE29B, 0xE0E1, 0xDEDC, 0xDCA6, 0xDA5A, 0xD811, 0xD5E2, 
-	0xD3E0, 0xD21D, 0xD0A8, 0xCF8A, 0xCF56, 0xCFA3, 0xD047, 0xD13C, 0xD27D, 
-	0xD3FE, 0xD5B3, 0xD78E, 0xD97B, 0xDB67, 0xDD3C, 0xDEE4, 0xE04A, 0xE15C, 
-	0xE20A, 0xE24D, 0xE220, 0xE187, 0xE089, 0xDF32, 0xDD93, 0xDBC2, 0xD9D4, 
-	0xD7DF, 0xD5F7, 0xD42F, 0xD296, 0xD139, 0xD023, 0xCF7A, 0xCFB2, 0xD039, 
-	0xD109, 0xD21D, 0xD36D, 0xD4ED, 0xD690, 0xD843, 0xD9F7, 0xDB99, 0xDD15, 
-	0xDE5A, 0xDF56, 0xDFFF, 0xE04A, 0xE036, 0xDFC3, 0xDEF8, 0xDDDF, 0xDC86, 
-	0xDAFF, 0xD95D, 0xD7B1, 0xD60E, 0xD484, 0xD321, 0xD1F3, 0xD102, 0xD054, 
-	0xCFEE, 0xCFD5, 0xD008, 0xD085, 0xD148, 0xD24B, 0xD385, 0xD4ED, 0xD674, 
-	0xD80C, 0xD9A5, 0xDB2D, 0xDC92, 0xDDC4, 0xFFFF, 0xEEE5, 0x94C8, 0x8D5F, 
-	0x8707, 0x81B2, 0x77E3, 0x0B50, 0x06ED, 0x03F5, 0x045F, 0x0960, 0x175D, 
-	0x583F, 0x4B3B, 0x4821, 0x4D6B, 0x5103, 0x4F98, 0x5302, 0x5890, 0x604D, 
-	0x693F, 0x7324, 0x7DE0, 0x8988, 0x94A0, 0x9E6A, 0xA680, 0xAD6C, 0xB034, 
-	0xCE8E, 0xCED9, 0xD02D, 0xD248, 0xD4A2, 0xD6D3, 0xD846, 0xD88F, 0xD98B, 
-	0xD9F3, 0xDA07, 0xDAFA, 0xDBE3, 0xDC83, 0xDD4F, 0xDE94, 0xE0D3, 0xE3A5, 
-	0xE52D, 0xE5A2, 0xE5CB, 0xE5AF, 0xE57D, 0xE532, 0xE4D9, 0xE480, 0xE418, 
-	0xE37A, 0xE2AD, 0xE1BC, 0xE0B6, 0xDFA9, 0xDEA5, 0xDDB7, 0xDCE7, 0xDC3C, 
-	0xDBB7, 0xDB56, 0xDB12, 0xDAE6, 0xDACE, 0xDAC6, 0xDAD1, 0xDAF4, 0xDB34, 
-	0xDB9E, 0xDC35, 0xDCF0, 0xDDCD, 0xDEC2, 0xDFC2, 0xE0BE, 0xE1A6, 0xE26C, 
-	0xE2E6, 0xE2DF, 0xE2AC, 0xE249, 0xE1BC, 0xE10C, 0xE043, 0xDF6D, 0xDE94, 
-	0xDDC5, 0xDD08, 0xDC65, 0xDBDE, 0xDB75, 0xDB29, 0xDAF7, 0xDADC, 0xDAD6, 
-	0xDAE6, 0xDB0E, 0xDB4F, 0xDBAC, 0xDC27, 0xDCBE, 0xDD6E, 0xDE31, 0xDEFE, 
-	0xDFCA, 0xE089, 0xE131, 0xE1B8, 0xE215, 0xE214, 0xE1E9, 0xE192, 0xE114, 
-	0xE077, 0xDFC2, 0xDF00, 0xDE3B, 0xDD7C, 0xDCCC, 0xDC32, 0xDBB1, 0xDB4B, 
-	0xDAFF, 0xDACC, 0xDAB0, 0xDAAB, 0xDABC, 0xDAE5, 0xDB27, 0xDB83, 0xDBF9, 
-	0xDC88, 0xDD2C, 0xDDDE, 0xDE96, 0xDF4A, 0xDFF1, 0xE080, 0xE0F1, 0xE121, 
-	0xE106, 0xE0C8, 0xE064, 0xDFE1, 0xDF48, 0xDE9F, 0xDDEF, 0xDD41, 0xDC9D, 
-	0xDC08, 0xDB89, 0xDB20, 0xDACE, 0xDA96, 0xDA75, 0xDA6B, 0xDA78, 0xDA9C, 
-	0xDAD7, 0xDB28, 0xDB91, 0xDC11, 0xDCA3, 0xDD41, 0xDDE5, 0xDE85, 0xDF19, 
-	0xDF9C, 0xE006, 0xE01E, 0xDFFD, 0xDFBB, 0xDF5D, 0xDEE7, 0xDE5F, 0xDDCD, 
-	0xDD37, 0xDCA4, 0xDC1C, 0xDBA2, 0xDB3B, 0xDAE8, 0xDAAC, 0xDA85, 0xDA73, 
-	0xDA78, 0xDA92, 0xDAC2, 0xDB09, 0xDB64, 0xDBD3, 0xDC51, 0xDCDB, 0xDD6C, 
-	0xDDFA, 0xDE81, 0xDEF8, 0xDF5A, 0xDF98, 0xDF83, 0xDF50, 0xDF03, 0xDEA1, 
-	0xDE2D, 0xDDAF, 0xDD2B, 0xDCAA, 0xDC31, 0xDBC3, 0xDB64, 0xDB18, 0xDAE0, 
-	0xDABC, 0xDAAC, 0xDAB1, 0xDAC9, 0xDAF6, 0xDB37, 0xDB8A, 0xDBEE, 0xDC5F, 
-	0xDCDA, 0xDD5A, 0xDDD8, 0xDE4F, 0xDEB9, 0xDF10, 0xDF51, 0xDF78, 0xDF82, 
-	0xDF6F, 0xDF41, 0xDEFA, 0xDE9F, 0xDE33, 0xDDBD, 0xDD43, 0xDCC9, 0xDC56, 
-	0xDBED, 0xDB93, 0xDB4A, 0x8000, 0x8615, 0xFF79, 0x0342, 0x0C67, 0x1D25, 
-	0x2B0A, 0xB87E, 0xBCA2, 0xB483, 0xAA34, 0x98D7, 0x8C34, 0x0397, 0x030B, 
-	0x2DD8, 0x244E, 0x2883, 0x269E, 0x2220, 0x1B8A, 0x1451, 0x0E9F, 0x0A11, 
-	0x0643, 0x02AB, 0x005B, 0xFEF5, 0xFC98, 0xF8AB, 0xF4E9, 0x6BEA, 0x6248, 
-	0x58FC, 0x51A0, 0x4C87, 0x47C6, 0x4805, 0x4A7D, 0x4D05, 0x4E2F, 0x4E8D, 
-	0x4EB7, 0x4F1D, 0x531E, 0x5818, 0x5D3E, 0x6160, 0x64A6, 0x6627, 0x6677, 
-	0x667C, 0x663E, 0x65E8, 0x6593, 0x6538, 0x64E5, 0x64B3, 0x6458, 0x63D1, 
-	0x6318, 0x6228, 0x6102, 0x5FAA, 0x5E2B, 0x5C98, 0x5B06, 0x5990, 0x5851, 
-	0x575E, 0x56C7, 0x5696, 0x56D0, 0x5774, 0x587A, 0x59D0, 0x5B5A, 0x5CFD, 
-	0x5EA7, 0x603E, 0x61AF, 0x62F0, 0x63F9, 0x64CB, 0x656E, 0x65CD, 0x65C5, 
-	0x65AD, 0x6571, 0x6511, 0x6487, 0x63D3, 0x62F4, 0x61ED, 0x60C5, 0x5F86, 
-	0x5E43, 0x5D0D, 0x5BF8, 0x5B17, 0x5A78, 0x5A27, 0x5A2B, 0x5A80, 0x5B23, 
-	0x5C0A, 0x5D26, 0x5E65, 0x5FB2, 0x60FB, 0x622F, 0x6344, 0x6432, 0x64F5, 
-	0x658F, 0x6602, 0x6650, 0x6651, 0x663A, 0x6604, 0x65AB, 0x652F, 0x648C, 
-	0x63C5, 0x62DB, 0x61D4, 0x60BC, 0x5FA1, 0x5E93, 0x5DA3, 0x5CE0, 0x5C58, 
-	0x5C16, 0x5C1C, 0x5C6D, 0x5D02, 0x5DD2, 0x5ED0, 0x5FEB, 0x6112, 0x6236, 
-	0x6348, 0x643E, 0x6510, 0x65BE, 0x6648, 0x66AD, 0x66DA, 0x66CD, 0x66A7, 
-	0x6663, 0x65FF, 0x657A, 0x64D4, 0x6411, 0x6333, 0x6247, 0x6156, 0x606B, 
-	0x5F99, 0x5EEC, 0x5E6F, 0x5E2A, 0x5E25, 0x5E62, 0x5EDD, 0x5F8C, 0x6063, 
-	0x6157, 0x625A, 0x635D, 0x6453, 0x6534, 0x65F9, 0x669E, 0x6721, 0x6782, 
-	0x679B, 0x6789, 0x675E, 0x6716, 0x66B3, 0x6634, 0x659C, 0x64EE, 0x6430, 
-	0x6369, 0x62A6, 0x61F0, 0x6152, 0x60DB, 0x6090, 0x6079, 0x6096, 0x60E6, 
-	0x6164, 0x6209, 0x62CC, 0x63A0, 0x6478, 0x654C, 0x6611, 0x66C2, 0x675B, 
-	0x67D9, 0x683A, 0x6875, 0x6864, 0x683A, 0x67F9, 0x679D, 0x6729, 0x669F, 
-	0x6601, 0x6556, 0x64A4, 0x63F3, 0x634D, 0x62BD, 0x624A, 0x61FD, 0x61DA, 
-	0x61E3, 0x6218, 0x6275, 0x62F4, 0x638C, 0x6434, 0x64E3, 0x658F, 0x6632, 
-	0x66C4, 0x6743, 0x67AA, 0x67FA, 0x6833, 0x6853, 0x685A, 0x684A, 0x6823, 
-	0x67E4, 0x678D, 0x6720, 0x669F, 0x660C, 0x656C, 0x64C6, 0x6422, 0x6388, 
-	0x6301, 0x0000, 0xD7F9, 0x2561, 0x16BD, 0x913A, 0x80B0, 0x7023, 0x585D, 
-	0x419F, 0x2579, 0x1653, 0xFC67, 0xDB5C, 0xC402, 0xAD83, 0x831C, 0x7C65, 
-	0x7C53, 0x7125, 0x6A6D, 0x6757, 0x6634, 0x64FB, 0x5DFE, 0x5729, 0x51C8, 
-	0x4D91, 0x4936, 0x4273, 0x3BD1, 0x353A, 0x2F92, 0x2BAC, 0x289E, 0x2693, 
-	0x2562, 0x2525, 0x22AE, 0x2066, 0x2130, 0x21C0, 0x23D8, 0x25CB, 0x27A1, 
-	0x2B84, 0x3170, 0x38A2, 0x4037, 0x47D5, 0x4CE4, 0x4F0C, 0x4F25, 0x4ED5, 
-	0x4E5E, 0x4DDA, 0x4D47, 0x4CAC, 0x4BCD, 0x4A6E, 0x489A, 0x465E, 0x43D2, 
-	0x4111, 0x3E3B, 0x3B70, 0x38CF, 0x3670, 0x346A, 0x32C8, 0x3196, 0x30D7, 
-	0x308F, 0x30C0, 0x316C, 0x328A, 0x3416, 0x3605, 0x3849, 0x3AD1, 0x3D84, 
-	0x4046, 0x42F4, 0x4571, 0x47A5, 0x4978, 0x4A63, 0x4A48, 0x49D9, 0x48FC, 
-	0x47B8, 0x4619, 0x442E, 0x420B, 0x3FC8, 0x3D7D, 0x3B44, 0x3934, 0x3760, 
-	0x35D9, 0x34AA, 0x33D9, 0x336B, 0x3367, 0x33C6, 0x3489, 0x35AA, 0x3721, 
-	0x38E4, 0x3AE2, 0x3D08, 0x3F3F, 0x4170, 0x4382, 0x455F, 0x46F3, 0x4831, 
-	0x4905, 0x48FB, 0x489C, 0x47DA, 0x46BB, 0x454A, 0x4395, 0x41AD, 0x3FA9, 
-	0x3D9D, 0x3BA0, 0x39C7, 0x3824, 0x36C4, 0x35B4, 0x34FA, 0x349C, 0x349B, 
-	0x34F7, 0x35AD, 0x36B8, 0x3810, 0x39AA, 0x3B76, 0x3D63, 0x3F5C, 0x414C, 
-	0x431E, 0x44BE, 0x461B, 0x4728, 0x478F, 0x4758, 0x46CB, 0x45E9, 0x44BB, 
-	0x434C, 0x41AC, 0x3FED, 0x3E22, 0x3C5F, 0x3AB7, 0x3938, 0x37F2, 0x36F0, 
-	0x3639, 0x35D2, 0x35BF, 0x35FF, 0x3691, 0x3770, 0x3895, 0x39F6, 0x3B86, 
-	0x3D35, 0x3EF0, 0x40A7, 0x4246, 0x43BB, 0x44F5, 0x45E9, 0x4613, 0x45C9, 
-	0x4534, 0x4459, 0x4341, 0x41F8, 0x408B, 0x3F0B, 0x3D88, 0x3C13, 0x3AB9, 
-	0x3989, 0x388F, 0x37D1, 0x3758, 0x3727, 0x373E, 0x379E, 0x3842, 0x3925, 
-	0x3A3F, 0x3B85, 0x3CEB, 0x3E62, 0x3FDA, 0x4143, 0x428E, 0x43AD, 0x4493, 
-	0x4524, 0x44F2, 0x447C, 0x43C8, 0x42DD, 0x41C3, 0x4089, 0x3F3B, 0x3DE8, 
-	0x3C9E, 0x3B6A, 0x3A59, 0x3976, 0x38C7, 0x3854, 0x3820, 0x382D, 0x387A, 
-	0x3903, 0x39C5, 0x3AB7, 0x3BD1, 0x3D07, 0x3E4C, 0x3F93, 0x40CF, 0x41F1, 
-	0x42ED, 0x43BA, 0x444F, 0x44A5, 0x44BB, 0x448E, 0x4421, 0x437A, 0x429E, 
-	0x4198, 0x4071, 0x3F38, 0x3DF9, 0x3CC2, 0x3B9F, 0x3A9D, 0x39C4, 0x0000, 
-	0x1C49, 0x5AC0, 0x65CF, 0x0BFA, 0xF86F, 0xF0F1, 0xF7B5, 0x051B, 0x0CAE, 
-	0x07E8, 0x14C0, 0x13E9, 0x1586, 0x2181, 0x1E44, 0x0D99, 0x038D, 0x08CD, 
-	0x0A9E, 0x0A16, 0x06E1, 0x03B8, 0x0054, 0xFE67, 0xFE90, 0x0375, 0x0B6B, 
-	0x121D, 0x1167, 0x0E22, 0x09EB, 0x05C7, 0x01F2, 0xFE9A, 0xFB0E, 0xF6AA, 
-	0xF55B, 0xF631, 0xF611, 0xF5C7, 0xF518, 0xF343, 0xF142, 0xEE52, 0xEC51, 
-	0xEB89, 0xEB0C, 0xEBE8, 0xED1F, 0xEDA4, 0xEDA9, 0xED62, 0xECFC, 0xEC93, 
-	0xEC2A, 0xEBD3, 0xEBB1, 0xEB7F, 0xEB4A, 0xEB21, 0xEB13, 0xEB2A, 0xEB6D, 
-	0xEBDA, 0xEC6A, 0xED11, 0xEDBD, 0xEE5D, 0xEEE0, 0xEF3A, 0xEF63, 0xEF58, 
-	0xEF19, 0xEEB0, 0xEE28, 0xED8C, 0xECEF, 0xEC65, 0xEBF9, 0xEBB5, 0xEB9B, 
-	0xEBA5, 0xEBCB, 0xEC00, 0xEC32, 0xEC28, 0xEC1C, 0xEC04, 0xEBE6, 0xEBCB, 
-	0xEBBC, 0xEBC3, 0xEBE4, 0xEC21, 0xEC79, 0xECE3, 0xED57, 0xEDC8, 0xEE2B, 
-	0xEE75, 0xEE9D, 0xEEA6, 0xEE87, 0xEE48, 0xEDEF, 0xED87, 0xED1A, 0xECB5, 
-	0xEC61, 0xEC24, 0xEC02, 0xEBFA, 0xEC06, 0xEC1F, 0xEC3D, 0xEC59, 0xEC5A, 
-	0xEC52, 0xEC41, 0xEC2E, 0xEC1E, 0xEC18, 0xEC24, 0xEC46, 0xEC7F, 0xECCC, 
-	0xED28, 0xED8C, 0xEDEC, 0xEE40, 0xEE7E, 0xEEA1, 0xEEA6, 0xEE8C, 0xEE57, 
-	0xEE0C, 0xEDB5, 0xED5A, 0xED05, 0xECBE, 0xEC89, 0xEC6A, 0xEC5F, 0xEC65, 
-	0xEC75, 0xEC88, 0xEC94, 0xEC92, 0xEC8B, 0xEC83, 0xEC7D, 0xEC7F, 0xEC8E, 
-	0xECAD, 0xECDF, 0xED21, 0xED70, 0xEDC5, 0xEE19, 0xEE65, 0xEE9F, 0xEEC2, 
-	0xEECD, 0xEEBE, 0xEE97, 0xEE5D, 0xEE18, 0xEDCD, 0xED84, 0xED44, 0xED13, 
-	0xECF2, 0xECE3, 0xECE1, 0xECE8, 0xECF3, 0xECF9, 0xECF9, 0xECF7, 0xECF5, 
-	0xECF9, 0xED04, 0xED1B, 0xED3F, 0xED6F, 0xEDAA, 0xEDEB, 0xEE2E, 0xEE6B, 
-	0xEE9E, 0xEEC2, 0xEED3, 0xEED1, 0xEEBB, 0xEE95, 0xEE62, 0xEE28, 0xEDEE, 
-	0xEDB9, 0xED8C, 0xED6A, 0xED55, 0xED4C, 0xED4B, 0xED4E, 0xED57, 0xED56, 
-	0xED55, 0xED54, 0xED57, 0xED60, 0xED72, 0xED8D, 0xEDB2, 0xEDDF, 0xEE12, 
-	0xEE45, 0xEE75, 0xEE9D, 0xEEB9, 0xEEC6, 0xEEC3, 0xEEB0, 0xEE8F, 0xEE64, 
-	0xEE33, 0xEE00, 0xEDCF, 0xEDA5, 0xED84, 0xED6C, 0xED5C, 0xED55, 0xED53, 
-	0xED53, 0xED54, 0xED55, 0xED54, 0xED53, 0xED53, 0xED57, 0xED60, 0xED71, 
-	0xED8B, 0xEDAE, 0xEDD8, 0xEE07, 0xEE36, 0xEE63, 0x0000, 0xE593, 0x39E4, 
-	0x2D47, 0xC269, 0xDABA, 0xF169, 0x0910, 0x13FA, 0x14E4, 0x1D29, 0x1E5A, 
-	0x1C1C, 0x243B, 0x1DFE, 0x015A, 0xF94E, 0xF8EF, 0xF572, 0xF5F3, 0xF73B, 
-	0xF8CC, 0xFC7A, 0xFFF7, 0x039C, 0x0740, 0x0902, 0x06FF, 0xFF11, 0xFFC1, 
-	0xFE10, 0xFDD6, 0x0050, 0x044E, 0x09BB, 0x1048, 0x17DE, 0x19D1, 0x17A5, 
-	0x160B, 0x162A, 0x17A4, 0x1953, 0x1A36, 0x166E, 0x1048, 0x0911, 0x01D9, 
-	0xFA7E, 0xF74B, 0xF6C7, 0xF69D, 0xF70F, 0xF7BB, 0xF88B, 0xF972, 0xFA57, 
-	0xFB2F, 0xFC81, 0xFE45, 0x006F, 0x02E7, 0x0592, 0x0851, 0x0B06, 0x0D91, 
-	0x0FDA, 0x11CD, 0x135E, 0x1482, 0x1536, 0x1577, 0x1546, 0x14A4, 0x1392, 
-	0x1215, 0x1037, 0x0E08, 0x0B98, 0x08FC, 0x0653, 0x03BA, 0x0151, 0xFF31, 
-	0xFD6E, 0xFC61, 0xFC76, 0xFCE1, 0xFDB6, 0xFEED, 0x007E, 0x0256, 0x0464, 
-	0x0691, 0x08C6, 0x0AE9, 0x0CE4, 0x0EA5, 0x101C, 0x1140, 0x1207, 0x1271, 
-	0x1277, 0x121D, 0x1164, 0x1051, 0x0EEB, 0x0D3C, 0x0B55, 0x0947, 0x0728, 
-	0x050E, 0x0313, 0x0149, 0xFFC5, 0xFE95, 0xFDC7, 0xFDC9, 0xFE24, 0xFEDF, 
-	0xFFF3, 0x0157, 0x02FB, 0x04CF, 0x06BE, 0x08B5, 0x0A9C, 0x0C61, 0x0DF3, 
-	0x0F44, 0x1049, 0x10FB, 0x1157, 0x115B, 0x1106, 0x105B, 0x0F5F, 0x0E1B, 
-	0x0C98, 0x0AE4, 0x0910, 0x0731, 0x055B, 0x03A1, 0x0217, 0x00CD, 0xFFCF, 
-	0xFF64, 0xFF9B, 0x0022, 0x00FB, 0x021C, 0x037B, 0x0509, 0x06B4, 0x086A, 
-	0x0A18, 0x0BAC, 0x0D19, 0x0E50, 0x0F46, 0x0FF6, 0x1058, 0x106C, 0x1030, 
-	0x0FA6, 0x0ED5, 0x0DC2, 0x0C76, 0x0AFC, 0x0965, 0x07C2, 0x0621, 0x0499, 
-	0x0339, 0x020E, 0x0123, 0x00EE, 0x0134, 0x01C1, 0x0290, 0x0399, 0x04D0, 
-	0x0628, 0x0792, 0x08FE, 0x0A5E, 0x0BA3, 0x0CC1, 0x0DAC, 0x0E5D, 0x0ECF, 
-	0x0EFD, 0x0EE7, 0x0E8E, 0x0DF4, 0x0D20, 0x0C17, 0x0AE6, 0x0996, 0x0836, 
-	0x06D5, 0x0582, 0x044B, 0x033E, 0x0266, 0x01DB, 0x0209, 0x0278, 0x0321, 
-	0x03FE, 0x0505, 0x062B, 0x0763, 0x08A1, 0x09D6, 0x0AF5, 0x0BF5, 0x0CCA, 
-	0x0D6D, 0x0DD9, 0x0E0B, 0x0DFF, 0x0DB9, 0x0D39, 0x0C85, 0x0BA3, 0x0A9C, 
-	0x097B, 0x084A, 0x0718, 0x05F0, 0x04E0, 0x03F3, 0x0333, 0x02A7, 0x0255, 
-	0x0241, 0x026A, 0x02CF, 0x036C, 0x043A, 0x0530, 0x0644, 0x0769, 0x0894, 
-	0x09B7, 0x0AC7, 0x0BB9, 0x0C83, 0x0000, 0xEF63, 0xE7FE, 0xCA7C, 0x2371, 
-	0x3CB6, 0x4819, 0x5063, 0x582F, 0x6694, 0x758B, 0x65FC, 0x6203, 0x6268, 
-	0x6917, 0x739D, 0x7B5A, 0x8230, 0x8F3C, 0xDFE4, 0xEF3B, 0xF32A, 0xF394, 
-	0xF181, 0xF1E0, 0xF1A9, 0xF009, 0xEDFD, 0xEB09, 0xE463, 0xDB6B, 0xD29C, 
-	0xCF31, 0xCC11, 0xC991, 0xC7C9, 0xCB23, 0xCB19, 0xC9F7, 0xCAB4, 0xCC25, 
-	0xCECC, 0xD195, 0xD3ED, 0xD463, 0xD430, 0xD3DF, 0xD3F2, 0xD3EE, 0xD4D6, 
-	0xD580, 0xD56D, 0xD58D, 0xD5C0, 0xD603, 0xD64C, 0xD68F, 0xD68C, 0xD68A, 
-	0xD686, 0xD684, 0xD682, 0xD680, 0xD67E, 0xD67B, 0xD679, 0xD677, 0xD676, 
-	0xD674, 0xD672, 0xD670, 0xD66F, 0xD66E, 0xD66D, 0xD66B, 0xD669, 0xD667, 
-	0xD666, 0xD666, 0xD663, 0xD660, 0xD65D, 0xD65B, 0xD658, 0xD656, 0xD633, 
-	0xD631, 0xD630, 0xD630, 0xD62F, 0xD62E, 0xD62E, 0xD62D, 0xD62C, 0xD62C, 
-	0xD62B, 0xD62B, 0xD62A, 0xD629, 0xD629, 0xD628, 0xD627, 0xD627, 0xD626, 
-	0xD626, 0xD625, 0xD625, 0xD624, 0xD623, 0xD623, 0xD622, 0xD622, 0xD621, 
-	0xD620, 0xD620, 0xD61F, 0xD61B, 0xD615, 0xD614, 0xD613, 0xD612, 0xD612, 
-	0xD611, 0xD611, 0xD611, 0xD610, 0xD611, 0xD611, 0xD611, 0xD612, 0xD612, 
-	0xD613, 0xD614, 0xD615, 0xD616, 0xD617, 0xD618, 0xD618, 0xD619, 0xD619, 
-	0xD618, 0xD618, 0xD618, 0xD617, 0xD617, 0xD616, 0xD615, 0xD60E, 0xD60D, 
-	0xD60A, 0xD608, 0xD608, 0xD607, 0xD607, 0xD607, 0xD606, 0xD606, 0xD605, 
-	0xD605, 0xD605, 0xD605, 0xD605, 0xD604, 0xD604, 0xD602, 0xD601, 0xD600, 
-	0xD600, 0xD5FD, 0xD5FA, 0xD5F7, 0xD5F4, 0xD5F0, 0xD5EC, 0xD5E8, 0xD5E3, 
-	0xD5DE, 0xD5D3, 0xD5D0, 0xD5CE, 0xD5CC, 0xD5CB, 0xD5C9, 0xD5C7, 0xD5C5, 
-	0xD5C4, 0xD5C3, 0xD5C1, 0xD5BF, 0xD5BE, 0xD5BC, 0xD5BA, 0xD5B8, 0xD5B6, 
-	0xD5B4, 0xD5B2, 0xD5B1, 0xD5AF, 0xD5AD, 0xD5AB, 0xD5A9, 0xD5A7, 0xD5A5, 
-	0xD5A3, 0xD5A1, 0xD59F, 0xD59C, 0xD59B, 0xD59C, 0xD59D, 0xD59E, 0xD59E, 
-	0xD59F, 0xD59F, 0xD5A0, 0xD5A0, 0xD5A0, 0xD5A0, 0xD5A1, 0xD5A1, 0xD5A2, 
-	0xD5A2, 0xD5A2, 0xD5A3, 0xD5A4, 0xD5A4, 0xD5A5, 0xD5A5, 0xD5A6, 0xD5A6, 
-	0xD5A7, 0xD5A7, 0xD5A7, 0xD5A7, 0xD5A8, 0xD5A8, 0xD5A8, 0xD5A8, 0xD5A8, 
-	0xD5A8, 0xD5A8, 0xD5A8, 0xD5A9, 0xD5A9, 0xD5A9, 0xD5A9, 0xD5A9, 0xD5A9, 
-	0xD5AA, 0xC8A9, 0xB480, 0xADB4, 0xB4C3, 0xE6CA, 0xFB0A, 0xF629, 0xEE6B, 
-	0xE752, 0xE66D, 0xED26, 0xF1AF, 0x0139, 0x1001, 0x1469, 0x1157, 0x105C, 
-	0x1AA9, 0x32F3, 0x323B, 0x21D0, 0x139B, 0x0887, 0xFFD0, 0xF81E, 0xF1F6, 
-	0xED05, 0xE925, 0xE8D4, 0xEAF3, 0xEBB5, 0xEED8, 0xF29D, 0xF755, 0xFCD7, 
-	0x02BA, 0x0436, 0x0582, 0x04F1, 0x03CA, 0x04B5, 0x05F2, 0x073D, 0x0827, 
-	0x07EE, 0x0810, 0x0841, 0x0849, 0x0848, 0x08B0, 0x08FD, 0x08F5, 0x0902, 
-	0x0916, 0x0931, 0x0950, 0x096C, 0x096C, 0x096A, 0x0969, 0x0968, 0x0967, 
-	0x0966, 0x0965, 0x0964, 0x0963, 0x0963, 0x0962, 0x0961, 0x0960, 0x0960, 
-	0x095F, 0x095F, 0x095E, 0x095D, 0x095D, 0x095C, 0x095B, 0x095A, 0x0959, 
-	0x0958, 0x0957, 0x0956, 0x0955, 0x0955, 0x0946, 0x0944, 0x0944, 0x0944, 
-	0x0944, 0x0944, 0x0943, 0x0943, 0x0943, 0x0943, 0x0942, 0x0942, 0x0942, 
-	0x0942, 0x0941, 0x0941, 0x0941, 0x0941, 0x0940, 0x0940, 0x0940, 0x0940, 
-	0x093F, 0x093F, 0x093F, 0x093F, 0x093E, 0x093E, 0x093E, 0x093E, 0x093D, 
-	0x093B, 0x0938, 0x0938, 0x0938, 0x0938, 0x0938, 0x0937, 0x0937, 0x0937, 
-	0x0937, 0x0937, 0x0937, 0x0937, 0x0938, 0x0938, 0x0938, 0x0939, 0x0939, 
-	0x0939, 0x093A, 0x093A, 0x093A, 0x093A, 0x093A, 0x093A, 0x093A, 0x093A, 
-	0x093A, 0x093A, 0x0939, 0x0939, 0x0935, 0x0935, 0x0934, 0x0933, 0x0933, 
-	0x0933, 0x0933, 0x0932, 0x0932, 0x0932, 0x0931, 0x0932, 0x0932, 0x0932, 
-	0x0932, 0x0931, 0x0931, 0x0931, 0x0930, 0x092F, 0x0930, 0x092E, 0x092D, 
-	0x092B, 0x092A, 0x0928, 0x0927, 0x0925, 0x0923, 0x0921, 0x091C, 0x091B, 
-	0x091A, 0x0919, 0x0919, 0x0918, 0x0917, 0x0916, 0x0916, 0x0915, 0x0914, 
-	0x0914, 0x0913, 0x0912, 0x0911, 0x0910, 0x090F, 0x090F, 0x090E, 0x090D, 
-	0x090D, 0x090C, 0x090B, 0x090A, 0x0909, 0x0908, 0x0907, 0x0906, 0x0906, 
-	0x0904, 0x0904, 0x0905, 0x0905, 0x0905, 0x0905, 0x0906, 0x0906, 0x0906, 
-	0x0906, 0x0906, 0x0906, 0x0906, 0x0906, 0x0907, 0x0907, 0x0907, 0x0907, 
-	0x0908, 0x0908, 0x0908, 0x0908, 0x0908, 0x0909, 0x0909, 0x0909, 0x0909, 
-	0x0909, 0x0909, 0x0909, 0x0909, 0x0909, 0x0909, 0x090A, 0x0000, 0x0498, 
-	0xFA20, 0x13A6, 0xD8CD, 0xE930, 0xF166, 0xF992, 0xFD9A, 0xF32A, 0xE0CE, 
-	0xEA4B, 0xF374, 0xFC09, 0x0179, 0x019F, 0xFD60, 0xFCD5, 0x0C73, 0x64B8, 
-	0x7A10, 0x817F, 0x870D, 0x8978, 0x8ADC, 0x8CBF, 0x9074, 0x94BA, 0x99FB, 
-	0x9F8D, 0xA4DC, 0xAA47, 0xAC0A, 0xADDB, 0xB032, 0xB361, 0xAFDD, 0xAEC4, 
-	0xAF4B, 0xAF10, 0xAF36, 0xAEED, 0xAE93, 0xAE9A, 0xAEEA, 0xAEC6, 0xAE9E, 
-	0xAE92, 0xAE91, 0xAEDF, 0xAF38, 0xAF32, 0xAF2E, 0xAF29, 0xAF2A, 0xAF2D, 
-	0xAF33, 0xAF33, 0xAF32, 0xAF32, 0xAF31, 0xAF30, 0xAF30, 0xAF2F, 0xAF2F, 
-	0xAF2E, 0xAF2E, 0xAF2D, 0xAF2D, 0xAF2C, 0xAF2C, 0xAF2C, 0xAF2B, 0xAF2B, 
-	0xAF2B, 0xAF2A, 0xAF29, 0xAF29, 0xAF29, 0xAF29, 0xAF28, 0xAF27, 0xAF26, 
-	0xAF26, 0xAF25, 0xAF1F, 0xAF1C, 0xAF1B, 0xAF1B, 0xAF1B, 0xAF1B, 0xAF1A, 
-	0xAF1A, 0xAF1A, 0xAF1A, 0xAF1A, 0xAF1A, 0xAF1A, 0xAF19, 0xAF19, 0xAF19, 
-	0xAF19, 0xAF19, 0xAF18, 0xAF18, 0xAF18, 0xAF18, 0xAF18, 0xAF17, 0xAF17, 
-	0xAF17, 0xAF17, 0xAF17, 0xAF17, 0xAF17, 0xAF17, 0xAF16, 0xAF15, 0xAF14, 
-	0xAF14, 0xAF14, 0xAF14, 0xAF13, 0xAF13, 0xAF13, 0xAF13, 0xAF13, 0xAF13, 
-	0xAF13, 0xAF13, 0xAF14, 0xAF14, 0xAF14, 0xAF14, 0xAF14, 0xAF15, 0xAF15, 
-	0xAF15, 0xAF15, 0xAF15, 0xAF15, 0xAF15, 0xAF15, 0xAF15, 0xAF15, 0xAF15, 
-	0xAF15, 0xAF13, 0xAF12, 0xAF12, 0xAF11, 0xAF11, 0xAF11, 0xAF11, 0xAF11, 
-	0xAF11, 0xAF11, 0xAF11, 0xAF10, 0xAF10, 0xAF10, 0xAF11, 0xAF10, 0xAF10, 
-	0xAF10, 0xAF0F, 0xAF10, 0xAF10, 0xAF0F, 0xAF0E, 0xAF0E, 0xAF0D, 0xAF0C, 
-	0xAF0B, 0xAF0A, 0xAF09, 0xAF08, 0xAF04, 0xAF04, 0xAF03, 0xAF02, 0xAF02, 
-	0xAF02, 0xAF01, 0xAF01, 0xAF00, 0xAF00, 0xAEFF, 0xAEFF, 0xAEFF, 0xAEFE, 
-	0xAEFE, 0xAEFD, 0xAEFD, 0xAEFC, 0xAEFC, 0xAEFC, 0xAEFB, 0xAEFB, 0xAEFA, 
-	0xAEFA, 0xAEF9, 0xAEF9, 0xAEF8, 0xAEF8, 0xAEF7, 0xAEF7, 0xAEF6, 0xAEF6, 
-	0xAEF6, 0xAEF7, 0xAEF7, 0xAEF7, 0xAEF7, 0xAEF7, 0xAEF8, 0xAEF8, 0xAEF8, 
-	0xAEF8, 0xAEF8, 0xAEF8, 0xAEF8, 0xAEF8, 0xAEF8, 0xAEF8, 0xAEF8, 0xAEF9, 
-	0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 0xAEF9, 
-	0xAEF9, 0xAEF9, 0xAEF9, 0xAEFA, 
-};
-
-static const u16 ragdoll_mario_anim_Action_indices[] = {
-	0x008A, 0x0000, 0x002D, 0x008A, 0x00C0, 0x00B7, 0x0001, 0x0177, 0x0001, 
-	0x0178, 0x0001, 0x0179, 0x00FA, 0x017A, 0x00FA, 0x0274, 0x00FA, 0x036E, 
-	0x00F8, 0x0468, 0x00FA, 0x0560, 0x00F9, 0x065A, 0x00F8, 0x0753, 0x00FA, 
-	0x084B, 0x00F5, 0x0945, 0x0001, 0x0A3A, 0x0001, 0x0A3B, 0x0001, 0x0A3C, 
-	0x00FA, 0x0A3D, 0x00FA, 0x0B37, 0x00FA, 0x0C31, 0x00FA, 0x0D2B, 0x00FA, 
-	0x0E25, 0x00FA, 0x0F1F, 0x00FA, 0x1019, 0x00FA, 0x1113, 0x00FA, 0x120D, 
-	0x0001, 0x1307, 0x0001, 0x1308, 0x0001, 0x1309, 0x00FA, 0x130A, 0x00FA, 
-	0x1404, 0x00F7, 0x14FE, 0x00FA, 0x15F5, 0x00FA, 0x16EF, 0x00F2, 0x17E9, 
-	0x00EA, 0x18DB, 0x00DF, 0x19C5, 0x00F3, 0x1AA4, 0x00FA, 0x1B97, 0x00FA, 
-	0x1C91, 0x00FA, 0x1D8B, 0x0001, 0x1E85, 0x0001, 0x1E86, 0x0001, 0x1E87, 
-	0x00FA, 0x1E88, 0x00FA, 0x1F82, 0x00F9, 0x207C, 0x00FA, 0x2175, 0x00FA, 
-	0x226F, 0x00FA, 0x2369, 0x00F7, 0x2463, 0x00F8, 0x255A, 0x00FA, 0x2652, 
-	0x00FA, 0x274C, 0x00FA, 0x2846, 0x00FA, 0x2940, 0x00FA, 0x2A3A, 0x00FA, 
-	0x2B34, 0x00FA, 0x2C2E, 0x00F9, 0x2D28, 0x00F0, 0x2E21, 0x00F0, 0x2F11, 
-	
-};
-
-static const struct Animation ragdoll_mario_anim_Action = {
-	1,
-	0,
-	0,
-	1,
-	250,
-	ANIMINDEX_NUMPARTS(ragdoll_mario_anim_Action_indices),
-	ragdoll_mario_anim_Action_values,
-	ragdoll_mario_anim_Action_indices,
-	0,
-};
-
diff --git a/actors/ragdoll_mario/anims/data.inc.c b/actors/ragdoll_mario/anims/data.inc.c
deleted file mode 100644
index 3fdbab40..00000000
--- a/actors/ragdoll_mario/anims/data.inc.c
+++ /dev/null
@@ -1 +0,0 @@
-#include "anim_Action.inc.c"
diff --git a/actors/ragdoll_mario/anims/table.inc.c b/actors/ragdoll_mario/anims/table.inc.c
deleted file mode 100644
index a1c31b9e..00000000
--- a/actors/ragdoll_mario/anims/table.inc.c
+++ /dev/null
@@ -1,4 +0,0 @@
-const struct Animation *const ragdoll_mario_anims[] = {
-	&ragdoll_mario_anim_Action,
-	NULL,
-};
diff --git a/actors/ragdoll_mario/geo.inc.c b/actors/ragdoll_mario/geo.inc.c
deleted file mode 100644
index b6e5ea33..00000000
--- a/actors/ragdoll_mario/geo.inc.c
+++ /dev/null
@@ -1,1013 +0,0 @@
-#include "src/game/envfx_snow.h"
-
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_1___eye_half_v3_001_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_7___eye_X_v3_001_3),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_armature_002_switch_option_002[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-		GEO_OPEN_NODE(),
-			GEO_NODE_START(),
-			GEO_OPEN_NODE(),
-				GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1),
-			GEO_CLOSE_NODE(),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_right_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_left_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1),
-		GEO_OPEN_NODE(),
-			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_left_hand_peace_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_left_hand_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_left_hand_wing_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1),
-		GEO_OPEN_NODE(),
-			GEO_DISPLAY_LIST(LAYER_ALPHA, ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_1___eye_half_v3_001_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_7___eye_X_v3_001_3),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_armature_002_switch_option_002[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-		GEO_OPEN_NODE(),
-			GEO_NODE_START(),
-			GEO_OPEN_NODE(),
-				GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1),
-			GEO_CLOSE_NODE(),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6),
-			GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_right_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1),
-		GEO_OPEN_NODE(),
-			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_peace_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_wing_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1),
-		GEO_OPEN_NODE(),
-			GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_1___eye_half_v3_001_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_7___eye_X_v3_001_3),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-		GEO_OPEN_NODE(),
-			GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ragdoll_mario_000_offset_mesh_layer_1),
-			GEO_OPEN_NODE(),
-				GEO_ASM(0, geo_move_mario_part_from_parent),
-				GEO_ASM(0, geo_mario_tilt_torso),
-				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, ragdoll_mario_000_offset_001_mesh_layer_1),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ASM(0, geo_mario_head_rotation),
-							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-							GEO_OPEN_NODE(),
-								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-								GEO_OPEN_NODE(),
-									GEO_NODE_START(),
-									GEO_OPEN_NODE(),
-										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-										GEO_OPEN_NODE(),
-											GEO_NODE_START(),
-											GEO_OPEN_NODE(),
-												GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_mesh_layer_1),
-											GEO_CLOSE_NODE(),
-											GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1),
-											GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2),
-											GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3),
-											GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4),
-											GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5),
-											GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6),
-											GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7),
-										GEO_CLOSE_NODE(),
-									GEO_CLOSE_NODE(),
-									GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_armature_002_switch_option_002),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_001_mesh_layer_4),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_002_mesh_layer_4),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ragdoll_mario_000_offset_003_mesh_layer_1),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, ragdoll_mario_000_offset_004_mesh_layer_1),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(1, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_003_mesh_layer_1),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_right_hand_open_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ragdoll_mario_000_offset_006_mesh_layer_1),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, ragdoll_mario_000_offset_007_mesh_layer_1),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(0, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_004_mesh_layer_1),
-												GEO_CLOSE_NODE(),
-												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_open_armature),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_peace_armature),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_cap_armature),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_wing_cap_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ragdoll_mario_000_offset_009_mesh_layer_1),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, ragdoll_mario_000_offset_010_mesh_layer_1),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, ragdoll_mario_000_offset_011_mesh_layer_1),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ragdoll_mario_000_offset_012_mesh_layer_1),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, ragdoll_mario_000_offset_013_mesh_layer_1),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-							GEO_OPEN_NODE(),
-								GEO_ASM(2, geo_mario_hand_foot_scaler),
-								GEO_SCALE(LAYER_FORCE, 65536),
-								GEO_OPEN_NODE(),
-									GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_005_mesh_layer_1),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_armature_002_switch_option_002[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-		GEO_OPEN_NODE(),
-			GEO_NODE_START(),
-			GEO_OPEN_NODE(),
-				GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_metal_v3_001_0),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_right_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_mat_override_metal_v3_001_0),
-		GEO_OPEN_NODE(),
-			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_peace_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_wing_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_mat_override_metal_v3_001_0),
-		GEO_OPEN_NODE(),
-			GEO_DISPLAY_LIST(LAYER_ALPHA, ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_mat_override_metal_v3_001_0),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-		GEO_OPEN_NODE(),
-			GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, ragdoll_mario_000_offset_mesh_layer_1_mat_override_metal_v3_001_0),
-			GEO_OPEN_NODE(),
-				GEO_ASM(0, geo_move_mario_part_from_parent),
-				GEO_ASM(0, geo_mario_tilt_torso),
-				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, ragdoll_mario_000_offset_001_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ASM(0, geo_mario_head_rotation),
-							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-							GEO_OPEN_NODE(),
-								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-								GEO_OPEN_NODE(),
-									GEO_NODE_START(),
-									GEO_OPEN_NODE(),
-										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-										GEO_OPEN_NODE(),
-											GEO_NODE_START(),
-											GEO_OPEN_NODE(),
-												GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_metal_v3_001_0),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-									GEO_CLOSE_NODE(),
-									GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_armature_002_switch_option_002),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_ALPHA, ragdoll_mario_000_displaylist_001_mesh_layer_4_mat_override_metal_v3_001_0),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_ALPHA, ragdoll_mario_000_displaylist_002_mesh_layer_4_mat_override_metal_v3_001_0),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, ragdoll_mario_000_offset_003_mesh_layer_1_mat_override_metal_v3_001_0),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, ragdoll_mario_000_offset_004_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(1, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_003_mesh_layer_1_mat_override_metal_v3_001_0),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_right_hand_open_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, ragdoll_mario_000_offset_006_mesh_layer_1_mat_override_metal_v3_001_0),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, ragdoll_mario_000_offset_007_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(0, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_004_mesh_layer_1_mat_override_metal_v3_001_0),
-												GEO_CLOSE_NODE(),
-												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_open_armature),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_peace_armature),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_cap_armature),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_wing_cap_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, ragdoll_mario_000_offset_009_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, ragdoll_mario_000_offset_010_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, ragdoll_mario_000_offset_011_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, ragdoll_mario_000_offset_012_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, ragdoll_mario_000_offset_013_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-							GEO_OPEN_NODE(),
-								GEO_ASM(2, geo_mario_hand_foot_scaler),
-								GEO_SCALE(LAYER_FORCE, 65536),
-								GEO_OPEN_NODE(),
-									GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_005_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_armature_002_switch_option_002[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-		GEO_OPEN_NODE(),
-			GEO_NODE_START(),
-			GEO_OPEN_NODE(),
-				GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_metal_v3_001_0),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_right_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_open_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_mat_override_metal_v3_001_0),
-		GEO_OPEN_NODE(),
-			GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_peace_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_mat_override_metal_v3_001_0),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_wing_cap_armature[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_TRANSPARENT, 60, 0, 0, ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_mat_override_metal_v3_001_0),
-		GEO_OPEN_NODE(),
-			GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_mat_override_metal_v3_001_0),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-		GEO_OPEN_NODE(),
-			GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ragdoll_mario_000_offset_mesh_layer_1_mat_override_metal_v3_001_0),
-			GEO_OPEN_NODE(),
-				GEO_ASM(0, geo_move_mario_part_from_parent),
-				GEO_ASM(0, geo_mario_tilt_torso),
-				GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 68, 0, 0, ragdoll_mario_000_offset_001_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ASM(0, geo_mario_head_rotation),
-							GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-							GEO_OPEN_NODE(),
-								GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-								GEO_OPEN_NODE(),
-									GEO_NODE_START(),
-									GEO_OPEN_NODE(),
-										GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-										GEO_OPEN_NODE(),
-											GEO_NODE_START(),
-											GEO_OPEN_NODE(),
-												GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_metal_v3_001_0),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-									GEO_CLOSE_NODE(),
-									GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_armature_002_switch_option_002),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_001_mesh_layer_4_mat_override_metal_v3_001_0),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-								GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
-								GEO_OPEN_NODE(),
-									GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-									GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-									GEO_OPEN_NODE(),
-										GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_002_mesh_layer_4_mat_override_metal_v3_001_0),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ragdoll_mario_000_offset_003_mesh_layer_1_mat_override_metal_v3_001_0),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, ragdoll_mario_000_offset_004_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(1, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_003_mesh_layer_1_mat_override_metal_v3_001_0),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_right_hand_open_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-						GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ragdoll_mario_000_offset_006_mesh_layer_1_mat_override_metal_v3_001_0),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_TRANSPARENT, 65, 0, 0, ragdoll_mario_000_offset_007_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_OPEN_NODE(),
-									GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-									GEO_OPEN_NODE(),
-										GEO_NODE_START(),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-											GEO_OPEN_NODE(),
-												GEO_ASM(0, geo_mario_hand_foot_scaler),
-												GEO_SCALE(LAYER_FORCE, 65536),
-												GEO_OPEN_NODE(),
-													GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_004_mesh_layer_1_mat_override_metal_v3_001_0),
-												GEO_CLOSE_NODE(),
-												GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_open_armature),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_peace_armature),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_cap_armature),
-										GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_wing_cap_armature),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ragdoll_mario_000_offset_009_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, ragdoll_mario_000_offset_010_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_TRANSPARENT, 67, 0, 0, ragdoll_mario_000_offset_011_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-				GEO_OPEN_NODE(),
-					GEO_ANIMATED_PART(LAYER_TRANSPARENT, 0, 0, 0, ragdoll_mario_000_offset_012_mesh_layer_1_mat_override_metal_v3_001_0),
-					GEO_OPEN_NODE(),
-						GEO_ANIMATED_PART(LAYER_TRANSPARENT, 89, 0, 0, ragdoll_mario_000_offset_013_mesh_layer_1_mat_override_metal_v3_001_0),
-						GEO_OPEN_NODE(),
-							GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-							GEO_OPEN_NODE(),
-								GEO_ASM(2, geo_mario_hand_foot_scaler),
-								GEO_SCALE(LAYER_FORCE, 65536),
-								GEO_OPEN_NODE(),
-									GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_000_displaylist_005_mesh_layer_1_mat_override_metal_v3_001_0),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_1___eye_half_v3_001_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_7___eye_X_v3_001_3),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout ragdoll_mario_geo[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_SHADOW(1, 180, 100),
-		GEO_OPEN_NODE(),
-			GEO_SCALE(LAYER_FORCE, 16384),
-			GEO_OPEN_NODE(),
-				GEO_ASM(0, geo_mirror_mario_backface_culling),
-				GEO_ASM(0, geo_mirror_mario_set_alpha),
-				GEO_SWITCH_CASE(0, geo_switch_mario_stand_run),
-				GEO_OPEN_NODE(),
-					GEO_NODE_START(),
-					GEO_OPEN_NODE(),
-						GEO_SWITCH_CASE(0, geo_switch_mario_cap_effect),
-						GEO_OPEN_NODE(),
-							GEO_NODE_START(),
-							GEO_OPEN_NODE(),
-								GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, NULL),
-								GEO_OPEN_NODE(),
-									GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, ragdoll_mario_000_offset_mesh_layer_1),
-									GEO_OPEN_NODE(),
-										GEO_ASM(0, geo_move_mario_part_from_parent),
-										GEO_ASM(0, geo_mario_tilt_torso),
-										GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 68, 0, 0, ragdoll_mario_000_offset_001_mesh_layer_1),
-											GEO_OPEN_NODE(),
-												GEO_ANIMATED_PART(LAYER_OPAQUE, 87, 0, 0, NULL),
-												GEO_OPEN_NODE(),
-													GEO_ASM(0, geo_mario_head_rotation),
-													GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-													GEO_OPEN_NODE(),
-														GEO_SWITCH_CASE(0, geo_switch_mario_cap_on_off),
-														GEO_OPEN_NODE(),
-															GEO_NODE_START(),
-															GEO_OPEN_NODE(),
-																GEO_SWITCH_CASE(0, geo_switch_mario_eyes),
-																GEO_OPEN_NODE(),
-																	GEO_NODE_START(),
-																	GEO_OPEN_NODE(),
-																		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_mesh_layer_1),
-																	GEO_CLOSE_NODE(),
-																	GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1),
-																	GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2),
-																	GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3),
-																	GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4),
-																	GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5),
-																	GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6),
-																	GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7),
-																GEO_CLOSE_NODE(),
-															GEO_CLOSE_NODE(),
-															GEO_BRANCH(1, ragdoll_mario_armature_002_switch_option_002),
-														GEO_CLOSE_NODE(),
-														GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, -126, 15, -33, -133),
-														GEO_OPEN_NODE(),
-															GEO_ASM(0, geo_mario_rotate_wing_cap_wings),
-															GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-															GEO_OPEN_NODE(),
-																GEO_DISPLAY_LIST(LAYER_ALPHA, ragdoll_mario_000_displaylist_001_mesh_layer_4),
-															GEO_CLOSE_NODE(),
-														GEO_CLOSE_NODE(),
-														GEO_TRANSLATE_ROTATE(LAYER_FORCE, 142, -51, 126, -15, 33, -133),
-														GEO_OPEN_NODE(),
-															GEO_ASM(1, geo_mario_rotate_wing_cap_wings),
-															GEO_ROTATION_NODE(LAYER_FORCE, 0, 0, 0),
-															GEO_OPEN_NODE(),
-																GEO_DISPLAY_LIST(LAYER_ALPHA, ragdoll_mario_000_displaylist_002_mesh_layer_4),
-															GEO_CLOSE_NODE(),
-														GEO_CLOSE_NODE(),
-													GEO_CLOSE_NODE(),
-												GEO_CLOSE_NODE(),
-												GEO_ANIMATED_PART(LAYER_OPAQUE, 67, -10, 79, NULL),
-												GEO_OPEN_NODE(),
-													GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, ragdoll_mario_000_offset_003_mesh_layer_1),
-													GEO_OPEN_NODE(),
-														GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, ragdoll_mario_000_offset_004_mesh_layer_1),
-														GEO_OPEN_NODE(),
-															GEO_SWITCH_CASE(1, geo_switch_mario_hand),
-															GEO_OPEN_NODE(),
-																GEO_NODE_START(),
-																GEO_OPEN_NODE(),
-																	GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-																	GEO_OPEN_NODE(),
-																		GEO_ASM(1, geo_mario_hand_foot_scaler),
-																		GEO_SCALE(LAYER_FORCE, 65536),
-																		GEO_OPEN_NODE(),
-																			GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_003_mesh_layer_1),
-																		GEO_CLOSE_NODE(),
-																	GEO_CLOSE_NODE(),
-																GEO_CLOSE_NODE(),
-																GEO_BRANCH(1, ragdoll_mario_right_hand_open_armature),
-															GEO_CLOSE_NODE(),
-														GEO_CLOSE_NODE(),
-													GEO_CLOSE_NODE(),
-												GEO_CLOSE_NODE(),
-												GEO_ANIMATED_PART(LAYER_OPAQUE, 68, -10, -79, NULL),
-												GEO_OPEN_NODE(),
-													GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, ragdoll_mario_000_offset_006_mesh_layer_1),
-													GEO_OPEN_NODE(),
-														GEO_ANIMATED_PART(LAYER_OPAQUE, 65, 0, 0, ragdoll_mario_000_offset_007_mesh_layer_1),
-														GEO_OPEN_NODE(),
-															GEO_SWITCH_CASE(0, geo_switch_mario_hand),
-															GEO_OPEN_NODE(),
-																GEO_NODE_START(),
-																GEO_OPEN_NODE(),
-																	GEO_ANIMATED_PART(LAYER_OPAQUE, 60, 0, 0, NULL),
-																	GEO_OPEN_NODE(),
-																		GEO_ASM(0, geo_mario_hand_foot_scaler),
-																		GEO_SCALE(LAYER_FORCE, 65536),
-																		GEO_OPEN_NODE(),
-																			GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_004_mesh_layer_1),
-																		GEO_CLOSE_NODE(),
-																		GEO_HELD_OBJECT(0, 0, 0, 0, geo_switch_mario_hand_grab_pos),
-																	GEO_CLOSE_NODE(),
-																GEO_CLOSE_NODE(),
-																GEO_BRANCH(1, ragdoll_mario_left_hand_open_armature),
-																GEO_BRANCH(1, ragdoll_mario_left_hand_peace_armature),
-																GEO_BRANCH(1, ragdoll_mario_left_hand_cap_armature),
-																GEO_BRANCH(1, ragdoll_mario_left_hand_wing_cap_armature),
-															GEO_CLOSE_NODE(),
-														GEO_CLOSE_NODE(),
-													GEO_CLOSE_NODE(),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, 42, NULL),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, ragdoll_mario_000_offset_009_mesh_layer_1),
-											GEO_OPEN_NODE(),
-												GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, ragdoll_mario_000_offset_010_mesh_layer_1),
-												GEO_OPEN_NODE(),
-													GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, ragdoll_mario_000_offset_011_mesh_layer_1),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-										GEO_ANIMATED_PART(LAYER_OPAQUE, 13, -8, -42, NULL),
-										GEO_OPEN_NODE(),
-											GEO_ANIMATED_PART(LAYER_OPAQUE, 0, 0, 0, ragdoll_mario_000_offset_012_mesh_layer_1),
-											GEO_OPEN_NODE(),
-												GEO_ANIMATED_PART(LAYER_OPAQUE, 89, 0, 0, ragdoll_mario_000_offset_013_mesh_layer_1),
-												GEO_OPEN_NODE(),
-													GEO_ANIMATED_PART(LAYER_OPAQUE, 67, 0, 0, NULL),
-													GEO_OPEN_NODE(),
-														GEO_ASM(2, geo_mario_hand_foot_scaler),
-														GEO_SCALE(LAYER_FORCE, 65536),
-														GEO_OPEN_NODE(),
-															GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_000_displaylist_005_mesh_layer_1),
-														GEO_CLOSE_NODE(),
-													GEO_CLOSE_NODE(),
-												GEO_CLOSE_NODE(),
-											GEO_CLOSE_NODE(),
-										GEO_CLOSE_NODE(),
-									GEO_CLOSE_NODE(),
-								GEO_CLOSE_NODE(),
-							GEO_CLOSE_NODE(),
-							GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt1),
-							GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt2),
-							GEO_BRANCH(1, ragdoll_mario_002_switch_opt0_001_switch_opt3),
-						GEO_CLOSE_NODE(),
-					GEO_CLOSE_NODE(),
-				GEO_CLOSE_NODE(),
-				GEO_ASM(1, geo_mirror_mario_backface_culling),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, ragdoll_mario_material_revert_render_settings),
-		GEO_DISPLAY_LIST(LAYER_ALPHA, ragdoll_mario_material_revert_render_settings),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, ragdoll_mario_material_revert_render_settings),
-	GEO_CLOSE_NODE(),
-	GEO_END(),
-};
diff --git a/actors/ragdoll_mario/geo_header.h b/actors/ragdoll_mario/geo_header.h
deleted file mode 100644
index b1ba8869..00000000
--- a/actors/ragdoll_mario/geo_header.h
+++ /dev/null
@@ -1,224 +0,0 @@
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt1[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt2[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt3[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt4[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt5[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt6[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt1_switch_face_opt7[];
-extern const GeoLayout ragdoll_mario_armature_002_switch_option_002[];
-extern const GeoLayout ragdoll_mario_right_hand_open_armature[];
-extern const GeoLayout ragdoll_mario_left_hand_open_armature[];
-extern const GeoLayout ragdoll_mario_left_hand_peace_armature[];
-extern const GeoLayout ragdoll_mario_left_hand_cap_armature[];
-extern const GeoLayout ragdoll_mario_left_hand_wing_cap_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt1[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt2[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt3[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt4[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt5[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt6[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt1_switch_face_opt7[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_armature_002_switch_option_002[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_right_hand_open_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_open_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_peace_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_cap_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_jump_ragdoll_mario_left_hand_wing_cap_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt1[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt2[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt3[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt4[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt5[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt6[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1_000_switch_opt0_000_switch_001_opt7[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt1[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_armature_002_switch_option_002[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_right_hand_open_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_open_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_peace_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_cap_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2_jump_ragdoll_mario_left_hand_wing_cap_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt2[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_armature_002_switch_option_002[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_right_hand_open_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_open_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_peace_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_cap_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3_jump_ragdoll_mario_left_hand_wing_cap_armature[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt3[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt1[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt2[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt3[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt4[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt5[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt6[];
-extern const GeoLayout ragdoll_mario_002_switch_opt0_001_switch_opt0_000_switch_opt0_000_switch_001_opt7[];
-extern const GeoLayout ragdoll_mario_geo[];
-extern Lights1 ragdoll_mario_body_v3_lights;
-extern Lights1 ragdoll_mario_cap_v3_lights;
-extern Lights1 ragdoll_mario_face_0___eye_open_v3_001_lights;
-extern Lights1 ragdoll_mario_mustache_v3_001_lights;
-extern Lights1 ragdoll_mario_hair_v3_001_lights;
-extern Lights1 ragdoll_mario_sideburns_v3_001_lights;
-extern Lights1 ragdoll_mario_face_1___eye_half_v3_001_lights;
-extern Lights1 ragdoll_mario_face_2___eye_closed_v3_001_lights;
-extern Lights1 ragdoll_mario_face_7___eye_X_v3_001_lights;
-extern Lights1 ragdoll_mario_gloves_v3_001_lights;
-extern Lights1 ragdoll_mario_shoes_v3_001_lights;
-extern u8 ragdoll_mario_mario_button_rgba16[];
-extern u8 ragdoll_mario_metal_rgba16[];
-extern u8 ragdoll_mario_mario_cap_rgba16[];
-extern u8 ragdoll_mario_mario_face_1_rgba16[];
-extern u8 ragdoll_mario_mario_mustache_rgba16[];
-extern u8 ragdoll_mario_mario_sideburn_rgba16[];
-extern u8 ragdoll_mario_mario_face_2_rgba16[];
-extern u8 ragdoll_mario_mario_face_3_rgba16[];
-extern u8 ragdoll_mario_mario_face_4_rgba16[];
-extern u8 ragdoll_mario_wing_2_rgba16[];
-extern u8 ragdoll_mario_wing1_rgba16[];
-extern Vtx ragdoll_mario_000_offset_mesh_layer_1_vtx_0[76];
-extern Gfx ragdoll_mario_000_offset_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_offset_001_mesh_layer_1_vtx_0[118];
-extern Gfx ragdoll_mario_000_offset_001_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_offset_001_mesh_layer_1_vtx_1[23];
-extern Gfx ragdoll_mario_000_offset_001_mesh_layer_1_tri_1[];
-extern Vtx ragdoll_mario_000_displaylist_mesh_layer_1_vtx_0[99];
-extern Gfx ragdoll_mario_000_displaylist_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_displaylist_mesh_layer_1_vtx_1[27];
-extern Gfx ragdoll_mario_000_displaylist_mesh_layer_1_tri_1[];
-extern Vtx ragdoll_mario_000_displaylist_mesh_layer_1_vtx_2[28];
-extern Gfx ragdoll_mario_000_displaylist_mesh_layer_1_tri_2[];
-extern Vtx ragdoll_mario_000_displaylist_mesh_layer_1_vtx_3[12];
-extern Gfx ragdoll_mario_000_displaylist_mesh_layer_1_tri_3[];
-extern Vtx ragdoll_mario_000_displaylist_mesh_layer_1_vtx_4[57];
-extern Gfx ragdoll_mario_000_displaylist_mesh_layer_1_tri_4[];
-extern Vtx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0[103];
-extern Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_1[30];
-extern Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1[];
-extern Vtx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_2[12];
-extern Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2[];
-extern Vtx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3[92];
-extern Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3[];
-extern Vtx ragdoll_mario_000_displaylist_001_mesh_layer_4_vtx_0[4];
-extern Gfx ragdoll_mario_000_displaylist_001_mesh_layer_4_tri_0[];
-extern Vtx ragdoll_mario_000_displaylist_001_mesh_layer_4_vtx_1[4];
-extern Gfx ragdoll_mario_000_displaylist_001_mesh_layer_4_tri_1[];
-extern Vtx ragdoll_mario_000_displaylist_002_mesh_layer_4_vtx_0[4];
-extern Gfx ragdoll_mario_000_displaylist_002_mesh_layer_4_tri_0[];
-extern Vtx ragdoll_mario_000_displaylist_002_mesh_layer_4_vtx_1[4];
-extern Gfx ragdoll_mario_000_displaylist_002_mesh_layer_4_tri_1[];
-extern Vtx ragdoll_mario_000_offset_003_mesh_layer_1_vtx_0[31];
-extern Gfx ragdoll_mario_000_offset_003_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_offset_004_mesh_layer_1_vtx_0[16];
-extern Gfx ragdoll_mario_000_offset_004_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_displaylist_003_mesh_layer_1_vtx_0[46];
-extern Gfx ragdoll_mario_000_displaylist_003_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0[58];
-extern Gfx ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_offset_006_mesh_layer_1_vtx_0[28];
-extern Gfx ragdoll_mario_000_offset_006_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_offset_007_mesh_layer_1_vtx_0[16];
-extern Gfx ragdoll_mario_000_offset_007_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_displaylist_004_mesh_layer_1_vtx_0[36];
-extern Gfx ragdoll_mario_000_displaylist_004_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0[57];
-extern Gfx ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0[73];
-extern Gfx ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0[59];
-extern Gfx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_1[36];
-extern Gfx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_1[];
-extern Vtx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0[59];
-extern Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_1[36];
-extern Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_1[];
-extern Vtx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_0[8];
-extern Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_0[];
-extern Vtx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_1[8];
-extern Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_1[];
-extern Vtx ragdoll_mario_000_offset_009_mesh_layer_1_vtx_0[22];
-extern Gfx ragdoll_mario_000_offset_009_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_offset_010_mesh_layer_1_vtx_0[12];
-extern Gfx ragdoll_mario_000_offset_010_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_offset_011_mesh_layer_1_vtx_0[29];
-extern Gfx ragdoll_mario_000_offset_011_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_offset_012_mesh_layer_1_vtx_0[22];
-extern Gfx ragdoll_mario_000_offset_012_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_offset_013_mesh_layer_1_vtx_0[12];
-extern Gfx ragdoll_mario_000_offset_013_mesh_layer_1_tri_0[];
-extern Vtx ragdoll_mario_000_displaylist_005_mesh_layer_1_vtx_0[28];
-extern Gfx ragdoll_mario_000_displaylist_005_mesh_layer_1_tri_0[];
-extern Gfx mat_ragdoll_mario_body_v3[];
-extern Gfx mat_ragdoll_mario_metal_v3_001[];
-extern Gfx mat_revert_ragdoll_mario_metal_v3_001[];
-extern Gfx mat_ragdoll_mario_cap_v3[];
-extern Gfx mat_ragdoll_mario_face_0___eye_open_v3_001[];
-extern Gfx mat_ragdoll_mario_mustache_v3_001[];
-extern Gfx mat_ragdoll_mario_hair_v3_001[];
-extern Gfx mat_ragdoll_mario_sideburns_v3_001[];
-extern Gfx mat_ragdoll_mario_face_1___eye_half_v3_001[];
-extern Gfx mat_ragdoll_mario_face_2___eye_closed_v3_001[];
-extern Gfx mat_ragdoll_mario_face_7___eye_X_v3_001[];
-extern Gfx mat_ragdoll_mario_wing_2_v3_001[];
-extern Gfx mat_revert_ragdoll_mario_wing_2_v3_001[];
-extern Gfx mat_ragdoll_mario_wing_1_v3_001[];
-extern Gfx mat_revert_ragdoll_mario_wing_1_v3_001[];
-extern Gfx mat_ragdoll_mario_gloves_v3_001[];
-extern Gfx mat_ragdoll_mario_shoes_v3_001[];
-extern Gfx ragdoll_mario_000_offset_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_offset_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_offset_001_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_offset_001_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_displaylist_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_1___eye_half_v3_001_1[];
-extern Gfx ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2[];
-extern Gfx ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_7___eye_X_v3_001_3[];
-extern Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1[];
-extern Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_1___eye_half_v3_001_1[];
-extern Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2[];
-extern Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_7___eye_X_v3_001_3[];
-extern Gfx ragdoll_mario_000_displaylist_001_mesh_layer_4[];
-extern Gfx ragdoll_mario_000_displaylist_001_mesh_layer_4_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_displaylist_002_mesh_layer_4[];
-extern Gfx ragdoll_mario_000_displaylist_002_mesh_layer_4_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_offset_003_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_offset_003_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_offset_004_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_offset_004_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_displaylist_003_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_displaylist_003_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1[];
-extern Gfx ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_offset_006_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_offset_006_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_offset_007_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_offset_007_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_displaylist_004_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_displaylist_004_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1[];
-extern Gfx ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1[];
-extern Gfx ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1[];
-extern Gfx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1[];
-extern Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4[];
-extern Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_offset_009_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_offset_009_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_offset_010_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_offset_010_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_offset_011_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_offset_011_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_offset_012_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_offset_012_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_offset_013_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_offset_013_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_000_displaylist_005_mesh_layer_1[];
-extern Gfx ragdoll_mario_000_displaylist_005_mesh_layer_1_mat_override_metal_v3_001_0[];
-extern Gfx ragdoll_mario_material_revert_render_settings[];
diff --git a/actors/ragdoll_mario/model.inc.c b/actors/ragdoll_mario/model.inc.c
deleted file mode 100644
index ccac9e53..00000000
--- a/actors/ragdoll_mario/model.inc.c
+++ /dev/null
@@ -1,7413 +0,0 @@
-Lights1 ragdoll_mario_body_v3_lights = gdSPDefLights1(
-	0x0, 0x0, 0x7F,
-	0x0, 0x0, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 ragdoll_mario_cap_v3_lights = gdSPDefLights1(
-	0x7F, 0x0, 0x0,
-	0xFF, 0x0, 0x0, 0x28, 0x28, 0x28);
-
-Lights1 ragdoll_mario_face_0___eye_open_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 ragdoll_mario_mustache_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 ragdoll_mario_hair_v3_001_lights = gdSPDefLights1(
-	0x36, 0x1, 0x0,
-	0x73, 0x6, 0x0, 0x28, 0x28, 0x28);
-
-Lights1 ragdoll_mario_sideburns_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 ragdoll_mario_face_1___eye_half_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 ragdoll_mario_face_2___eye_closed_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 ragdoll_mario_face_7___eye_X_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x39,
-	0xFE, 0xC1, 0x79, 0x28, 0x28, 0x28);
-
-Lights1 ragdoll_mario_gloves_v3_001_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 ragdoll_mario_shoes_v3_001_lights = gdSPDefLights1(
-	0x35, 0x8, 0x3,
-	0x72, 0x1C, 0xE, 0x28, 0x28, 0x28);
-
-Gfx ragdoll_mario_mario_button_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 ragdoll_mario_mario_button_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0x41, 0xf7, 0x01, 0xf7, 0x01, 0xf7, 0x01, 
-	0xf7, 0x01, 0xf6, 0xc1, 0xf7, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0x01, 0xf7, 0x01, 0xf7, 0x41, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x41, 0xf7, 0x01, 0xf7, 0x41, 
-	0xf7, 0x01, 0xf7, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0x81, 0xf7, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x41, 0xf7, 0x01, 0xf7, 0x41, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0x41, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 0xf7, 0x01, 
-	0xf7, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0x41, 0xf7, 0x41, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 
-	0xf6, 0xc1, 0xf7, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x41, 0xf7, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0x41, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x41, 0xf7, 0x41, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0x01, 
-	0xf7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x01, 0xf7, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf6, 0xc1, 
-	0xf7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 0xf7, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf6, 0xc1, 
-	0xf7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf6, 0x81, 0xf6, 0x81, 
-	0xf7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x01, 
-	0xf7, 0x03, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf6, 0x01, 0xf6, 0x41, 
-	0xf6, 0xc1, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x01, 
-	0xf6, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf5, 0xc1, 0xf5, 0xc1, 
-	0xf6, 0x81, 0xf7, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 0xf6, 0xc1, 
-	0xf6, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xed, 0x41, 0xe5, 0x01, 
-	0xf5, 0xc1, 0xf6, 0xc1, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 0xf6, 0xc1, 
-	0xf6, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xe5, 0x01, 0xdc, 0x81, 
-	0xdd, 0x01, 0xf6, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x41, 0xf6, 0x81, 
-	0xf6, 0x81, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xe5, 0x01, 0xdc, 0x81, 
-	0xdc, 0xc1, 0xed, 0x81, 0xf6, 0xc1, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf6, 0xc1, 0xed, 0x81, 
-	0xf6, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xed, 0xc1, 0xdc, 0x81, 
-	0xd4, 0x81, 0xcc, 0x81, 0xdd, 0x41, 0xf7, 0x01, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf6, 0xc1, 0xe5, 0x81, 0xdd, 0x01, 
-	0xf6, 0x07, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe5, 0x41, 
-	0xdc, 0x81, 0xcc, 0x81, 0xc4, 0x81, 0xdd, 0x41, 
-	0xf6, 0xc1, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x01, 
-	0xee, 0x01, 0xdd, 0x41, 0xd4, 0xc1, 0xdd, 0x41, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe5, 0x41, 
-	0xe4, 0xc1, 0xd4, 0x81, 0xc4, 0x41, 0xbc, 0x41, 
-	0xcc, 0xc1, 0xe6, 0x01, 0xf7, 0x41, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf6, 0x81, 0xdd, 0x81, 
-	0xcc, 0xc1, 0xcc, 0x81, 0xd4, 0x81, 0xe5, 0x81, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xed, 0xc1, 
-	0xe4, 0xc1, 0xe4, 0xc1, 0xd4, 0x81, 0xbc, 0x01, 
-	0xb4, 0x01, 0xc4, 0x81, 0xd5, 0x01, 0xee, 0x01, 
-	0xf7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x01, 0xee, 0x41, 
-	0xdd, 0x81, 0xd5, 0x41, 0xcc, 0xc1, 0xc4, 0x81, 
-	0xc4, 0x81, 0xcc, 0x81, 0xdc, 0xc1, 0xf6, 0x05, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf5, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 0xd4, 0x81, 
-	0xbc, 0x01, 0xb4, 0x01, 0xb4, 0x01, 0xbc, 0x41, 
-	0xc4, 0x81, 0xcc, 0xc1, 0xd5, 0x01, 0xd5, 0x41, 
-	0xd5, 0x01, 0xcc, 0xc1, 0xc4, 0x81, 0xbc, 0x41, 
-	0xb4, 0x01, 0xb4, 0x41, 0xbc, 0x41, 0xc4, 0x81, 
-	0xd4, 0x81, 0xdc, 0xc1, 0xf5, 0xc1, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xed, 0x41, 0xe4, 0xc1, 0xe4, 0xc1, 
-	0xd4, 0x81, 0xc4, 0x41, 0xbc, 0x01, 0xb3, 0xc1, 
-	0xab, 0xc1, 0xab, 0xc1, 0xb3, 0xc1, 0xb4, 0x01, 
-	0xb3, 0xc1, 0xb3, 0xc1, 0xb4, 0x01, 0xb4, 0x01, 
-	0xbc, 0x41, 0xcc, 0x81, 0xd4, 0xc1, 0xdc, 0xc1, 
-	0xe5, 0x01, 0xed, 0x41, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xed, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 
-	0xe4, 0xc1, 0xdc, 0xc1, 0xd4, 0x81, 0xcc, 0x81, 
-	0xc4, 0x41, 0xbc, 0x41, 0xbc, 0x41, 0xbc, 0x41, 
-	0xbc, 0x41, 0xc4, 0x81, 0xcc, 0x81, 0xd4, 0xc1, 
-	0xdd, 0x01, 0xe5, 0x01, 0xed, 0x01, 0xed, 0x01, 
-	0xec, 0xc1, 0xf5, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xed, 0xc1, 0xed, 0x41, 
-	0xe4, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 
-	0xdc, 0xc1, 0xdc, 0xc1, 0xdc, 0xc1, 0xdc, 0xc1, 
-	0xe5, 0x01, 0xe5, 0x01, 0xed, 0x41, 0xed, 0x41, 
-	0xf5, 0x41, 0xf5, 0x41, 0xed, 0x01, 0xf5, 0x81, 
-	0xf5, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xed, 0xc1, 0xdc, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 
-	0xe4, 0xc1, 0xe5, 0x01, 0xed, 0x01, 0xed, 0x01, 
-	0xed, 0x01, 0xed, 0x41, 0xf5, 0x41, 0xed, 0x01, 
-	0xed, 0x01, 0xed, 0x01, 0xf6, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xed, 0xc1, 0xe5, 0x01, 0xe5, 0x01, 
-	0xe4, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 0xe4, 0xc1, 
-	0xe4, 0xc1, 0xe4, 0xc1, 0xec, 0xc1, 0xed, 0x41, 
-	0xed, 0x41, 0xf5, 0xc1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xed, 0xc1, 0xe5, 0x01, 0xed, 0x41, 0xed, 0x41, 
-	0xed, 0x41, 0xed, 0x41, 0xf5, 0xc1, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx ragdoll_mario_metal_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 ragdoll_mario_metal_rgba16[] = {
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x01, 0x08, 0x43, 0x10, 0x43, 0x08, 0x43, 
-	0x08, 0x43, 0x08, 0x43, 0x18, 0x85, 0x10, 0x83, 
-	0x08, 0x43, 0x08, 0x01, 0x00, 0x03, 0x08, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x03, 0x08, 0x41, 0x08, 0x43, 
-	0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x10, 0x43, 
-	0x10, 0x85, 0x10, 0x43, 0x18, 0x85, 0x10, 0x85, 
-	0x10, 0x43, 0x10, 0x43, 0x10, 0x85, 0x21, 0x07, 
-	0x31, 0x49, 0x31, 0x4b, 0x31, 0x47, 0x31, 0x49, 
-	0x29, 0x07, 0x20, 0xc7, 0x18, 0x83, 0x10, 0x43, 
-	0x08, 0x41, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x43, 0x10, 0x85, 0x18, 0xc7, 
-	0x21, 0x07, 0x18, 0xc7, 0x10, 0x83, 0x18, 0x85, 
-	0x18, 0x85, 0x18, 0x87, 0x18, 0x87, 0x10, 0x87, 
-	0x08, 0x45, 0x10, 0x87, 0x10, 0x87, 0x10, 0x43, 
-	0x00, 0x03, 0x08, 0x43, 0x00, 0x03, 0x08, 0x43, 
-	0x00, 0x01, 0x10, 0x43, 0x08, 0x43, 0x10, 0xc5, 
-	0x20, 0x85, 0x19, 0x07, 0x20, 0xc5, 0x29, 0x07, 
-	0x29, 0x05, 0x20, 0xc5, 0x10, 0x43, 0x10, 0x43, 
-	0x08, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x43, 0x10, 0x45, 0x21, 0x49, 
-	0x39, 0x8d, 0x31, 0x8b, 0x31, 0x4b, 0x29, 0x49, 
-	0x18, 0x87, 0x10, 0x83, 0x08, 0x43, 0x08, 0x01, 
-	0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 0x00, 0x41, 
-	0x00, 0x01, 0x08, 0x03, 0x10, 0x03, 0x08, 0x03, 
-	0x00, 0x01, 0x08, 0x43, 0x00, 0x41, 0x00, 0x03, 
-	0x00, 0x01, 0x00, 0x01, 0x08, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x08, 0x41, 
-	0x00, 0x01, 0x10, 0x83, 0x10, 0x43, 0x10, 0x83, 
-	0x20, 0x85, 0x20, 0x85, 0x10, 0x83, 0x08, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x08, 0x43, 
-	0x29, 0x4b, 0x63, 0x19, 0x62, 0x95, 0x41, 0xcd, 
-	0x28, 0xc7, 0x28, 0xc9, 0x18, 0x83, 0x08, 0x43, 
-	0x08, 0x43, 0x10, 0x41, 0x08, 0x03, 0x10, 0x01, 
-	0x08, 0x01, 0x08, 0x01, 0x08, 0x43, 0x10, 0x03, 
-	0x18, 0x03, 0x20, 0x85, 0x10, 0x01, 0x08, 0x01, 
-	0x08, 0x01, 0x08, 0x03, 0x20, 0x43, 0x10, 0x43, 
-	0x10, 0x03, 0x08, 0x01, 0x00, 0x01, 0x08, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x08, 0x43, 0x08, 0x43, 
-	0x00, 0x01, 0x10, 0x43, 0x28, 0xc5, 0x31, 0x09, 
-	0x20, 0x85, 0x08, 0x43, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x43, 0x21, 0x09, 0x4a, 0x51, 
-	0x62, 0xd3, 0x72, 0xd7, 0x5a, 0x13, 0x69, 0xd3, 
-	0x49, 0x4f, 0x28, 0x87, 0x10, 0x41, 0x08, 0x01, 
-	0x08, 0x01, 0x08, 0x01, 0x08, 0x01, 0x08, 0x01, 
-	0x10, 0x01, 0x08, 0x03, 0x10, 0x01, 0x18, 0x03, 
-	0x20, 0x45, 0x48, 0x89, 0x28, 0x43, 0x08, 0x01, 
-	0x10, 0x03, 0x10, 0x41, 0x18, 0x03, 0x10, 0x03, 
-	0x10, 0x01, 0x08, 0x01, 0x10, 0x01, 0x08, 0x01, 
-	0x10, 0x01, 0x08, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x10, 0x41, 0x08, 0x41, 0x08, 0x43, 
-	0x08, 0x41, 0x08, 0x01, 0x08, 0x43, 0x20, 0x83, 
-	0x31, 0x09, 0x38, 0xc9, 0x20, 0x87, 0x00, 0x41, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x18, 0x85, 0x52, 0x95, 0x83, 0x5b, 0x82, 0x97, 
-	0x7a, 0x57, 0x93, 0x61, 0x9b, 0xa5, 0x93, 0xa5, 
-	0x6a, 0x17, 0x40, 0xcb, 0x10, 0x43, 0x08, 0x01, 
-	0x08, 0x01, 0x00, 0x01, 0x08, 0x01, 0x08, 0x01, 
-	0x08, 0x01, 0x10, 0x03, 0x10, 0x01, 0x08, 0x03, 
-	0x10, 0x43, 0x20, 0x03, 0x08, 0x43, 0x08, 0x01, 
-	0x08, 0x01, 0x08, 0x43, 0x18, 0x03, 0x10, 0x43, 
-	0x08, 0x01, 0x10, 0x01, 0x08, 0x01, 0x08, 0x01, 
-	0x10, 0x01, 0x10, 0x03, 0x10, 0x41, 0x00, 0x01, 
-	0x08, 0x03, 0x18, 0x81, 0x18, 0x83, 0x21, 0x03, 
-	0x31, 0x05, 0x18, 0x81, 0x08, 0x43, 0x18, 0xc3, 
-	0x31, 0x09, 0x39, 0x8b, 0x31, 0x07, 0x39, 0x0b, 
-	0x18, 0x85, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x28, 0xc7, 
-	0x62, 0x13, 0x8a, 0x57, 0x92, 0x59, 0x91, 0xd3, 
-	0xac, 0x27, 0xbd, 0x33, 0xb4, 0xad, 0x9c, 0x27, 
-	0x49, 0x51, 0x10, 0x01, 0x00, 0x03, 0x08, 0x01, 
-	0x08, 0x41, 0x08, 0x01, 0x00, 0x01, 0x08, 0x01, 
-	0x08, 0x01, 0x08, 0x01, 0x08, 0x01, 0x08, 0x03, 
-	0x08, 0x01, 0x00, 0x01, 0x08, 0x03, 0x08, 0x03, 
-	0x08, 0x01, 0x00, 0x41, 0x00, 0x03, 0x00, 0x01, 
-	0x08, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x01, 0x00, 0x01, 0x08, 0x41, 0x08, 0x01, 
-	0x28, 0xc7, 0x6a, 0xd1, 0x52, 0x0b, 0x39, 0x87, 
-	0x31, 0x03, 0x39, 0x45, 0x41, 0xc9, 0x31, 0x85, 
-	0x41, 0xc9, 0x5a, 0x8d, 0x41, 0x8b, 0x21, 0x07, 
-	0x51, 0x8f, 0x39, 0x0b, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x01, 0x39, 0x4d, 0x79, 0xd7, 
-	0x92, 0x13, 0xa3, 0x13, 0xab, 0x93, 0xb3, 0xdf, 
-	0xb4, 0xad, 0xa4, 0x6b, 0x6a, 0x9d, 0x39, 0x4d, 
-	0x18, 0x45, 0x20, 0x87, 0x39, 0x0d, 0x28, 0x87, 
-	0x41, 0x4f, 0x20, 0x85, 0x10, 0x03, 0x00, 0x01, 
-	0x08, 0x01, 0x10, 0x41, 0x00, 0x03, 0x08, 0x01, 
-	0x00, 0x01, 0x00, 0x43, 0x08, 0x03, 0x10, 0x03, 
-	0x00, 0x41, 0x00, 0x03, 0x08, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x01, 0x10, 0x81, 0x18, 0xc3, 
-	0x20, 0xc3, 0x49, 0xc9, 0x52, 0x4b, 0x52, 0x4b, 
-	0x5a, 0x8d, 0x7b, 0x53, 0x94, 0x15, 0x83, 0x95, 
-	0x41, 0x87, 0x4a, 0x47, 0x4a, 0x47, 0x20, 0x85, 
-	0x18, 0x85, 0x49, 0x4d, 0x41, 0x09, 0x08, 0x43, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x43, 0x41, 0x0b, 0x8a, 0x17, 0x9a, 0x5b, 
-	0xb4, 0x19, 0xc4, 0x9d, 0xab, 0xa1, 0x9b, 0xa5, 
-	0x49, 0x91, 0x28, 0x89, 0x08, 0x43, 0x08, 0x01, 
-	0x20, 0x87, 0x82, 0xe1, 0xb4, 0xb1, 0x93, 0xa3, 
-	0x93, 0x63, 0x82, 0xdd, 0x38, 0x87, 0x31, 0x0b, 
-	0x20, 0x87, 0x10, 0x83, 0x08, 0x01, 0x08, 0x43, 
-	0x20, 0x47, 0x20, 0xcb, 0x10, 0x89, 0x10, 0x87, 
-	0x08, 0x45, 0x08, 0x03, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x41, 0x20, 0xc3, 0x28, 0xc3, 
-	0x31, 0x05, 0x41, 0xc7, 0x62, 0xcd, 0x8b, 0xd5, 
-	0x6b, 0x11, 0x5a, 0x8d, 0x8c, 0x13, 0x8b, 0xd5, 
-	0x7b, 0x53, 0x52, 0x09, 0x39, 0xc7, 0x18, 0xc3, 
-	0x08, 0x41, 0x21, 0x09, 0x6a, 0x11, 0x51, 0x8b, 
-	0x08, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x08, 0x43, 
-	0x49, 0x0b, 0x81, 0xd9, 0x92, 0x19, 0xb4, 0x25, 
-	0xbc, 0x25, 0xa3, 0x65, 0x9a, 0xa1, 0x72, 0x9b, 
-	0x5a, 0x13, 0x49, 0xd3, 0x31, 0x0d, 0x18, 0x43, 
-	0x59, 0xd7, 0xb4, 0xaf, 0xc5, 0x75, 0xbc, 0xab, 
-	0xac, 0xab, 0x9b, 0x63, 0x92, 0xdd, 0x61, 0xd3, 
-	0x18, 0x85, 0x10, 0x01, 0x08, 0x43, 0x10, 0x83, 
-	0x18, 0x87, 0x18, 0x85, 0x10, 0x85, 0x08, 0x45, 
-	0x08, 0x41, 0x08, 0x03, 0x08, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x43, 0x00, 0x01, 0x08, 0x43, 
-	0x00, 0x01, 0x00, 0x01, 0x18, 0x81, 0x20, 0xc5, 
-	0x29, 0x43, 0x52, 0x0b, 0x93, 0xd7, 0x94, 0x57, 
-	0x94, 0x15, 0x8b, 0xd3, 0x7b, 0x91, 0x9c, 0x97, 
-	0xa4, 0x97, 0x73, 0x0d, 0x21, 0x45, 0x10, 0x83, 
-	0x00, 0x03, 0x08, 0x41, 0x31, 0x4b, 0x6a, 0x11, 
-	0x41, 0x49, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x30, 0xc9, 
-	0x81, 0xd7, 0x9a, 0x5f, 0xa3, 0x25, 0xb3, 0xe5, 
-	0xa2, 0xa3, 0x9a, 0xa3, 0xac, 0xab, 0x94, 0xab, 
-	0x94, 0xa9, 0x83, 0xa3, 0x72, 0x9b, 0x7a, 0x19, 
-	0x92, 0xdf, 0xb4, 0x2b, 0xc4, 0x9f, 0xab, 0x4d, 
-	0xa3, 0x19, 0x92, 0x9f, 0x79, 0x93, 0x40, 0xc7, 
-	0x4a, 0x0d, 0x39, 0x8d, 0x41, 0xcd, 0x52, 0x93, 
-	0x31, 0x8d, 0x18, 0x85, 0x10, 0x83, 0x10, 0x83, 
-	0x08, 0x01, 0x21, 0x07, 0x29, 0x07, 0x21, 0x07, 
-	0x08, 0x43, 0x00, 0x01, 0x08, 0x01, 0x08, 0x43, 
-	0x18, 0xc5, 0x18, 0x83, 0x31, 0x47, 0x5a, 0x8b, 
-	0x42, 0x07, 0x41, 0xc5, 0x39, 0x87, 0x5a, 0x4b, 
-	0x83, 0xd5, 0x94, 0x53, 0x94, 0x53, 0xac, 0xdb, 
-	0xa4, 0x97, 0x94, 0x53, 0x52, 0x8d, 0x10, 0x43, 
-	0x10, 0x83, 0x00, 0x41, 0x08, 0x03, 0x29, 0x07, 
-	0x6a, 0x15, 0x20, 0xc7, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x10, 0x43, 0x61, 0x0f, 
-	0x92, 0x5f, 0xb3, 0xa9, 0xab, 0x1f, 0xab, 0x11, 
-	0xa3, 0x21, 0xb4, 0xaf, 0xad, 0xb5, 0xad, 0x75, 
-	0xad, 0xb5, 0xb5, 0x73, 0xa3, 0xa9, 0x92, 0x5f, 
-	0x9a, 0x61, 0xbc, 0x2b, 0xc4, 0xdd, 0xbc, 0x53, 
-	0xb3, 0xdf, 0x9a, 0x19, 0x79, 0x4f, 0x79, 0x8f, 
-	0x9c, 0xa5, 0x7b, 0xdb, 0x73, 0x19, 0x63, 0x17, 
-	0x42, 0x11, 0x10, 0x83, 0x10, 0x85, 0x18, 0x43, 
-	0x31, 0x4b, 0x52, 0x91, 0x41, 0xcd, 0x19, 0x05, 
-	0x08, 0x43, 0x18, 0x43, 0x20, 0x43, 0x18, 0x85, 
-	0x42, 0x0f, 0x51, 0xcb, 0x20, 0xc5, 0x31, 0x45, 
-	0x21, 0x43, 0x20, 0xc3, 0x19, 0x05, 0x10, 0x83, 
-	0x21, 0x03, 0x62, 0xcf, 0x9c, 0x95, 0xac, 0xdb, 
-	0xbd, 0x61, 0xad, 0x1d, 0x94, 0x57, 0x39, 0x89, 
-	0x39, 0x09, 0x30, 0x87, 0x08, 0x43, 0x10, 0x43, 
-	0x41, 0x8f, 0x59, 0x91, 0x00, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x28, 0x87, 0x79, 0x0f, 
-	0x9a, 0xa3, 0xa3, 0x65, 0xa2, 0x9f, 0xa2, 0x9f, 
-	0xab, 0xe7, 0xad, 0x35, 0xa5, 0x73, 0xa5, 0x75, 
-	0xad, 0x75, 0xbd, 0x73, 0xab, 0x67, 0x9a, 0x19, 
-	0xab, 0x57, 0xab, 0xa3, 0xbc, 0x69, 0xb3, 0xe5, 
-	0x9a, 0x61, 0x91, 0x53, 0x89, 0x93, 0x9a, 0xdf, 
-	0x93, 0x61, 0x73, 0x59, 0x5a, 0x93, 0x73, 0x5b, 
-	0x39, 0xcf, 0x10, 0x83, 0x08, 0x43, 0x08, 0x43, 
-	0x39, 0x8b, 0x41, 0xcb, 0x39, 0x89, 0x18, 0x85, 
-	0x31, 0x49, 0x29, 0x07, 0x28, 0x87, 0x08, 0x41, 
-	0x20, 0xc7, 0x28, 0xc7, 0x08, 0x83, 0x00, 0x03, 
-	0x00, 0x01, 0x00, 0x01, 0x10, 0x83, 0x28, 0x87, 
-	0x39, 0x07, 0x31, 0x47, 0x83, 0x93, 0x9c, 0x99, 
-	0xac, 0xdf, 0xa4, 0x9f, 0x94, 0x99, 0x62, 0xcf, 
-	0x51, 0x89, 0x39, 0x09, 0x08, 0x03, 0x08, 0x43, 
-	0x10, 0x83, 0x51, 0x91, 0x18, 0x47, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x03, 0x48, 0x87, 0x81, 0x4f, 
-	0x81, 0xdb, 0x92, 0x5d, 0x92, 0x5f, 0x72, 0x5b, 
-	0x8b, 0xe5, 0x94, 0xb1, 0x94, 0xad, 0x94, 0xf1, 
-	0x94, 0xf1, 0x94, 0x69, 0x92, 0x61, 0x9a, 0x5d, 
-	0xaa, 0xdb, 0x9a, 0x9f, 0xab, 0xa9, 0xab, 0xa7, 
-	0xab, 0x65, 0x91, 0xdb, 0x91, 0x99, 0x9a, 0xe1, 
-	0x79, 0x95, 0x49, 0x0b, 0x28, 0xc5, 0x18, 0xc7, 
-	0x10, 0x83, 0x00, 0x01, 0x08, 0x03, 0x18, 0x87, 
-	0x59, 0x8b, 0x82, 0x8f, 0x82, 0x91, 0x72, 0x13, 
-	0x7a, 0x95, 0x93, 0x5b, 0x8b, 0x1d, 0x41, 0x4d, 
-	0x20, 0xc5, 0x29, 0x07, 0x10, 0x85, 0x08, 0x01, 
-	0x00, 0x43, 0x00, 0x01, 0x10, 0x43, 0x30, 0xc9, 
-	0x41, 0x09, 0x52, 0x07, 0x6b, 0x0d, 0x94, 0x17, 
-	0x94, 0x9b, 0x9c, 0x9d, 0x94, 0x5b, 0x8b, 0xd3, 
-	0x7b, 0x4d, 0x49, 0xc9, 0x08, 0x83, 0x08, 0x01, 
-	0x08, 0x43, 0x28, 0x87, 0x20, 0x87, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x03, 0x58, 0xc9, 0x89, 0xd3, 
-	0x69, 0x93, 0x28, 0x89, 0x30, 0xc9, 0x18, 0x87, 
-	0x49, 0x91, 0x4a, 0x17, 0x31, 0xd3, 0x39, 0xd5, 
-	0x5a, 0x59, 0x39, 0x51, 0x28, 0xc9, 0x51, 0x51, 
-	0x51, 0x11, 0x69, 0xd5, 0x61, 0x95, 0x82, 0x5b, 
-	0x9a, 0xe5, 0x91, 0x97, 0x81, 0x0d, 0x70, 0xc9, 
-	0x70, 0xcd, 0x68, 0xcf, 0x41, 0x09, 0x18, 0x85, 
-	0x08, 0x43, 0x08, 0x03, 0x00, 0x43, 0x10, 0x45, 
-	0x38, 0x89, 0x61, 0x4d, 0x61, 0x4d, 0x61, 0x51, 
-	0x82, 0x59, 0x93, 0x5b, 0x8a, 0xdb, 0x31, 0x09, 
-	0x00, 0x01, 0x08, 0x43, 0x10, 0x43, 0x08, 0x43, 
-	0x08, 0x83, 0x18, 0x45, 0x20, 0x87, 0x29, 0x07, 
-	0x6a, 0x91, 0x9c, 0x99, 0xac, 0x99, 0xac, 0xdd, 
-	0xbd, 0x69, 0xac, 0xe1, 0xbd, 0xa7, 0xb5, 0x23, 
-	0xbc, 0xdd, 0x94, 0x5d, 0x41, 0x49, 0x20, 0xc7, 
-	0x08, 0x45, 0x20, 0x83, 0x10, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x03, 0x50, 0x87, 0x92, 0x17, 
-	0x51, 0x93, 0x08, 0x01, 0x08, 0x43, 0x08, 0x03, 
-	0x10, 0x45, 0x10, 0x45, 0x19, 0x0b, 0x10, 0x45, 
-	0x18, 0x45, 0x08, 0x45, 0x08, 0x43, 0x08, 0x43, 
-	0x10, 0x45, 0x08, 0x03, 0x10, 0x45, 0x41, 0x0d, 
-	0x93, 0x25, 0x92, 0x1b, 0x89, 0x4d, 0x70, 0xc9, 
-	0x78, 0xcf, 0x79, 0x11, 0x61, 0x11, 0x20, 0x85, 
-	0x10, 0x05, 0x00, 0x41, 0x08, 0x03, 0x08, 0x01, 
-	0x08, 0x03, 0x31, 0x05, 0x41, 0x45, 0x31, 0x07, 
-	0x20, 0x85, 0x28, 0xc7, 0x20, 0xc7, 0x10, 0x43, 
-	0x08, 0x01, 0x00, 0x41, 0x18, 0x87, 0x10, 0x83, 
-	0x20, 0x87, 0x59, 0x8f, 0x9b, 0xe3, 0x83, 0x5d, 
-	0x8b, 0x5b, 0xb5, 0x27, 0xc5, 0xab, 0xc5, 0xa5, 
-	0xc5, 0xa5, 0xc5, 0xa9, 0xc5, 0xa5, 0xc5, 0x65, 
-	0xc5, 0xeb, 0x94, 0x21, 0x82, 0xd9, 0x51, 0x8f, 
-	0x08, 0x83, 0x20, 0x85, 0x08, 0x03, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x03, 0x48, 0x45, 0x81, 0x53, 
-	0x49, 0x4f, 0x10, 0x85, 0x08, 0x45, 0x08, 0x43, 
-	0x10, 0x45, 0x28, 0x89, 0x20, 0xc9, 0x31, 0x09, 
-	0x28, 0x89, 0x18, 0x85, 0x10, 0x45, 0x08, 0x45, 
-	0x10, 0x89, 0x08, 0x85, 0x08, 0x03, 0x10, 0x43, 
-	0x31, 0x09, 0x82, 0x59, 0x92, 0x9f, 0x7a, 0x19, 
-	0x61, 0x51, 0x49, 0x0b, 0x40, 0xc9, 0x28, 0xc9, 
-	0x18, 0x45, 0x08, 0x43, 0x20, 0x43, 0x20, 0x43, 
-	0x18, 0xc7, 0x49, 0x8d, 0x41, 0xc7, 0x31, 0x07, 
-	0x10, 0x83, 0x10, 0x43, 0x10, 0x43, 0x00, 0x41, 
-	0x08, 0x01, 0x08, 0x45, 0x29, 0x07, 0x21, 0x49, 
-	0x41, 0x4b, 0x9b, 0xe3, 0xc5, 0xf5, 0xac, 0xe9, 
-	0xa4, 0x25, 0xb5, 0x6f, 0xc5, 0xb1, 0xce, 0x2d, 
-	0xce, 0x31, 0xce, 0x33, 0xce, 0x2f, 0xcd, 0xeb, 
-	0xbd, 0x6b, 0x9c, 0x65, 0xa4, 0x65, 0x51, 0xd1, 
-	0x10, 0x43, 0x10, 0x43, 0x08, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x38, 0x49, 0x81, 0x53, 
-	0x49, 0x0d, 0x08, 0x45, 0x10, 0x87, 0x10, 0x47, 
-	0x20, 0x87, 0x39, 0x0b, 0x39, 0xcf, 0x39, 0x8d, 
-	0x31, 0x8d, 0x31, 0x0f, 0x28, 0xcb, 0x10, 0x87, 
-	0x10, 0x47, 0x10, 0x85, 0x00, 0x03, 0x08, 0x43, 
-	0x39, 0x8b, 0x5a, 0x8f, 0x5a, 0x4f, 0x31, 0x49, 
-	0x20, 0xc7, 0x30, 0xc7, 0x28, 0xc7, 0x18, 0x85, 
-	0x18, 0x87, 0x20, 0x85, 0x28, 0xc7, 0x41, 0x47, 
-	0x52, 0x11, 0x62, 0x93, 0x31, 0xcb, 0x39, 0x8b, 
-	0x18, 0xc5, 0x20, 0x85, 0x10, 0x83, 0x08, 0x43, 
-	0x00, 0x01, 0x08, 0x43, 0x20, 0xc5, 0x41, 0xcd, 
-	0x52, 0x53, 0x94, 0xa5, 0xad, 0x2b, 0xad, 0x2d, 
-	0xb5, 0xb3, 0xce, 0x37, 0xd6, 0x7b, 0xd6, 0xbb, 
-	0xd6, 0xbb, 0xd6, 0xbb, 0xd6, 0xbb, 0xce, 0x35, 
-	0xb5, 0x6f, 0xac, 0xa9, 0xb5, 0x2f, 0x59, 0xcf, 
-	0x18, 0x87, 0x10, 0x41, 0x08, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x20, 0x47, 0x81, 0xd9, 
-	0x7a, 0x19, 0x18, 0x87, 0x08, 0x43, 0x08, 0x45, 
-	0x20, 0x89, 0x31, 0x91, 0x31, 0x4f, 0x21, 0x4d, 
-	0x21, 0x0f, 0x31, 0xd3, 0x29, 0x51, 0x31, 0x53, 
-	0x29, 0x0d, 0x10, 0x87, 0x08, 0x45, 0x18, 0xc9, 
-	0x39, 0x91, 0x52, 0x51, 0x5a, 0xd3, 0x39, 0x8b, 
-	0x21, 0x09, 0x39, 0x09, 0x39, 0x49, 0x39, 0x4b, 
-	0x29, 0x4f, 0x20, 0x87, 0x18, 0xc5, 0x31, 0x0b, 
-	0x6b, 0x17, 0x7b, 0x5b, 0x62, 0xd3, 0x4a, 0x4d, 
-	0x18, 0xc7, 0x20, 0xc5, 0x20, 0xc7, 0x18, 0xc5, 
-	0x18, 0xc5, 0x20, 0x85, 0x30, 0x87, 0x49, 0xcf, 
-	0x83, 0xe3, 0xad, 0x2f, 0xbd, 0xf5, 0xce, 0x39, 
-	0xd6, 0xbb, 0xd6, 0x7b, 0xce, 0x7b, 0xd6, 0x7b, 
-	0xce, 0xbb, 0xd6, 0x7b, 0xd6, 0xbb, 0xce, 0x7b, 
-	0xb5, 0x2f, 0xad, 0x2b, 0x83, 0xdf, 0x31, 0x09, 
-	0x08, 0x43, 0x10, 0x43, 0x00, 0x41, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x08, 0x03, 0x51, 0x51, 
-	0x8a, 0x9d, 0x41, 0x4b, 0x08, 0x41, 0x10, 0x45, 
-	0x21, 0x0d, 0x29, 0x51, 0x31, 0x95, 0x21, 0x91, 
-	0x18, 0xcd, 0x21, 0x93, 0x29, 0x91, 0x31, 0x95, 
-	0x31, 0x53, 0x29, 0x0d, 0x18, 0xcd, 0x29, 0x4f, 
-	0x29, 0x93, 0x29, 0x51, 0x5a, 0x93, 0x52, 0x51, 
-	0x31, 0x4d, 0x39, 0x4b, 0x31, 0x09, 0x29, 0x4d, 
-	0x21, 0x0b, 0x18, 0xc7, 0x10, 0x43, 0x31, 0x09, 
-	0x6a, 0x97, 0x82, 0xd5, 0x5a, 0x0f, 0x41, 0x8b, 
-	0x29, 0x49, 0x29, 0x09, 0x42, 0x4f, 0x31, 0x4b, 
-	0x29, 0x09, 0x20, 0xc7, 0x31, 0x4d, 0x72, 0xdd, 
-	0xac, 0xef, 0xc6, 0x3b, 0xce, 0x7b, 0xc6, 0x7b, 
-	0xc6, 0x7d, 0xbe, 0x7b, 0xc6, 0x7b, 0xce, 0x7b, 
-	0xc6, 0x7d, 0xce, 0x7b, 0xd6, 0xbb, 0xce, 0x79, 
-	0xac, 0xed, 0x84, 0x61, 0x39, 0x8b, 0x18, 0x45, 
-	0x08, 0x41, 0x08, 0x43, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x18, 0x45, 
-	0x49, 0x4f, 0x59, 0xcf, 0x31, 0x49, 0x10, 0x85, 
-	0x18, 0x87, 0x28, 0xcf, 0x29, 0x93, 0x31, 0x93, 
-	0x29, 0x51, 0x29, 0x8f, 0x29, 0x4f, 0x19, 0x0d, 
-	0x29, 0x51, 0x21, 0x51, 0x29, 0x95, 0x31, 0x93, 
-	0x31, 0xd7, 0x3a, 0x19, 0x52, 0x97, 0x42, 0x0d, 
-	0x31, 0x49, 0x29, 0x47, 0x20, 0x85, 0x21, 0x0b, 
-	0x52, 0x97, 0x31, 0x4d, 0x29, 0x09, 0x28, 0xc9, 
-	0x71, 0xd5, 0x81, 0xd3, 0x61, 0xd3, 0x72, 0x17, 
-	0x59, 0xd3, 0x39, 0x0b, 0x49, 0xcd, 0x42, 0x0f, 
-	0x52, 0x13, 0x39, 0x4f, 0x52, 0x99, 0x9c, 0xf1, 
-	0xa5, 0xf9, 0xa6, 0x3b, 0xad, 0xfb, 0xa5, 0xf9, 
-	0xae, 0x3b, 0xad, 0xfb, 0xb6, 0x39, 0xb6, 0x3b, 
-	0xc6, 0x7b, 0xc6, 0x7d, 0xd6, 0xbb, 0xbd, 0xf5, 
-	0x94, 0x67, 0x52, 0x93, 0x18, 0x85, 0x08, 0x43, 
-	0x08, 0x41, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x18, 0x85, 0x28, 0x87, 0x41, 0x89, 0x4a, 0x4d, 
-	0x21, 0x0b, 0x18, 0x89, 0x28, 0xcd, 0x29, 0x93, 
-	0x21, 0x51, 0x20, 0xcb, 0x21, 0x0b, 0x29, 0x91, 
-	0x39, 0xd7, 0x42, 0x59, 0x42, 0x1b, 0x42, 0x9b, 
-	0x4a, 0x5b, 0x4a, 0x9d, 0x6b, 0x21, 0x83, 0x5f, 
-	0x83, 0x5f, 0x6a, 0x55, 0x41, 0x8d, 0x4a, 0x17, 
-	0x4a, 0x53, 0x49, 0xcf, 0x51, 0xd1, 0x61, 0xd3, 
-	0x61, 0xd3, 0x61, 0xd3, 0x62, 0x59, 0x8b, 0xa5, 
-	0x94, 0x6d, 0x8b, 0xe5, 0x82, 0xdd, 0x7a, 0x9b, 
-	0x8a, 0xa1, 0x73, 0x23, 0x84, 0x6d, 0x85, 0x35, 
-	0x8d, 0x35, 0x85, 0x77, 0x85, 0x37, 0x85, 0x35, 
-	0x85, 0x37, 0x8d, 0x77, 0x9d, 0xb9, 0xae, 0x39, 
-	0xbe, 0x3b, 0xc6, 0x7d, 0xce, 0x79, 0x94, 0x67, 
-	0x42, 0x11, 0x18, 0x85, 0x10, 0x83, 0x18, 0x85, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x43, 0x20, 0x85, 0x39, 0x8b, 
-	0x4a, 0x0f, 0x31, 0x91, 0x29, 0x53, 0x29, 0x51, 
-	0x21, 0x51, 0x29, 0x53, 0x31, 0xd5, 0x63, 0x61, 
-	0xa5, 0x73, 0xa5, 0x73, 0xa5, 0x75, 0xad, 0xb3, 
-	0xb5, 0xb7, 0xb5, 0xf9, 0xbe, 0x37, 0xa5, 0x33, 
-	0xb5, 0xb5, 0xbd, 0x75, 0xa4, 0xf1, 0x83, 0xe5, 
-	0x42, 0x11, 0x59, 0xd7, 0x8b, 0x1f, 0x82, 0xe1, 
-	0x93, 0x65, 0x8b, 0x65, 0x83, 0xe7, 0x84, 0xb1, 
-	0x74, 0xf3, 0x74, 0xf5, 0x74, 0xb1, 0x6c, 0x71, 
-	0x6c, 0xb1, 0x64, 0x71, 0x5c, 0xb1, 0x5c, 0xb1, 
-	0x54, 0x71, 0x54, 0x6f, 0x4c, 0x31, 0x54, 0x6f, 
-	0x5c, 0xb1, 0x85, 0x37, 0x95, 0xb9, 0xa5, 0xf9, 
-	0xb6, 0x39, 0xac, 0xf1, 0x8b, 0xe3, 0x41, 0x8f, 
-	0x18, 0x43, 0x08, 0x83, 0x18, 0x85, 0x08, 0x43, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x08, 0x03, 0x18, 0x83, 
-	0x21, 0x07, 0x41, 0xcf, 0x39, 0xd1, 0x29, 0x4f, 
-	0x21, 0x4f, 0x3a, 0x1b, 0x31, 0xd7, 0x52, 0x9d, 
-	0xad, 0xb5, 0xc6, 0xbd, 0xc6, 0x7d, 0xce, 0xbb, 
-	0xc6, 0x7d, 0xce, 0xbd, 0xc6, 0xbd, 0xce, 0x7b, 
-	0xbe, 0x3b, 0xc6, 0x7d, 0xbd, 0xf9, 0xa4, 0xef, 
-	0x8c, 0x29, 0x73, 0xa5, 0x8c, 0xb1, 0x74, 0xb3, 
-	0x74, 0xb3, 0x6c, 0xf5, 0x64, 0xb1, 0x5c, 0xb3, 
-	0x5c, 0xb1, 0x4c, 0x31, 0x54, 0x6f, 0x4c, 0x2d, 
-	0x43, 0xef, 0x43, 0xeb, 0x3b, 0xad, 0x3b, 0xab, 
-	0x3b, 0x6b, 0x33, 0xab, 0x43, 0xad, 0x4c, 0x6f, 
-	0x6c, 0xb3, 0x85, 0x77, 0x95, 0xb9, 0xa5, 0xb7, 
-	0x94, 0x67, 0x49, 0xd3, 0x28, 0xc9, 0x10, 0x41, 
-	0x10, 0x43, 0x10, 0x43, 0x00, 0x41, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x18, 0x45, 0x20, 0xc7, 0x31, 0x49, 0x39, 0xcd, 
-	0x4a, 0x15, 0x42, 0x5b, 0x3a, 0x17, 0x39, 0xd7, 
-	0x84, 0x69, 0xbe, 0x7b, 0xce, 0x7b, 0xc6, 0xbd, 
-	0xce, 0x7d, 0xce, 0xbd, 0xc6, 0x7d, 0xce, 0xbd, 
-	0xbe, 0x7d, 0xb6, 0x3b, 0xb6, 0x3b, 0xad, 0xf9, 
-	0x9d, 0xf9, 0x8d, 0x77, 0x85, 0x35, 0x7c, 0xf5, 
-	0x64, 0xb3, 0x5c, 0x71, 0x54, 0x6f, 0x4c, 0x2f, 
-	0x4b, 0xed, 0x43, 0xad, 0x43, 0xed, 0x3b, 0x6b, 
-	0x3b, 0xa9, 0x43, 0x6b, 0x3b, 0x6b, 0x33, 0x69, 
-	0x3b, 0xab, 0x3b, 0xed, 0x54, 0x2f, 0x64, 0xb3, 
-	0x84, 0xf3, 0x7c, 0x27, 0x63, 0x63, 0x52, 0x97, 
-	0x31, 0x4b, 0x20, 0xc9, 0x18, 0x83, 0x10, 0x83, 
-	0x10, 0x41, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x08, 0x01, 0x08, 0x43, 0x28, 0xc7, 
-	0x39, 0x4b, 0x42, 0x11, 0x41, 0xd1, 0x42, 0x51, 
-	0x5a, 0x57, 0x9c, 0xad, 0xbd, 0xf9, 0xbd, 0xf9, 
-	0xc6, 0x79, 0xc6, 0x7d, 0xce, 0x7b, 0xbe, 0xbd, 
-	0xbe, 0x3b, 0xae, 0x3b, 0xa5, 0xf9, 0x9d, 0xb9, 
-	0x95, 0x77, 0x95, 0x77, 0x95, 0x77, 0x85, 0x35, 
-	0x74, 0xb3, 0x64, 0x71, 0x64, 0x71, 0x5c, 0x6f, 
-	0x54, 0x2f, 0x4b, 0xed, 0x43, 0xad, 0x43, 0x69, 
-	0x3b, 0x6b, 0x3b, 0xab, 0x43, 0xed, 0x43, 0xed, 
-	0x4c, 0x2f, 0x6c, 0x71, 0x74, 0x2b, 0x73, 0x65, 
-	0x6a, 0xdd, 0x41, 0x8f, 0x29, 0x49, 0x18, 0xc7, 
-	0x39, 0x49, 0x29, 0x49, 0x10, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x08, 0x03, 
-	0x10, 0x43, 0x20, 0xc5, 0x31, 0x49, 0x31, 0x09, 
-	0x39, 0x49, 0x49, 0xcf, 0x73, 0x1d, 0x94, 0x25, 
-	0xa4, 0xef, 0xb5, 0xb5, 0xc6, 0x3b, 0xbe, 0x7b, 
-	0xbd, 0xfb, 0xb5, 0xf9, 0xa5, 0xf9, 0x9d, 0xf9, 
-	0x95, 0x77, 0x8d, 0x77, 0x8d, 0x37, 0x85, 0x35, 
-	0x6c, 0xb3, 0x64, 0xb1, 0x5c, 0x6f, 0x54, 0x31, 
-	0x4c, 0x2d, 0x43, 0xed, 0x4b, 0xef, 0x4b, 0xed, 
-	0x4c, 0x2f, 0x54, 0x6f, 0x5c, 0xb1, 0x6c, 0x6f, 
-	0x7b, 0xe9, 0x72, 0x9d, 0x62, 0x13, 0x49, 0xd3, 
-	0x4a, 0x0f, 0x31, 0x8b, 0x20, 0xc7, 0x20, 0xc3, 
-	0x10, 0x83, 0x08, 0x03, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x10, 0x43, 0x20, 0xc7, 
-	0x28, 0xc9, 0x29, 0x4b, 0x29, 0x0b, 0x31, 0x4b, 
-	0x31, 0x4d, 0x52, 0x13, 0x7b, 0xa3, 0x94, 0xad, 
-	0x8c, 0x25, 0x73, 0x5f, 0x73, 0x21, 0x7b, 0xa5, 
-	0x84, 0x6b, 0x8c, 0xb3, 0x84, 0xb3, 0x74, 0xf3, 
-	0x74, 0xb3, 0x64, 0xb3, 0x64, 0xb1, 0x64, 0xb1, 
-	0x64, 0xb1, 0x64, 0x71, 0x6c, 0xb1, 0x6c, 0xb3, 
-	0x7c, 0xb3, 0x84, 0xb1, 0x83, 0xe7, 0x62, 0x15, 
-	0x49, 0x8f, 0x39, 0x8b, 0x29, 0x49, 0x18, 0xc5, 
-	0x29, 0x07, 0x18, 0xc7, 0x08, 0x41, 0x08, 0x03, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x43, 0x10, 0x45, 0x18, 0xc7, 0x20, 0x89, 
-	0x20, 0xc7, 0x20, 0xc9, 0x31, 0xcf, 0x52, 0x57, 
-	0x4a, 0x55, 0x41, 0xd1, 0x39, 0x8b, 0x49, 0xd3, 
-	0x62, 0x57, 0x72, 0x99, 0x72, 0x5b, 0x7a, 0x9d, 
-	0x7a, 0xa1, 0x83, 0x61, 0x72, 0x9f, 0x6a, 0x99, 
-	0x72, 0x9d, 0x6a, 0xdd, 0x6a, 0xdd, 0x83, 0x61, 
-	0x7b, 0x1f, 0x62, 0x17, 0x49, 0xcf, 0x41, 0x8d, 
-	0x41, 0xcd, 0x29, 0x47, 0x18, 0x85, 0x08, 0x43, 
-	0x00, 0x41, 0x08, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x01, 0x10, 0x43, 0x10, 0x43, 0x10, 0x85, 
-	0x18, 0x45, 0x20, 0xc5, 0x20, 0xc7, 0x29, 0x09, 
-	0x28, 0xc7, 0x18, 0x85, 0x28, 0xc9, 0x49, 0x8f, 
-	0x61, 0xd3, 0x6a, 0x57, 0x72, 0x55, 0x72, 0x55, 
-	0x6a, 0x53, 0x62, 0x51, 0x5a, 0x51, 0x49, 0xd1, 
-	0x41, 0xcb, 0x21, 0x07, 0x18, 0x85, 0x08, 0x85, 
-	0x08, 0x01, 0x08, 0x43, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x08, 0x01, 0x00, 0x43, 0x08, 0x01, 0x08, 0x43, 
-	0x10, 0x41, 0x08, 0x03, 0x08, 0x43, 0x18, 0x85, 
-	0x18, 0x85, 0x18, 0xc7, 0x20, 0xc7, 0x18, 0xc7, 
-	0x10, 0x85, 0x10, 0x83, 0x08, 0x43, 0x08, 0x01, 
-	0x00, 0x43, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	
-};
-
-Gfx ragdoll_mario_mario_cap_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 ragdoll_mario_mario_cap_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf6, 0xb5, 
-	0xf5, 0xaf, 0xec, 0xe9, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf5, 0xef, 0xf5, 0x2b, 0xf5, 0x29, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf3, 0xe1, 0xf7, 0xbd, 
-	0xf7, 0x3b, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf5, 0xef, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf7, 0xbd, 
-	0xf3, 0x19, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf0, 0x45, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xee, 0xf7, 
-	0xf0, 0x85, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf5, 0x6d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf2, 0xd9, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf2, 0x11, 0xf1, 0xd1, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf4, 0xa5, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf3, 0x9d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf4, 0x21, 0xf7, 0xbd, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf7, 0xbd, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf5, 0x29, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf6, 0x33, 0xf7, 0xbd, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf4, 0xe7, 0xf7, 0xbd, 0xf2, 0x95, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf1, 0x4b, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf0, 0x87, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0x3b, 0xf4, 0xa5, 
-	0xf4, 0xa5, 0xf7, 0xbd, 0xf7, 0xbd, 0xf6, 0xb5, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf6, 0xf7, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x87, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf2, 0x55, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf4, 0x23, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf2, 0x13, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf3, 0xe1, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf0, 0x01, 
-	0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf6, 0x75, 0xf0, 0x01, 0xf0, 0x01, 0xf0, 0x01, 
-	0xf3, 0x9f, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0x7b, 
-	0xf3, 0x9f, 0xf0, 0x03, 0xf0, 0x01, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf0, 0x01, 0xf2, 0x13, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0x7d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbc, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbc, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx ragdoll_mario_mario_face_1_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 ragdoll_mario_mario_face_1_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x87, 0x00, 0x01, 0x08, 0x03, 0x08, 0x01, 
-	0x10, 0x43, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x00, 0x01, 0x18, 0x87, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 
-	0x08, 0x43, 0x08, 0x03, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x01, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x08, 0x01, 0x08, 0x03, 
-	0x10, 0x45, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x29, 0x4b, 0x00, 0x01, 
-	0x41, 0xcf, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x31, 0x8d, 0x00, 0x01, 0x20, 0xc9, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x18, 0x85, 0x08, 0x01, 0x39, 0x8f, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x41, 0xcf, 
-	0x00, 0x01, 0x39, 0x8f, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x03, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x03, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x20, 0xc7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x18, 0x87, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xef, 0xbd, 0xef, 0x7d, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xe7, 0x7d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xb6, 0xbd, 0x3c, 0x3b, 0x33, 0xf9, 0xa6, 0x3d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x44, 0x7b, 0x2b, 0xf9, 0x95, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xc6, 0xfd, 
-	0x2b, 0xb9, 0x1b, 0x77, 0x1b, 0x79, 0x23, 0xb9, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x44, 0x7b, 0x1b, 0x79, 0x1b, 0x79, 0x13, 0x37, 
-	0x95, 0xfd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0x5c, 0xbd, 
-	0x1b, 0x37, 0x23, 0xb9, 0x23, 0x35, 0x12, 0xf5, 
-	0x4c, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x85, 0x7d, 
-	0x12, 0xf5, 0x1b, 0x33, 0x23, 0xb9, 0x1b, 0x79, 
-	0x33, 0xf9, 0xdf, 0x7d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xd7, 0x3d, 0x2b, 0xb9, 
-	0x23, 0xb9, 0x1a, 0xf3, 0x00, 0x93, 0x00, 0x53, 
-	0x1a, 0xaf, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x3b, 0xf5, 
-	0x00, 0xd9, 0x00, 0x4b, 0x12, 0x6b, 0x23, 0xb9, 
-	0x1b, 0x77, 0xa6, 0x3d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x95, 0xfd, 0x1b, 0x79, 
-	0x23, 0xb9, 0x09, 0x1d, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x0b, 0x8d, 0x7d, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x01, 0x1d, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x4f, 0x1b, 0x35, 
-	0x1b, 0x79, 0x6c, 0xfd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x7d, 0x3d, 0x1b, 0x79, 
-	0x1b, 0x33, 0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x5c, 0x33, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x95, 0x7b, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x12, 0x29, 
-	0x23, 0xb9, 0x44, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x64, 0xfd, 0x1b, 0x79, 
-	0x12, 0x2b, 0x00, 0x01, 0x00, 0x01, 0x00, 0x8d, 
-	0x00, 0x01, 0x32, 0xe7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x6c, 0xb3, 0x00, 0x01, 
-	0x00, 0x8f, 0x00, 0x01, 0x00, 0x01, 0x09, 0x63, 
-	0x23, 0x79, 0x33, 0xfb, 0xef, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x54, 0xbb, 0x1b, 0x79, 
-	0x11, 0xe7, 0x00, 0x01, 0x21, 0xdd, 0xce, 0xbd, 
-	0x6c, 0x2f, 0x19, 0xe1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x53, 0xed, 0x32, 0x61, 
-	0xce, 0xbd, 0x53, 0xa9, 0x00, 0x01, 0x09, 0x1d, 
-	0x23, 0x79, 0x2b, 0xb9, 0xdf, 0x3d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x44, 0x7b, 0x23, 0x79, 
-	0x09, 0xe5, 0x00, 0x01, 0x5b, 0xeb, 0xf7, 0xbd, 
-	0xb6, 0x3d, 0x11, 0x9f, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x43, 0x29, 0x74, 0x6f, 
-	0xf7, 0xbd, 0x9d, 0xb9, 0x00, 0x01, 0x00, 0xd9, 
-	0x23, 0x77, 0x2b, 0xb9, 0xd7, 0x3d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x54, 0xbd, 0x1b, 0x79, 
-	0x11, 0xe7, 0x00, 0x01, 0x19, 0x9b, 0xb6, 0x3d, 
-	0x5b, 0xeb, 0x19, 0xe1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x4b, 0xad, 0x2a, 0x1f, 
-	0xb6, 0x3d, 0x4b, 0x67, 0x00, 0x01, 0x01, 0x1d, 
-	0x23, 0x77, 0x2b, 0xf9, 0xe7, 0x7d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x6c, 0xfd, 0x1b, 0x79, 
-	0x12, 0x29, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x2a, 0xa7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x64, 0x73, 0x00, 0x01, 
-	0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 0x09, 0x61, 
-	0x23, 0x79, 0x33, 0xfb, 0xef, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x7d, 0x3d, 0x1b, 0x79, 
-	0x1a, 0xf1, 0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x53, 0xf1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x8d, 0x3b, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x12, 0x27, 
-	0x1b, 0xb9, 0x4c, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x9e, 0x3d, 0x1b, 0x79, 
-	0x23, 0x77, 0x00, 0xd9, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x85, 0x7b, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0xd9, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x05, 0x1a, 0xf3, 
-	0x1b, 0x79, 0x75, 0x3d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xdf, 0x3d, 0x2b, 0xb9, 
-	0x23, 0xb9, 0x12, 0x6d, 0x00, 0x01, 0x00, 0x01, 
-	0x11, 0xe7, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x2b, 0x73, 
-	0x00, 0x0b, 0x00, 0x01, 0x09, 0xe5, 0x23, 0xb9, 
-	0x1b, 0x79, 0xae, 0x7d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0x6c, 0xfd, 
-	0x1b, 0x37, 0x23, 0xb9, 0x1a, 0xb1, 0x12, 0x6f, 
-	0x4c, 0x7b, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x7d, 0x3d, 
-	0x0a, 0x71, 0x12, 0xad, 0x23, 0x77, 0x1b, 0x79, 
-	0x3c, 0x3b, 0xe7, 0x7d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xd7, 0x3d, 
-	0x2b, 0xb9, 0x13, 0x37, 0x1b, 0x79, 0x23, 0x79, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x3c, 0x3b, 0x13, 0x79, 0x1b, 0x79, 0x13, 0x37, 
-	0x9e, 0x3d, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xbe, 0xbd, 0x54, 0xbd, 0x4c, 0xbb, 0xae, 0x7d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xc6, 0xfd, 0x5c, 0xbd, 0x4c, 0x7b, 0x9e, 0x3d, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx ragdoll_mario_mario_mustache_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 ragdoll_mario_mario_mustache_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx ragdoll_mario_mario_sideburn_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 ragdoll_mario_mario_sideburn_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x70, 0x01, 
-	0x78, 0x01, 0x68, 0x01, 0x60, 0x01, 0x50, 0x01, 
-	0x50, 0x01, 0x48, 0x01, 0x60, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xb0, 0x41, 0x80, 0x01, 
-	0x80, 0x01, 0x78, 0x01, 0x60, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x40, 0x01, 0x38, 0x01, 0x30, 0x01, 
-	0x28, 0x01, 0x30, 0x01, 0x38, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x88, 0x01, 0x88, 0x01, 
-	0x80, 0x01, 0x78, 0x01, 0x60, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x30, 0x01, 0x40, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x80, 0x01, 0x88, 0x01, 
-	0x78, 0x01, 0x68, 0x01, 0x58, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x28, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x90, 0x01, 0x88, 0x01, 0x80, 0x01, 
-	0x78, 0x01, 0x60, 0x01, 0x58, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x30, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xa8, 0x01, 0x80, 0x01, 0x80, 0x01, 0x78, 0x01, 
-	0x68, 0x01, 0x58, 0x01, 0x50, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x30, 0x01, 0x58, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xa8, 0x01, 
-	0x80, 0x01, 0x80, 0x01, 0x78, 0x01, 0x68, 0x01, 
-	0x58, 0x01, 0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x28, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x80, 0x01, 0x88, 0x01, 0x88, 0x01, 0x98, 0x01, 
-	0xff, 0xfe, 0xa8, 0x01, 0x88, 0x01, 0x80, 0x01, 
-	0x80, 0x01, 0x78, 0x01, 0x68, 0x01, 0x60, 0x01, 
-	0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x90, 0x01, 0x78, 0x01, 
-	0x80, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 
-	0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 
-	0x78, 0x01, 0x68, 0x01, 0x60, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 0x30, 0x01, 
-	0x50, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x90, 0x01, 0x68, 0x01, 0x78, 0x01, 
-	0x80, 0x01, 0x88, 0x01, 0x88, 0x01, 0x88, 0x01, 
-	0x80, 0x01, 0x80, 0x01, 0x78, 0x01, 0x68, 0x01, 
-	0x60, 0x01, 0x58, 0x01, 0x50, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 0x28, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x60, 0x01, 0x60, 0x01, 0x68, 0x01, 
-	0x78, 0x01, 0x78, 0x01, 0x78, 0x01, 0x78, 0x01, 
-	0x70, 0x01, 0x68, 0x01, 0x60, 0x01, 0x58, 0x01, 
-	0x50, 0x01, 0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x58, 0x01, 0x50, 0x01, 0x58, 0x01, 
-	0x60, 0x01, 0x60, 0x01, 0x60, 0x01, 0x60, 0x01, 
-	0x60, 0x01, 0x58, 0x01, 0x50, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x28, 0x01, 0x58, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x78, 0x01, 0x40, 0x01, 0x50, 0x01, 
-	0x50, 0x01, 0x50, 0x01, 0x50, 0x01, 0x50, 0x01, 
-	0x50, 0x01, 0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x30, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x60, 0x01, 0x50, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x28, 0x01, 0x60, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x58, 0x01, 
-	0x78, 0x01, 0x90, 0x01, 0x88, 0x01, 0x68, 0x01, 
-	0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x30, 0x01, 0x38, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x38, 0x01, 0x58, 0x01, 
-	0x78, 0x01, 0x80, 0x01, 0x80, 0x01, 0x68, 0x01, 
-	0x50, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x28, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x40, 0x01, 0x38, 0x01, 0x48, 0x01, 
-	0x58, 0x01, 0x60, 0x01, 0x60, 0x01, 0x58, 0x01, 
-	0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x28, 0x01, 
-	0x40, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x38, 0x01, 0x30, 0x01, 0x38, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x48, 0x01, 0x48, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x30, 0x01, 0x28, 0x01, 0x40, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x38, 0x01, 0x30, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 
-	0x40, 0x01, 0x40, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x30, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x30, 0x01, 0x38, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x20, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 
-	0x28, 0x01, 0x38, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x38, 0x01, 0x28, 0x01, 
-	0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 
-	0x38, 0x01, 0x38, 0x01, 0x38, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 0x28, 0x01, 
-	0x60, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x48, 0x01, 
-	0x20, 0x01, 0x28, 0x01, 0x28, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x30, 0x01, 0x38, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x28, 0x01, 0x40, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x68, 0x01, 0x38, 0x01, 0x20, 0x01, 0x28, 0x01, 
-	0x28, 0x01, 0x30, 0x01, 0x30, 0x01, 0x30, 0x01, 
-	0x30, 0x01, 0x28, 0x01, 0x28, 0x01, 0x28, 0x01, 
-	0x40, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x60, 0x01, 
-	0x50, 0x01, 0x38, 0x01, 0x40, 0x01, 0x38, 0x01, 
-	0x40, 0x01, 0x60, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx ragdoll_mario_mario_face_2_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 ragdoll_mario_mario_face_2_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x87, 0x00, 0x01, 0x08, 0x03, 0x08, 0x01, 
-	0x10, 0x43, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 
-	0x08, 0x43, 0x08, 0x03, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x01, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x08, 0x01, 0x08, 0x03, 
-	0x10, 0x45, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x29, 0x4b, 0x00, 0x01, 
-	0x41, 0xcf, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x31, 0x8d, 0x00, 0x01, 0x20, 0xc9, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x18, 0x85, 0x08, 0x01, 0x39, 0x8f, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x41, 0xcf, 
-	0x00, 0x01, 0x39, 0x8f, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x03, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x18, 0xc7, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x20, 0xc7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x08, 0x03, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x73, 0x9d, 0x52, 0x95, 0x18, 0xc7, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x42, 0x11, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x42, 0x11, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x18, 0xc7, 0x21, 0x09, 0x52, 0x95, 0x8c, 0x63, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x84, 0x21, 0x94, 0xa5, 0x73, 0x9d, 
-	0x42, 0x11, 0x21, 0x09, 0x18, 0xc7, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x32, 0xe7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x21, 0x09, 0x21, 0x09, 0x42, 0x11, 
-	0x73, 0x9d, 0x8c, 0x63, 0x94, 0xa5, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x54, 0xbb, 0x1b, 0x79, 
-	0x11, 0xe7, 0x00, 0x01, 0x21, 0xdd, 0xce, 0xbd, 
-	0x6c, 0x2f, 0x19, 0xe1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x53, 0xed, 0x32, 0x61, 
-	0xce, 0xbd, 0x53, 0xa9, 0x00, 0x01, 0x09, 0x1d, 
-	0x23, 0x79, 0x2b, 0xb9, 0xdf, 0x3d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x44, 0x7b, 0x23, 0x79, 
-	0x09, 0xe5, 0x00, 0x01, 0x5b, 0xeb, 0xf7, 0xbd, 
-	0xb6, 0x3d, 0x11, 0x9f, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x43, 0x29, 0x74, 0x6f, 
-	0xf7, 0xbd, 0x9d, 0xb9, 0x00, 0x01, 0x00, 0xd9, 
-	0x23, 0x77, 0x2b, 0xb9, 0xd7, 0x3d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x54, 0xbd, 0x1b, 0x79, 
-	0x11, 0xe7, 0x00, 0x01, 0x19, 0x9b, 0xb6, 0x3d, 
-	0x5b, 0xeb, 0x19, 0xe1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x4b, 0xad, 0x2a, 0x1f, 
-	0xb6, 0x3d, 0x4b, 0x67, 0x00, 0x01, 0x01, 0x1d, 
-	0x23, 0x77, 0x2b, 0xf9, 0xe7, 0x7d, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x6c, 0xfd, 0x1b, 0x79, 
-	0x12, 0x29, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x2a, 0xa7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x64, 0x73, 0x00, 0x01, 
-	0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 0x09, 0x61, 
-	0x23, 0x79, 0x33, 0xfb, 0xef, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x7d, 0x3d, 0x1b, 0x79, 
-	0x1a, 0xf1, 0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x53, 0xf1, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x8d, 0x3b, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x12, 0x27, 
-	0x1b, 0xb9, 0x4c, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x9e, 0x3d, 0x1b, 0x79, 
-	0x23, 0x77, 0x00, 0xd9, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x85, 0x7b, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0xd9, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x05, 0x1a, 0xf3, 
-	0x1b, 0x79, 0x75, 0x3d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xdf, 0x3d, 0x2b, 0xb9, 
-	0x23, 0xb9, 0x12, 0x6d, 0x00, 0x01, 0x00, 0x01, 
-	0x11, 0xe7, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x2b, 0x73, 
-	0x00, 0x0b, 0x00, 0x01, 0x09, 0xe5, 0x23, 0xb9, 
-	0x1b, 0x79, 0xae, 0x7d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0x6c, 0xfd, 
-	0x1b, 0x37, 0x23, 0xb9, 0x1a, 0xb1, 0x12, 0x6f, 
-	0x4c, 0x7b, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x7d, 0x3d, 
-	0x0a, 0x71, 0x12, 0xad, 0x23, 0x77, 0x1b, 0x79, 
-	0x3c, 0x3b, 0xe7, 0x7d, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xd7, 0x3d, 
-	0x2b, 0xb9, 0x13, 0x37, 0x1b, 0x79, 0x23, 0x79, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x3c, 0x3b, 0x13, 0x79, 0x1b, 0x79, 0x13, 0x37, 
-	0x9e, 0x3d, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xbe, 0xbd, 0x54, 0xbd, 0x4c, 0xbb, 0xae, 0x7d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xc6, 0xfd, 0x5c, 0xbd, 0x4c, 0x7b, 0x9e, 0x3d, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx ragdoll_mario_mario_face_3_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 ragdoll_mario_mario_face_3_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x87, 0x00, 0x01, 0x08, 0x03, 0x08, 0x01, 
-	0x10, 0x43, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x00, 0x01, 0x18, 0x87, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 0x08, 0x03, 
-	0x08, 0x43, 0x08, 0x03, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x01, 0x08, 0x43, 
-	0x08, 0x01, 0x08, 0x03, 0x08, 0x01, 0x08, 0x03, 
-	0x10, 0x45, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x29, 0x4b, 0x00, 0x01, 
-	0x41, 0xcf, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x31, 0x8d, 0x00, 0x01, 0x08, 0x03, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x18, 0x85, 0x08, 0x01, 0x39, 0x8f, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x03, 
-	0x00, 0x01, 0x39, 0x8f, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x18, 0xc7, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x18, 0xc7, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x20, 0xc7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x18, 0x87, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x31, 0x8d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x31, 0x8d, 
-	0x00, 0x05, 0x00, 0x05, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x05, 0x00, 0x05, 
-	0x31, 0x8d, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x31, 0x8d, 0x08, 0x43, 0x08, 0x43, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x21, 0x09, 0x21, 0x09, 0x21, 0x09, 
-	0x21, 0x09, 0x21, 0x09, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x21, 0x09, 0x21, 0x09, 0x21, 0x09, 
-	0x21, 0x09, 0x21, 0x09, 0x21, 0x09, 0x08, 0x43, 
-	0x08, 0x43, 0x08, 0x43, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 
-	0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 0x00, 0x05, 
-	0x00, 0x05, 0x00, 0x05, 0x00, 0x05, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x05, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x05, 0x08, 0x43, 0x08, 0x43, 0x08, 0x43, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx ragdoll_mario_mario_face_4_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 ragdoll_mario_mario_face_4_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe7, 0x39, 
-	0xe7, 0x39, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xe7, 0x39, 0xe7, 0x39, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xe7, 0x39, 0xe7, 0x39, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0xc6, 0x31, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 
-	0x73, 0x9d, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe7, 0x39, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xde, 0xf7, 0x42, 0x11, 
-	0x00, 0x01, 0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0x21, 0x09, 
-	0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 
-	0xc6, 0x31, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 
-	0x00, 0x01, 0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0x5a, 0xd7, 
-	0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 0xf7, 0xbd, 
-	0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 
-	0xf7, 0xbd, 0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 
-	0x42, 0x11, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xde, 0xf7, 
-	0x42, 0x11, 0x00, 0x01, 0x42, 0x11, 0xc6, 0x31, 
-	0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 
-	0xad, 0x6b, 0x42, 0x11, 0x00, 0x01, 0x42, 0x11, 
-	0xde, 0xf7, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xde, 0xf7, 0x21, 0x09, 0x00, 0x01, 0x08, 0x43, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xde, 0xf7, 0x21, 0x09, 0x00, 0x01, 
-	0x08, 0x43, 0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0x5a, 0xd7, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x5a, 0xd7, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xc6, 0x31, 0x08, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xc6, 0x31, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xad, 0x6b, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xad, 0x6b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xc6, 0x31, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xde, 0xf7, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 0x08, 0x43, 
-	0x00, 0x01, 0x42, 0x11, 0xde, 0xf7, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xde, 0xf7, 0x42, 0x11, 0x00, 0x01, 
-	0x08, 0x43, 0x00, 0x01, 0x00, 0x01, 0x5a, 0xd7, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xde, 0xf7, 
-	0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 0xad, 0x6b, 
-	0x21, 0x09, 0x00, 0x01, 0x42, 0x11, 0xde, 0xf7, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 
-	0x94, 0xa5, 0x00, 0x01, 0x00, 0x01, 0x21, 0x09, 
-	0xde, 0xf7, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0x42, 0x11, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xde, 0xf7, 
-	0x5a, 0xd7, 0x00, 0x01, 0x00, 0x01, 0x5a, 0xd7, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 
-	0xde, 0xf7, 0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 
-	0x42, 0x11, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xc6, 0x31, 0x00, 0x01, 
-	0x00, 0x01, 0x21, 0x09, 0xde, 0xf7, 0xf7, 0xbd, 
-	0xde, 0xf7, 0x42, 0x11, 0x00, 0x01, 0x21, 0x09, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0x42, 0x11, 0x00, 0x01, 0x00, 0x01, 0xc6, 0x31, 
-	0xf7, 0xbd, 0xc6, 0x31, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x00, 0x01, 
-	0x00, 0x01, 0x5a, 0xd7, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xde, 0xf7, 0x42, 0x11, 0x10, 0x85, 
-	0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe7, 0x39, 
-	0x00, 0x01, 0x00, 0x01, 0x42, 0x11, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x42, 0x11, 0x00, 0x01, 
-	0x00, 0x01, 0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xe7, 0x39, 
-	0xe7, 0x39, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xe7, 0x39, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xe7, 0x39, 0xe7, 0x39, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xe7, 0x39, 
-	0xe7, 0x39, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx ragdoll_mario_wing_2_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 ragdoll_mario_wing_2_rgba16[] = {
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x8c, 0x63, 0xbd, 0xef, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xad, 0x6b, 0xa5, 0x29, 0xb5, 0xad, 0xde, 0xf7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xce, 0x73, 0xef, 0x7b, 0xce, 0x73, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xf7, 0xbd, 0xef, 0x7b, 0xbd, 0xef, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xde, 0xf7, 0xe7, 0x39, 
-	0xe7, 0x39, 0xef, 0x7b, 0xef, 0x7b, 0xef, 0x7b, 
-	0xef, 0x7b, 0xef, 0x7b, 0xef, 0x7b, 0xef, 0x7b, 
-	0xef, 0x7b, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xd6, 0xb5, 0xad, 0x6b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xde, 0xf7, 0xe7, 0x39, 0xef, 0x7b, 0xef, 0x7b, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xe7, 0x39, 0xc6, 0x31, 0x9c, 0xe7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xe7, 0x39, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xef, 0x7b, 0xce, 0x73, 0xb5, 0xad, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xe7, 0x39, 
-	0xd6, 0xb5, 0xbd, 0xef, 0x9c, 0xe7, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xef, 0x7b, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xe7, 0x39, 0xde, 0xf7, 0xce, 0x73, 
-	0xbd, 0xef, 0xbd, 0xef, 0x94, 0xa5, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xd6, 0xb5, 0xce, 0x73, 0xc6, 0x31, 0xb5, 0xad, 
-	0xb5, 0xad, 0xbd, 0xef, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x31, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xb5, 0xad, 0xc6, 0x31, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xe7, 0x39, 0xd6, 0xb5, 0xce, 0x73, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xbd, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xbd, 0xef, 
-	0xc6, 0x31, 0xde, 0xf7, 0xe7, 0x39, 0xe7, 0x39, 
-	0xe7, 0x39, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xef, 0x7b, 0xef, 0x7b, 0xef, 0x7b, 
-	0xe7, 0x39, 0xe7, 0x39, 0xe7, 0x39, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xd6, 0xb5, 0xde, 0xf7, 
-	0xd6, 0xb5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xbd, 0xef, 
-	0xc6, 0x31, 0xde, 0xf7, 0xef, 0x7b, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xef, 0x7b, 
-	0xad, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xb5, 0xad, 0xc6, 0x31, 0xde, 0xf7, 0xe7, 0x39, 
-	0xef, 0x7b, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xef, 0x7b, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 
-	0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 0xef, 0x7b, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xef, 0x7b, 0xce, 0x73, 0x9c, 0xe7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 0xe7, 0x39, 
-	0xef, 0x7b, 0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xe7, 0x39, 0xc6, 0x31, 0xad, 0x6b, 0x8c, 0x63, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x31, 0xbd, 0xef, 0xc6, 0x31, 
-	0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 
-	0xe7, 0x39, 0xe7, 0x39, 0xde, 0xf7, 0xce, 0x73, 
-	0xbd, 0xef, 0xad, 0x6b, 0x94, 0xa5, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xbd, 0xef, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xbd, 0xef, 0xb5, 0xad, 0xad, 0x6b, 
-	0xa5, 0x29, 0x94, 0xa5, 0x7b, 0xdf, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x94, 0xa5, 0x7b, 0xdf, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 0x8c, 0x63, 
-	0x8c, 0x63, 0x8c, 0x63, 0x84, 0x21, 0x84, 0x21, 
-	0x84, 0x21, 0x8c, 0x63, 0x8c, 0x63, 0x8c, 0x63, 
-	0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 0x84, 0x21, 
-	0x73, 0x9d, 0x52, 0x95, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 
-	0x84, 0x21, 0x84, 0x21, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 
-	0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 
-	0x73, 0x9d, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x73, 0x9d, 0x63, 0x19, 
-	0x4a, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x94, 0xa5, 0x8c, 0x63, 0x84, 0x21, 0x7b, 0xdf, 
-	0x73, 0x9d, 0x73, 0x9d, 0x6b, 0x5b, 0x63, 0x19, 
-	0x63, 0x19, 0x5a, 0xd7, 0x5a, 0xd7, 0x52, 0x95, 
-	0x52, 0x95, 0x52, 0x95, 0x52, 0x95, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x42, 0x11, 0x39, 0xcf, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x84, 0x21, 0x7b, 0xdf, 0x73, 0x9d, 0x6b, 0x5b, 
-	0x63, 0x19, 0x5a, 0xd7, 0x4a, 0x53, 0x5a, 0xd7, 
-	0x52, 0x95, 0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x52, 0x95, 0x39, 0xcf, 
-	0x39, 0xcf, 0x31, 0x8d, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0x9d, 0x6b, 0x5b, 0x5a, 0xd7, 0x63, 0x19, 
-	0x5a, 0xd7, 0x63, 0x19, 0x6b, 0x5b, 0x6b, 0x5b, 
-	0x63, 0x19, 0x63, 0x19, 0x63, 0x19, 0x63, 0x19, 
-	0x63, 0x19, 0x63, 0x19, 0x63, 0x19, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x42, 0x11, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x63, 0x19, 0x6b, 0x5b, 0x63, 0x19, 0x63, 0x19, 
-	0x5a, 0xd7, 0x7b, 0xdf, 0x84, 0x21, 0x8c, 0x63, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xa5, 0x29, 0xbd, 0xef, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x63, 0x19, 0x84, 0x21, 0xa5, 0x29, 0xbd, 0xef, 
-	0xe7, 0x39, 0xef, 0x7b, 0xef, 0x7b, 0xef, 0x7b, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xe7, 0x39, 
-	0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 0xef, 0x7b, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xce, 0x73, 0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 
-	0xe7, 0x39, 0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xe7, 0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xce, 0x73, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 0xde, 0xf7, 
-	0xde, 0xf7, 0xde, 0xf7, 0xe7, 0x39, 0xe7, 0x39, 
-	0xce, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xce, 0x73, 0xc6, 0x31, 
-	0xa5, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0xa5, 0x29, 
-	0xa5, 0x29, 0x94, 0xa5, 0x84, 0x21, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 
-	0x73, 0x9d, 0x52, 0x95, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0x9d, 0x7b, 0xdf, 0x84, 0x21, 0x84, 0x21, 
-	0x84, 0x21, 0x8c, 0x63, 0x8c, 0x63, 0x8c, 0x63, 
-	0x8c, 0x63, 0x84, 0x21, 0x84, 0x21, 0x84, 0x21, 
-	0x7b, 0xdf, 0x6b, 0x5b, 0x5a, 0xd7, 0x52, 0x95, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x84, 0x21, 0x73, 0x9d, 0x63, 0x19, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x52, 0x95, 0x5a, 0xd7, 0x4a, 0x53, 
-	0x39, 0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xe7, 0x39, 0xe7, 0x39, 0xe7, 0x39, 0xde, 0xf7, 
-	0xce, 0x73, 0xc6, 0x31, 0xad, 0x6b, 0x9c, 0xe7, 
-	0x9c, 0xe7, 0x84, 0x21, 0x7b, 0xdf, 0x6b, 0x5b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 
-	0xde, 0xf7, 0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xbd, 0xef, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xb5, 0xad, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xb5, 0xad, 0x9c, 0xe7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x84, 0x21, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x8c, 0x63, 0x8c, 0x63, 0x84, 0x21, 
-	0x73, 0x9d, 0x5a, 0xd7, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0x9d, 0x73, 0x9d, 0x6b, 0x5b, 0x6b, 0x5b, 
-	0x63, 0x19, 0x5a, 0xd7, 0x4a, 0x53, 0x42, 0x11, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x4a, 0x53, 0x42, 0x11, 0x42, 0x11, 0x42, 0x11, 
-	0x42, 0x11, 0x42, 0x11, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x6b, 0x5b, 0x6b, 0x5b, 0x6b, 0x5b, 0x73, 0x9d, 
-	0x73, 0x9d, 0x7b, 0xdf, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xc6, 0x31, 0xad, 0x6b, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 
-	0x94, 0xa5, 0x73, 0x9d, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 0x73, 0x9d, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x63, 0x19, 0x52, 0x95, 0x42, 0x11, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	
-};
-
-Gfx ragdoll_mario_wing1_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 ragdoll_mario_wing1_rgba16[] = {
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x63, 
-	0x94, 0xa5, 0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x84, 0x21, 0x8c, 0x63, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 
-	0xbd, 0xef, 0xc6, 0x31, 0xce, 0x73, 0xd6, 0xb5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0xdf, 
-	0x84, 0x21, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 0xbd, 0xef, 
-	0xc6, 0x31, 0xce, 0x73, 0xd6, 0xb5, 0xde, 0xf7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x84, 0x21, 0x8c, 0x63, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xb5, 0xad, 0xbd, 0xef, 0xc6, 0x31, 
-	0xce, 0x73, 0xd6, 0xb5, 0xde, 0xf7, 0xe7, 0x39, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 0x84, 0x21, 
-	0x8c, 0x63, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xad, 0x6b, 0xbd, 0xef, 0xc6, 0x31, 0xce, 0x73, 
-	0xd6, 0xb5, 0xde, 0xf7, 0xe7, 0x39, 0xef, 0x7b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6b, 0x5b, 
-	0x6b, 0x5b, 0x73, 0x9d, 0x7b, 0xdf, 0x84, 0x21, 
-	0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xbd, 0xef, 0xce, 0x73, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xde, 0xf7, 0xe7, 0x39, 0xef, 0x7b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x63, 0x19, 0x63, 0x19, 
-	0x6b, 0x5b, 0x73, 0x9d, 0x7b, 0xdf, 0x8c, 0x63, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 
-	0xbd, 0xef, 0xc6, 0x31, 0xce, 0x73, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xde, 0xf7, 0xde, 0xf7, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x5a, 0xd7, 0x63, 0x19, 
-	0x6b, 0x5b, 0x7b, 0xdf, 0x84, 0x21, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xb5, 0xad, 0xbd, 0xef, 
-	0xc6, 0x31, 0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xce, 0x73, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x52, 0x95, 0x5a, 0xd7, 0x6b, 0x5b, 
-	0x73, 0x9d, 0x84, 0x21, 0x8c, 0x63, 0x94, 0xa5, 
-	0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 0xbd, 0xef, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xb5, 0xad, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x4a, 0x53, 0x52, 0x95, 0x63, 0x19, 0x6b, 0x5b, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xad, 0x6b, 0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x42, 0x11, 0x5a, 0xd7, 0x63, 0x19, 0x73, 0x9d, 
-	0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0x9c, 0xe7, 0xb5, 0xad, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0xcf, 
-	0x4a, 0x53, 0x5a, 0xd7, 0x6b, 0x5b, 0x7b, 0xdf, 
-	0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xb5, 0xad, 0xc6, 0x31, 0xd6, 0xb5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 0x42, 0x11, 
-	0x52, 0x95, 0x63, 0x19, 0x73, 0x9d, 0x84, 0x21, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 
-	0xc6, 0x31, 0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x42, 0x11, 
-	0x5a, 0xd7, 0x6b, 0x5b, 0x7b, 0xdf, 0x8c, 0x63, 
-	0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 0xbd, 0xef, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x21, 0x09, 0x39, 0xcf, 0x52, 0x95, 
-	0x63, 0x19, 0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 
-	0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0xa5, 0x29, 0xa5, 0x29, 
-	0xa5, 0x29, 0xb5, 0xad, 0xbd, 0xef, 0xc6, 0x31, 
-	0xc6, 0x31, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x29, 0x4b, 0x4a, 0x53, 0x5a, 0xd7, 
-	0x6b, 0x5b, 0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0xad, 0x6b, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x18, 0xc7, 0x39, 0xcf, 0x52, 0x95, 0x63, 0x19, 
-	0x73, 0x9d, 0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0xad, 0x6b, 0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 
-	0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0xa5, 0x29, 0xa5, 0x29, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x21, 0x09, 0x42, 0x11, 0x5a, 0xd7, 0x6b, 0x5b, 
-	0x7b, 0xdf, 0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x31, 0x8d, 0x52, 0x95, 0x63, 0x19, 0x73, 0x9d, 
-	0x84, 0x21, 0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 
-	0x42, 0x11, 0x5a, 0xd7, 0x6b, 0x5b, 0x7b, 0xdf, 
-	0x8c, 0x63, 0x9c, 0xe7, 0xa5, 0x29, 0xb5, 0xad, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x94, 0xa5, 0x8c, 0x63, 0x84, 0x21, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 
-	0x4a, 0x53, 0x63, 0x19, 0x73, 0x9d, 0x84, 0x21, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xad, 0x6b, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x94, 0xa5, 0x8c, 0x63, 0x7b, 0xdf, 0x73, 0x9d, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x18, 0xc7, 0x39, 0xcf, 
-	0x52, 0x95, 0x6b, 0x5b, 0x7b, 0xdf, 0x8c, 0x63, 
-	0x94, 0xa5, 0xa5, 0x29, 0xb5, 0xad, 0xb5, 0xad, 
-	0xb5, 0xad, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 
-	0x84, 0x21, 0x7b, 0xdf, 0x6b, 0x5b, 0x63, 0x19, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 0x4a, 0x53, 
-	0x5a, 0xd7, 0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 
-	0xad, 0x6b, 0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 0x84, 0x21, 
-	0x73, 0x9d, 0x63, 0x19, 0x73, 0x9d, 0x63, 0x19, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x52, 0x95, 
-	0x63, 0x19, 0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 
-	0xa5, 0x29, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x94, 0xa5, 0x84, 0x21, 0x73, 0x9d, 
-	0x7b, 0xdf, 0x73, 0x9d, 0x94, 0xa5, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x18, 0xc7, 0x39, 0xcf, 0x5a, 0xd7, 
-	0x6b, 0x5b, 0x7b, 0xdf, 0x8c, 0x63, 0x9c, 0xe7, 
-	0xad, 0x6b, 0xb5, 0xad, 0xbd, 0xef, 0x9c, 0xe7, 
-	0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0x94, 0xa5, 
-	0x94, 0xa5, 0x84, 0x21, 0x84, 0x21, 0x73, 0x9d, 
-	0x94, 0xa5, 0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x21, 0x09, 0x42, 0x11, 0x63, 0x19, 
-	0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xad, 0x6b, 0xb5, 0xad, 0xad, 0x6b, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x8c, 0x63, 0x84, 0x21, 0x73, 0x9d, 0xad, 0x6b, 
-	0xbd, 0xef, 0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x29, 0x4b, 0x52, 0x95, 0x63, 0x19, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 
-	0xb5, 0xad, 0xbd, 0xef, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 
-	0x84, 0x21, 0x94, 0xa5, 0xad, 0x6b, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x18, 0xc7, 0x39, 0xcf, 0x5a, 0xd7, 0x6b, 0x5b, 
-	0x7b, 0xdf, 0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 
-	0xb5, 0xad, 0xa5, 0x29, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x21, 0x09, 0x42, 0x11, 0x5a, 0xd7, 0x73, 0x9d, 
-	0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 
-	0xb5, 0xad, 0x94, 0xa5, 0x94, 0xa5, 0xa5, 0x29, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0xad, 0x6b, 0xce, 0x73, 0xef, 0x7b, 
-	0xe7, 0x39, 0xd6, 0xb5, 0xc6, 0x31, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0xa5, 0x29, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x29, 0x4b, 0x4a, 0x53, 0x63, 0x19, 0x7b, 0xdf, 
-	0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 0xb5, 0xad, 
-	0xad, 0x6b, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xad, 0x6b, 0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 
-	0xad, 0x6b, 0xe7, 0x39, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 0xef, 0x7b, 
-	0xbd, 0xef, 0x94, 0xa5, 0x8c, 0x63, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x29, 0x4b, 0x52, 0x95, 0x6b, 0x5b, 0x7b, 0xdf, 
-	0x8c, 0x63, 0x94, 0xa5, 0xa5, 0x29, 0xb5, 0xad, 
-	0x94, 0xa5, 0x94, 0xa5, 0xa5, 0x29, 0xa5, 0x29, 
-	0xad, 0x6b, 0xad, 0x6b, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xd6, 0xb5, 0xde, 0xf7, 0xe7, 0x39, 0xef, 0x7b, 
-	0xef, 0x7b, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xb5, 0xad, 0x73, 0x9d, 0x73, 0x9d, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x39, 0xcf, 0x5a, 0xd7, 0x73, 0x9d, 0x84, 0x21, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xad, 0x6b, 0xad, 0x6b, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 
-	0xad, 0x6b, 0xa5, 0x29, 0x9c, 0xe7, 0xc6, 0x31, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xe7, 0x39, 0xe7, 0x39, 0xef, 0x7b, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0x9c, 0xe7, 0x84, 0x21, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 
-	0x42, 0x11, 0x63, 0x19, 0x73, 0x9d, 0x84, 0x21, 
-	0x94, 0xa5, 0xa5, 0x29, 0xad, 0x6b, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0xb5, 0xad, 0xb5, 0xad, 
-	0xbd, 0xef, 0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xde, 0xf7, 0xde, 0xf7, 0xe7, 0x39, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 
-	0x4a, 0x53, 0x63, 0x19, 0x7b, 0xdf, 0x8c, 0x63, 
-	0x94, 0xa5, 0xa5, 0x29, 0xa5, 0x29, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0xad, 0x6b, 0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xa5, 0x29, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 
-	0x52, 0x95, 0x6b, 0x5b, 0x7b, 0xdf, 0x94, 0xa5, 
-	0x94, 0xa5, 0xa5, 0x29, 0xa5, 0x29, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x7b, 0xdf, 0xb5, 0xad, 0xc6, 0x31, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 
-	0x52, 0x95, 0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xad, 0x6b, 0x94, 0xa5, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 0xa5, 0x29, 
-	0x8c, 0x63, 0x4a, 0x53, 0x5a, 0xd7, 0x63, 0x19, 
-	0x6b, 0x5b, 0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 
-	0x6b, 0x5b, 0x63, 0x19, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0xad, 0x6b, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 
-	0x5a, 0xd7, 0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 
-	0x7b, 0xdf, 0x52, 0x95, 0x4a, 0x53, 0x4a, 0x53, 
-	0x4a, 0x53, 0x4a, 0x53, 0x42, 0x11, 0x42, 0x11, 
-	0x42, 0x11, 0x42, 0x11, 0x6b, 0x5b, 0x94, 0xa5, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 
-	0x00, 0x00, 0x00, 0x00, 0x18, 0xc7, 0x39, 0xcf, 
-	0x63, 0x19, 0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 
-	0xa5, 0x29, 0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xb5, 0xad, 
-	0x94, 0xa5, 0x84, 0x21, 0x73, 0x9d, 0x6b, 0x5b, 
-	0x5a, 0xd7, 0x4a, 0x53, 0x4a, 0x53, 0x4a, 0x53, 
-	0x4a, 0x53, 0x7b, 0xdf, 0x84, 0x21, 0x8c, 0x63, 
-	0x8c, 0x63, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 0x42, 0x11, 
-	0x63, 0x19, 0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 
-	0xa5, 0x29, 0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 
-	0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xde, 0xf7, 0xe7, 0x39, 0xef, 0x7b, 
-	0xf7, 0xbd, 0xef, 0x7b, 0xd6, 0xb5, 0x8c, 0x63, 
-	0x4a, 0x53, 0x5a, 0xd7, 0x63, 0x19, 0x63, 0x19, 
-	0x6b, 0x5b, 0x6b, 0x5b, 0x73, 0x9d, 0x73, 0x9d, 
-	0x00, 0x00, 0x00, 0x00, 0x21, 0x09, 0x4a, 0x53, 
-	0x6b, 0x5b, 0x7b, 0xdf, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xbd, 0xef, 
-	0xc6, 0x31, 0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 
-	0xde, 0xf7, 0xef, 0x7b, 0xf7, 0xbd, 0xce, 0x73, 
-	0x42, 0x11, 0x42, 0x11, 0x39, 0xcf, 0x42, 0x11, 
-	0x42, 0x11, 0x4a, 0x53, 0x4a, 0x53, 0x4a, 0x53, 
-	0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 0x52, 0x95, 
-	0x6b, 0x5b, 0x84, 0x21, 0x94, 0xa5, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xbd, 0xef, 0xc6, 0x31, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0xb5, 0xce, 0x73, 
-	0xbd, 0xef, 0xad, 0x6b, 0x9c, 0xe7, 0x8c, 0x63, 
-	0x8c, 0x63, 0x7b, 0xdf, 0x73, 0x9d, 0x6b, 0x5b, 
-	0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 0x52, 0x95, 
-	0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xa5, 0x29, 0x94, 0xa5, 0x8c, 0x63, 0x94, 0xa5, 
-	0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 
-	0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x31, 
-	0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 0x5a, 0xd7, 
-	0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xa5, 0x29, 0x52, 0x95, 0x5a, 0xd7, 0x73, 0x9d, 
-	0x84, 0x21, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x7b, 0xdf, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x29, 0xad, 0x6b, 0xad, 0x6b, 
-	0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 0xad, 0x6b, 
-	0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 0x5a, 0xd7, 
-	0x73, 0x9d, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 
-	0x8c, 0x63, 0x4a, 0x53, 0x4a, 0x53, 0x42, 0x11, 
-	0x42, 0x11, 0x4a, 0x53, 0x4a, 0x53, 0x52, 0x95, 
-	0x42, 0x11, 0x52, 0x95, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x5a, 0xd7, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 
-	0x52, 0x95, 0x4a, 0x53, 0x4a, 0x53, 0x4a, 0x53, 
-	0x4a, 0x53, 0x39, 0xcf, 0x39, 0xcf, 0x39, 0xcf, 
-	0x42, 0x11, 0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x73, 0x9d, 0x63, 0x19, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x5a, 0xd7, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xad, 0x6b, 
-	0xa5, 0x29, 0x73, 0x9d, 0x63, 0x19, 0x4a, 0x53, 
-	0x4a, 0x53, 0x42, 0x11, 0x42, 0x11, 0x39, 0xcf, 
-	0x42, 0x11, 0x42, 0x11, 0x42, 0x11, 0x42, 0x11, 
-	0x4a, 0x53, 0x4a, 0x53, 0x42, 0x11, 0x42, 0x11, 
-	0x39, 0xcf, 0x39, 0xcf, 0x31, 0x8d, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x63, 0x19, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0xa5, 0x29, 
-	0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 0xad, 0x6b, 
-	0x9c, 0xe7, 0x7b, 0xdf, 0x73, 0x9d, 0x73, 0x9d, 
-	0x5a, 0xd7, 0x52, 0x95, 0x42, 0x11, 0x4a, 0x53, 
-	0x42, 0x11, 0x42, 0x11, 0x4a, 0x53, 0x4a, 0x53, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x63, 0x19, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x8c, 0x63, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x94, 0xa5, 0xbd, 0xef, 0xc6, 0x31, 0xce, 0x73, 
-	0xce, 0x73, 0xce, 0x73, 0xbd, 0xef, 0xad, 0x6b, 
-	0xa5, 0x29, 0x94, 0xa5, 0x94, 0xa5, 0x73, 0x9d, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x63, 0x19, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x8c, 0x63, 0x94, 0xa5, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x5a, 0xd7, 0x63, 0x19, 
-	0x63, 0x19, 0x63, 0x19, 0x5a, 0xd7, 0x5a, 0xd7, 
-	0x9c, 0xe7, 0xad, 0x6b, 0xad, 0x6b, 0xb5, 0xad, 
-	0xb5, 0xad, 0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 
-	0xbd, 0xef, 0xbd, 0xef, 0xbd, 0xef, 0xad, 0x6b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x31, 0x8d, 0x63, 0x19, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x9c, 0xe7, 0x6b, 0x5b, 0x31, 0x8d, 0x31, 0x8d, 
-	0x39, 0xcf, 0x39, 0xcf, 0x52, 0x95, 0x8c, 0x63, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 0x9c, 0xe7, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x8c, 0x63, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x29, 0x4b, 0x5a, 0xd7, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x39, 0xcf, 0x21, 0x09, 0x29, 0x4b, 
-	0x31, 0x8d, 0x39, 0xcf, 0x63, 0x19, 0x6b, 0x5b, 
-	0x73, 0x9d, 0x73, 0x9d, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x73, 0x9d, 
-	0x63, 0x19, 0x4a, 0x53, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0xd7, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 
-	0x84, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x21, 0x09, 0x21, 0x09, 0x31, 0x8d, 0x31, 0x8d, 
-	0x39, 0xcf, 0x39, 0xcf, 0x39, 0xcf, 0x42, 0x11, 
-	0x39, 0xcf, 0x39, 0xcf, 0x39, 0xcf, 0x29, 0x4b, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0xd7, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x94, 0xa5, 0x8c, 0x63, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0xd7, 
-	0x84, 0x21, 0x8c, 0x63, 0x84, 0x21, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x84, 0x21, 0x7b, 0xdf, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	
-};
-
-Vtx ragdoll_mario_000_offset_mesh_layer_1_vtx_0[76] = {
-	{{ {73, 11, 0}, 0, {-16, -16}, {127, 5, 0, 255} }},
-	{{ {55, -61, -36}, 0, {-16, -16}, {100, 181, 232, 255} }},
-	{{ {44, -10, -92}, 0, {-16, -16}, {81, 240, 159, 255} }},
-	{{ {55, -61, 36}, 0, {-16, -16}, {100, 181, 24, 255} }},
-	{{ {44, -9, 92}, 0, {-16, -16}, {81, 241, 97, 255} }},
-	{{ {43, 40, 91}, 0, {-16, -16}, {69, 44, 97, 255} }},
-	{{ {52, 70, 38}, 0, {-16, -16}, {92, 84, 26, 255} }},
-	{{ {52, 70, -39}, 0, {-16, -16}, {92, 83, 229, 255} }},
-	{{ {43, 40, -91}, 0, {-16, -16}, {69, 44, 159, 255} }},
-	{{ {6, 33, -95}, 0, {-16, -16}, {227, 39, 139, 255} }},
-	{{ {8, -8, -99}, 0, {-16, -16}, {235, 244, 131, 255} }},
-	{{ {36, -51, -79}, 0, {-16, -16}, {58, 183, 169, 255} }},
-	{{ {26, -74, -46}, 0, {-16, -16}, {25, 136, 222, 255} }},
-	{{ {26, -74, 45}, 0, {-16, -16}, {24, 135, 32, 255} }},
-	{{ {36, -52, 79}, 0, {-16, -16}, {58, 182, 86, 255} }},
-	{{ {8, -8, 99}, 0, {-16, -16}, {235, 244, 125, 255} }},
-	{{ {7, 33, 95}, 0, {-16, -16}, {229, 39, 118, 255} }},
-	{{ {8, -8, 99}, 0, {-16, -16}, {235, 244, 125, 255} }},
-	{{ {44, -9, 92}, 0, {-16, -16}, {81, 241, 97, 255} }},
-	{{ {43, 40, 91}, 0, {-16, -16}, {69, 44, 97, 255} }},
-	{{ {27, 72, 63}, 0, {-16, -16}, {16, 109, 64, 255} }},
-	{{ {52, 70, 38}, 0, {-16, -16}, {92, 84, 26, 255} }},
-	{{ {22, 82, 26}, 0, {-16, -16}, {4, 126, 13, 255} }},
-	{{ {22, 82, -26}, 0, {-16, -16}, {4, 126, 243, 255} }},
-	{{ {52, 70, -39}, 0, {-16, -16}, {92, 83, 229, 255} }},
-	{{ {27, 72, -63}, 0, {-16, -16}, {15, 109, 192, 255} }},
-	{{ {43, 40, -91}, 0, {-16, -16}, {69, 44, 159, 255} }},
-	{{ {6, 33, -95}, 0, {-16, -16}, {227, 39, 139, 255} }},
-	{{ {-5, 59, -72}, 0, {-16, -16}, {198, 87, 183, 255} }},
-	{{ {-17, 32, -79}, 0, {-16, -16}, {160, 32, 179, 255} }},
-	{{ {-20, -8, -81}, 0, {-16, -16}, {157, 246, 178, 255} }},
-	{{ {8, -8, -99}, 0, {-16, -16}, {235, 244, 131, 255} }},
-	{{ {-20, -8, -81}, 0, {-16, -16}, {157, 246, 178, 255} }},
-	{{ {8, -8, -99}, 0, {-16, -16}, {235, 244, 131, 255} }},
-	{{ {4, -48, -86}, 0, {-16, -16}, {224, 188, 154, 255} }},
-	{{ {36, -51, -79}, 0, {-16, -16}, {58, 183, 169, 255} }},
-	{{ {26, -74, -46}, 0, {-16, -16}, {25, 136, 222, 255} }},
-	{{ {-9, -69, -55}, 0, {-16, -16}, {204, 153, 203, 255} }},
-	{{ {-14, -74, 0}, 0, {-16, -16}, {199, 142, 0, 255} }},
-	{{ {26, -74, 45}, 0, {-16, -16}, {24, 135, 32, 255} }},
-	{{ {-9, -69, 55}, 0, {-16, -16}, {204, 152, 52, 255} }},
-	{{ {4, -49, 86}, 0, {-16, -16}, {223, 187, 102, 255} }},
-	{{ {36, -52, 79}, 0, {-16, -16}, {58, 182, 86, 255} }},
-	{{ {8, -8, 99}, 0, {-16, -16}, {235, 244, 125, 255} }},
-	{{ {-20, -7, 81}, 0, {-16, -16}, {157, 247, 79, 255} }},
-	{{ {7, 33, 95}, 0, {-16, -16}, {229, 39, 118, 255} }},
-	{{ {-18, 32, 79}, 0, {-16, -16}, {160, 32, 77, 255} }},
-	{{ {-5, 59, 72}, 0, {-16, -16}, {198, 87, 73, 255} }},
-	{{ {27, 72, 63}, 0, {-16, -16}, {16, 109, 64, 255} }},
-	{{ {-5, 59, 72}, 0, {-16, -16}, {198, 87, 73, 255} }},
-	{{ {7, 33, 95}, 0, {-16, -16}, {229, 39, 118, 255} }},
-	{{ {-9, 73, 34}, 0, {-16, -16}, {186, 104, 21, 255} }},
-	{{ {22, 82, 26}, 0, {-16, -16}, {4, 126, 13, 255} }},
-	{{ {22, 82, -26}, 0, {-16, -16}, {4, 126, 243, 255} }},
-	{{ {-9, 73, -34}, 0, {-16, -16}, {186, 104, 235, 255} }},
-	{{ {27, 72, -63}, 0, {-16, -16}, {15, 109, 192, 255} }},
-	{{ {-5, 59, -72}, 0, {-16, -16}, {198, 87, 183, 255} }},
-	{{ {-32, 40, -39}, 0, {-16, -16}, {137, 38, 235, 255} }},
-	{{ {-17, 32, -79}, 0, {-16, -16}, {160, 32, 179, 255} }},
-	{{ {-20, -8, -81}, 0, {-16, -16}, {157, 246, 178, 255} }},
-	{{ {-31, -51, -42}, 0, {-16, -16}, {142, 209, 225, 255} }},
-	{{ {4, -48, -86}, 0, {-16, -16}, {224, 188, 154, 255} }},
-	{{ {-9, -69, -55}, 0, {-16, -16}, {204, 153, 203, 255} }},
-	{{ {-14, -74, 0}, 0, {-16, -16}, {199, 142, 0, 255} }},
-	{{ {-31, -51, 42}, 0, {-16, -16}, {142, 209, 31, 255} }},
-	{{ {-31, -51, -42}, 0, {-16, -16}, {142, 209, 225, 255} }},
-	{{ {-14, -74, 0}, 0, {-16, -16}, {199, 142, 0, 255} }},
-	{{ {-9, -69, 55}, 0, {-16, -16}, {204, 152, 52, 255} }},
-	{{ {4, -49, 86}, 0, {-16, -16}, {223, 187, 102, 255} }},
-	{{ {-20, -7, 81}, 0, {-16, -16}, {157, 247, 79, 255} }},
-	{{ {-32, 40, 39}, 0, {-16, -16}, {137, 38, 21, 255} }},
-	{{ {-18, 32, 79}, 0, {-16, -16}, {160, 32, 77, 255} }},
-	{{ {-5, 59, 72}, 0, {-16, -16}, {198, 87, 73, 255} }},
-	{{ {-9, 73, 34}, 0, {-16, -16}, {186, 104, 21, 255} }},
-	{{ {-32, 40, -39}, 0, {-16, -16}, {137, 38, 235, 255} }},
-	{{ {-9, 73, -34}, 0, {-16, -16}, {186, 104, 235, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_offset_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(0, 6, 5, 0),
-	gsSP1Triangle(6, 0, 7, 0),
-	gsSP1Triangle(8, 7, 0, 0),
-	gsSP1Triangle(0, 2, 8, 0),
-	gsSP1Triangle(9, 8, 2, 0),
-	gsSP1Triangle(2, 10, 9, 0),
-	gsSP1Triangle(10, 2, 11, 0),
-	gsSP1Triangle(1, 11, 2, 0),
-	gsSP1Triangle(1, 12, 11, 0),
-	gsSP1Triangle(12, 1, 3, 0),
-	gsSP1Triangle(3, 13, 12, 0),
-	gsSP1Triangle(14, 13, 3, 0),
-	gsSP1Triangle(4, 14, 3, 0),
-	gsSP1Triangle(15, 14, 4, 0),
-	gsSPVertex(ragdoll_mario_000_offset_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(0, 3, 4, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 7, 5, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 13, 11, 0),
-	gsSP1Triangle(11, 15, 14, 0),
-	gsSPVertex(ragdoll_mario_000_offset_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(4, 5, 2, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 6, 4, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(ragdoll_mario_000_offset_mesh_layer_1_vtx_0 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(9, 6, 8, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(ragdoll_mario_000_offset_mesh_layer_1_vtx_0 + 64, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(0, 3, 4, 0),
-	gsSP1Triangle(4, 5, 0, 0),
-	gsSP1Triangle(5, 6, 0, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(6, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(0, 6, 10, 0),
-	gsSP1Triangle(10, 1, 0, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_offset_001_mesh_layer_1_vtx_0[118] = {
-	{{ {9, 89, -40}, 0, {760, 904}, {14, 120, 217, 255} }},
-	{{ {28, 85, -29}, 0, {974, 496}, {44, 118, 240, 255} }},
-	{{ {47, 75, -34}, 0, {834, 56}, {72, 102, 230, 255} }},
-	{{ {3, 77, -61}, 0, {248, 956}, {3, 108, 189, 255} }},
-	{{ {17, 66, -75}, 0, {-74, 626}, {23, 87, 166, 255} }},
-	{{ {32, 62, -73}, 0, {-40, 294}, {42, 82, 168, 255} }},
-	{{ {48, 64, -58}, 0, {296, -16}, {70, 89, 199, 255} }},
-	{{ {47, 75, 35}, 0, {18, 90}, {72, 102, 26, 255} }},
-	{{ {28, 85, 30}, 0, {-76, 556}, {44, 118, 16, 255} }},
-	{{ {9, 89, 41}, 0, {164, 946}, {16, 120, 39, 255} }},
-	{{ {3, 77, 62}, 0, {666, 950}, {4, 108, 67, 255} }},
-	{{ {17, 66, 76}, 0, {950, 574}, {24, 88, 89, 255} }},
-	{{ {32, 62, 74}, 0, {886, 236}, {41, 82, 88, 255} }},
-	{{ {48, 64, 59}, 0, {532, -16}, {70, 90, 56, 255} }},
-	{{ {47, 75, -34}, 0, {-16, -16}, {72, 102, 230, 255} }},
-	{{ {28, 85, 30}, 0, {-16, -16}, {44, 118, 16, 255} }},
-	{{ {47, 75, 35}, 0, {-16, -16}, {72, 102, 26, 255} }},
-	{{ {28, 85, -29}, 0, {-16, -16}, {44, 118, 240, 255} }},
-	{{ {9, 89, -40}, 0, {-16, -16}, {14, 120, 217, 255} }},
-	{{ {9, 89, 41}, 0, {-16, -16}, {16, 120, 39, 255} }},
-	{{ {-15, 88, 35}, 0, {-16, -16}, {236, 122, 28, 255} }},
-	{{ {-15, 87, -35}, 0, {-16, -16}, {236, 122, 226, 255} }},
-	{{ {3, 77, -61}, 0, {-16, -16}, {3, 108, 189, 255} }},
-	{{ {-28, 63, -74}, 0, {-16, -16}, {204, 72, 165, 255} }},
-	{{ {-4, 58, -82}, 0, {-16, -16}, {250, 65, 147, 255} }},
-	{{ {17, 66, -75}, 0, {-16, -16}, {23, 87, 166, 255} }},
-	{{ {12, 33, -90}, 0, {-16, -16}, {13, 28, 133, 255} }},
-	{{ {32, 62, -73}, 0, {-16, -16}, {42, 82, 168, 255} }},
-	{{ {43, 51, -74}, 0, {-16, -16}, {61, 53, 158, 255} }},
-	{{ {48, 64, -58}, 0, {-16, -16}, {70, 89, 199, 255} }},
-	{{ {80, 14, -61}, 0, {-16, -16}, {97, 35, 182, 255} }},
-	{{ {43, 51, -74}, 0, {-16, -16}, {61, 53, 158, 255} }},
-	{{ {48, 64, -58}, 0, {-16, -16}, {70, 89, 199, 255} }},
-	{{ {82, 37, -26}, 0, {-16, -16}, {105, 69, 235, 255} }},
-	{{ {47, 75, -34}, 0, {-16, -16}, {72, 102, 230, 255} }},
-	{{ {100, 1, -23}, 0, {-16, -16}, {124, 17, 235, 255} }},
-	{{ {84, -29, -62}, 0, {-16, -16}, {95, 216, 181, 255} }},
-	{{ {93, -36, -25}, 0, {-16, -16}, {107, 189, 241, 255} }},
-	{{ {66, -52, -50}, 0, {-16, -16}, {58, 151, 214, 255} }},
-	{{ {54, -63, 0}, 0, {-16, -16}, {47, 138, 0, 255} }},
-	{{ {20, -61, -67}, 0, {-16, -16}, {9, 151, 185, 255} }},
-	{{ {8, -74, 0}, 0, {-16, -16}, {1, 129, 0, 255} }},
-	{{ {20, -61, 68}, 0, {-16, -16}, {9, 151, 71, 255} }},
-	{{ {66, -52, 51}, 0, {-16, -16}, {58, 151, 42, 255} }},
-	{{ {93, -36, 26}, 0, {-16, -16}, {107, 189, 15, 255} }},
-	{{ {84, -29, 63}, 0, {-16, -16}, {95, 216, 75, 255} }},
-	{{ {84, -29, 63}, 0, {-16, -16}, {95, 216, 75, 255} }},
-	{{ {93, -36, 26}, 0, {-16, -16}, {107, 189, 15, 255} }},
-	{{ {100, 1, 24}, 0, {-16, -16}, {124, 17, 21, 255} }},
-	{{ {80, 14, 62}, 0, {-16, -16}, {97, 35, 74, 255} }},
-	{{ {82, 37, 27}, 0, {-16, -16}, {105, 69, 21, 255} }},
-	{{ {48, 64, 59}, 0, {-16, -16}, {70, 90, 56, 255} }},
-	{{ {47, 75, 35}, 0, {-16, -16}, {72, 102, 26, 255} }},
-	{{ {44, 51, 75}, 0, {-16, -16}, {62, 54, 97, 255} }},
-	{{ {32, 62, 74}, 0, {-16, -16}, {41, 82, 88, 255} }},
-	{{ {13, 33, 91}, 0, {-16, -16}, {15, 27, 123, 255} }},
-	{{ {17, 66, 76}, 0, {-16, -16}, {24, 88, 89, 255} }},
-	{{ {-4, 58, 84}, 0, {-16, -16}, {251, 66, 109, 255} }},
-	{{ {3, 77, 62}, 0, {-16, -16}, {4, 108, 67, 255} }},
-	{{ {-28, 63, 75}, 0, {-16, -16}, {203, 73, 89, 255} }},
-	{{ {-15, 88, 35}, 0, {-16, -16}, {236, 122, 28, 255} }},
-	{{ {9, 89, 41}, 0, {-16, -16}, {16, 120, 39, 255} }},
-	{{ {-15, 88, 35}, 0, {-16, -16}, {236, 122, 28, 255} }},
-	{{ {-40, 72, 55}, 0, {-16, -16}, {192, 89, 65, 255} }},
-	{{ {-28, 63, 75}, 0, {-16, -16}, {203, 73, 89, 255} }},
-	{{ {-43, 83, 25}, 0, {-16, -16}, {196, 111, 18, 255} }},
-	{{ {-43, 83, -24}, 0, {-16, -16}, {197, 111, 238, 255} }},
-	{{ {-15, 87, -35}, 0, {-16, -16}, {236, 122, 226, 255} }},
-	{{ {-40, 72, -54}, 0, {-16, -16}, {193, 90, 192, 255} }},
-	{{ {-28, 63, -74}, 0, {-16, -16}, {204, 72, 165, 255} }},
-	{{ {-71, 54, -29}, 0, {-16, -16}, {139, 37, 222, 255} }},
-	{{ {-27, 26, -89}, 0, {-16, -16}, {196, 13, 145, 255} }},
-	{{ {-4, 58, -82}, 0, {-16, -16}, {250, 65, 147, 255} }},
-	{{ {12, 33, -90}, 0, {-16, -16}, {13, 28, 133, 255} }},
-	{{ {6, -10, -92}, 0, {-16, -16}, {0, 235, 131, 255} }},
-	{{ {-27, -25, -86}, 0, {-16, -16}, {197, 218, 150, 255} }},
-	{{ {20, -61, -67}, 0, {-16, -16}, {9, 151, 185, 255} }},
-	{{ {46, -34, -83}, 0, {-16, -16}, {35, 202, 146, 255} }},
-	{{ {46, -34, -83}, 0, {-16, -16}, {35, 202, 146, 255} }},
-	{{ {66, -52, -50}, 0, {-16, -16}, {58, 151, 214, 255} }},
-	{{ {20, -61, -67}, 0, {-16, -16}, {9, 151, 185, 255} }},
-	{{ {84, -29, -62}, 0, {-16, -16}, {95, 216, 181, 255} }},
-	{{ {-29, -58, -59}, 0, {-16, -16}, {197, 159, 199, 255} }},
-	{{ {-27, -25, -86}, 0, {-16, -16}, {197, 218, 150, 255} }},
-	{{ {8, -74, 0}, 0, {-16, -16}, {1, 129, 0, 255} }},
-	{{ {-30, -66, 0}, 0, {-16, -16}, {192, 146, 0, 255} }},
-	{{ {-29, -58, 59}, 0, {-16, -16}, {196, 158, 55, 255} }},
-	{{ {20, -61, 68}, 0, {-16, -16}, {9, 151, 71, 255} }},
-	{{ {-27, -25, 87}, 0, {-16, -16}, {197, 217, 105, 255} }},
-	{{ {6, -11, 93}, 0, {-16, -16}, {0, 233, 125, 255} }},
-	{{ {46, -34, 84}, 0, {-16, -16}, {35, 202, 110, 255} }},
-	{{ {66, -52, 51}, 0, {-16, -16}, {58, 151, 42, 255} }},
-	{{ {84, -29, 63}, 0, {-16, -16}, {95, 216, 75, 255} }},
-	{{ {-27, 26, 91}, 0, {-16, -16}, {197, 13, 112, 255} }},
-	{{ {-27, 26, 91}, 0, {-16, -16}, {197, 13, 112, 255} }},
-	{{ {6, -11, 93}, 0, {-16, -16}, {0, 233, 125, 255} }},
-	{{ {13, 33, 91}, 0, {-16, -16}, {15, 27, 123, 255} }},
-	{{ {-4, 58, 84}, 0, {-16, -16}, {251, 66, 109, 255} }},
-	{{ {-28, 63, 75}, 0, {-16, -16}, {203, 73, 89, 255} }},
-	{{ {-71, 54, 30}, 0, {-16, -16}, {139, 37, 34, 255} }},
-	{{ {-40, 72, 55}, 0, {-16, -16}, {192, 89, 65, 255} }},
-	{{ {-43, 83, 25}, 0, {-16, -16}, {196, 111, 18, 255} }},
-	{{ {-71, 54, -29}, 0, {-16, -16}, {139, 37, 222, 255} }},
-	{{ {-43, 83, -24}, 0, {-16, -16}, {197, 111, 238, 255} }},
-	{{ {-40, 72, -54}, 0, {-16, -16}, {193, 90, 192, 255} }},
-	{{ {-59, -28, 38}, 0, {-16, -16}, {141, 212, 33, 255} }},
-	{{ {-59, -28, -37}, 0, {-16, -16}, {141, 213, 223, 255} }},
-	{{ {-27, 26, -89}, 0, {-16, -16}, {196, 13, 145, 255} }},
-	{{ {-27, -25, -86}, 0, {-16, -16}, {197, 218, 150, 255} }},
-	{{ {-29, -58, -59}, 0, {-16, -16}, {197, 159, 199, 255} }},
-	{{ {-30, -66, 0}, 0, {-16, -16}, {192, 146, 0, 255} }},
-	{{ {-59, -28, -37}, 0, {-16, -16}, {141, 213, 223, 255} }},
-	{{ {-29, -58, -59}, 0, {-16, -16}, {197, 159, 199, 255} }},
-	{{ {-59, -28, 38}, 0, {-16, -16}, {141, 212, 33, 255} }},
-	{{ {-29, -58, 59}, 0, {-16, -16}, {196, 158, 55, 255} }},
-	{{ {-27, -25, 87}, 0, {-16, -16}, {197, 217, 105, 255} }},
-	{{ {-27, 26, 91}, 0, {-16, -16}, {197, 13, 112, 255} }},
-	{{ {-71, 54, 30}, 0, {-16, -16}, {139, 37, 34, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_001_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_offset_001_mesh_layer_1_vtx_0 + 0, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 4, 2, 0),
-	gsSP1Triangle(2, 6, 5, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSP1Triangle(10, 11, 7, 0),
-	gsSP1Triangle(11, 12, 7, 0),
-	gsSP1Triangle(12, 13, 7, 0),
-	gsSPVertex(ragdoll_mario_000_offset_001_mesh_layer_1_vtx_0 + 14, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(7, 4, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(ragdoll_mario_000_offset_001_mesh_layer_1_vtx_0 + 30, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(0, 3, 5, 0),
-	gsSP1Triangle(0, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 11, 9, 0),
-	gsSP1Triangle(12, 9, 13, 0),
-	gsSP1Triangle(14, 13, 9, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(ragdoll_mario_000_offset_001_mesh_layer_1_vtx_0 + 46, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(5, 7, 3, 0),
-	gsSP1Triangle(8, 7, 5, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(ragdoll_mario_000_offset_001_mesh_layer_1_vtx_0 + 62, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 7, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 9, 11, 0),
-	gsSP1Triangle(13, 9, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(ragdoll_mario_000_offset_001_mesh_layer_1_vtx_0 + 78, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(2, 4, 5, 0),
-	gsSP1Triangle(4, 2, 6, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(9, 13, 12, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(11, 15, 10, 0),
-	gsSPVertex(ragdoll_mario_000_offset_001_mesh_layer_1_vtx_0 + 94, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(5, 0, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(7, 8, 5, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 11, 5, 0),
-	gsSP1Triangle(8, 12, 11, 0),
-	gsSP1Triangle(12, 8, 13, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(ragdoll_mario_000_offset_001_mesh_layer_1_vtx_0 + 110, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(3, 5, 6, 0),
-	gsSP1Triangle(6, 7, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_offset_001_mesh_layer_1_vtx_1[23] = {
-	{{ {47, 75, -34}, 0, {-16, -16}, {72, 102, 230, 255} }},
-	{{ {47, 75, 35}, 0, {-16, -16}, {72, 102, 26, 255} }},
-	{{ {82, 37, 27}, 0, {-16, -16}, {105, 69, 21, 255} }},
-	{{ {82, 37, -26}, 0, {-16, -16}, {105, 69, 235, 255} }},
-	{{ {100, 1, 24}, 0, {-16, -16}, {124, 17, 21, 255} }},
-	{{ {100, 1, -23}, 0, {-16, -16}, {124, 17, 235, 255} }},
-	{{ {93, -36, 26}, 0, {-16, -16}, {107, 189, 15, 255} }},
-	{{ {93, -36, -25}, 0, {-16, -16}, {107, 189, 241, 255} }},
-	{{ {54, -63, 0}, 0, {-16, -16}, {47, 138, 0, 255} }},
-	{{ {46, -34, 84}, 0, {-16, -16}, {35, 202, 110, 255} }},
-	{{ {47, 3, 89}, 0, {-16, -16}, {47, 8, 118, 255} }},
-	{{ {6, -11, 93}, 0, {-16, -16}, {0, 233, 125, 255} }},
-	{{ {84, -29, 63}, 0, {-16, -16}, {95, 216, 75, 255} }},
-	{{ {80, 14, 62}, 0, {-16, -16}, {97, 35, 74, 255} }},
-	{{ {44, 51, 75}, 0, {-16, -16}, {62, 54, 97, 255} }},
-	{{ {13, 33, 91}, 0, {-16, -16}, {15, 27, 123, 255} }},
-	{{ {6, -10, -92}, 0, {-16, -16}, {0, 235, 131, 255} }},
-	{{ {47, 3, -88}, 0, {-16, -16}, {47, 8, 138, 255} }},
-	{{ {46, -34, -83}, 0, {-16, -16}, {35, 202, 146, 255} }},
-	{{ {12, 33, -90}, 0, {-16, -16}, {13, 28, 133, 255} }},
-	{{ {43, 51, -74}, 0, {-16, -16}, {61, 53, 158, 255} }},
-	{{ {80, 14, -61}, 0, {-16, -16}, {97, 35, 182, 255} }},
-	{{ {84, -29, -62}, 0, {-16, -16}, {95, 216, 181, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_001_mesh_layer_1_tri_1[] = {
-	gsSPVertex(ragdoll_mario_000_offset_001_mesh_layer_1_vtx_1 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(10, 9, 12, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(14, 10, 13, 0),
-	gsSP1Triangle(15, 10, 14, 0),
-	gsSP1Triangle(15, 11, 10, 0),
-	gsSPVertex(ragdoll_mario_000_offset_001_mesh_layer_1_vtx_1 + 16, 7, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(6, 1, 5, 0),
-	gsSP1Triangle(6, 2, 1, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_mesh_layer_1_vtx_0[99] = {
-	{{ {97, 103, 25}, 0, {708, 942}, {78, 66, 76, 255} }},
-	{{ {104, 87, 70}, 0, {1122, 848}, {43, 99, 68, 255} }},
-	{{ {144, 83, 67}, 0, {1092, 412}, {32, 91, 83, 255} }},
-	{{ {175, 91, 39}, 0, {826, 96}, {165, 88, 10, 255} }},
-	{{ {153, 33, 95}, 0, {1346, 280}, {0, 70, 106, 255} }},
-	{{ {145, 101, 0}, 0, {464, 430}, {22, 125, 0, 255} }},
-	{{ {175, 91, -38}, 0, {90, 114}, {165, 88, 246, 255} }},
-	{{ {97, 103, -24}, 0, {240, 954}, {78, 65, 179, 255} }},
-	{{ {144, 83, -66}, 0, {-162, 444}, {32, 91, 173, 255} }},
-	{{ {153, 33, -94}, 0, {-420, 326}, {0, 69, 149, 255} }},
-	{{ {104, 87, -69}, 0, {-176, 882}, {43, 99, 188, 255} }},
-	{{ {92, 88, 84}, 0, {-16, -16}, {42, 78, 91, 255} }},
-	{{ {104, 87, 70}, 0, {-16, -16}, {43, 99, 68, 255} }},
-	{{ {97, 103, 25}, 0, {-16, -16}, {78, 66, 76, 255} }},
-	{{ {96, 49, 94}, 0, {-16, -16}, {11, 40, 120, 255} }},
-	{{ {44, 44, 97}, 0, {-16, -16}, {209, 29, 114, 255} }},
-	{{ {144, 83, 67}, 0, {-16, -16}, {32, 91, 83, 255} }},
-	{{ {104, 87, 70}, 0, {-16, -16}, {43, 99, 68, 255} }},
-	{{ {96, 49, 94}, 0, {-16, -16}, {11, 40, 120, 255} }},
-	{{ {153, 33, 95}, 0, {-16, -16}, {0, 70, 106, 255} }},
-	{{ {97, 103, -24}, 0, {240, 954}, {78, 65, 179, 255} }},
-	{{ {108, 105, 0}, 0, {472, 838}, {101, 77, 255, 255} }},
-	{{ {145, 101, 0}, 0, {464, 430}, {22, 125, 0, 255} }},
-	{{ {97, 103, 25}, 0, {708, 942}, {78, 66, 76, 255} }},
-	{{ {92, 88, -83}, 0, {-16, -16}, {42, 78, 165, 255} }},
-	{{ {97, 103, -24}, 0, {-16, -16}, {78, 65, 179, 255} }},
-	{{ {104, 87, -69}, 0, {-16, -16}, {43, 99, 188, 255} }},
-	{{ {96, 49, -93}, 0, {-16, -16}, {12, 40, 136, 255} }},
-	{{ {144, 83, -66}, 0, {-16, -16}, {32, 91, 173, 255} }},
-	{{ {153, 33, -94}, 0, {-16, -16}, {0, 69, 149, 255} }},
-	{{ {44, 44, -96}, 0, {-16, -16}, {209, 29, 142, 255} }},
-	{{ {44, 44, 97}, 0, {-16, -16}, {209, 29, 114, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {42, 0, 103}, 0, {-16, -16}, {184, 0, 105, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {-7, 62, 0}, 0, {-16, -16}, {133, 33, 0, 255} }},
-	{{ {17, -52, -46}, 0, {-16, -16}, {134, 252, 222, 255} }},
-	{{ {3, 54, -51}, 0, {-16, -16}, {143, 25, 203, 255} }},
-	{{ {42, 0, -102}, 0, {-16, -16}, {184, 0, 151, 255} }},
-	{{ {44, 44, -96}, 0, {-16, -16}, {209, 29, 142, 255} }},
-	{{ {56, -45, -76}, 0, {-16, -16}, {202, 199, 156, 255} }},
-	{{ {64, -25, -134}, 0, {-16, -16}, {214, 5, 136, 255} }},
-	{{ {85, -23, -110}, 0, {-16, -16}, {7, 91, 167, 255} }},
-	{{ {102, -33, -134}, 0, {-16, -16}, {50, 237, 141, 255} }},
-	{{ {120, -12, -109}, 0, {-16, -16}, {239, 31, 134, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {198, 192, 163, 255} }},
-	{{ {97, 103, 25}, 0, {-16, -16}, {78, 66, 76, 255} }},
-	{{ {108, 105, 0}, 0, {-16, -16}, {101, 77, 255, 255} }},
-	{{ {117, 128, 0}, 0, {-16, -16}, {124, 229, 0, 255} }},
-	{{ {97, 103, -24}, 0, {-16, -16}, {78, 65, 179, 255} }},
-	{{ {102, 129, -40}, 0, {-16, -16}, {76, 224, 160, 255} }},
-	{{ {77, 108, -33}, 0, {-16, -16}, {23, 45, 139, 255} }},
-	{{ {75, 130, -45}, 0, {-16, -16}, {255, 226, 133, 255} }},
-	{{ {47, 131, -40}, 0, {-16, -16}, {175, 233, 161, 255} }},
-	{{ {52, 111, -30}, 0, {-16, -16}, {179, 54, 170, 255} }},
-	{{ {32, 132, 0}, 0, {-16, -16}, {130, 237, 254, 255} }},
-	{{ {41, 109, 0}, 0, {-16, -16}, {141, 54, 0, 255} }},
-	{{ {52, 111, 31}, 0, {-16, -16}, {179, 55, 85, 255} }},
-	{{ {47, 131, 41}, 0, {-16, -16}, {176, 231, 96, 255} }},
-	{{ {77, 108, 34}, 0, {-16, -16}, {23, 45, 117, 255} }},
-	{{ {75, 130, 46}, 0, {-16, -16}, {255, 226, 123, 255} }},
-	{{ {102, 129, 41}, 0, {-16, -16}, {77, 224, 96, 255} }},
-	{{ {104, 162, 41}, 0, {-16, -16}, {73, 57, 87, 255} }},
-	{{ {102, 129, 41}, 0, {-16, -16}, {77, 224, 96, 255} }},
-	{{ {117, 128, 0}, 0, {-16, -16}, {124, 229, 0, 255} }},
-	{{ {119, 161, 0}, 0, {-16, -16}, {120, 41, 0, 255} }},
-	{{ {102, 129, -40}, 0, {-16, -16}, {76, 224, 160, 255} }},
-	{{ {104, 162, -40}, 0, {-16, -16}, {72, 56, 168, 255} }},
-	{{ {75, 130, -45}, 0, {-16, -16}, {255, 226, 133, 255} }},
-	{{ {78, 163, -45}, 0, {-16, -16}, {3, 67, 148, 255} }},
-	{{ {52, 164, -40}, 0, {-16, -16}, {194, 66, 167, 255} }},
-	{{ {47, 131, -40}, 0, {-16, -16}, {175, 233, 161, 255} }},
-	{{ {32, 132, 0}, 0, {-16, -16}, {130, 237, 254, 255} }},
-	{{ {33, 165, 0}, 0, {-16, -16}, {144, 60, 254, 255} }},
-	{{ {47, 131, 41}, 0, {-16, -16}, {176, 231, 96, 255} }},
-	{{ {52, 164, 41}, 0, {-16, -16}, {195, 67, 89, 255} }},
-	{{ {75, 130, 46}, 0, {-16, -16}, {255, 226, 123, 255} }},
-	{{ {78, 163, 46}, 0, {-16, -16}, {3, 68, 107, 255} }},
-	{{ {104, 162, 41}, 0, {-16, -16}, {73, 57, 87, 255} }},
-	{{ {101, 179, 0}, 0, {-16, -16}, {47, 118, 0, 255} }},
-	{{ {78, 163, 46}, 0, {-16, -16}, {3, 68, 107, 255} }},
-	{{ {119, 161, 0}, 0, {-16, -16}, {120, 41, 0, 255} }},
-	{{ {104, 162, -40}, 0, {-16, -16}, {72, 56, 168, 255} }},
-	{{ {78, 163, -45}, 0, {-16, -16}, {3, 67, 148, 255} }},
-	{{ {60, 181, 0}, 0, {-16, -16}, {230, 124, 0, 255} }},
-	{{ {52, 164, -40}, 0, {-16, -16}, {194, 66, 167, 255} }},
-	{{ {33, 165, 0}, 0, {-16, -16}, {144, 60, 254, 255} }},
-	{{ {52, 164, 41}, 0, {-16, -16}, {195, 67, 89, 255} }},
-	{{ {42, 0, 103}, 0, {-16, -16}, {184, 0, 105, 255} }},
-	{{ {64, -25, 135}, 0, {-16, -16}, {214, 5, 120, 255} }},
-	{{ {85, -23, 111}, 0, {-16, -16}, {5, 91, 89, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {198, 192, 93, 255} }},
-	{{ {64, -25, 135}, 0, {-16, -16}, {214, 5, 120, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {198, 192, 93, 255} }},
-	{{ {102, -33, 135}, 0, {-16, -16}, {49, 236, 116, 255} }},
-	{{ {120, -11, 111}, 0, {-16, -16}, {238, 32, 122, 255} }},
-	{{ {85, -23, 111}, 0, {-16, -16}, {5, 91, 89, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(3, 5, 0, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(8, 6, 9, 0),
-	gsSP1Triangle(10, 7, 8, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(12, 11, 14, 0),
-	gsSP1Triangle(15, 14, 11, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_0 + 16, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(8, 11, 14, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_0 + 31, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(7, 9, 5, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(11, 10, 7, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(10, 12, 14, 0),
-	gsSP1Triangle(9, 10, 14, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_0 + 46, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSP1Triangle(13, 0, 15, 0),
-	gsSP1Triangle(2, 15, 0, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_0 + 62, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(9, 8, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSP1Triangle(15, 14, 0, 0),
-	gsSP1Triangle(14, 1, 0, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_0 + 78, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(1, 4, 5, 0),
-	gsSP1Triangle(5, 6, 1, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(9, 2, 6, 0),
-	gsSP1Triangle(6, 2, 1, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 10, 13, 0),
-	gsSP1Triangle(14, 13, 10, 0),
-	gsSP1Triangle(11, 13, 15, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_0 + 94, 5, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(0, 2, 4, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_mesh_layer_1_vtx_1[27] = {
-	{{ {92, 88, -83}, 0, {906, -20}, {42, 78, 165, 255} }},
-	{{ {77, 108, -33}, 0, {346, 328}, {23, 45, 139, 255} }},
-	{{ {97, 103, -24}, 0, {258, 84}, {78, 65, 179, 255} }},
-	{{ {48, 94, -75}, 0, {840, 592}, {214, 89, 176, 255} }},
-	{{ {44, 44, -96}, 0, {1234, 502}, {209, 29, 142, 255} }},
-	{{ {3, 54, -51}, 0, {790, 1146}, {143, 25, 203, 255} }},
-	{{ {27, 100, -29}, 0, {378, 982}, {176, 96, 230, 255} }},
-	{{ {52, 111, -30}, 0, {324, 668}, {179, 54, 170, 255} }},
-	{{ {41, 109, 0}, 0, {34, 884}, {141, 54, 0, 255} }},
-	{{ {27, 100, 30}, 0, {426, 966}, {176, 96, 26, 255} }},
-	{{ {52, 111, 31}, 0, {338, 674}, {179, 55, 85, 255} }},
-	{{ {41, 109, 0}, 0, {54, 908}, {141, 54, 0, 255} }},
-	{{ {48, 94, 76}, 0, {872, 548}, {214, 89, 80, 255} }},
-	{{ {3, 54, 52}, 0, {876, 1074}, {143, 25, 53, 255} }},
-	{{ {44, 44, 97}, 0, {1280, 422}, {209, 29, 114, 255} }},
-	{{ {92, 88, 84}, 0, {882, -34}, {42, 78, 91, 255} }},
-	{{ {92, 88, 84}, 0, {882, -34}, {42, 78, 91, 255} }},
-	{{ {77, 108, 34}, 0, {326, 352}, {23, 45, 117, 255} }},
-	{{ {48, 94, 76}, 0, {872, 548}, {214, 89, 80, 255} }},
-	{{ {97, 103, 25}, 0, {208, 130}, {78, 66, 76, 255} }},
-	{{ {52, 111, 31}, 0, {338, 674}, {179, 55, 85, 255} }},
-	{{ {27, 100, -29}, 0, {-16, -16}, {176, 96, 230, 255} }},
-	{{ {3, 54, -51}, 0, {-16, -16}, {143, 25, 203, 255} }},
-	{{ {-7, 62, 0}, 0, {-16, -16}, {133, 33, 0, 255} }},
-	{{ {27, 100, 30}, 0, {-16, -16}, {176, 96, 26, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {41, 109, 0}, 0, {-16, -16}, {141, 54, 0, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_mesh_layer_1_tri_1[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_1 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(7, 3, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(3, 7, 1, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(9, 12, 10, 0),
-	gsSP1Triangle(13, 12, 9, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_1 + 16, 11, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(1, 4, 2, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 5, 7, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(10, 5, 8, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_mesh_layer_1_vtx_2[28] = {
-	{{ {17, -52, -46}, 0, {-16, -16}, {134, 252, 222, 255} }},
-	{{ {31, -84, 0}, 0, {-16, -16}, {158, 175, 0, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {9, -88, -58}, 0, {-16, -16}, {132, 237, 234, 255} }},
-	{{ {31, -85, -86}, 0, {-16, -16}, {228, 250, 132, 255} }},
-	{{ {56, -45, -76}, 0, {-16, -16}, {202, 199, 156, 255} }},
-	{{ {58, -114, -59}, 0, {-16, -16}, {87, 169, 224, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {242, 149, 189, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {198, 192, 163, 255} }},
-	{{ {36, -116, -35}, 0, {-16, -16}, {239, 146, 61, 255} }},
-	{{ {35, -120, -67}, 0, {-16, -16}, {230, 146, 198, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {242, 149, 67, 255} }},
-	{{ {36, -116, 36}, 0, {-16, -16}, {239, 146, 195, 255} }},
-	{{ {58, -114, 60}, 0, {-16, -16}, {87, 169, 32, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {198, 192, 93, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {31, -85, 87}, 0, {-16, -16}, {228, 250, 124, 255} }},
-	{{ {58, -114, 60}, 0, {-16, -16}, {87, 169, 32, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {9, -88, 59}, 0, {-16, -16}, {132, 237, 22, 255} }},
-	{{ {31, -84, 0}, 0, {-16, -16}, {158, 175, 0, 255} }},
-	{{ {36, -116, 36}, 0, {-16, -16}, {239, 146, 195, 255} }},
-	{{ {35, -120, 68}, 0, {-16, -16}, {230, 146, 58, 255} }},
-	{{ {35, -120, -67}, 0, {-16, -16}, {230, 146, 198, 255} }},
-	{{ {31, -85, -86}, 0, {-16, -16}, {228, 250, 132, 255} }},
-	{{ {58, -114, -59}, 0, {-16, -16}, {87, 169, 224, 255} }},
-	{{ {9, -88, -58}, 0, {-16, -16}, {132, 237, 234, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_mesh_layer_1_tri_2[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_2 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(9, 6, 7, 0),
-	gsSP1Triangle(9, 10, 6, 0),
-	gsSP1Triangle(3, 10, 9, 0),
-	gsSP1Triangle(3, 9, 1, 0),
-	gsSP1Triangle(1, 9, 7, 0),
-	gsSP1Triangle(1, 7, 11, 0),
-	gsSP1Triangle(1, 11, 12, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(13, 11, 14, 0),
-	gsSP1Triangle(11, 15, 14, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_2 + 16, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(2, 7, 6, 0),
-	gsSP1Triangle(1, 7, 2, 0),
-	gsSP1Triangle(4, 7, 1, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 8, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_mesh_layer_1_vtx_3[12] = {
-	{{ {96, 49, 94}, 0, {-90, 710}, {11, 40, 120, 255} }},
-	{{ {44, 44, 97}, 0, {180, 1350}, {209, 29, 114, 255} }},
-	{{ {42, 0, 103}, 0, {952, 1176}, {184, 0, 105, 255} }},
-	{{ {85, -23, 111}, 0, {1222, 502}, {5, 91, 89, 255} }},
-	{{ {120, -11, 111}, 0, {906, 106}, {238, 32, 122, 255} }},
-	{{ {153, 33, 95}, 0, {6, -84}, {0, 70, 106, 255} }},
-	{{ {120, -12, -109}, 0, {900, 168}, {239, 31, 134, 255} }},
-	{{ {96, 49, -93}, 0, {-86, 684}, {12, 40, 136, 255} }},
-	{{ {153, 33, -94}, 0, {74, -74}, {0, 69, 149, 255} }},
-	{{ {85, -23, -110}, 0, {1134, 566}, {7, 91, 167, 255} }},
-	{{ {42, 0, -102}, 0, {826, 1194}, {184, 0, 151, 255} }},
-	{{ {44, 44, -96}, 0, {102, 1318}, {209, 29, 142, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_mesh_layer_1_tri_3[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_3 + 0, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(5, 0, 4, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 7, 6, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(10, 11, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_mesh_layer_1_vtx_4[57] = {
-	{{ {195, 93, 32}, 0, {728, 716}, {82, 82, 52, 255} }},
-	{{ {153, 33, 95}, 0, {1234, 1050}, {0, 70, 106, 255} }},
-	{{ {252, 62, 70}, 0, {1016, 136}, {72, 65, 82, 255} }},
-	{{ {272, 85, 0}, 0, {456, -32}, {94, 86, 0, 255} }},
-	{{ {195, 93, -31}, 0, {216, 720}, {82, 82, 204, 255} }},
-	{{ {252, 62, -69}, 0, {-94, 142}, {72, 65, 173, 255} }},
-	{{ {153, 33, -94}, 0, {-274, 1060}, {0, 69, 149, 255} }},
-	{{ {120, -12, -109}, 0, {-16, -16}, {239, 31, 134, 255} }},
-	{{ {131, -56, -123}, 0, {-16, -16}, {234, 216, 137, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {198, 192, 163, 255} }},
-	{{ {187, -6, -133}, 0, {-16, -16}, {34, 5, 134, 255} }},
-	{{ {153, 33, -94}, 0, {-16, -16}, {0, 69, 149, 255} }},
-	{{ {252, 62, -69}, 0, {-16, -16}, {72, 65, 173, 255} }},
-	{{ {271, 0, -41}, 0, {-16, -16}, {113, 211, 219, 255} }},
-	{{ {272, 85, 0}, 0, {-16, -16}, {94, 86, 0, 255} }},
-	{{ {271, 0, 42}, 0, {-16, -16}, {113, 211, 37, 255} }},
-	{{ {271, 0, 42}, 0, {-16, -16}, {113, 211, 37, 255} }},
-	{{ {272, 85, 0}, 0, {-16, -16}, {94, 86, 0, 255} }},
-	{{ {252, 62, 70}, 0, {-16, -16}, {72, 65, 82, 255} }},
-	{{ {187, -6, 134}, 0, {-16, -16}, {34, 5, 122, 255} }},
-	{{ {153, 33, 95}, 0, {-16, -16}, {0, 70, 106, 255} }},
-	{{ {120, -11, 111}, 0, {-16, -16}, {238, 32, 122, 255} }},
-	{{ {131, -56, 124}, 0, {-16, -16}, {234, 215, 118, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {198, 192, 93, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {242, 149, 67, 255} }},
-	{{ {77, -138, 51}, 0, {-16, -16}, {190, 160, 50, 255} }},
-	{{ {77, -138, -50}, 0, {-16, -16}, {190, 160, 206, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {242, 149, 189, 255} }},
-	{{ {131, -56, -123}, 0, {-16, -16}, {234, 216, 137, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {198, 192, 163, 255} }},
-	{{ {122, -139, -48}, 0, {-16, -16}, {44, 144, 215, 255} }},
-	{{ {164, -89, -74}, 0, {-16, -16}, {74, 167, 204, 255} }},
-	{{ {187, -6, -133}, 0, {-16, -16}, {34, 5, 134, 255} }},
-	{{ {164, -89, -74}, 0, {-16, -16}, {74, 167, 204, 255} }},
-	{{ {131, -56, -123}, 0, {-16, -16}, {234, 216, 137, 255} }},
-	{{ {271, 0, -41}, 0, {-16, -16}, {113, 211, 219, 255} }},
-	{{ {164, -89, 75}, 0, {-16, -16}, {74, 167, 52, 255} }},
-	{{ {271, 0, 42}, 0, {-16, -16}, {113, 211, 37, 255} }},
-	{{ {187, -6, 134}, 0, {-16, -16}, {34, 5, 122, 255} }},
-	{{ {131, -56, 124}, 0, {-16, -16}, {234, 215, 118, 255} }},
-	{{ {122, -139, 49}, 0, {-16, -16}, {44, 144, 41, 255} }},
-	{{ {77, -138, 51}, 0, {-16, -16}, {190, 160, 50, 255} }},
-	{{ {77, -138, -50}, 0, {-16, -16}, {190, 160, 206, 255} }},
-	{{ {122, -139, -48}, 0, {-16, -16}, {44, 144, 215, 255} }},
-	{{ {195, 93, 32}, 0, {-16, -16}, {82, 82, 52, 255} }},
-	{{ {173, 132, 66}, 0, {-16, -16}, {233, 88, 89, 255} }},
-	{{ {153, 33, 95}, 0, {-16, -16}, {0, 70, 106, 255} }},
-	{{ {182, 155, 0}, 0, {-16, -16}, {253, 127, 0, 255} }},
-	{{ {195, 93, -31}, 0, {-16, -16}, {82, 82, 204, 255} }},
-	{{ {182, 155, 0}, 0, {-16, -16}, {253, 127, 0, 255} }},
-	{{ {195, 93, 32}, 0, {-16, -16}, {82, 82, 52, 255} }},
-	{{ {173, 132, -65}, 0, {-16, -16}, {233, 88, 167, 255} }},
-	{{ {153, 33, -94}, 0, {-16, -16}, {0, 69, 149, 255} }},
-	{{ {175, 91, -38}, 0, {-16, -16}, {165, 88, 246, 255} }},
-	{{ {175, 91, 39}, 0, {-16, -16}, {165, 88, 10, 255} }},
-	{{ {173, 132, 66}, 0, {-16, -16}, {233, 88, 89, 255} }},
-	{{ {153, 33, 95}, 0, {-16, -16}, {0, 70, 106, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_mesh_layer_1_tri_4[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_4 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 8, 7, 0),
-	gsSP1Triangle(11, 10, 7, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_4 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 6, 3, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(12, 14, 10, 0),
-	gsSP1Triangle(15, 14, 12, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_4 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(1, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(7, 8, 4, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(8, 11, 1, 0),
-	gsSP1Triangle(1, 4, 8, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 15, 13, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_mesh_layer_1_vtx_4 + 48, 9, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 1, 3, 0),
-	gsSP1Triangle(5, 6, 1, 0),
-	gsSP1Triangle(7, 1, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0[103] = {
-	{{ {104, 87, -69}, 0, {-176, 882}, {43, 99, 188, 255} }},
-	{{ {97, 103, -24}, 0, {240, 954}, {78, 65, 179, 255} }},
-	{{ {144, 83, -66}, 0, {-162, 444}, {32, 91, 173, 255} }},
-	{{ {175, 91, -38}, 0, {90, 114}, {33, 115, 214, 255} }},
-	{{ {145, 101, 0}, 0, {464, 430}, {22, 125, 0, 255} }},
-	{{ {108, 105, 0}, 0, {472, 838}, {101, 77, 255, 255} }},
-	{{ {97, 103, 25}, 0, {708, 942}, {78, 66, 76, 255} }},
-	{{ {175, 91, 39}, 0, {826, 96}, {33, 115, 42, 255} }},
-	{{ {144, 83, 67}, 0, {1092, 412}, {32, 91, 83, 255} }},
-	{{ {104, 87, 70}, 0, {1122, 848}, {43, 99, 68, 255} }},
-	{{ {153, 33, 95}, 0, {1346, 280}, {255, 54, 115, 255} }},
-	{{ {153, 33, -94}, 0, {-420, 326}, {245, 51, 140, 255} }},
-	{{ {144, 83, -66}, 0, {-16, -16}, {32, 91, 173, 255} }},
-	{{ {153, 33, -94}, 0, {-16, -16}, {245, 51, 140, 255} }},
-	{{ {96, 49, -93}, 0, {-16, -16}, {12, 40, 136, 255} }},
-	{{ {104, 87, -69}, 0, {-16, -16}, {43, 99, 188, 255} }},
-	{{ {96, 49, -93}, 0, {-16, -16}, {12, 40, 136, 255} }},
-	{{ {92, 88, -83}, 0, {-16, -16}, {42, 78, 165, 255} }},
-	{{ {104, 87, -69}, 0, {-16, -16}, {43, 99, 188, 255} }},
-	{{ {44, 44, -96}, 0, {-16, -16}, {209, 29, 142, 255} }},
-	{{ {97, 103, -24}, 0, {-16, -16}, {78, 65, 179, 255} }},
-	{{ {92, 88, 84}, 0, {-16, -16}, {42, 78, 91, 255} }},
-	{{ {104, 87, 70}, 0, {-16, -16}, {43, 99, 68, 255} }},
-	{{ {97, 103, 25}, 0, {-16, -16}, {78, 66, 76, 255} }},
-	{{ {96, 49, 94}, 0, {-16, -16}, {11, 40, 120, 255} }},
-	{{ {44, 44, 97}, 0, {-16, -16}, {209, 29, 114, 255} }},
-	{{ {144, 83, 67}, 0, {-16, -16}, {32, 91, 83, 255} }},
-	{{ {153, 33, 95}, 0, {-16, -16}, {255, 54, 115, 255} }},
-	{{ {42, 0, -102}, 0, {-16, -16}, {184, 0, 151, 255} }},
-	{{ {3, 54, -51}, 0, {-16, -16}, {143, 25, 203, 255} }},
-	{{ {17, -52, -46}, 0, {-16, -16}, {134, 252, 222, 255} }},
-	{{ {56, -45, -76}, 0, {-16, -16}, {202, 199, 156, 255} }},
-	{{ {42, 0, -102}, 0, {-16, -16}, {184, 0, 151, 255} }},
-	{{ {64, -25, -134}, 0, {-16, -16}, {214, 5, 136, 255} }},
-	{{ {56, -45, -76}, 0, {-16, -16}, {202, 199, 156, 255} }},
-	{{ {85, -23, -110}, 0, {-16, -16}, {7, 91, 167, 255} }},
-	{{ {102, -33, -134}, 0, {-16, -16}, {50, 237, 141, 255} }},
-	{{ {120, -12, -109}, 0, {-16, -16}, {1, 14, 130, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {218, 182, 160, 255} }},
-	{{ {17, -52, -46}, 0, {-16, -16}, {134, 252, 222, 255} }},
-	{{ {-7, 62, 0}, 0, {-16, -16}, {133, 33, 0, 255} }},
-	{{ {3, 54, -51}, 0, {-16, -16}, {143, 25, 203, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {31, -84, 0}, 0, {-16, -16}, {158, 175, 0, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {42, 0, 103}, 0, {-16, -16}, {184, 0, 105, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {64, -25, 135}, 0, {-16, -16}, {214, 5, 120, 255} }},
-	{{ {64, -25, 135}, 0, {-16, -16}, {214, 5, 120, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {218, 182, 96, 255} }},
-	{{ {102, -33, 135}, 0, {-16, -16}, {49, 236, 116, 255} }},
-	{{ {120, -11, 111}, 0, {-16, -16}, {0, 15, 126, 255} }},
-	{{ {85, -23, 111}, 0, {-16, -16}, {5, 91, 89, 255} }},
-	{{ {42, 0, 103}, 0, {-16, -16}, {184, 0, 105, 255} }},
-	{{ {44, 44, 97}, 0, {-16, -16}, {209, 29, 114, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {97, 103, 25}, 0, {-16, -16}, {78, 66, 76, 255} }},
-	{{ {108, 105, 0}, 0, {-16, -16}, {101, 77, 255, 255} }},
-	{{ {117, 128, 0}, 0, {-16, -16}, {124, 229, 0, 255} }},
-	{{ {97, 103, -24}, 0, {-16, -16}, {78, 65, 179, 255} }},
-	{{ {102, 129, -40}, 0, {-16, -16}, {76, 224, 160, 255} }},
-	{{ {77, 108, -33}, 0, {-16, -16}, {23, 45, 139, 255} }},
-	{{ {75, 130, -45}, 0, {-16, -16}, {255, 226, 133, 255} }},
-	{{ {47, 131, -40}, 0, {-16, -16}, {175, 233, 161, 255} }},
-	{{ {75, 130, -45}, 0, {-16, -16}, {255, 226, 133, 255} }},
-	{{ {77, 108, -33}, 0, {-16, -16}, {23, 45, 139, 255} }},
-	{{ {52, 111, -30}, 0, {-16, -16}, {179, 54, 170, 255} }},
-	{{ {32, 132, 0}, 0, {-16, -16}, {130, 237, 254, 255} }},
-	{{ {41, 109, 0}, 0, {-16, -16}, {141, 54, 0, 255} }},
-	{{ {52, 111, 31}, 0, {-16, -16}, {179, 55, 85, 255} }},
-	{{ {47, 131, 41}, 0, {-16, -16}, {176, 231, 96, 255} }},
-	{{ {77, 108, 34}, 0, {-16, -16}, {23, 45, 117, 255} }},
-	{{ {75, 130, 46}, 0, {-16, -16}, {255, 226, 123, 255} }},
-	{{ {102, 129, 41}, 0, {-16, -16}, {77, 224, 96, 255} }},
-	{{ {97, 103, 25}, 0, {-16, -16}, {78, 66, 76, 255} }},
-	{{ {117, 128, 0}, 0, {-16, -16}, {124, 229, 0, 255} }},
-	{{ {104, 162, 41}, 0, {-16, -16}, {73, 57, 87, 255} }},
-	{{ {119, 161, 0}, 0, {-16, -16}, {120, 41, 0, 255} }},
-	{{ {102, 129, -40}, 0, {-16, -16}, {76, 224, 160, 255} }},
-	{{ {102, 129, -40}, 0, {-16, -16}, {76, 224, 160, 255} }},
-	{{ {104, 162, -40}, 0, {-16, -16}, {72, 56, 168, 255} }},
-	{{ {119, 161, 0}, 0, {-16, -16}, {120, 41, 0, 255} }},
-	{{ {75, 130, -45}, 0, {-16, -16}, {255, 226, 133, 255} }},
-	{{ {78, 163, -45}, 0, {-16, -16}, {3, 67, 148, 255} }},
-	{{ {52, 164, -40}, 0, {-16, -16}, {194, 66, 167, 255} }},
-	{{ {47, 131, -40}, 0, {-16, -16}, {175, 233, 161, 255} }},
-	{{ {32, 132, 0}, 0, {-16, -16}, {130, 237, 254, 255} }},
-	{{ {33, 165, 0}, 0, {-16, -16}, {144, 60, 254, 255} }},
-	{{ {47, 131, 41}, 0, {-16, -16}, {176, 231, 96, 255} }},
-	{{ {52, 164, 41}, 0, {-16, -16}, {195, 67, 89, 255} }},
-	{{ {75, 130, 46}, 0, {-16, -16}, {255, 226, 123, 255} }},
-	{{ {78, 163, 46}, 0, {-16, -16}, {3, 68, 107, 255} }},
-	{{ {104, 162, 41}, 0, {-16, -16}, {73, 57, 87, 255} }},
-	{{ {102, 129, 41}, 0, {-16, -16}, {77, 224, 96, 255} }},
-	{{ {101, 179, 0}, 0, {-16, -16}, {47, 118, 0, 255} }},
-	{{ {78, 163, -45}, 0, {-16, -16}, {3, 67, 148, 255} }},
-	{{ {60, 181, 0}, 0, {-16, -16}, {230, 124, 0, 255} }},
-	{{ {101, 179, 0}, 0, {-16, -16}, {47, 118, 0, 255} }},
-	{{ {52, 164, -40}, 0, {-16, -16}, {194, 66, 167, 255} }},
-	{{ {33, 165, 0}, 0, {-16, -16}, {144, 60, 254, 255} }},
-	{{ {52, 164, 41}, 0, {-16, -16}, {195, 67, 89, 255} }},
-	{{ {78, 163, 46}, 0, {-16, -16}, {3, 68, 107, 255} }},
-};
-
-Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(1, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(10, 7, 8, 0),
-	gsSP1Triangle(3, 4, 7, 0),
-	gsSP1Triangle(2, 3, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(1, 4, 2, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 5, 8, 0),
-	gsSP1Triangle(9, 8, 5, 0),
-	gsSP1Triangle(10, 6, 8, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(12, 13, 3, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(1, 4, 6, 0),
-	gsSP1Triangle(2, 1, 6, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(7, 10, 8, 0),
-	gsSP1Triangle(7, 11, 10, 0),
-	gsSP1Triangle(10, 12, 8, 0),
-	gsSP1Triangle(12, 10, 13, 0),
-	gsSP1Triangle(10, 14, 13, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(0, 3, 5, 0),
-	gsSP1Triangle(6, 0, 5, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 80, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 5, 7, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(11, 14, 13, 0),
-	gsSP1Triangle(13, 15, 12, 0),
-	gsSP1Triangle(15, 13, 2, 0),
-	gsSP1Triangle(15, 2, 1, 0),
-	gsSP1Triangle(15, 1, 4, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_0 + 96, 7, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(4, 5, 1, 0),
-	gsSP1Triangle(5, 6, 1, 0),
-	gsSP1Triangle(1, 6, 2, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_1[30] = {
-	{{ {44, 44, 97}, 0, {-16, -16}, {209, 29, 114, 255} }},
-	{{ {48, 94, 76}, 0, {-16, -16}, {214, 89, 80, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {77, 108, 34}, 0, {314, 300}, {23, 45, 117, 255} }},
-	{{ {92, 88, 84}, 0, {932, -24}, {42, 78, 91, 255} }},
-	{{ {97, 103, 25}, 0, {232, 34}, {78, 66, 76, 255} }},
-	{{ {48, 94, 76}, 0, {832, 614}, {214, 89, 80, 255} }},
-	{{ {52, 111, 31}, 0, {276, 654}, {179, 55, 85, 255} }},
-	{{ {27, 100, 30}, 0, {320, 990}, {176, 96, 26, 255} }},
-	{{ {41, 109, 0}, 0, {-46, 860}, {141, 54, 0, 255} }},
-	{{ {3, 54, 52}, 0, {752, 1194}, {143, 25, 53, 255} }},
-	{{ {44, 44, 97}, 0, {1260, 550}, {209, 29, 114, 255} }},
-	{{ {92, 88, -83}, 0, {976, -26}, {42, 78, 165, 255} }},
-	{{ {77, 108, -33}, 0, {344, 280}, {23, 45, 139, 255} }},
-	{{ {97, 103, -24}, 0, {282, 4}, {78, 65, 179, 255} }},
-	{{ {48, 94, -75}, 0, {828, 624}, {214, 89, 176, 255} }},
-	{{ {92, 88, -83}, 0, {976, -26}, {42, 78, 165, 255} }},
-	{{ {44, 44, -96}, 0, {1256, 576}, {209, 29, 142, 255} }},
-	{{ {48, 94, -75}, 0, {828, 624}, {214, 89, 176, 255} }},
-	{{ {3, 54, -51}, 0, {704, 1212}, {143, 25, 203, 255} }},
-	{{ {27, 100, -29}, 0, {294, 986}, {176, 96, 230, 255} }},
-	{{ {52, 111, -30}, 0, {278, 640}, {179, 54, 170, 255} }},
-	{{ {41, 109, 0}, 0, {-54, 836}, {141, 54, 0, 255} }},
-	{{ {77, 108, -33}, 0, {344, 280}, {23, 45, 139, 255} }},
-	{{ {-7, 62, 0}, 0, {-16, -16}, {133, 33, 0, 255} }},
-	{{ {3, 54, 52}, 0, {-16, -16}, {143, 25, 53, 255} }},
-	{{ {27, 100, 30}, 0, {-16, -16}, {176, 96, 26, 255} }},
-	{{ {27, 100, -29}, 0, {-16, -16}, {176, 96, 230, 255} }},
-	{{ {41, 109, 0}, 0, {-16, -16}, {141, 54, 0, 255} }},
-	{{ {3, 54, -51}, 0, {-16, -16}, {143, 25, 203, 255} }},
-};
-
-Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1[] = {
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_1 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(4, 3, 6, 0),
-	gsSP1Triangle(3, 7, 6, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 6, 8, 0),
-	gsSP1Triangle(6, 11, 4, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 13, 12, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_1 + 16, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(4, 2, 3, 0),
-	gsSP1Triangle(5, 2, 4, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(2, 5, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(11, 13, 8, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_2[12] = {
-	{{ {96, 49, 94}, 0, {-90, 710}, {11, 40, 120, 255} }},
-	{{ {44, 44, 97}, 0, {180, 1350}, {209, 29, 114, 255} }},
-	{{ {42, 0, 103}, 0, {952, 1176}, {184, 0, 105, 255} }},
-	{{ {85, -23, 111}, 0, {1222, 502}, {5, 91, 89, 255} }},
-	{{ {120, -11, 111}, 0, {906, 106}, {0, 15, 126, 255} }},
-	{{ {153, 33, 95}, 0, {6, -84}, {255, 54, 115, 255} }},
-	{{ {42, 0, -102}, 0, {826, 1194}, {184, 0, 151, 255} }},
-	{{ {44, 44, -96}, 0, {102, 1318}, {209, 29, 142, 255} }},
-	{{ {96, 49, -93}, 0, {-86, 684}, {12, 40, 136, 255} }},
-	{{ {85, -23, -110}, 0, {1134, 566}, {7, 91, 167, 255} }},
-	{{ {120, -12, -109}, 0, {900, 168}, {1, 14, 130, 255} }},
-	{{ {153, 33, -94}, 0, {74, -74}, {245, 51, 140, 255} }},
-};
-
-Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2[] = {
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_2 + 0, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(5, 0, 4, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(10, 8, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3[92] = {
-	{{ {153, 33, 95}, 0, {-16, -16}, {255, 54, 115, 255} }},
-	{{ {200, 75, 84}, 0, {-16, -16}, {33, 81, 93, 255} }},
-	{{ {151, 72, 70}, 0, {-16, -16}, {227, 91, 84, 255} }},
-	{{ {181, -9, 116}, 0, {-16, -16}, {42, 2, 120, 255} }},
-	{{ {120, -11, 111}, 0, {-16, -16}, {0, 15, 126, 255} }},
-	{{ {145, -83, 105}, 0, {-16, -16}, {0, 202, 115, 255} }},
-	{{ {91, -54, 86}, 0, {-16, -16}, {218, 182, 96, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {25, 139, 44, 255} }},
-	{{ {56, -45, 77}, 0, {-16, -16}, {202, 199, 100, 255} }},
-	{{ {58, -114, 60}, 0, {-16, -16}, {87, 169, 32, 255} }},
-	{{ {31, -85, 87}, 0, {-16, -16}, {228, 250, 124, 255} }},
-	{{ {17, -52, 47}, 0, {-16, -16}, {134, 252, 34, 255} }},
-	{{ {9, -88, 59}, 0, {-16, -16}, {132, 237, 22, 255} }},
-	{{ {31, -84, 0}, 0, {-16, -16}, {158, 175, 0, 255} }},
-	{{ {36, -116, 36}, 0, {-16, -16}, {239, 146, 195, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {25, 139, 213, 255} }},
-	{{ {31, -84, 0}, 0, {-16, -16}, {158, 175, 0, 255} }},
-	{{ {36, -116, -35}, 0, {-16, -16}, {239, 146, 61, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {25, 139, 213, 255} }},
-	{{ {9, -88, -58}, 0, {-16, -16}, {132, 237, 234, 255} }},
-	{{ {17, -52, -46}, 0, {-16, -16}, {134, 252, 222, 255} }},
-	{{ {31, -85, -86}, 0, {-16, -16}, {228, 250, 132, 255} }},
-	{{ {56, -45, -76}, 0, {-16, -16}, {202, 199, 156, 255} }},
-	{{ {58, -114, -59}, 0, {-16, -16}, {87, 169, 224, 255} }},
-	{{ {91, -54, -85}, 0, {-16, -16}, {218, 182, 160, 255} }},
-	{{ {145, -84, -104}, 0, {-16, -16}, {0, 201, 141, 255} }},
-	{{ {120, -12, -109}, 0, {-16, -16}, {1, 14, 130, 255} }},
-	{{ {182, -9, -115}, 0, {-16, -16}, {43, 255, 136, 255} }},
-	{{ {153, 33, -94}, 0, {-16, -16}, {245, 51, 140, 255} }},
-	{{ {200, 70, -97}, 0, {-16, -16}, {32, 64, 151, 255} }},
-	{{ {151, 72, -68}, 0, {-16, -16}, {216, 94, 181, 255} }},
-	{{ {175, 91, -38}, 0, {-16, -16}, {199, 100, 201, 255} }},
-	{{ {200, 70, -97}, 0, {-16, -16}, {32, 64, 151, 255} }},
-	{{ {175, 91, -38}, 0, {-16, -16}, {199, 100, 201, 255} }},
-	{{ {211, 91, -71}, 0, {-16, -16}, {35, 82, 165, 255} }},
-	{{ {201, 125, -13}, 0, {-16, -16}, {249, 127, 0, 255} }},
-	{{ {160, 96, 0}, 0, {-16, -16}, {184, 105, 4, 255} }},
-	{{ {175, 91, 39}, 0, {-16, -16}, {227, 112, 53, 255} }},
-	{{ {209, 86, 60}, 0, {-16, -16}, {49, 98, 64, 255} }},
-	{{ {200, 75, 84}, 0, {-16, -16}, {33, 81, 93, 255} }},
-	{{ {151, 72, 70}, 0, {-16, -16}, {227, 91, 84, 255} }},
-	{{ {227, 35, 75}, 0, {-16, -16}, {108, 11, 66, 255} }},
-	{{ {181, -9, 116}, 0, {-16, -16}, {42, 2, 120, 255} }},
-	{{ {227, -14, 59}, 0, {-16, -16}, {114, 235, 52, 255} }},
-	{{ {189, -102, 73}, 0, {-16, -16}, {74, 176, 66, 255} }},
-	{{ {145, -83, 105}, 0, {-16, -16}, {0, 202, 115, 255} }},
-	{{ {116, -126, 68}, 0, {-16, -16}, {235, 148, 64, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {25, 139, 44, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {25, 139, 44, 255} }},
-	{{ {119, -134, 0}, 0, {-16, -16}, {241, 130, 255, 255} }},
-	{{ {116, -126, 68}, 0, {-16, -16}, {235, 148, 64, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {25, 139, 213, 255} }},
-	{{ {116, -124, -67}, 0, {-16, -16}, {235, 148, 192, 255} }},
-	{{ {145, -84, -104}, 0, {-16, -16}, {0, 201, 141, 255} }},
-	{{ {189, -102, -71}, 0, {-16, -16}, {73, 175, 191, 255} }},
-	{{ {182, -9, -115}, 0, {-16, -16}, {43, 255, 136, 255} }},
-	{{ {227, -14, -58}, 0, {-16, -16}, {114, 239, 203, 255} }},
-	{{ {221, 35, -73}, 0, {-16, -16}, {112, 3, 196, 255} }},
-	{{ {200, 70, -97}, 0, {-16, -16}, {32, 64, 151, 255} }},
-	{{ {211, 91, -71}, 0, {-16, -16}, {35, 82, 165, 255} }},
-	{{ {232, 69, -34}, 0, {-16, -16}, {117, 226, 216, 255} }},
-	{{ {248, 104, -43}, 0, {-16, -16}, {106, 51, 208, 255} }},
-	{{ {201, 125, -13}, 0, {-16, -16}, {249, 127, 0, 255} }},
-	{{ {209, 86, 60}, 0, {-16, -16}, {49, 98, 64, 255} }},
-	{{ {209, 86, 60}, 0, {-16, -16}, {49, 98, 64, 255} }},
-	{{ {231, 81, 33}, 0, {-16, -16}, {108, 52, 42, 255} }},
-	{{ {248, 104, -43}, 0, {-16, -16}, {106, 51, 208, 255} }},
-	{{ {227, 35, 75}, 0, {-16, -16}, {108, 11, 66, 255} }},
-	{{ {237, 64, 0}, 0, {-16, -16}, {127, 249, 4, 255} }},
-	{{ {227, -14, 59}, 0, {-16, -16}, {114, 235, 52, 255} }},
-	{{ {241, -34, 0}, 0, {-16, -16}, {124, 229, 0, 255} }},
-	{{ {189, -102, 73}, 0, {-16, -16}, {74, 176, 66, 255} }},
-	{{ {200, -117, 0}, 0, {-16, -16}, {80, 157, 0, 255} }},
-	{{ {116, -126, 68}, 0, {-16, -16}, {235, 148, 64, 255} }},
-	{{ {119, -134, 0}, 0, {-16, -16}, {241, 130, 255, 255} }},
-	{{ {116, -124, -67}, 0, {-16, -16}, {235, 148, 192, 255} }},
-	{{ {189, -102, -71}, 0, {-16, -16}, {73, 175, 191, 255} }},
-	{{ {227, -14, -58}, 0, {-16, -16}, {114, 239, 203, 255} }},
-	{{ {221, 35, -73}, 0, {-16, -16}, {112, 3, 196, 255} }},
-	{{ {232, 69, -34}, 0, {-16, -16}, {117, 226, 216, 255} }},
-	{{ {36, -116, -35}, 0, {-16, -16}, {239, 146, 61, 255} }},
-	{{ {58, -114, -59}, 0, {-16, -16}, {87, 169, 224, 255} }},
-	{{ {64, -103, -51}, 0, {-16, -16}, {25, 139, 213, 255} }},
-	{{ {35, -120, -67}, 0, {-16, -16}, {230, 146, 198, 255} }},
-	{{ {9, -88, -58}, 0, {-16, -16}, {132, 237, 234, 255} }},
-	{{ {31, -85, -86}, 0, {-16, -16}, {228, 250, 132, 255} }},
-	{{ {58, -114, 60}, 0, {-16, -16}, {87, 169, 32, 255} }},
-	{{ {36, -116, 36}, 0, {-16, -16}, {239, 146, 195, 255} }},
-	{{ {64, -103, 52}, 0, {-16, -16}, {25, 139, 44, 255} }},
-	{{ {35, -120, 68}, 0, {-16, -16}, {230, 146, 58, 255} }},
-	{{ {31, -85, 87}, 0, {-16, -16}, {228, 250, 124, 255} }},
-	{{ {9, -88, 59}, 0, {-16, -16}, {132, 237, 22, 255} }},
-};
-
-Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3[] = {
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 8, 11, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 7, 14, 0),
-	gsSP1Triangle(13, 15, 7, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(6, 2, 7, 0),
-	gsSP1Triangle(6, 8, 2, 0),
-	gsSP1Triangle(8, 9, 2, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(7, 9, 6, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(11, 14, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(11, 12, 8, 0),
-	gsSP1Triangle(8, 12, 6, 0),
-	gsSP1Triangle(12, 13, 6, 0),
-	gsSP1Triangle(13, 4, 6, 0),
-	gsSP1Triangle(13, 14, 4, 0),
-	gsSP1Triangle(14, 15, 4, 0),
-	gsSP1Triangle(4, 15, 2, 0),
-	gsSP1Triangle(4, 2, 1, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_vtx_3 + 80, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(3, 5, 1, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 9, 7, 0),
-	gsSP1Triangle(10, 9, 6, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(7, 9, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_001_mesh_layer_4_vtx_0[4] = {
-	{{ {0, 0, 0}, 0, {-16, 1978}, {23, 0, 125, 255} }},
-	{{ {104, 0, -19}, 0, {974, 1978}, {23, 0, 125, 255} }},
-	{{ {104, 212, -19}, 0, {974, -34}, {23, 0, 125, 255} }},
-	{{ {0, 212, 0}, 0, {-16, -34}, {22, 0, 125, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_001_mesh_layer_4_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_001_mesh_layer_4_vtx_0 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_001_mesh_layer_4_vtx_1[4] = {
-	{{ {-103, 212, 18}, 0, {-16, -34}, {22, 0, 125, 255} }},
-	{{ {0, 0, 0}, 0, {974, 1978}, {23, 0, 125, 255} }},
-	{{ {0, 212, 0}, 0, {974, -34}, {22, 0, 125, 255} }},
-	{{ {-103, 0, 19}, 0, {-16, 1978}, {22, 0, 125, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_001_mesh_layer_4_tri_1[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_001_mesh_layer_4_vtx_1 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_002_mesh_layer_4_vtx_0[4] = {
-	{{ {0, 0, 0}, 0, {-16, 1978}, {233, 0, 125, 255} }},
-	{{ {104, 0, 19}, 0, {974, 1978}, {233, 0, 125, 255} }},
-	{{ {104, 212, 19}, 0, {974, -34}, {233, 0, 125, 255} }},
-	{{ {0, 212, 0}, 0, {-16, -34}, {234, 0, 125, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_002_mesh_layer_4_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_002_mesh_layer_4_vtx_0 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_002_mesh_layer_4_vtx_1[4] = {
-	{{ {-103, 212, -18}, 0, {-16, -34}, {234, 0, 125, 255} }},
-	{{ {-103, 0, -19}, 0, {-16, 1978}, {234, 0, 125, 255} }},
-	{{ {0, 0, 0}, 0, {974, 1978}, {233, 0, 125, 255} }},
-	{{ {0, 212, 0}, 0, {974, -34}, {234, 0, 125, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_002_mesh_layer_4_tri_1[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_002_mesh_layer_4_vtx_1 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_offset_003_mesh_layer_1_vtx_0[31] = {
-	{{ {6, -13, -42}, 0, {-16, -16}, {219, 225, 138, 255} }},
-	{{ {-8, -9, -27}, 0, {-16, -16}, {144, 241, 198, 255} }},
-	{{ {-8, 17, -17}, 0, {-16, -16}, {146, 54, 223, 255} }},
-	{{ {5, -42, -5}, 0, {-16, -16}, {216, 135, 254, 255} }},
-	{{ {57, -36, -5}, 0, {-16, -16}, {49, 139, 253, 255} }},
-	{{ {58, -13, -34}, 0, {-16, -16}, {51, 223, 144, 255} }},
-	{{ {7, 29, -26}, 0, {-16, -16}, {224, 103, 188, 255} }},
-	{{ {-8, 16, 10}, 0, {-16, -16}, {146, 51, 37, 255} }},
-	{{ {-8, -11, 18}, 0, {-16, -16}, {144, 237, 58, 255} }},
-	{{ {-9, -26, -5}, 0, {-16, -16}, {142, 200, 254, 255} }},
-	{{ {6, -16, 32}, 0, {-16, -16}, {219, 216, 115, 255} }},
-	{{ {58, -15, 25}, 0, {-16, -16}, {52, 216, 109, 255} }},
-	{{ {67, -12, 16}, 0, {-16, -16}, {111, 232, 58, 255} }},
-	{{ {67, -26, -5}, 0, {-16, -16}, {109, 191, 254, 255} }},
-	{{ {68, -10, -25}, 0, {-16, -16}, {110, 240, 194, 255} }},
-	{{ {68, 13, -16}, 0, {-16, -16}, {111, 50, 221, 255} }},
-	{{ {59, 21, -21}, 0, {-16, -16}, {55, 95, 192, 255} }},
-	{{ {68, 13, -16}, 0, {-16, -16}, {111, 50, 221, 255} }},
-	{{ {58, -13, -34}, 0, {-16, -16}, {51, 223, 144, 255} }},
-	{{ {7, 29, -26}, 0, {-16, -16}, {224, 103, 188, 255} }},
-	{{ {7, 27, 20}, 0, {-16, -16}, {223, 96, 76, 255} }},
-	{{ {-8, 16, 10}, 0, {-16, -16}, {146, 51, 37, 255} }},
-	{{ {-8, -11, 18}, 0, {-16, -16}, {144, 237, 58, 255} }},
-	{{ {6, -16, 32}, 0, {-16, -16}, {219, 216, 115, 255} }},
-	{{ {-9, -26, -5}, 0, {-16, -16}, {142, 200, 254, 255} }},
-	{{ {59, 20, 15}, 0, {-16, -16}, {55, 90, 71, 255} }},
-	{{ {58, -15, 25}, 0, {-16, -16}, {52, 216, 109, 255} }},
-	{{ {67, -12, 16}, 0, {-16, -16}, {111, 232, 58, 255} }},
-	{{ {68, 12, 9}, 0, {-16, -16}, {113, 44, 38, 255} }},
-	{{ {68, -10, -25}, 0, {-16, -16}, {110, 240, 194, 255} }},
-	{{ {67, -26, -5}, 0, {-16, -16}, {109, 191, 254, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_003_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_offset_003_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(0, 6, 5, 0),
-	gsSP1Triangle(0, 2, 6, 0),
-	gsSP1Triangle(6, 2, 7, 0),
-	gsSP1Triangle(8, 7, 2, 0),
-	gsSP1Triangle(2, 1, 8, 0),
-	gsSP1Triangle(1, 9, 8, 0),
-	gsSP1Triangle(3, 9, 1, 0),
-	gsSP1Triangle(10, 9, 3, 0),
-	gsSP1Triangle(10, 3, 11, 0),
-	gsSP1Triangle(3, 4, 11, 0),
-	gsSP1Triangle(4, 12, 11, 0),
-	gsSP1Triangle(4, 13, 12, 0),
-	gsSP1Triangle(14, 13, 4, 0),
-	gsSP1Triangle(5, 14, 4, 0),
-	gsSP1Triangle(15, 14, 5, 0),
-	gsSPVertex(ragdoll_mario_000_offset_003_mesh_layer_1_vtx_0 + 16, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(4, 7, 9, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(11, 14, 13, 0),
-	gsSP1Triangle(12, 13, 1, 0),
-	gsSP1Triangle(9, 12, 1, 0),
-	gsSP1Triangle(9, 1, 0, 0),
-	gsSP1Triangle(4, 9, 0, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_offset_004_mesh_layer_1_vtx_0[16] = {
-	{{ {-2, 21, -21}, 0, {-16, -16}, {224, 103, 189, 255} }},
-	{{ {-14, 13, -15}, 0, {-16, -16}, {150, 61, 221, 255} }},
-	{{ {-14, 11, 10}, 0, {-16, -16}, {149, 55, 42, 255} }},
-	{{ {-3, -14, -34}, 0, {-16, -16}, {221, 224, 138, 255} }},
-	{{ {46, -14, -30}, 0, {-16, -16}, {64, 224, 151, 255} }},
-	{{ {47, 16, -19}, 0, {-16, -16}, {67, 89, 196, 255} }},
-	{{ {-2, 19, 16}, 0, {-16, -16}, {225, 97, 76, 255} }},
-	{{ {-15, -13, 17}, 0, {-16, -16}, {149, 236, 65, 255} }},
-	{{ {-15, -27, -4}, 0, {-16, -16}, {147, 191, 253, 255} }},
-	{{ {-15, -11, -24}, 0, {-16, -16}, {147, 241, 192, 255} }},
-	{{ {-3, -38, -4}, 0, {-16, -16}, {220, 134, 252, 255} }},
-	{{ {45, -34, -4}, 0, {-16, -16}, {62, 145, 252, 255} }},
-	{{ {58, -7, -3}, 0, {-16, -16}, {127, 253, 1, 255} }},
-	{{ {47, 14, 13}, 0, {-16, -16}, {67, 84, 68, 255} }},
-	{{ {-3, -17, 26}, 0, {-16, -16}, {222, 215, 115, 255} }},
-	{{ {46, -17, 22}, 0, {-16, -16}, {64, 216, 102, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_004_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_offset_004_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(0, 6, 5, 0),
-	gsSP1Triangle(0, 2, 6, 0),
-	gsSP1Triangle(6, 2, 7, 0),
-	gsSP1Triangle(8, 7, 2, 0),
-	gsSP1Triangle(8, 2, 1, 0),
-	gsSP1Triangle(9, 8, 1, 0),
-	gsSP1Triangle(3, 9, 1, 0),
-	gsSP1Triangle(10, 9, 3, 0),
-	gsSP1Triangle(10, 3, 11, 0),
-	gsSP1Triangle(3, 4, 11, 0),
-	gsSP1Triangle(4, 12, 11, 0),
-	gsSP1Triangle(5, 12, 4, 0),
-	gsSP1Triangle(13, 12, 5, 0),
-	gsSP1Triangle(6, 13, 5, 0),
-	gsSP1Triangle(6, 14, 13, 0),
-	gsSP1Triangle(6, 7, 14, 0),
-	gsSP1Triangle(14, 7, 8, 0),
-	gsSP1Triangle(14, 8, 10, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(14, 10, 15, 0),
-	gsSP1Triangle(10, 11, 15, 0),
-	gsSP1Triangle(11, 12, 15, 0),
-	gsSP1Triangle(15, 12, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_003_mesh_layer_1_vtx_0[46] = {
-	{{ {17, -38, -39}, 0, {-16, -16}, {158, 184, 219, 255} }},
-	{{ {-14, -14, -4}, 0, {-16, -16}, {139, 206, 3, 255} }},
-	{{ {-10, 26, -38}, 0, {-16, -16}, {136, 236, 218, 255} }},
-	{{ {27, -58, 6}, 0, {-16, -16}, {162, 172, 14, 255} }},
-	{{ {5, -6, 36}, 0, {-16, -16}, {153, 210, 58, 255} }},
-	{{ {-18, 45, 8}, 0, {-16, -16}, {130, 245, 14, 255} }},
-	{{ {26, -25, -32}, 0, {-16, -16}, {23, 201, 144, 255} }},
-	{{ {17, -38, -39}, 0, {-16, -16}, {94, 236, 172, 255} }},
-	{{ {-10, 26, -38}, 0, {-16, -16}, {51, 84, 175, 255} }},
-	{{ {34, -41, 3}, 0, {-16, -16}, {61, 151, 38, 255} }},
-	{{ {58, -45, 7}, 0, {-16, -16}, {6, 138, 46, 255} }},
-	{{ {80, -31, -61}, 0, {-16, -16}, {28, 182, 156, 255} }},
-	{{ {33, 7, -44}, 0, {-16, -16}, {196, 253, 144, 255} }},
-	{{ {4, 24, -31}, 0, {-16, -16}, {252, 68, 149, 255} }},
-	{{ {-1, 39, 5}, 0, {-16, -16}, {219, 113, 45, 255} }},
-	{{ {-18, 45, 8}, 0, {-16, -16}, {45, 116, 27, 255} }},
-	{{ {-1, 39, 5}, 0, {-16, -16}, {219, 113, 45, 255} }},
-	{{ {-18, 45, 8}, 0, {-16, -16}, {45, 116, 27, 255} }},
-	{{ {5, -6, 36}, 0, {-16, -16}, {67, 28, 104, 255} }},
-	{{ {17, -1, 27}, 0, {-16, -16}, {254, 253, 127, 255} }},
-	{{ {34, -41, 3}, 0, {-16, -16}, {61, 151, 38, 255} }},
-	{{ {27, -58, 6}, 0, {-16, -16}, {117, 212, 23, 255} }},
-	{{ {17, -38, -39}, 0, {-16, -16}, {94, 236, 172, 255} }},
-	{{ {36, 6, 42}, 0, {-16, -16}, {227, 239, 123, 255} }},
-	{{ {12, 59, 10}, 0, {-16, -16}, {175, 85, 48, 255} }},
-	{{ {59, 81, 8}, 0, {-16, -16}, {20, 121, 33, 255} }},
-	{{ {86, 29, 41}, 0, {-16, -16}, {64, 25, 107, 255} }},
-	{{ {107, -26, 4}, 0, {-16, -16}, {101, 191, 41, 255} }},
-	{{ {58, -45, 7}, 0, {-16, -16}, {6, 138, 46, 255} }},
-	{{ {80, -31, -61}, 0, {-16, -16}, {28, 182, 156, 255} }},
-	{{ {100, -6, -46}, 0, {-16, -16}, {106, 254, 185, 255} }},
-	{{ {61, 12, -60}, 0, {-16, -16}, {245, 23, 132, 255} }},
-	{{ {33, 7, -44}, 0, {-16, -16}, {196, 253, 144, 255} }},
-	{{ {61, 12, -60}, 0, {-16, -16}, {245, 23, 132, 255} }},
-	{{ {80, -31, -61}, 0, {-16, -16}, {28, 182, 156, 255} }},
-	{{ {32, 63, -28}, 0, {-16, -16}, {208, 92, 182, 255} }},
-	{{ {4, 24, -31}, 0, {-16, -16}, {252, 68, 149, 255} }},
-	{{ {12, 59, 10}, 0, {-16, -16}, {175, 85, 48, 255} }},
-	{{ {-1, 39, 5}, 0, {-16, -16}, {219, 113, 45, 255} }},
-	{{ {59, 81, 8}, 0, {-16, -16}, {20, 121, 33, 255} }},
-	{{ {57, 55, -37}, 0, {-16, -16}, {23, 85, 164, 255} }},
-	{{ {99, 40, -16}, 0, {-16, -16}, {108, 64, 235, 255} }},
-	{{ {86, 29, 41}, 0, {-16, -16}, {64, 25, 107, 255} }},
-	{{ {107, -26, 4}, 0, {-16, -16}, {101, 191, 41, 255} }},
-	{{ {100, -6, -46}, 0, {-16, -16}, {106, 254, 185, 255} }},
-	{{ {90, 17, -46}, 0, {-16, -16}, {72, 49, 163, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_003_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_003_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 6, 9, 0),
-	gsSP1Triangle(10, 9, 6, 0),
-	gsSP1Triangle(6, 11, 10, 0),
-	gsSP1Triangle(6, 12, 11, 0),
-	gsSP1Triangle(6, 13, 12, 0),
-	gsSP1Triangle(8, 13, 6, 0),
-	gsSP1Triangle(14, 13, 8, 0),
-	gsSP1Triangle(8, 15, 14, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_003_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(2, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 3, 4, 0),
-	gsSP1Triangle(0, 3, 7, 0),
-	gsSP1Triangle(0, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(11, 10, 7, 0),
-	gsSP1Triangle(12, 11, 7, 0),
-	gsSP1Triangle(4, 12, 7, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(13, 14, 11, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_003_mesh_layer_1_vtx_0 + 32, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(3, 5, 7, 0),
-	gsSP1Triangle(7, 8, 3, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(12, 9, 11, 0),
-	gsSP1Triangle(13, 9, 12, 0),
-	gsSP1Triangle(1, 13, 12, 0),
-	gsSP1Triangle(8, 13, 1, 0),
-	gsSP1Triangle(1, 3, 8, 0),
-	gsSP1Triangle(13, 8, 9, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0[58] = {
-	{{ {2, 3, 26}, 0, {-16, -16}, {74, 52, 89, 255} }},
-	{{ {20, -46, 12}, 0, {-16, -16}, {117, 221, 35, 255} }},
-	{{ {26, -32, 6}, 0, {-16, -16}, {55, 168, 73, 255} }},
-	{{ {13, -39, -31}, 0, {-16, -16}, {99, 222, 184, 255} }},
-	{{ {20, -27, -27}, 0, {-16, -16}, {16, 178, 157, 255} }},
-	{{ {-10, 14, -43}, 0, {-16, -16}, {50, 60, 156, 255} }},
-	{{ {1, 15, -37}, 0, {-16, -16}, {225, 28, 136, 255} }},
-	{{ {-3, 35, -9}, 0, {-16, -16}, {206, 114, 24, 255} }},
-	{{ {-17, 40, -8}, 0, {-16, -16}, {43, 120, 0, 255} }},
-	{{ {11, 5, 17}, 0, {-16, -16}, {5, 27, 124, 255} }},
-	{{ {26, 16, 28}, 0, {-16, -16}, {222, 13, 122, 255} }},
-	{{ {45, -34, 10}, 0, {-16, -16}, {255, 159, 82, 255} }},
-	{{ {41, -37, -36}, 0, {-16, -16}, {216, 157, 187, 255} }},
-	{{ {25, -1, -44}, 0, {-16, -16}, {224, 227, 137, 255} }},
-	{{ {11, 29, -52}, 0, {-16, -16}, {219, 30, 138, 255} }},
-	{{ {6, 53, -9}, 0, {-16, -16}, {172, 93, 23, 255} }},
-	{{ {26, 16, 28}, 0, {-16, -16}, {222, 13, 122, 255} }},
-	{{ {70, 89, -20}, 0, {-16, -16}, {240, 126, 249, 255} }},
-	{{ {6, 53, -9}, 0, {-16, -16}, {172, 93, 23, 255} }},
-	{{ {77, 41, 21}, 0, {-16, -16}, {20, 40, 119, 255} }},
-	{{ {83, -17, 10}, 0, {-16, -16}, {67, 193, 88, 255} }},
-	{{ {45, -34, 10}, 0, {-16, -16}, {255, 159, 82, 255} }},
-	{{ {89, -47, -37}, 0, {-16, -16}, {75, 164, 212, 255} }},
-	{{ {41, -37, -36}, 0, {-16, -16}, {216, 157, 187, 255} }},
-	{{ {76, -18, -48}, 0, {-16, -16}, {45, 3, 137, 255} }},
-	{{ {25, -1, -44}, 0, {-16, -16}, {224, 227, 137, 255} }},
-	{{ {26, 41, -41}, 0, {-16, -16}, {245, 65, 147, 255} }},
-	{{ {11, 29, -52}, 0, {-16, -16}, {219, 30, 138, 255} }},
-	{{ {78, 59, -34}, 0, {-16, -16}, {246, 22, 131, 255} }},
-	{{ {119, 70, -42}, 0, {-16, -16}, {50, 65, 159, 255} }},
-	{{ {121, 73, -21}, 0, {-16, -16}, {77, 95, 34, 255} }},
-	{{ {141, 34, -7}, 0, {-16, -16}, {116, 248, 52, 255} }},
-	{{ {133, 28, -40}, 0, {-16, -16}, {80, 216, 166, 255} }},
-	{{ {141, 34, -7}, 0, {-16, -16}, {116, 248, 52, 255} }},
-	{{ {83, -17, 10}, 0, {-16, -16}, {67, 193, 88, 255} }},
-	{{ {89, -6, -27}, 0, {-16, -16}, {101, 227, 184, 255} }},
-	{{ {89, -47, -37}, 0, {-16, -16}, {75, 164, 212, 255} }},
-	{{ {76, -18, -48}, 0, {-16, -16}, {45, 3, 137, 255} }},
-	{{ {69, 10, -36}, 0, {-16, -16}, {51, 29, 143, 255} }},
-	{{ {26, 41, -41}, 0, {-16, -16}, {245, 65, 147, 255} }},
-	{{ {78, 59, -34}, 0, {-16, -16}, {246, 22, 131, 255} }},
-	{{ {119, 70, -42}, 0, {-16, -16}, {50, 65, 159, 255} }},
-	{{ {121, 73, -21}, 0, {-16, -16}, {77, 95, 34, 255} }},
-	{{ {2, 3, 26}, 0, {-16, -16}, {168, 240, 90, 255} }},
-	{{ {6, -38, 7}, 0, {-16, -16}, {167, 176, 42, 255} }},
-	{{ {20, -46, 12}, 0, {-16, -16}, {185, 161, 45, 255} }},
-	{{ {-6, -3, 17}, 0, {-16, -16}, {151, 226, 66, 255} }},
-	{{ {-20, 22, -7}, 0, {-16, -16}, {131, 0, 22, 255} }},
-	{{ {-17, 40, -8}, 0, {-16, -16}, {132, 21, 16, 255} }},
-	{{ {-20, 22, -7}, 0, {-16, -16}, {131, 0, 22, 255} }},
-	{{ {2, 3, 26}, 0, {-16, -16}, {168, 240, 90, 255} }},
-	{{ {-10, 14, -43}, 0, {-16, -16}, {145, 244, 195, 255} }},
-	{{ {-15, 4, -32}, 0, {-16, -16}, {141, 222, 214, 255} }},
-	{{ {1, -33, -23}, 0, {-16, -16}, {159, 179, 226, 255} }},
-	{{ {13, -39, -31}, 0, {-16, -16}, {181, 164, 212, 255} }},
-	{{ {6, -38, 7}, 0, {-16, -16}, {167, 176, 42, 255} }},
-	{{ {20, -46, 12}, 0, {-16, -16}, {185, 161, 45, 255} }},
-	{{ {-6, -3, 17}, 0, {-16, -16}, {151, 226, 66, 255} }},
-};
-
-Gfx ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(7, 8, 0, 0),
-	gsSP1Triangle(0, 9, 7, 0),
-	gsSP1Triangle(2, 9, 0, 0),
-	gsSP1Triangle(10, 9, 2, 0),
-	gsSP1Triangle(2, 11, 10, 0),
-	gsSP1Triangle(2, 12, 11, 0),
-	gsSP1Triangle(2, 4, 12, 0),
-	gsSP1Triangle(4, 13, 12, 0),
-	gsSP1Triangle(4, 6, 13, 0),
-	gsSP1Triangle(6, 14, 13, 0),
-	gsSP1Triangle(14, 6, 7, 0),
-	gsSP1Triangle(7, 15, 14, 0),
-	gsSP1Triangle(7, 10, 15, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(2, 10, 11, 0),
-	gsSP1Triangle(10, 2, 1, 0),
-	gsSP1Triangle(1, 12, 10, 0),
-	gsSP1Triangle(13, 12, 1, 0),
-	gsSP1Triangle(1, 14, 13, 0),
-	gsSP1Triangle(14, 1, 3, 0),
-	gsSP1Triangle(15, 14, 3, 0),
-	gsSP1Triangle(4, 15, 3, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 6, 3, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(6, 8, 3, 0),
-	gsSP1Triangle(8, 0, 3, 0),
-	gsSP1Triangle(8, 9, 0, 0),
-	gsSP1Triangle(9, 1, 0, 0),
-	gsSP1Triangle(10, 1, 9, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(11, 14, 12, 0),
-	gsSP1Triangle(15, 14, 11, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_vtx_0 + 48, 10, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(5, 7, 9, 0),
-	gsSP1Triangle(9, 4, 5, 0),
-	gsSP1Triangle(9, 1, 4, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_offset_006_mesh_layer_1_vtx_0[28] = {
-	{{ {58, 17, 27}, 0, {-16, -16}, {54, 90, 72, 255} }},
-	{{ {67, 10, 21}, 0, {-16, -16}, {111, 50, 37, 255} }},
-	{{ {67, 11, -4}, 0, {-16, -16}, {112, 51, 223, 255} }},
-	{{ {67, -14, 28}, 0, {-16, -16}, {110, 232, 59, 255} }},
-	{{ {57, -17, 37}, 0, {-16, -16}, {50, 216, 110, 255} }},
-	{{ {7, 25, 32}, 0, {-16, -16}, {224, 97, 76, 255} }},
-	{{ {7, 27, -13}, 0, {-16, -16}, {225, 104, 190, 255} }},
-	{{ {58, 19, -9}, 0, {-16, -16}, {55, 96, 194, 255} }},
-	{{ {67, -12, -13}, 0, {-16, -16}, {110, 239, 195, 255} }},
-	{{ {66, -28, 6}, 0, {-16, -16}, {111, 195, 250, 255} }},
-	{{ {57, -38, 6}, 0, {-16, -16}, {51, 140, 250, 255} }},
-	{{ {57, -14, -22}, 0, {-16, -16}, {50, 227, 143, 255} }},
-	{{ {5, -44, 5}, 0, {-16, -16}, {217, 135, 248, 255} }},
-	{{ {6, -19, 44}, 0, {-16, -16}, {220, 214, 114, 255} }},
-	{{ {-8, 14, 22}, 0, {-16, -16}, {147, 53, 38, 255} }},
-	{{ {-8, 15, -5}, 0, {-16, -16}, {147, 56, 223, 255} }},
-	{{ {-9, -10, -15}, 0, {-16, -16}, {144, 246, 196, 255} }},
-	{{ {-8, 15, -5}, 0, {-16, -16}, {147, 56, 223, 255} }},
-	{{ {7, 27, -13}, 0, {-16, -16}, {225, 104, 190, 255} }},
-	{{ {6, -15, -30}, 0, {-16, -16}, {221, 227, 137, 255} }},
-	{{ {58, 19, -9}, 0, {-16, -16}, {55, 96, 194, 255} }},
-	{{ {57, -14, -22}, 0, {-16, -16}, {50, 227, 143, 255} }},
-	{{ {67, -12, -13}, 0, {-16, -16}, {110, 239, 195, 255} }},
-	{{ {5, -44, 5}, 0, {-16, -16}, {217, 135, 248, 255} }},
-	{{ {-9, -28, 6}, 0, {-16, -16}, {143, 198, 252, 255} }},
-	{{ {-9, -13, 30}, 0, {-16, -16}, {145, 238, 60, 255} }},
-	{{ {6, -19, 44}, 0, {-16, -16}, {220, 214, 114, 255} }},
-	{{ {-8, 14, 22}, 0, {-16, -16}, {147, 53, 38, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_006_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_offset_006_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(0, 6, 5, 0),
-	gsSP1Triangle(0, 7, 6, 0),
-	gsSP1Triangle(0, 2, 7, 0),
-	gsSP1Triangle(7, 2, 8, 0),
-	gsSP1Triangle(8, 2, 9, 0),
-	gsSP1Triangle(2, 3, 9, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(10, 9, 3, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(10, 4, 13, 0),
-	gsSP1Triangle(10, 3, 4, 0),
-	gsSP1Triangle(4, 5, 13, 0),
-	gsSP1Triangle(5, 14, 13, 0),
-	gsSP1Triangle(15, 14, 5, 0),
-	gsSP1Triangle(6, 15, 5, 0),
-	gsSPVertex(ragdoll_mario_000_offset_006_mesh_layer_1_vtx_0 + 16, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(5, 7, 3, 0),
-	gsSP1Triangle(7, 8, 3, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(9, 11, 1, 0),
-	gsSP1Triangle(9, 1, 0, 0),
-	gsSP1Triangle(0, 8, 9, 0),
-	gsSP1Triangle(8, 0, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_offset_007_mesh_layer_1_vtx_0[16] = {
-	{{ {-2, -18, 38}, 0, {-16, -16}, {220, 214, 114, 255} }},
-	{{ {-14, -14, 28}, 0, {-16, -16}, {147, 237, 62, 255} }},
-	{{ {-3, -39, 6}, 0, {-16, -16}, {217, 135, 250, 255} }},
-	{{ {-13, 10, 21}, 0, {-16, -16}, {148, 54, 41, 255} }},
-	{{ {-1, 18, 28}, 0, {-16, -16}, {223, 96, 77, 255} }},
-	{{ {47, -17, 34}, 0, {-16, -16}, {65, 218, 103, 255} }},
-	{{ {46, -36, 6}, 0, {-16, -16}, {61, 145, 250, 255} }},
-	{{ {47, -15, -19}, 0, {-16, -16}, {64, 227, 150, 255} }},
-	{{ {-2, -15, -23}, 0, {-16, -16}, {221, 227, 137, 255} }},
-	{{ {-14, -28, 6}, 0, {-16, -16}, {145, 194, 250, 255} }},
-	{{ {-14, -12, -13}, 0, {-16, -16}, {147, 243, 191, 255} }},
-	{{ {-13, 12, -4}, 0, {-16, -16}, {151, 61, 218, 255} }},
-	{{ {-1, 20, -9}, 0, {-16, -16}, {225, 104, 190, 255} }},
-	{{ {48, 13, 25}, 0, {-16, -16}, {68, 83, 68, 255} }},
-	{{ {59, -8, 7}, 0, {-16, -16}, {127, 253, 255, 255} }},
-	{{ {48, 15, -7}, 0, {-16, -16}, {67, 91, 197, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_007_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_offset_007_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(6, 5, 0, 0),
-	gsSP1Triangle(6, 0, 2, 0),
-	gsSP1Triangle(7, 6, 2, 0),
-	gsSP1Triangle(7, 2, 8, 0),
-	gsSP1Triangle(2, 9, 8, 0),
-	gsSP1Triangle(1, 9, 2, 0),
-	gsSP1Triangle(9, 1, 3, 0),
-	gsSP1Triangle(10, 9, 3, 0),
-	gsSP1Triangle(10, 3, 11, 0),
-	gsSP1Triangle(11, 3, 4, 0),
-	gsSP1Triangle(12, 11, 4, 0),
-	gsSP1Triangle(13, 12, 4, 0),
-	gsSP1Triangle(5, 13, 4, 0),
-	gsSP1Triangle(5, 14, 13, 0),
-	gsSP1Triangle(6, 14, 5, 0),
-	gsSP1Triangle(7, 14, 6, 0),
-	gsSP1Triangle(15, 14, 7, 0),
-	gsSP1Triangle(15, 7, 8, 0),
-	gsSP1Triangle(15, 8, 12, 0),
-	gsSP1Triangle(8, 10, 12, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSP1Triangle(13, 15, 12, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_004_mesh_layer_1_vtx_0[36] = {
-	{{ {-14, 26, 41}, 0, {-16, -16}, {45, 80, 88, 255} }},
-	{{ {13, -38, 41}, 0, {-16, -16}, {88, 230, 88, 255} }},
-	{{ {23, -26, 35}, 0, {-16, -16}, {15, 191, 108, 255} }},
-	{{ {31, -40, -1}, 0, {-16, -16}, {61, 153, 212, 255} }},
-	{{ {24, -57, -4}, 0, {-16, -16}, {117, 211, 237, 255} }},
-	{{ {4, -3, -33}, 0, {-16, -16}, {76, 33, 159, 255} }},
-	{{ {15, 0, -23}, 0, {-16, -16}, {12, 0, 130, 255} }},
-	{{ {-2, 41, -1}, 0, {-16, -16}, {218, 113, 212, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {45, 117, 236, 255} }},
-	{{ {1, 24, 35}, 0, {-16, -16}, {245, 63, 110, 255} }},
-	{{ {29, 6, 49}, 0, {-16, -16}, {191, 250, 109, 255} }},
-	{{ {75, -33, 66}, 0, {-16, -16}, {24, 178, 98, 255} }},
-	{{ {55, -44, -4}, 0, {-16, -16}, {6, 140, 204, 255} }},
-	{{ {35, 9, -37}, 0, {-16, -16}, {232, 246, 132, 255} }},
-	{{ {10, 60, -4}, 0, {-16, -16}, {177, 88, 210, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {29, 6, 49}, 0, {-16, -16}, {191, 250, 109, 255} }},
-	{{ {57, 10, 66}, 0, {-16, -16}, {243, 20, 125, 255} }},
-	{{ {75, -33, 66}, 0, {-16, -16}, {24, 178, 98, 255} }},
-	{{ {96, -8, 52}, 0, {-16, -16}, {104, 250, 73, 255} }},
-	{{ {104, -26, 1}, 0, {-16, -16}, {101, 191, 215, 255} }},
-	{{ {55, -44, -4}, 0, {-16, -16}, {6, 140, 204, 255} }},
-	{{ {35, 9, -37}, 0, {-16, -16}, {232, 246, 132, 255} }},
-	{{ {86, 30, -33}, 0, {-16, -16}, {69, 28, 153, 255} }},
-	{{ {58, 81, 0}, 0, {-16, -16}, {23, 122, 228, 255} }},
-	{{ {10, 60, -4}, 0, {-16, -16}, {177, 88, 210, 255} }},
-	{{ {54, 54, 44}, 0, {-16, -16}, {20, 81, 95, 255} }},
-	{{ {86, 15, 52}, 0, {-16, -16}, {69, 45, 97, 255} }},
-	{{ {97, 39, 24}, 0, {-16, -16}, {108, 61, 28, 255} }},
-	{{ {4, -3, -33}, 0, {-16, -16}, {153, 214, 194, 255} }},
-	{{ {-16, -12, 6}, 0, {-16, -16}, {139, 208, 247, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {131, 247, 236, 255} }},
-	{{ {24, -57, -4}, 0, {-16, -16}, {160, 175, 237, 255} }},
-	{{ {13, -38, 41}, 0, {-16, -16}, {155, 185, 30, 255} }},
-	{{ {-14, 26, 41}, 0, {-16, -16}, {134, 235, 30, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_004_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_004_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 6, 3, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(7, 8, 0, 0),
-	gsSP1Triangle(0, 9, 7, 0),
-	gsSP1Triangle(2, 9, 0, 0),
-	gsSP1Triangle(10, 9, 2, 0),
-	gsSP1Triangle(11, 10, 2, 0),
-	gsSP1Triangle(12, 11, 2, 0),
-	gsSP1Triangle(2, 3, 12, 0),
-	gsSP1Triangle(13, 12, 3, 0),
-	gsSP1Triangle(3, 6, 13, 0),
-	gsSP1Triangle(13, 6, 7, 0),
-	gsSP1Triangle(14, 13, 7, 0),
-	gsSP1Triangle(14, 7, 9, 0),
-	gsSP1Triangle(15, 14, 9, 0),
-	gsSP1Triangle(9, 10, 15, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_004_mesh_layer_1_vtx_0 + 16, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 8, 5, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(9, 10, 0, 0),
-	gsSP1Triangle(0, 11, 9, 0),
-	gsSP1Triangle(11, 0, 2, 0),
-	gsSP1Triangle(12, 11, 2, 0),
-	gsSP1Triangle(4, 12, 2, 0),
-	gsSP1Triangle(4, 13, 12, 0),
-	gsSP1Triangle(5, 13, 4, 0),
-	gsSP1Triangle(8, 13, 5, 0),
-	gsSP1Triangle(9, 13, 8, 0),
-	gsSP1Triangle(11, 13, 9, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_004_mesh_layer_1_vtx_0 + 30, 6, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0[57] = {
-	{{ {7, 1, -26}, 0, {-16, -16}, {76, 42, 163, 255} }},
-	{{ {-9, 41, 5}, 0, {-16, -16}, {49, 117, 243, 255} }},
-	{{ {3, 36, 6}, 0, {-16, -16}, {215, 116, 225, 255} }},
-	{{ {-1, 18, 42}, 0, {-16, -16}, {61, 66, 90, 255} }},
-	{{ {9, 18, 35}, 0, {-16, -16}, {234, 40, 119, 255} }},
-	{{ {26, -24, 28}, 0, {-16, -16}, {13, 186, 105, 255} }},
-	{{ {19, -36, 33}, 0, {-16, -16}, {103, 226, 68, 255} }},
-	{{ {30, -32, -4}, 0, {-16, -16}, {55, 163, 189, 255} }},
-	{{ {25, -46, -9}, 0, {-16, -16}, {119, 225, 224, 255} }},
-	{{ {16, 4, -17}, 0, {-16, -16}, {0, 17, 130, 255} }},
-	{{ {30, 13, -30}, 0, {-16, -16}, {215, 3, 136, 255} }},
-	{{ {13, 53, 5}, 0, {-16, -16}, {174, 94, 231, 255} }},
-	{{ {20, 33, 48}, 0, {-16, -16}, {226, 42, 116, 255} }},
-	{{ {32, 2, 43}, 0, {-16, -16}, {227, 238, 122, 255} }},
-	{{ {46, -35, 37}, 0, {-16, -16}, {216, 164, 78, 255} }},
-	{{ {48, -35, -9}, 0, {-16, -16}, {247, 153, 182, 255} }},
-	{{ {30, 13, -30}, 0, {-16, -16}, {215, 3, 136, 255} }},
-	{{ {86, -19, -13}, 0, {-16, -16}, {62, 185, 171, 255} }},
-	{{ {48, -35, -9}, 0, {-16, -16}, {247, 153, 182, 255} }},
-	{{ {81, 37, -28}, 0, {-16, -16}, {16, 29, 133, 255} }},
-	{{ {76, 88, 9}, 0, {-16, -16}, {243, 126, 255, 255} }},
-	{{ {13, 53, 5}, 0, {-16, -16}, {174, 94, 231, 255} }},
-	{{ {34, 43, 36}, 0, {-16, -16}, {253, 74, 103, 255} }},
-	{{ {20, 33, 48}, 0, {-16, -16}, {226, 42, 116, 255} }},
-	{{ {32, 2, 43}, 0, {-16, -16}, {227, 238, 122, 255} }},
-	{{ {81, -15, 45}, 0, {-16, -16}, {53, 11, 115, 255} }},
-	{{ {46, -35, 37}, 0, {-16, -16}, {216, 164, 78, 255} }},
-	{{ {93, -45, 36}, 0, {-16, -16}, {76, 167, 48, 255} }},
-	{{ {93, -5, 22}, 0, {-16, -16}, {104, 230, 69, 255} }},
-	{{ {136, 28, 31}, 0, {-16, -16}, {82, 222, 91, 255} }},
-	{{ {143, 31, -1}, 0, {-16, -16}, {115, 240, 204, 255} }},
-	{{ {125, 71, 9}, 0, {-16, -16}, {78, 90, 212, 255} }},
-	{{ {124, 69, 30}, 0, {-16, -16}, {57, 70, 90, 255} }},
-	{{ {125, 71, 9}, 0, {-16, -16}, {78, 90, 212, 255} }},
-	{{ {76, 88, 9}, 0, {-16, -16}, {243, 126, 255, 255} }},
-	{{ {84, 59, 25}, 0, {-16, -16}, {253, 33, 123, 255} }},
-	{{ {34, 43, 36}, 0, {-16, -16}, {253, 74, 103, 255} }},
-	{{ {75, 11, 32}, 0, {-16, -16}, {61, 36, 106, 255} }},
-	{{ {81, -15, 45}, 0, {-16, -16}, {53, 11, 115, 255} }},
-	{{ {93, -5, 22}, 0, {-16, -16}, {104, 230, 69, 255} }},
-	{{ {93, -45, 36}, 0, {-16, -16}, {76, 167, 48, 255} }},
-	{{ {136, 28, 31}, 0, {-16, -16}, {82, 222, 91, 255} }},
-	{{ {143, 31, -1}, 0, {-16, -16}, {115, 240, 204, 255} }},
-	{{ {25, -46, -9}, 0, {-16, -16}, {184, 158, 218, 255} }},
-	{{ {11, -38, -3}, 0, {-16, -16}, {164, 173, 227, 255} }},
-	{{ {7, 1, -26}, 0, {-16, -16}, {158, 231, 179, 255} }},
-	{{ {19, -36, 33}, 0, {-16, -16}, {182, 168, 55, 255} }},
-	{{ {7, -30, 26}, 0, {-16, -16}, {158, 186, 42, 255} }},
-	{{ {-1, 18, 42}, 0, {-16, -16}, {147, 254, 66, 255} }},
-	{{ {7, -30, 26}, 0, {-16, -16}, {158, 186, 42, 255} }},
-	{{ {19, -36, 33}, 0, {-16, -16}, {182, 168, 55, 255} }},
-	{{ {-7, 7, 32}, 0, {-16, -16}, {141, 231, 49, 255} }},
-	{{ {-12, 23, 6}, 0, {-16, -16}, {130, 0, 240, 255} }},
-	{{ {-9, 41, 5}, 0, {-16, -16}, {131, 20, 244, 255} }},
-	{{ {7, 1, -26}, 0, {-16, -16}, {158, 231, 179, 255} }},
-	{{ {0, -4, -15}, 0, {-16, -16}, {145, 222, 204, 255} }},
-	{{ {11, -38, -3}, 0, {-16, -16}, {164, 173, 227, 255} }},
-};
-
-Gfx ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 0, 0),
-	gsSP1Triangle(0, 9, 7, 0),
-	gsSP1Triangle(2, 9, 0, 0),
-	gsSP1Triangle(10, 9, 2, 0),
-	gsSP1Triangle(11, 10, 2, 0),
-	gsSP1Triangle(12, 11, 2, 0),
-	gsSP1Triangle(2, 4, 12, 0),
-	gsSP1Triangle(13, 12, 4, 0),
-	gsSP1Triangle(13, 4, 5, 0),
-	gsSP1Triangle(14, 13, 5, 0),
-	gsSP1Triangle(14, 5, 7, 0),
-	gsSP1Triangle(15, 14, 7, 0),
-	gsSP1Triangle(10, 15, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 2, 0),
-	gsSP1Triangle(2, 1, 11, 0),
-	gsSP1Triangle(1, 12, 11, 0),
-	gsSP1Triangle(1, 13, 12, 0),
-	gsSP1Triangle(1, 14, 13, 0),
-	gsSP1Triangle(3, 14, 1, 0),
-	gsSP1Triangle(3, 15, 14, 0),
-	gsSP1Triangle(3, 4, 15, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(7, 3, 5, 0),
-	gsSP1Triangle(7, 9, 3, 0),
-	gsSP1Triangle(9, 0, 3, 0),
-	gsSP1Triangle(9, 10, 0, 0),
-	gsSP1Triangle(0, 10, 1, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(14, 12, 11, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_vtx_0 + 48, 9, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(7, 8, 1, 0),
-	gsSP1Triangle(1, 3, 7, 0),
-	gsSP1Triangle(3, 4, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0[73] = {
-	{{ {166, -13, -17}, 0, {-16, -16}, {122, 9, 34, 255} }},
-	{{ {162, 14, -11}, 0, {-16, -16}, {122, 10, 33, 255} }},
-	{{ {153, 7, 24}, 0, {-16, -16}, {73, 243, 103, 255} }},
-	{{ {155, -15, 21}, 0, {-16, -16}, {71, 249, 105, 255} }},
-	{{ {101, -29, 15}, 0, {-16, -16}, {66, 150, 25, 255} }},
-	{{ {98, 10, 29}, 0, {-16, -16}, {79, 8, 99, 255} }},
-	{{ {90, -3, 52}, 0, {-16, -16}, {72, 2, 105, 255} }},
-	{{ {84, 48, 24}, 0, {-16, -16}, {26, 79, 96, 255} }},
-	{{ {139, 53, 25}, 0, {-16, -16}, {252, 19, 126, 255} }},
-	{{ {123, 72, 21}, 0, {-16, -16}, {252, 22, 125, 255} }},
-	{{ {46, 49, 45}, 0, {-16, -16}, {247, 72, 104, 255} }},
-	{{ {56, 80, 1}, 0, {-16, -16}, {6, 125, 237, 255} }},
-	{{ {84, 60, -7}, 0, {-16, -16}, {1, 112, 196, 255} }},
-	{{ {126, 84, -3}, 0, {-16, -16}, {195, 103, 42, 255} }},
-	{{ {123, 72, 21}, 0, {-16, -16}, {196, 103, 44, 255} }},
-	{{ {89, 18, -34}, 0, {-16, -16}, {7, 10, 130, 255} }},
-	{{ {126, 84, -3}, 0, {-16, -16}, {6, 51, 140, 255} }},
-	{{ {89, 18, -34}, 0, {-16, -16}, {7, 10, 130, 255} }},
-	{{ {84, 60, -7}, 0, {-16, -16}, {1, 112, 196, 255} }},
-	{{ {146, 59, -8}, 0, {-16, -16}, {23, 42, 138, 255} }},
-	{{ {56, 80, 1}, 0, {-16, -16}, {6, 125, 237, 255} }},
-	{{ {33, 7, -37}, 0, {-16, -16}, {223, 250, 133, 255} }},
-	{{ {94, -22, -18}, 0, {-16, -16}, {26, 168, 168, 255} }},
-	{{ {166, -13, -17}, 0, {-16, -16}, {30, 6, 133, 255} }},
-	{{ {162, 14, -11}, 0, {-16, -16}, {38, 31, 139, 255} }},
-	{{ {56, -47, -5}, 0, {-16, -16}, {3, 138, 209, 255} }},
-	{{ {32, -43, 0}, 0, {-16, -16}, {51, 148, 212, 255} }},
-	{{ {45, -29, 52}, 0, {-16, -16}, {231, 188, 105, 255} }},
-	{{ {88, -34, 39}, 0, {-16, -16}, {61, 166, 65, 255} }},
-	{{ {101, -29, 15}, 0, {-16, -16}, {66, 150, 25, 255} }},
-	{{ {155, -15, 21}, 0, {-16, -16}, {21, 131, 246, 255} }},
-	{{ {166, -13, -17}, 0, {-16, -16}, {15, 130, 254, 255} }},
-	{{ {88, -34, 39}, 0, {-16, -16}, {61, 166, 65, 255} }},
-	{{ {101, -29, 15}, 0, {-16, -16}, {66, 150, 25, 255} }},
-	{{ {90, -3, 52}, 0, {-16, -16}, {72, 2, 105, 255} }},
-	{{ {45, -29, 52}, 0, {-16, -16}, {231, 188, 105, 255} }},
-	{{ {46, 49, 45}, 0, {-16, -16}, {247, 72, 104, 255} }},
-	{{ {18, 30, 41}, 0, {-16, -16}, {201, 45, 105, 255} }},
-	{{ {8, 58, -2}, 0, {-16, -16}, {175, 93, 226, 255} }},
-	{{ {56, 80, 1}, 0, {-16, -16}, {6, 125, 237, 255} }},
-	{{ {33, 7, -37}, 0, {-16, -16}, {223, 250, 133, 255} }},
-	{{ {-4, 38, 0}, 0, {-16, -16}, {217, 115, 217, 255} }},
-	{{ {14, -1, -22}, 0, {-16, -16}, {3, 4, 129, 255} }},
-	{{ {32, -43, 0}, 0, {-16, -16}, {51, 148, 212, 255} }},
-	{{ {2, -5, -33}, 0, {-16, -16}, {250, 2, 129, 255} }},
-	{{ {24, -59, -3}, 0, {-16, -16}, {38, 141, 219, 255} }},
-	{{ {23, -29, 36}, 0, {-16, -16}, {22, 197, 110, 255} }},
-	{{ {0, 21, 37}, 0, {-16, -16}, {5, 68, 107, 255} }},
-	{{ {-15, 23, 43}, 0, {-16, -16}, {212, 59, 104, 255} }},
-	{{ {0, 21, 37}, 0, {-16, -16}, {5, 68, 107, 255} }},
-	{{ {-4, 38, 0}, 0, {-16, -16}, {217, 115, 217, 255} }},
-	{{ {15, -39, 42}, 0, {-16, -16}, {18, 186, 104, 255} }},
-	{{ {0, -35, 32}, 0, {-16, -16}, {163, 184, 49, 255} }},
-	{{ {-21, 9, 33}, 0, {-16, -16}, {141, 231, 47, 255} }},
-	{{ {-22, 43, -3}, 0, {-16, -16}, {195, 105, 218, 255} }},
-	{{ {14, -1, -22}, 0, {-16, -16}, {3, 4, 129, 255} }},
-	{{ {2, -5, -33}, 0, {-16, -16}, {250, 2, 129, 255} }},
-	{{ {-25, 24, 0}, 0, {-16, -16}, {132, 251, 229, 255} }},
-	{{ {-8, -12, -20}, 0, {-16, -16}, {155, 208, 196, 255} }},
-	{{ {24, -59, -3}, 0, {-16, -16}, {38, 141, 219, 255} }},
-	{{ {6, -49, 0}, 0, {-16, -16}, {171, 165, 230, 255} }},
-	{{ {23, -29, 36}, 0, {-16, -16}, {22, 197, 110, 255} }},
-	{{ {146, 59, -8}, 0, {-16, -16}, {94, 76, 40, 255} }},
-	{{ {126, 84, -3}, 0, {-16, -16}, {97, 68, 46, 255} }},
-	{{ {123, 72, 21}, 0, {-16, -16}, {94, 76, 40, 255} }},
-	{{ {139, 53, 25}, 0, {-16, -16}, {90, 83, 34, 255} }},
-	{{ {105, 17, 3}, 0, {-16, -16}, {119, 44, 3, 255} }},
-	{{ {98, 10, 29}, 0, {-16, -16}, {110, 48, 42, 255} }},
-	{{ {153, 7, 24}, 0, {-16, -16}, {12, 123, 30, 255} }},
-	{{ {139, 53, 25}, 0, {-16, -16}, {92, 168, 2, 255} }},
-	{{ {146, 59, -8}, 0, {-16, -16}, {89, 166, 246, 255} }},
-	{{ {89, 18, -34}, 0, {-16, -16}, {112, 36, 209, 255} }},
-	{{ {162, 14, -11}, 0, {-16, -16}, {11, 125, 19, 255} }},
-};
-
-Gfx ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(4, 2, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 5, 8, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(6, 7, 10, 0),
-	gsSP1Triangle(10, 7, 11, 0),
-	gsSP1Triangle(11, 7, 12, 0),
-	gsSP1Triangle(12, 7, 13, 0),
-	gsSP1Triangle(7, 14, 13, 0),
-	gsSP1Triangle(11, 12, 15, 0),
-	gsSPVertex(ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 1, 5, 0),
-	gsSP1Triangle(5, 1, 6, 0),
-	gsSP1Triangle(7, 6, 1, 0),
-	gsSP1Triangle(1, 8, 7, 0),
-	gsSP1Triangle(9, 5, 6, 0),
-	gsSP1Triangle(5, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 9, 12, 0),
-	gsSP1Triangle(13, 12, 9, 0),
-	gsSP1Triangle(13, 9, 6, 0),
-	gsSP1Triangle(6, 14, 13, 0),
-	gsSP1Triangle(14, 6, 15, 0),
-	gsSPVertex(ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(13, 11, 14, 0),
-	gsSP1Triangle(3, 14, 11, 0),
-	gsSP1Triangle(14, 3, 5, 0),
-	gsSP1Triangle(15, 14, 5, 0),
-	gsSP1Triangle(9, 15, 5, 0),
-	gsSP1Triangle(5, 6, 9, 0),
-	gsSPVertex(ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0 + 48, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(6, 5, 0, 0),
-	gsSP1Triangle(0, 2, 6, 0),
-	gsSP1Triangle(6, 2, 7, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(3, 12, 11, 0),
-	gsSP1Triangle(11, 13, 3, 0),
-	gsSP1Triangle(3, 13, 1, 0),
-	gsSP1Triangle(3, 4, 12, 0),
-	gsSP1Triangle(10, 12, 4, 0),
-	gsSP1Triangle(4, 5, 10, 0),
-	gsSP1Triangle(5, 9, 10, 0),
-	gsSP1Triangle(6, 9, 5, 0),
-	gsSPVertex(ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_vtx_0 + 62, 11, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 5, 4, 0),
-	gsSP1Triangle(7, 4, 8, 0),
-	gsSP1Triangle(8, 4, 9, 0),
-	gsSP1Triangle(10, 9, 4, 0),
-	gsSP1Triangle(4, 6, 10, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0[59] = {
-	{{ {131, 47, -1}, 0, {1088, 212}, {228, 93, 174, 255} }},
-	{{ {107, -19, -33}, 0, {458, 16}, {206, 14, 140, 255} }},
-	{{ {78, 11, 40}, 0, {756, 802}, {210, 64, 156, 255} }},
-	{{ {70, -52, 35}, 0, {180, 784}, {198, 219, 149, 255} }},
-	{{ {114, -92, -11}, 0, {-164, 172}, {208, 185, 162, 255} }},
-	{{ {192, 11, -2}, 0, {-16, -16}, {83, 33, 165, 255} }},
-	{{ {107, -19, -33}, 0, {-16, -16}, {206, 14, 140, 255} }},
-	{{ {131, 47, -1}, 0, {-16, -16}, {228, 93, 174, 255} }},
-	{{ {182, -72, -8}, 0, {-16, -16}, {74, 217, 160, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {183, 100, 86}, 0, {-16, -16}, {20, 123, 234, 255} }},
-	{{ {129, 65, 103}, 0, {-16, -16}, {164, 78, 41, 255} }},
-	{{ {78, 11, 40}, 0, {-16, -16}, {210, 64, 156, 255} }},
-	{{ {45, 49, 53}, 0, {-16, -16}, {23, 58, 145, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {0, 9, 129, 255} }},
-	{{ {70, -52, 35}, 0, {-16, -16}, {198, 219, 149, 255} }},
-	{{ {29, -82, 43}, 0, {-16, -16}, {10, 210, 138, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {0, 9, 129, 255} }},
-	{{ {70, -52, 35}, 0, {-16, -16}, {198, 219, 149, 255} }},
-	{{ {106, -124, 90}, 0, {-16, -16}, {152, 187, 23, 255} }},
-	{{ {114, -92, -11}, 0, {-16, -16}, {208, 185, 162, 255} }},
-	{{ {151, -168, 67}, 0, {-16, -16}, {247, 136, 216, 255} }},
-	{{ {182, -72, -8}, 0, {-16, -16}, {74, 217, 160, 255} }},
-	{{ {107, -19, -33}, 0, {-16, -16}, {206, 14, 140, 255} }},
-	{{ {228, -121, 117}, 0, {-16, -16}, {101, 196, 207, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {273, -105, 188}, 0, {-16, -16}, {109, 197, 30, 255} }},
-	{{ {285, -6, 196}, 0, {-16, -16}, {119, 27, 37, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {211, 81, 156}, 0, {-16, -16}, {38, 113, 44, 255} }},
-	{{ {228, 1, 228}, 0, {-16, -16}, {252, 33, 123, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {211, 81, 156}, 0, {-16, -16}, {38, 113, 44, 255} }},
-	{{ {160, 65, 148}, 0, {-16, -16}, {175, 67, 72, 255} }},
-	{{ {183, 100, 86}, 0, {-16, -16}, {20, 123, 234, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {129, 65, 103}, 0, {-16, -16}, {164, 78, 41, 255} }},
-	{{ {137, -137, 134}, 0, {-16, -16}, {163, 199, 65, 255} }},
-	{{ {73, 11, 60}, 0, {-16, -16}, {188, 250, 107, 255} }},
-	{{ {45, 49, 53}, 0, {-16, -16}, {201, 236, 113, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {205, 254, 116, 255} }},
-	{{ {65, -53, 55}, 0, {-16, -16}, {186, 7, 106, 255} }},
-	{{ {29, -82, 43}, 0, {-16, -16}, {205, 16, 115, 255} }},
-	{{ {106, -124, 90}, 0, {-16, -16}, {152, 187, 23, 255} }},
-	{{ {151, -168, 67}, 0, {-16, -16}, {247, 136, 216, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {171, -129, 178}, 0, {-16, -16}, {182, 205, 90, 255} }},
-	{{ {171, -129, 178}, 0, {-16, -16}, {182, 205, 90, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {216, -104, 220}, 0, {-16, -16}, {244, 207, 117, 255} }},
-	{{ {273, -105, 188}, 0, {-16, -16}, {109, 197, 30, 255} }},
-	{{ {228, 1, 228}, 0, {-16, -16}, {252, 33, 123, 255} }},
-	{{ {285, -6, 196}, 0, {-16, -16}, {119, 27, 37, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {137, -137, 134}, 0, {-16, -16}, {163, 199, 65, 255} }},
-	{{ {160, 65, 148}, 0, {-16, -16}, {175, 67, 72, 255} }},
-	{{ {73, 11, 60}, 0, {-16, -16}, {188, 250, 107, 255} }},
-	{{ {65, -53, 55}, 0, {-16, -16}, {186, 7, 106, 255} }},
-};
-
-Gfx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 6, 5, 0),
-	gsSP1Triangle(8, 5, 9, 0),
-	gsSP1Triangle(5, 10, 9, 0),
-	gsSP1Triangle(7, 10, 5, 0),
-	gsSP1Triangle(10, 7, 11, 0),
-	gsSP1Triangle(12, 11, 7, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(15, 14, 12, 0),
-	gsSPVertex(ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(8, 5, 6, 0),
-	gsSP1Triangle(5, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(8, 12, 11, 0),
-	gsSP1Triangle(8, 6, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 5, 2, 0),
-	gsSP1Triangle(2, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(10, 12, 6, 0),
-	gsSP1Triangle(12, 13, 6, 0),
-	gsSP1Triangle(13, 14, 6, 0),
-	gsSP1Triangle(6, 14, 15, 0),
-	gsSPVertex(ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_0 + 48, 11, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(2, 4, 6, 0),
-	gsSP1Triangle(6, 0, 2, 0),
-	gsSP1Triangle(6, 7, 0, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_1[36] = {
-	{{ {4, -3, -32}, 0, {-16, -16}, {73, 31, 156, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {46, 116, 233, 255} }},
-	{{ {-2, 41, 0}, 0, {-16, -16}, {222, 115, 215, 255} }},
-	{{ {-13, 26, 41}, 0, {-16, -16}, {46, 80, 87, 255} }},
-	{{ {1, 24, 35}, 0, {-16, -16}, {249, 63, 110, 255} }},
-	{{ {23, -25, 35}, 0, {-16, -16}, {16, 192, 109, 255} }},
-	{{ {13, -37, 41}, 0, {-16, -16}, {87, 229, 89, 255} }},
-	{{ {31, -39, 0}, 0, {-16, -16}, {61, 152, 215, 255} }},
-	{{ {24, -55, -4}, 0, {-16, -16}, {117, 211, 234, 255} }},
-	{{ {16, 1, -22}, 0, {-16, -16}, {4, 0, 129, 255} }},
-	{{ {35, 9, -36}, 0, {-16, -16}, {231, 245, 132, 255} }},
-	{{ {11, 60, -3}, 0, {-16, -16}, {177, 89, 210, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {29, 7, 48}, 0, {-16, -16}, {192, 250, 110, 255} }},
-	{{ {75, -32, 65}, 0, {-16, -16}, {25, 178, 97, 255} }},
-	{{ {55, -43, -3}, 0, {-16, -16}, {6, 140, 205, 255} }},
-	{{ {35, 9, -36}, 0, {-16, -16}, {231, 245, 132, 255} }},
-	{{ {103, -25, 1}, 0, {-16, -16}, {101, 191, 214, 255} }},
-	{{ {55, -43, -3}, 0, {-16, -16}, {6, 140, 205, 255} }},
-	{{ {85, 30, -32}, 0, {-16, -16}, {69, 28, 153, 255} }},
-	{{ {58, 81, 0}, 0, {-16, -16}, {23, 122, 227, 255} }},
-	{{ {11, 60, -3}, 0, {-16, -16}, {177, 89, 210, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {54, 54, 44}, 0, {-16, -16}, {20, 81, 96, 255} }},
-	{{ {56, 11, 65}, 0, {-16, -16}, {241, 19, 125, 255} }},
-	{{ {29, 7, 48}, 0, {-16, -16}, {192, 250, 110, 255} }},
-	{{ {75, -32, 65}, 0, {-16, -16}, {25, 178, 97, 255} }},
-	{{ {95, -8, 52}, 0, {-16, -16}, {103, 249, 74, 255} }},
-	{{ {96, 39, 24}, 0, {-16, -16}, {108, 61, 28, 255} }},
-	{{ {85, 15, 52}, 0, {-16, -16}, {68, 44, 98, 255} }},
-	{{ {13, -37, 41}, 0, {-16, -16}, {155, 184, 30, 255} }},
-	{{ {-15, -12, 7}, 0, {-16, -16}, {139, 207, 248, 255} }},
-	{{ {24, -55, -4}, 0, {-16, -16}, {161, 175, 236, 255} }},
-	{{ {-13, 26, 41}, 0, {-16, -16}, {135, 235, 31, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {131, 244, 238, 255} }},
-	{{ {4, -3, -32}, 0, {-16, -16}, {153, 213, 196, 255} }},
-};
-
-Gfx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_1[] = {
-	gsSPVertex(ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_1 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 0, 0),
-	gsSP1Triangle(0, 9, 7, 0),
-	gsSP1Triangle(2, 9, 0, 0),
-	gsSP1Triangle(10, 9, 2, 0),
-	gsSP1Triangle(11, 10, 2, 0),
-	gsSP1Triangle(11, 2, 4, 0),
-	gsSP1Triangle(12, 11, 4, 0),
-	gsSP1Triangle(4, 13, 12, 0),
-	gsSP1Triangle(13, 4, 5, 0),
-	gsSP1Triangle(14, 13, 5, 0),
-	gsSP1Triangle(15, 14, 5, 0),
-	gsSP1Triangle(5, 7, 15, 0),
-	gsSP1Triangle(10, 15, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSPVertex(ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_1 + 16, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(1, 11, 10, 0),
-	gsSP1Triangle(2, 1, 10, 0),
-	gsSP1Triangle(1, 12, 11, 0),
-	gsSP1Triangle(3, 12, 1, 0),
-	gsSP1Triangle(4, 12, 3, 0),
-	gsSP1Triangle(7, 12, 4, 0),
-	gsSP1Triangle(12, 7, 13, 0),
-	gsSP1Triangle(13, 7, 8, 0),
-	gsSP1Triangle(11, 13, 8, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSPVertex(ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_vtx_1 + 30, 6, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0[59] = {
-	{{ {131, 47, -1}, 0, {1088, 212}, {228, 93, 174, 255} }},
-	{{ {107, -19, -33}, 0, {458, 16}, {206, 14, 140, 255} }},
-	{{ {78, 11, 40}, 0, {756, 802}, {210, 64, 156, 255} }},
-	{{ {70, -52, 35}, 0, {180, 784}, {198, 219, 149, 255} }},
-	{{ {114, -92, -11}, 0, {-164, 172}, {208, 185, 162, 255} }},
-	{{ {192, 11, -2}, 0, {-16, -16}, {83, 33, 165, 255} }},
-	{{ {107, -19, -33}, 0, {-16, -16}, {206, 14, 140, 255} }},
-	{{ {131, 47, -1}, 0, {-16, -16}, {228, 93, 174, 255} }},
-	{{ {182, -72, -8}, 0, {-16, -16}, {74, 217, 160, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {183, 100, 86}, 0, {-16, -16}, {20, 123, 234, 255} }},
-	{{ {129, 65, 103}, 0, {-16, -16}, {164, 78, 41, 255} }},
-	{{ {78, 11, 40}, 0, {-16, -16}, {210, 64, 156, 255} }},
-	{{ {45, 49, 53}, 0, {-16, -16}, {23, 58, 145, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {0, 9, 129, 255} }},
-	{{ {70, -52, 35}, 0, {-16, -16}, {198, 219, 149, 255} }},
-	{{ {29, -82, 43}, 0, {-16, -16}, {10, 210, 138, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {0, 9, 129, 255} }},
-	{{ {70, -52, 35}, 0, {-16, -16}, {198, 219, 149, 255} }},
-	{{ {106, -124, 90}, 0, {-16, -16}, {152, 187, 23, 255} }},
-	{{ {114, -92, -11}, 0, {-16, -16}, {208, 185, 162, 255} }},
-	{{ {151, -168, 67}, 0, {-16, -16}, {247, 136, 216, 255} }},
-	{{ {182, -72, -8}, 0, {-16, -16}, {74, 217, 160, 255} }},
-	{{ {107, -19, -33}, 0, {-16, -16}, {206, 14, 140, 255} }},
-	{{ {228, -121, 117}, 0, {-16, -16}, {101, 196, 207, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {273, -105, 188}, 0, {-16, -16}, {109, 197, 30, 255} }},
-	{{ {285, -6, 196}, 0, {-16, -16}, {119, 27, 37, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {211, 81, 156}, 0, {-16, -16}, {38, 113, 44, 255} }},
-	{{ {228, 1, 228}, 0, {-16, -16}, {252, 33, 123, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {211, 81, 156}, 0, {-16, -16}, {38, 113, 44, 255} }},
-	{{ {160, 65, 148}, 0, {-16, -16}, {175, 67, 72, 255} }},
-	{{ {183, 100, 86}, 0, {-16, -16}, {20, 123, 234, 255} }},
-	{{ {246, 29, 128}, 0, {-16, -16}, {113, 41, 214, 255} }},
-	{{ {129, 65, 103}, 0, {-16, -16}, {164, 78, 41, 255} }},
-	{{ {137, -137, 134}, 0, {-16, -16}, {163, 199, 65, 255} }},
-	{{ {73, 11, 60}, 0, {-16, -16}, {188, 250, 107, 255} }},
-	{{ {45, 49, 53}, 0, {-16, -16}, {201, 236, 113, 255} }},
-	{{ {18, -13, 33}, 0, {-16, -16}, {205, 254, 116, 255} }},
-	{{ {65, -53, 55}, 0, {-16, -16}, {186, 7, 106, 255} }},
-	{{ {29, -82, 43}, 0, {-16, -16}, {205, 16, 115, 255} }},
-	{{ {106, -124, 90}, 0, {-16, -16}, {152, 187, 23, 255} }},
-	{{ {151, -168, 67}, 0, {-16, -16}, {247, 136, 216, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {171, -129, 178}, 0, {-16, -16}, {182, 205, 90, 255} }},
-	{{ {171, -129, 178}, 0, {-16, -16}, {182, 205, 90, 255} }},
-	{{ {181, -167, 138}, 0, {-16, -16}, {8, 132, 26, 255} }},
-	{{ {216, -104, 220}, 0, {-16, -16}, {244, 207, 117, 255} }},
-	{{ {273, -105, 188}, 0, {-16, -16}, {109, 197, 30, 255} }},
-	{{ {228, 1, 228}, 0, {-16, -16}, {252, 33, 123, 255} }},
-	{{ {285, -6, 196}, 0, {-16, -16}, {119, 27, 37, 255} }},
-	{{ {192, 42, 190}, 0, {-16, -16}, {196, 54, 98, 255} }},
-	{{ {137, -137, 134}, 0, {-16, -16}, {163, 199, 65, 255} }},
-	{{ {160, 65, 148}, 0, {-16, -16}, {175, 67, 72, 255} }},
-	{{ {73, 11, 60}, 0, {-16, -16}, {188, 250, 107, 255} }},
-	{{ {65, -53, 55}, 0, {-16, -16}, {186, 7, 106, 255} }},
-};
-
-Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 6, 5, 0),
-	gsSP1Triangle(8, 5, 9, 0),
-	gsSP1Triangle(5, 10, 9, 0),
-	gsSP1Triangle(7, 10, 5, 0),
-	gsSP1Triangle(10, 7, 11, 0),
-	gsSP1Triangle(12, 11, 7, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(15, 14, 12, 0),
-	gsSPVertex(ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(4, 7, 6, 0),
-	gsSP1Triangle(8, 5, 6, 0),
-	gsSP1Triangle(5, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(8, 12, 11, 0),
-	gsSP1Triangle(8, 6, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 5, 2, 0),
-	gsSP1Triangle(2, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(5, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(10, 12, 6, 0),
-	gsSP1Triangle(12, 13, 6, 0),
-	gsSP1Triangle(13, 14, 6, 0),
-	gsSP1Triangle(6, 14, 15, 0),
-	gsSPVertex(ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_0 + 48, 11, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(2, 4, 6, 0),
-	gsSP1Triangle(6, 0, 2, 0),
-	gsSP1Triangle(6, 7, 0, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_1[36] = {
-	{{ {4, -3, -32}, 0, {-16, -16}, {73, 31, 156, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {46, 116, 233, 255} }},
-	{{ {-2, 41, 0}, 0, {-16, -16}, {222, 115, 215, 255} }},
-	{{ {-13, 26, 41}, 0, {-16, -16}, {46, 80, 87, 255} }},
-	{{ {1, 24, 35}, 0, {-16, -16}, {249, 63, 110, 255} }},
-	{{ {23, -25, 35}, 0, {-16, -16}, {16, 192, 109, 255} }},
-	{{ {13, -37, 41}, 0, {-16, -16}, {87, 229, 89, 255} }},
-	{{ {31, -39, 0}, 0, {-16, -16}, {61, 152, 215, 255} }},
-	{{ {24, -55, -4}, 0, {-16, -16}, {117, 211, 234, 255} }},
-	{{ {16, 1, -22}, 0, {-16, -16}, {4, 0, 129, 255} }},
-	{{ {35, 9, -36}, 0, {-16, -16}, {231, 245, 132, 255} }},
-	{{ {11, 60, -3}, 0, {-16, -16}, {177, 89, 210, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {29, 7, 48}, 0, {-16, -16}, {192, 250, 110, 255} }},
-	{{ {75, -32, 65}, 0, {-16, -16}, {25, 178, 97, 255} }},
-	{{ {55, -43, -3}, 0, {-16, -16}, {6, 140, 205, 255} }},
-	{{ {35, 9, -36}, 0, {-16, -16}, {231, 245, 132, 255} }},
-	{{ {103, -25, 1}, 0, {-16, -16}, {101, 191, 214, 255} }},
-	{{ {55, -43, -3}, 0, {-16, -16}, {6, 140, 205, 255} }},
-	{{ {85, 30, -32}, 0, {-16, -16}, {69, 28, 153, 255} }},
-	{{ {58, 81, 0}, 0, {-16, -16}, {23, 122, 227, 255} }},
-	{{ {11, 60, -3}, 0, {-16, -16}, {177, 89, 210, 255} }},
-	{{ {29, 62, 34}, 0, {-16, -16}, {206, 89, 75, 255} }},
-	{{ {54, 54, 44}, 0, {-16, -16}, {20, 81, 96, 255} }},
-	{{ {56, 11, 65}, 0, {-16, -16}, {241, 19, 125, 255} }},
-	{{ {29, 7, 48}, 0, {-16, -16}, {192, 250, 110, 255} }},
-	{{ {75, -32, 65}, 0, {-16, -16}, {25, 178, 97, 255} }},
-	{{ {95, -8, 52}, 0, {-16, -16}, {103, 249, 74, 255} }},
-	{{ {96, 39, 24}, 0, {-16, -16}, {108, 61, 28, 255} }},
-	{{ {85, 15, 52}, 0, {-16, -16}, {68, 44, 98, 255} }},
-	{{ {13, -37, 41}, 0, {-16, -16}, {155, 184, 30, 255} }},
-	{{ {-15, -12, 7}, 0, {-16, -16}, {139, 207, 248, 255} }},
-	{{ {24, -55, -4}, 0, {-16, -16}, {161, 175, 236, 255} }},
-	{{ {-13, 26, 41}, 0, {-16, -16}, {135, 235, 31, 255} }},
-	{{ {-19, 47, -4}, 0, {-16, -16}, {131, 244, 238, 255} }},
-	{{ {4, -3, -32}, 0, {-16, -16}, {153, 213, 196, 255} }},
-};
-
-Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_1[] = {
-	gsSPVertex(ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_1 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 0, 0),
-	gsSP1Triangle(0, 9, 7, 0),
-	gsSP1Triangle(2, 9, 0, 0),
-	gsSP1Triangle(10, 9, 2, 0),
-	gsSP1Triangle(11, 10, 2, 0),
-	gsSP1Triangle(11, 2, 4, 0),
-	gsSP1Triangle(12, 11, 4, 0),
-	gsSP1Triangle(4, 13, 12, 0),
-	gsSP1Triangle(13, 4, 5, 0),
-	gsSP1Triangle(14, 13, 5, 0),
-	gsSP1Triangle(15, 14, 5, 0),
-	gsSP1Triangle(5, 7, 15, 0),
-	gsSP1Triangle(10, 15, 7, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSPVertex(ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_1 + 16, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(1, 11, 10, 0),
-	gsSP1Triangle(2, 1, 10, 0),
-	gsSP1Triangle(1, 12, 11, 0),
-	gsSP1Triangle(3, 12, 1, 0),
-	gsSP1Triangle(4, 12, 3, 0),
-	gsSP1Triangle(7, 12, 4, 0),
-	gsSP1Triangle(12, 7, 13, 0),
-	gsSP1Triangle(13, 7, 8, 0),
-	gsSP1Triangle(11, 13, 8, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSPVertex(ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_vtx_1 + 30, 6, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_0[8] = {
-	{{ {178, -177, 128}, 0, {-16, 4008}, {168, 179, 207, 255} }},
-	{{ {319, -248, -14}, 0, {-16, -16}, {168, 179, 207, 255} }},
-	{{ {349, -325, 53}, 0, {974, -16}, {168, 179, 207, 255} }},
-	{{ {207, -253, 195}, 0, {974, 4008}, {168, 179, 207, 255} }},
-	{{ {414, 206, 82}, 0, {974, -16}, {189, 101, 217, 255} }},
-	{{ {368, 146, 7}, 0, {-16, -16}, {189, 101, 217, 255} }},
-	{{ {212, 96, 143}, 0, {-16, 4008}, {189, 101, 217, 255} }},
-	{{ {258, 156, 218}, 0, {974, 4008}, {189, 101, 217, 255} }},
-};
-
-Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_0[] = {
-	gsSPVertex(ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_0 + 0, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_1[8] = {
-	{{ {368, 146, 7}, 0, {974, -16}, {189, 101, 217, 255} }},
-	{{ {166, 37, 68}, 0, {-16, 4008}, {190, 101, 217, 255} }},
-	{{ {212, 96, 143}, 0, {974, 4008}, {189, 101, 217, 255} }},
-	{{ {322, 87, -67}, 0, {-16, -16}, {190, 101, 217, 255} }},
-	{{ {178, -177, 128}, 0, {974, 4008}, {168, 179, 207, 255} }},
-	{{ {149, -100, 60}, 0, {-16, 4008}, {167, 179, 207, 255} }},
-	{{ {319, -248, -14}, 0, {974, -16}, {168, 179, 207, 255} }},
-	{{ {290, -171, -81}, 0, {-16, -16}, {168, 179, 206, 255} }},
-};
-
-Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_1[] = {
-	gsSPVertex(ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_vtx_1 + 0, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_offset_009_mesh_layer_1_vtx_0[22] = {
-	{{ {-5, 37, 31}, 0, {-16, -16}, {157, 62, 50, 255} }},
-	{{ {-15, 0, 7}, 0, {-16, -16}, {129, 247, 255, 255} }},
-	{{ {-1, -12, 47}, 0, {-16, -16}, {165, 227, 84, 255} }},
-	{{ {-4, 37, -17}, 0, {-16, -16}, {159, 62, 202, 255} }},
-	{{ {14, 48, -23}, 0, {-16, -16}, {227, 99, 182, 255} }},
-	{{ {13, 48, 38}, 0, {-16, -16}, {224, 99, 73, 255} }},
-	{{ {18, -15, 58}, 0, {-16, -16}, {235, 217, 119, 255} }},
-	{{ {1, -44, 8}, 0, {-16, -16}, {170, 162, 0, 255} }},
-	{{ {0, -13, -32}, 0, {-16, -16}, {168, 223, 170, 255} }},
-	{{ {19, -15, -42}, 0, {-16, -16}, {239, 217, 136, 255} }},
-	{{ {92, 45, -16}, 0, {-16, -16}, {59, 93, 192, 255} }},
-	{{ {91, 45, 32}, 0, {-16, -16}, {57, 93, 65, 255} }},
-	{{ {95, -5, 48}, 0, {-16, -16}, {67, 230, 105, 255} }},
-	{{ {98, -37, 8}, 0, {-16, -16}, {74, 153, 0, 255} }},
-	{{ {21, -54, 8}, 0, {-16, -16}, {243, 130, 0, 255} }},
-	{{ {96, -5, -31}, 0, {-16, -16}, {68, 230, 152, 255} }},
-	{{ {92, 45, -16}, 0, {-16, -16}, {59, 93, 192, 255} }},
-	{{ {116, 10, 8}, 0, {-16, -16}, {127, 9, 0, 255} }},
-	{{ {96, -5, -31}, 0, {-16, -16}, {68, 230, 152, 255} }},
-	{{ {91, 45, 32}, 0, {-16, -16}, {57, 93, 65, 255} }},
-	{{ {95, -5, 48}, 0, {-16, -16}, {67, 230, 105, 255} }},
-	{{ {98, -37, 8}, 0, {-16, -16}, {74, 153, 0, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_009_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_offset_009_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(5, 0, 6, 0),
-	gsSP1Triangle(0, 2, 6, 0),
-	gsSP1Triangle(6, 2, 7, 0),
-	gsSP1Triangle(2, 1, 7, 0),
-	gsSP1Triangle(7, 1, 8, 0),
-	gsSP1Triangle(8, 1, 3, 0),
-	gsSP1Triangle(9, 8, 3, 0),
-	gsSP1Triangle(9, 3, 4, 0),
-	gsSP1Triangle(9, 4, 10, 0),
-	gsSP1Triangle(4, 5, 10, 0),
-	gsSP1Triangle(5, 11, 10, 0),
-	gsSP1Triangle(5, 6, 11, 0),
-	gsSP1Triangle(6, 12, 11, 0),
-	gsSP1Triangle(13, 12, 6, 0),
-	gsSP1Triangle(6, 14, 13, 0),
-	gsSP1Triangle(6, 7, 14, 0),
-	gsSP1Triangle(14, 7, 9, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(14, 9, 13, 0),
-	gsSP1Triangle(9, 15, 13, 0),
-	gsSP1Triangle(10, 15, 9, 0),
-	gsSPVertex(ragdoll_mario_000_offset_009_mesh_layer_1_vtx_0 + 16, 6, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_offset_010_mesh_layer_1_vtx_0[12] = {
-	{{ {8, 44, 33}, 0, {-16, -16}, {196, 92, 64, 255} }},
-	{{ {65, -11, 54}, 0, {-16, -16}, {57, 219, 107, 255} }},
-	{{ {68, 45, 37}, 0, {-16, -16}, {64, 87, 67, 255} }},
-	{{ {6, -6, 49}, 0, {-16, -16}, {191, 227, 105, 255} }},
-	{{ {-14, 8, 8}, 0, {-16, -16}, {129, 5, 255, 255} }},
-	{{ {9, 44, -16}, 0, {-16, -16}, {199, 92, 190, 255} }},
-	{{ {69, 45, -18}, 0, {-16, -16}, {66, 87, 191, 255} }},
-	{{ {81, 3, 9}, 0, {-16, -16}, {127, 250, 1, 255} }},
-	{{ {64, -46, 9}, 0, {-16, -16}, {54, 141, 0, 255} }},
-	{{ {4, -37, 9}, 0, {-16, -16}, {186, 150, 0, 255} }},
-	{{ {6, -6, -31}, 0, {-16, -16}, {192, 226, 150, 255} }},
-	{{ {66, -11, -36}, 0, {-16, -16}, {59, 219, 150, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_010_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_offset_010_mesh_layer_1_vtx_0 + 0, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(6, 5, 0, 0),
-	gsSP1Triangle(0, 2, 6, 0),
-	gsSP1Triangle(2, 7, 6, 0),
-	gsSP1Triangle(1, 7, 2, 0),
-	gsSP1Triangle(8, 7, 1, 0),
-	gsSP1Triangle(9, 8, 1, 0),
-	gsSP1Triangle(1, 3, 9, 0),
-	gsSP1Triangle(3, 4, 9, 0),
-	gsSP1Triangle(9, 4, 10, 0),
-	gsSP1Triangle(10, 4, 5, 0),
-	gsSP1Triangle(11, 10, 5, 0),
-	gsSP1Triangle(5, 6, 11, 0),
-	gsSP1Triangle(6, 7, 11, 0),
-	gsSP1Triangle(11, 7, 8, 0),
-	gsSP1Triangle(9, 11, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_offset_011_mesh_layer_1_vtx_0[29] = {
-	{{ {-11, 54, 53}, 0, {-16, -16}, {45, 119, 255, 255} }},
-	{{ {-39, 64, -8}, 0, {-16, -16}, {46, 118, 255, 255} }},
-	{{ {-41, 65, 26}, 0, {-16, -16}, {44, 119, 0, 255} }},
-	{{ {-12, 53, -32}, 0, {-16, -16}, {45, 119, 255, 255} }},
-	{{ {78, 21, 61}, 0, {-16, -16}, {44, 119, 254, 255} }},
-	{{ {76, 20, -41}, 0, {-16, -16}, {44, 119, 254, 255} }},
-	{{ {110, 9, 35}, 0, {-16, -16}, {43, 120, 254, 255} }},
-	{{ {110, 8, -20}, 0, {-16, -16}, {43, 120, 254, 255} }},
-	{{ {-34, 12, 44}, 0, {-16, -16}, {179, 207, 88, 255} }},
-	{{ {-11, 54, 53}, 0, {-16, -16}, {209, 2, 118, 255} }},
-	{{ {-41, 65, 26}, 0, {-16, -16}, {141, 25, 49, 255} }},
-	{{ {43, -18, 54}, 0, {-16, -16}, {0, 176, 99, 255} }},
-	{{ {27, -35, 11}, 0, {-16, -16}, {228, 132, 253, 255} }},
-	{{ {-54, 15, 8}, 0, {-16, -16}, {137, 212, 252, 255} }},
-	{{ {-39, 64, -8}, 0, {-16, -16}, {145, 25, 199, 255} }},
-	{{ {-35, 11, -21}, 0, {-16, -16}, {180, 204, 168, 255} }},
-	{{ {-39, 64, -8}, 0, {-16, -16}, {145, 25, 199, 255} }},
-	{{ {-12, 53, -32}, 0, {-16, -16}, {207, 254, 139, 255} }},
-	{{ {-35, 11, -21}, 0, {-16, -16}, {180, 204, 168, 255} }},
-	{{ {44, -12, -33}, 0, {-16, -16}, {252, 181, 153, 255} }},
-	{{ {76, 20, -41}, 0, {-16, -16}, {18, 208, 140, 255} }},
-	{{ {110, 8, -20}, 0, {-16, -16}, {73, 170, 198, 255} }},
-	{{ {80, -31, 7}, 0, {-16, -16}, {54, 141, 250, 255} }},
-	{{ {110, 9, 35}, 0, {-16, -16}, {78, 172, 54, 255} }},
-	{{ {43, -18, 54}, 0, {-16, -16}, {0, 176, 99, 255} }},
-	{{ {78, 21, 61}, 0, {-16, -16}, {28, 210, 115, 255} }},
-	{{ {-11, 54, 53}, 0, {-16, -16}, {209, 2, 118, 255} }},
-	{{ {27, -35, 11}, 0, {-16, -16}, {228, 132, 253, 255} }},
-	{{ {-54, 15, 8}, 0, {-16, -16}, {137, 212, 252, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_011_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_offset_011_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 11, 9, 0),
-	gsSP1Triangle(12, 11, 8, 0),
-	gsSP1Triangle(12, 8, 13, 0),
-	gsSP1Triangle(10, 13, 8, 0),
-	gsSP1Triangle(13, 10, 14, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(ragdoll_mario_000_offset_011_mesh_layer_1_vtx_0 + 16, 13, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 6, 3, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(6, 8, 11, 0),
-	gsSP1Triangle(11, 3, 6, 0),
-	gsSP1Triangle(2, 3, 11, 0),
-	gsSP1Triangle(12, 2, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_offset_012_mesh_layer_1_vtx_0[22] = {
-	{{ {95, -3, -49}, 0, {-16, -16}, {66, 232, 150, 255} }},
-	{{ {116, 11, -9}, 0, {-16, -16}, {127, 10, 255, 255} }},
-	{{ {98, -35, -10}, 0, {-16, -16}, {75, 153, 253, 255} }},
-	{{ {90, 47, -32}, 0, {-16, -16}, {56, 95, 193, 255} }},
-	{{ {18, -13, -58}, 0, {-16, -16}, {236, 220, 136, 255} }},
-	{{ {22, -54, -9}, 0, {-16, -16}, {246, 129, 254, 255} }},
-	{{ {19, -16, 41}, 0, {-16, -16}, {240, 214, 119, 255} }},
-	{{ {96, -5, 30}, 0, {-16, -16}, {69, 227, 103, 255} }},
-	{{ {91, 46, 16}, 0, {-16, -16}, {58, 92, 66, 255} }},
-	{{ {12, 49, -37}, 0, {-16, -16}, {224, 100, 185, 255} }},
-	{{ {-6, 38, -31}, 0, {-16, -16}, {157, 62, 206, 255} }},
-	{{ {-1, -11, -47}, 0, {-16, -16}, {165, 226, 172, 255} }},
-	{{ {1, -44, -9}, 0, {-16, -16}, {171, 161, 254, 255} }},
-	{{ {0, -14, 31}, 0, {-16, -16}, {169, 220, 85, 255} }},
-	{{ {-5, 36, 18}, 0, {-16, -16}, {158, 57, 57, 255} }},
-	{{ {13, 48, 24}, 0, {-16, -16}, {225, 96, 77, 255} }},
-	{{ {-6, 38, -31}, 0, {-16, -16}, {157, 62, 206, 255} }},
-	{{ {-15, 0, -7}, 0, {-16, -16}, {129, 246, 2, 255} }},
-	{{ {-5, 36, 18}, 0, {-16, -16}, {158, 57, 57, 255} }},
-	{{ {-1, -11, -47}, 0, {-16, -16}, {165, 226, 172, 255} }},
-	{{ {1, -44, -9}, 0, {-16, -16}, {171, 161, 254, 255} }},
-	{{ {0, -14, 31}, 0, {-16, -16}, {169, 220, 85, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_012_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_offset_012_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 0, 4, 0),
-	gsSP1Triangle(4, 0, 2, 0),
-	gsSP1Triangle(2, 5, 4, 0),
-	gsSP1Triangle(2, 6, 5, 0),
-	gsSP1Triangle(2, 7, 6, 0),
-	gsSP1Triangle(2, 1, 7, 0),
-	gsSP1Triangle(7, 1, 8, 0),
-	gsSP1Triangle(8, 1, 3, 0),
-	gsSP1Triangle(8, 3, 9, 0),
-	gsSP1Triangle(3, 4, 9, 0),
-	gsSP1Triangle(4, 10, 9, 0),
-	gsSP1Triangle(4, 11, 10, 0),
-	gsSP1Triangle(12, 11, 4, 0),
-	gsSP1Triangle(5, 12, 4, 0),
-	gsSP1Triangle(6, 12, 5, 0),
-	gsSP1Triangle(6, 13, 12, 0),
-	gsSP1Triangle(14, 13, 6, 0),
-	gsSP1Triangle(15, 14, 6, 0),
-	gsSP1Triangle(8, 15, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 9, 15, 0),
-	gsSP1Triangle(9, 10, 15, 0),
-	gsSP1Triangle(10, 14, 15, 0),
-	gsSPVertex(ragdoll_mario_000_offset_012_mesh_layer_1_vtx_0 + 16, 6, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(2, 1, 5, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_offset_013_mesh_layer_1_vtx_0[12] = {
-	{{ {66, -11, 34}, 0, {-16, -16}, {58, 216, 106, 255} }},
-	{{ {69, 45, 18}, 0, {-16, -16}, {64, 86, 68, 255} }},
-	{{ {9, 44, 16}, 0, {-16, -16}, {198, 90, 69, 255} }},
-	{{ {83, 4, -10}, 0, {-16, -16}, {127, 248, 0, 255} }},
-	{{ {63, -45, -12}, 0, {-16, -16}, {51, 140, 252, 255} }},
-	{{ {4, -36, -10}, 0, {-16, -16}, {185, 150, 0, 255} }},
-	{{ {6, -6, 30}, 0, {-16, -16}, {192, 224, 105, 255} }},
-	{{ {-13, 10, -9}, 0, {-16, -16}, {129, 8, 1, 255} }},
-	{{ {9, 46, -33}, 0, {-16, -16}, {198, 95, 195, 255} }},
-	{{ {69, 46, -37}, 0, {-16, -16}, {64, 88, 191, 255} }},
-	{{ {65, -9, -56}, 0, {-16, -16}, {55, 221, 147, 255} }},
-	{{ {5, -3, -50}, 0, {-16, -16}, {188, 231, 151, 255} }},
-};
-
-Gfx ragdoll_mario_000_offset_013_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_offset_013_mesh_layer_1_vtx_0 + 0, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(0, 6, 5, 0),
-	gsSP1Triangle(2, 6, 0, 0),
-	gsSP1Triangle(2, 7, 6, 0),
-	gsSP1Triangle(8, 7, 2, 0),
-	gsSP1Triangle(8, 2, 1, 0),
-	gsSP1Triangle(1, 9, 8, 0),
-	gsSP1Triangle(1, 3, 9, 0),
-	gsSP1Triangle(9, 3, 10, 0),
-	gsSP1Triangle(10, 3, 4, 0),
-	gsSP1Triangle(10, 4, 5, 0),
-	gsSP1Triangle(5, 11, 10, 0),
-	gsSP1Triangle(5, 7, 11, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(11, 7, 8, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx ragdoll_mario_000_displaylist_005_mesh_layer_1_vtx_0[28] = {
-	{{ {75, 23, 40}, 0, {-16, -16}, {42, 120, 0, 255} }},
-	{{ {109, 11, 20}, 0, {-16, -16}, {43, 120, 0, 255} }},
-	{{ {110, 11, -36}, 0, {-16, -16}, {41, 120, 0, 255} }},
-	{{ {78, 22, -61}, 0, {-16, -16}, {41, 120, 0, 255} }},
-	{{ {-14, 54, 29}, 0, {-16, -16}, {42, 120, 0, 255} }},
-	{{ {-11, 53, -56}, 0, {-16, -16}, {42, 120, 0, 255} }},
-	{{ {-40, 63, 5}, 0, {-16, -16}, {42, 120, 0, 255} }},
-	{{ {-42, 64, -29}, 0, {-16, -16}, {43, 120, 0, 255} }},
-	{{ {110, 11, -36}, 0, {-16, -16}, {80, 172, 203, 255} }},
-	{{ {109, 11, 20}, 0, {-16, -16}, {74, 172, 61, 255} }},
-	{{ {80, -29, -7}, 0, {-16, -16}, {56, 142, 9, 255} }},
-	{{ {44, -11, 32}, 0, {-16, -16}, {253, 183, 104, 255} }},
-	{{ {75, 23, 40}, 0, {-16, -16}, {17, 212, 118, 255} }},
-	{{ {-14, 54, 29}, 0, {-16, -16}, {206, 0, 117, 255} }},
-	{{ {-36, 11, 19}, 0, {-16, -16}, {180, 205, 88, 255} }},
-	{{ {-40, 63, 5}, 0, {-16, -16}, {144, 24, 56, 255} }},
-	{{ {-54, 14, -10}, 0, {-16, -16}, {138, 210, 3, 255} }},
-	{{ {-36, 11, 19}, 0, {-16, -16}, {180, 205, 88, 255} }},
-	{{ {-40, 63, 5}, 0, {-16, -16}, {144, 24, 56, 255} }},
-	{{ {-42, 64, -29}, 0, {-16, -16}, {141, 22, 206, 255} }},
-	{{ {-34, 11, -46}, 0, {-16, -16}, {179, 205, 168, 255} }},
-	{{ {-11, 53, -56}, 0, {-16, -16}, {210, 0, 138, 255} }},
-	{{ {43, -18, -55}, 0, {-16, -16}, {2, 175, 158, 255} }},
-	{{ {78, 22, -61}, 0, {-16, -16}, {30, 212, 141, 255} }},
-	{{ {110, 11, -36}, 0, {-16, -16}, {80, 172, 203, 255} }},
-	{{ {80, -29, -7}, 0, {-16, -16}, {56, 142, 9, 255} }},
-	{{ {27, -35, -11}, 0, {-16, -16}, {231, 132, 6, 255} }},
-	{{ {44, -11, 32}, 0, {-16, -16}, {253, 183, 104, 255} }},
-};
-
-Gfx ragdoll_mario_000_displaylist_005_mesh_layer_1_tri_0[] = {
-	gsSPVertex(ragdoll_mario_000_displaylist_005_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(13, 14, 11, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(ragdoll_mario_000_displaylist_005_mesh_layer_1_vtx_0 + 16, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(10, 6, 9, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(10, 11, 1, 0),
-	gsSP1Triangle(10, 1, 0, 0),
-	gsSP1Triangle(0, 4, 10, 0),
-	gsSP1Triangle(4, 6, 10, 0),
-	gsSPEndDisplayList(),
-};
-
-
-Gfx mat_ragdoll_mario_body_v3[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(ragdoll_mario_body_v3_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, ragdoll_mario_mario_button_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_metal_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, TEXEL0, 0, 0, 0, ENVIRONMENT, 0, 0, 0, TEXEL0, 0, 0, 0, ENVIRONMENT),
-	gsSPSetGeometryMode(G_TEXTURE_GEN),
-	gsSPTexture(4032, 1984, 0, 0, 1),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, ragdoll_mario_metal_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 128),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 16, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0),
-	gsDPSetTileSize(0, 0, 0, 252, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_ragdoll_mario_metal_v3_001[] = {
-	gsDPPipeSync(),
-	gsSPClearGeometryMode(G_TEXTURE_GEN),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_cap_v3[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(ragdoll_mario_cap_v3_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, ragdoll_mario_mario_cap_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_face_0___eye_open_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(ragdoll_mario_face_0___eye_open_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, ragdoll_mario_mario_face_1_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_mustache_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(ragdoll_mario_mustache_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, ragdoll_mario_mario_mustache_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_hair_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(ragdoll_mario_hair_v3_001_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_sideburns_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(ragdoll_mario_sideburns_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, ragdoll_mario_mario_sideburn_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_face_1___eye_half_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(ragdoll_mario_face_1___eye_half_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, ragdoll_mario_mario_face_2_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_face_2___eye_closed_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(ragdoll_mario_face_2___eye_closed_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, ragdoll_mario_mario_face_3_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_face_7___eye_X_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT, TEXEL0, SHADE, TEXEL0_ALPHA, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(ragdoll_mario_face_7___eye_X_v3_001_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, ragdoll_mario_mario_face_4_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_wing_2_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0),
-	gsSPClearGeometryMode(G_CULL_BACK),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, ragdoll_mario_wing_2_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 252),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_ragdoll_mario_wing_2_v3_001[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_CULL_BACK),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_wing_1_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0, 0, 0, 0, TEXEL0, TEXEL0, 0, ENVIRONMENT, 0),
-	gsSPClearGeometryMode(G_CULL_BACK),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, ragdoll_mario_wing1_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_CLAMP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 252),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_ragdoll_mario_wing_1_v3_001[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_CULL_BACK),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_gloves_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(ragdoll_mario_gloves_v3_001_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_ragdoll_mario_shoes_v3_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(ragdoll_mario_shoes_v3_001_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_body_v3),
-	gsSPDisplayList(ragdoll_mario_000_offset_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_001_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_body_v3),
-	gsSPDisplayList(ragdoll_mario_000_offset_001_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_ragdoll_mario_cap_v3),
-	gsSPDisplayList(ragdoll_mario_000_offset_001_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_001_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_001_mesh_layer_1_tri_0),
-	gsSPDisplayList(ragdoll_mario_000_offset_001_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_face_0___eye_open_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_ragdoll_mario_mustache_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_ragdoll_mario_hair_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_ragdoll_mario_sideburns_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_ragdoll_mario_cap_v3),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_4),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_0),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_1),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_2),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_3),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_4),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_1___eye_half_v3_001_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_face_1___eye_half_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_ragdoll_mario_mustache_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_ragdoll_mario_hair_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_ragdoll_mario_sideburns_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_ragdoll_mario_cap_v3),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_4),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2[] = {
-	gsSPDisplayList(mat_ragdoll_mario_face_2___eye_closed_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_ragdoll_mario_mustache_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_ragdoll_mario_hair_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_ragdoll_mario_sideburns_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_ragdoll_mario_cap_v3),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_4),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_mesh_layer_1_mat_override_face_7___eye_X_v3_001_3[] = {
-	gsSPDisplayList(mat_ragdoll_mario_face_7___eye_X_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_ragdoll_mario_mustache_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_ragdoll_mario_hair_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_ragdoll_mario_sideburns_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_ragdoll_mario_cap_v3),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_mesh_layer_1_tri_4),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_face_0___eye_open_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_ragdoll_mario_mustache_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_ragdoll_mario_sideburns_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_ragdoll_mario_hair_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_1___eye_half_v3_001_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_face_1___eye_half_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_ragdoll_mario_mustache_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_ragdoll_mario_sideburns_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_ragdoll_mario_hair_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_2___eye_closed_v3_001_2[] = {
-	gsSPDisplayList(mat_ragdoll_mario_face_2___eye_closed_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_ragdoll_mario_mustache_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_ragdoll_mario_sideburns_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_ragdoll_mario_hair_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_mat_override_face_7___eye_X_v3_001_3[] = {
-	gsSPDisplayList(mat_ragdoll_mario_face_7___eye_X_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_ragdoll_mario_mustache_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_ragdoll_mario_sideburns_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_ragdoll_mario_hair_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_head__no_cap__mesh_layer_1_tri_3),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_001_mesh_layer_4[] = {
-	gsSPDisplayList(mat_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_001_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_ragdoll_mario_wing_1_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_001_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_001_mesh_layer_4_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_001_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_ragdoll_mario_wing_1_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_001_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_002_mesh_layer_4[] = {
-	gsSPDisplayList(mat_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_002_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_ragdoll_mario_wing_1_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_002_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_002_mesh_layer_4_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_002_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_ragdoll_mario_wing_1_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_002_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_003_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_cap_v3),
-	gsSPDisplayList(ragdoll_mario_000_offset_003_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_003_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_003_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_004_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_cap_v3),
-	gsSPDisplayList(ragdoll_mario_000_offset_004_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_004_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_004_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_003_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_gloves_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_003_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_003_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_003_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_gloves_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_right_hand_open_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_006_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_cap_v3),
-	gsSPDisplayList(ragdoll_mario_000_offset_006_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_006_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_006_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_007_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_cap_v3),
-	gsSPDisplayList(ragdoll_mario_000_offset_007_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_007_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_007_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_004_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_gloves_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_004_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_004_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_004_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_gloves_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_002_switch_option_left_hand_open_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_gloves_v3_001),
-	gsSPDisplayList(ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_004_switch_option_left_hand_peace_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_cap_v3),
-	gsSPDisplayList(ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_ragdoll_mario_gloves_v3_001),
-	gsSPDisplayList(ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_0),
-	gsSPDisplayList(ragdoll_mario_005_switch_option_left_hand_cap_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_cap_v3),
-	gsSPDisplayList(ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_ragdoll_mario_gloves_v3_001),
-	gsSPDisplayList(ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_0),
-	gsSPDisplayList(ragdoll_mario_006_switch_option_left_hand_wing_cap_mesh_layer_1_tri_1),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4[] = {
-	gsSPDisplayList(mat_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_ragdoll_mario_wing_1_v3_001),
-	gsSPDisplayList(ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_2_v3_001),
-	gsSPDisplayList(mat_ragdoll_mario_wing_1_v3_001),
-	gsSPDisplayList(ragdoll_mario_006_switch_option_left_hand_wing_cap_wings_mesh_layer_4_tri_1),
-	gsSPDisplayList(mat_revert_ragdoll_mario_wing_1_v3_001),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_009_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_body_v3),
-	gsSPDisplayList(ragdoll_mario_000_offset_009_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_009_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_009_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_010_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_body_v3),
-	gsSPDisplayList(ragdoll_mario_000_offset_010_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_010_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_010_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_011_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_shoes_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_011_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_011_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_011_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_012_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_body_v3),
-	gsSPDisplayList(ragdoll_mario_000_offset_012_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_012_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_012_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_013_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_body_v3),
-	gsSPDisplayList(ragdoll_mario_000_offset_013_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_offset_013_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_offset_013_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_005_mesh_layer_1[] = {
-	gsSPDisplayList(mat_ragdoll_mario_shoes_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_005_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_000_displaylist_005_mesh_layer_1_mat_override_metal_v3_001_0[] = {
-	gsSPDisplayList(mat_ragdoll_mario_metal_v3_001),
-	gsSPDisplayList(ragdoll_mario_000_displaylist_005_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx ragdoll_mario_material_revert_render_settings[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_LIGHTING),
-	gsSPClearGeometryMode(G_TEXTURE_GEN),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 0),
-	gsDPSetEnvColor(255, 255, 255, 255),
-	gsDPSetAlphaCompare(G_AC_NONE),
-	gsSPEndDisplayList(),
-};
-
diff --git a/actors/supergoomb/geo.inc.c b/actors/supergoomb/geo.inc.c
deleted file mode 100644
index e52c67de..00000000
--- a/actors/supergoomb/geo.inc.c
+++ /dev/null
@@ -1,10 +0,0 @@
-#include "src/game/envfx_snow.h"
-
-const GeoLayout supergoomb_geo[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, supergoomb_bobomb_battlefeild_mesh_layer_1),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, supergoomb_material_revert_render_settings),
-	GEO_CLOSE_NODE(),
-	GEO_END(),
-};
diff --git a/actors/supergoomb/geo_header.h b/actors/supergoomb/geo_header.h
deleted file mode 100644
index 38f8d987..00000000
--- a/actors/supergoomb/geo_header.h
+++ /dev/null
@@ -1,111 +0,0 @@
-extern const GeoLayout supergoomb_geo[];
-extern Lights1 supergoomb_Material_071_574B138E_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_070_41A41EE3_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_030_1FAAE88D_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_029_359289F2_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_028_6E3A21B_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_027_6B1A233B_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_026_6B2D96F_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_025_12436720_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_024_1FAAE88D_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_023_1FAAE88D_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_020_275F399C_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_019_4020CDFE_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_018_1B46C8C_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_017_6C631877_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_010_3D49A9D5_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_010_C1DF883_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_010_C1DF883_c_bmp_001_f3d_lights;
-extern Lights1 supergoomb_Material_010_3F485258_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_010_10E99677_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_010_359289F2_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_010_6B2D96F_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_010_12436720_c_bmp_f3d_lights;
-extern Lights1 supergoomb_Material_010_12436720_c_bmp_001_f3d_lights;
-extern u8 supergoomb__574B138E_c_rgba16[];
-extern u8 supergoomb__41A41EE3_c_rgba16[];
-extern u8 supergoomb__1FAAE88D_c_rgba16[];
-extern u8 supergoomb__359289F2_c_rgba16[];
-extern u8 supergoomb__6E3A21B_c_rgba16[];
-extern u8 supergoomb__6B1A233B_c_rgba16[];
-extern u8 supergoomb__6B2D96F_c_rgba16[];
-extern u8 supergoomb__12436720_c_rgba16[];
-extern u8 supergoomb__275F399C_c_rgba16[];
-extern u8 supergoomb__4020CDFE_c_rgba16[];
-extern u8 supergoomb__1B46C8C_c_rgba16[];
-extern u8 supergoomb__6C631877_c_rgba16[];
-extern u8 supergoomb__3D49A9D5_c_rgba16[];
-extern u8 supergoomb_C1DF883_c_rgba16[];
-extern u8 supergoomb__3F485258_c_rgba16[];
-extern u8 supergoomb__10E99677_c_rgba16[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_0[40];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_0[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_1[8];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_1[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_2[54];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_2[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_3[4];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_3[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_4[12];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_4[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_5[8];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_5[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_6[139];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_6[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_7[43];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_7[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_8[28];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_8[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9[321];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_9[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_10[72];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_10[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_11[20];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_11[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_12[62];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_12[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_13[46];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_13[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_14[44];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_14[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_15[93];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_15[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_16[3];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_16[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17[224];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_17[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_18[27];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_18[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_19[32];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_19[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_20[40];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_20[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21[201];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_21[];
-extern Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_22[3];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_22[];
-extern Gfx mat_supergoomb_Material_071_574B138E_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_070_41A41EE3_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_030_1FAAE88D_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_029_359289F2_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_028_6E3A21B_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_027_6B1A233B_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_026_6B2D96F_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_025_12436720_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_024_1FAAE88D_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_023_1FAAE88D_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_020_275F399C_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_019_4020CDFE_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_018_1B46C8C_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_017_6C631877_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_010_3D49A9D5_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_010_C1DF883_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_010_C1DF883_c_bmp_001_f3d[];
-extern Gfx mat_supergoomb_Material_010_3F485258_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_010_10E99677_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_010_359289F2_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_010_6B2D96F_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_010_12436720_c_bmp_f3d[];
-extern Gfx mat_supergoomb_Material_010_12436720_c_bmp_001_f3d[];
-extern Gfx supergoomb_bobomb_battlefeild_mesh_layer_1[];
-extern Gfx supergoomb_material_revert_render_settings[];
diff --git a/actors/supergoomb/model.inc.c b/actors/supergoomb/model.inc.c
deleted file mode 100644
index f5a0a63a..00000000
--- a/actors/supergoomb/model.inc.c
+++ /dev/null
@@ -1,7638 +0,0 @@
-Lights1 supergoomb_Material_071_574B138E_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_070_41A41EE3_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_030_1FAAE88D_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_029_359289F2_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_028_6E3A21B_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_027_6B1A233B_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_026_6B2D96F_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_025_12436720_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_024_1FAAE88D_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_023_1FAAE88D_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_020_275F399C_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_019_4020CDFE_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_018_1B46C8C_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_017_6C631877_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_010_3D49A9D5_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_010_C1DF883_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_010_C1DF883_c_bmp_001_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_010_3F485258_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_010_10E99677_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_010_359289F2_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_010_6B2D96F_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_010_12436720_c_bmp_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 supergoomb_Material_010_12436720_c_bmp_001_f3d_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Gfx supergoomb__574B138E_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__574B138E_c_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x39, 0x89, 0x39, 0x47, 0x52, 0x0b, 0x52, 0x0b, 
-	0x7b, 0x0f, 0x83, 0x51, 0x7b, 0x0f, 0x62, 0x4d, 
-	0x83, 0x53, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x39, 0x89, 0x39, 0x47, 0x39, 0x47, 0x39, 0x89, 
-	0x4a, 0x0b, 0x4a, 0x0b, 0x39, 0x47, 0x41, 0x89, 
-	0x41, 0xcb, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x39, 0x89, 0x31, 0x07, 0x20, 0xc3, 0x21, 0x09, 
-	0x39, 0xcf, 0x31, 0x49, 0x29, 0x07, 0x29, 0x07, 
-	0x21, 0x07, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x08, 0x43, 0x10, 0x85, 
-	0x18, 0xc7, 0x18, 0xc7, 0x10, 0x85, 0x21, 0x0b, 
-	0x4a, 0x53, 0x4a, 0x53, 0x39, 0xd1, 0x39, 0xcf, 
-	0x29, 0x4b, 0x21, 0x09, 0x18, 0xc7, 0x10, 0x85, 
-	0xff, 0xfe, 0x21, 0x09, 0x4a, 0x53, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x08, 0x43, 0x18, 0xc7, 0x31, 0x8d, 0x52, 0x97, 
-	0x94, 0xa5, 0xa5, 0x2b, 0x21, 0x09, 0x31, 0x8d, 
-	0x63, 0x19, 0x8c, 0xa5, 0x94, 0xa5, 0x84, 0x23, 
-	0x7b, 0xdf, 0x6b, 0x5b, 0x52, 0xd7, 0x39, 0xcf, 
-	0x21, 0x09, 0x42, 0x13, 0x63, 0x1b, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x29, 0x4b, 0x18, 0xc7, 0x18, 0xc7, 
-	0x31, 0x8d, 0x73, 0x9d, 0x9c, 0xe7, 0xb5, 0xad, 
-	0xad, 0x6b, 0xa4, 0xa1, 0x5a, 0x4f, 0x3a, 0x11, 
-	0x8c, 0x63, 0xa4, 0x59, 0x83, 0x95, 0x5a, 0xd7, 
-	0xb5, 0xad, 0x73, 0x9f, 0x6b, 0x9d, 0x6b, 0x5d, 
-	0x5a, 0xd7, 0x39, 0xcf, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x10, 0x85, 0x29, 0x4b, 0x42, 0x53, 
-	0x84, 0x63, 0x94, 0xa5, 0x6b, 0x9d, 0x73, 0x9d, 
-	0xa5, 0x2b, 0xb4, 0x9b, 0xa4, 0x13, 0x4a, 0x53, 
-	0x84, 0x21, 0xb4, 0x97, 0xa4, 0x99, 0x4a, 0x53, 
-	0xad, 0x6d, 0xff, 0xfe, 0xff, 0xfe, 0x5a, 0xd9, 
-	0x63, 0x19, 0x63, 0x19, 0x42, 0x11, 0x21, 0x0b, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x18, 0xc7, 0x4a, 0x53, 0x7b, 0xe1, 
-	0x7b, 0xe1, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x8c, 0x63, 0xb4, 0x9b, 0xc4, 0xd9, 0x9b, 0xd1, 
-	0xcd, 0x5f, 0xd5, 0x5b, 0xf6, 0x63, 0x9c, 0x9d, 
-	0xac, 0xe3, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x52, 0x97, 0x5b, 0x19, 0x42, 0x11, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x10, 0x85, 0x39, 0xcf, 0x73, 0x9d, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x7b, 0xdd, 0x7b, 0x53, 0xcd, 0x1d, 0xac, 0x53, 
-	0xc4, 0xd9, 0xe5, 0xdf, 0xee, 0x21, 0xe6, 0x25, 
-	0xd5, 0x5f, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x52, 0x97, 0x52, 0x97, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x21, 0x09, 0x52, 0x95, 0x63, 0x19, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x4a, 0x0b, 0xd5, 0x9f, 0xbc, 0x97, 
-	0xb4, 0x53, 0xf6, 0x63, 0xd5, 0x5b, 0xf6, 0xe5, 
-	0xf6, 0x21, 0xe5, 0xe3, 0xff, 0xfe, 0xff, 0xfe, 
-	0x21, 0x09, 0x42, 0x11, 0x42, 0x13, 0x5a, 0xd7, 
-	0x3a, 0x11, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x08, 0x85, 
-	0x39, 0xcf, 0x6b, 0x5b, 0x52, 0x95, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x49, 0xcb, 0x9c, 0x57, 0xc5, 0x1b, 
-	0xac, 0x11, 0xf6, 0x63, 0xdd, 0x9d, 0xf6, 0xe5, 
-	0xf6, 0x21, 0xf6, 0x63, 0xff, 0xfe, 0x29, 0x4b, 
-	0x52, 0x95, 0x6b, 0x5d, 0x42, 0x53, 0x5a, 0xd7, 
-	0x4a, 0x53, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x18, 0xc7, 
-	0x42, 0x11, 0x7b, 0xdf, 0xb5, 0xad, 0x8c, 0x63, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x39, 0x89, 0x62, 0x8f, 0xcd, 0x5d, 
-	0xa4, 0x0f, 0xf6, 0x23, 0xd5, 0x5b, 0xf7, 0x27, 
-	0xf6, 0x21, 0xed, 0xdf, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x52, 0x97, 
-	0x4a, 0x53, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x18, 0xc7, 
-	0x4a, 0x53, 0x5a, 0xd7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x39, 0x87, 0x52, 0x4d, 0xcd, 0x1d, 
-	0xac, 0x53, 0xe5, 0xdf, 0xd5, 0x1b, 0xf7, 0x27, 
-	0xed, 0xdf, 0x93, 0xd5, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x52, 0x95, 
-	0x4a, 0x55, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x18, 0xc7, 0x21, 0x09, 
-	0x4a, 0x95, 0x52, 0xd7, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x31, 0x05, 0x4a, 0x0b, 0x93, 0xd5, 
-	0xb4, 0x95, 0xd5, 0x1b, 0xd5, 0x1b, 0xf6, 0xa5, 
-	0xe5, 0x9d, 0xdd, 0x9f, 0x49, 0xc9, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x52, 0x95, 
-	0x4a, 0x95, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x42, 0x11, 0x42, 0x11, 0x29, 0x4b, 
-	0x4a, 0x95, 0x52, 0x95, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x20, 0xc5, 0x39, 0x89, 0x93, 0xd5, 
-	0xc4, 0xd9, 0xc4, 0x97, 0xe5, 0xdf, 0xe5, 0xdf, 
-	0xe5, 0x9d, 0xe5, 0xdf, 0x52, 0x09, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x52, 0x95, 
-	0x7b, 0xdf, 0x94, 0xa5, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x52, 0xd7, 0x29, 0x4b, 
-	0x4a, 0x53, 0x52, 0x95, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x29, 0x05, 0x31, 0x47, 0xb4, 0x9b, 
-	0xd5, 0x5b, 0xc4, 0x95, 0xf6, 0x63, 0xd5, 0x19, 
-	0xdd, 0x5b, 0xa4, 0x57, 0x39, 0x47, 0x39, 0xcf, 
-	0x21, 0x09, 0x18, 0xc7, 0xff, 0xfe, 0x5a, 0xd7, 
-	0x52, 0x95, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x21, 0x09, 
-	0x4a, 0x53, 0x52, 0x95, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x29, 0x05, 0x29, 0x05, 0x94, 0x17, 
-	0xe5, 0x9f, 0xbc, 0x95, 0xee, 0x23, 0xb4, 0x51, 
-	0xa3, 0xd1, 0x5a, 0x4d, 0xff, 0xfe, 0xff, 0xfe, 
-	0x4a, 0x53, 0x3a, 0x11, 0x39, 0xcf, 0x63, 0x19, 
-	0x52, 0x95, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x39, 0xd1, 0x52, 0x97, 0x42, 0x11, 0xff, 0xfe, 
-	0x21, 0x09, 0x4a, 0x53, 0xff, 0xfe, 0xff, 0xfe, 
-	0x31, 0x49, 0x31, 0x47, 0x31, 0x47, 0x62, 0x8f, 
-	0xb4, 0x99, 0xb4, 0x53, 0xb4, 0x9b, 0x51, 0xc9, 
-	0x5a, 0x09, 0x52, 0x4d, 0xff, 0xfe, 0xff, 0xfe, 
-	0x39, 0xcf, 0x42, 0x11, 0x52, 0x95, 0x6b, 0x5b, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x52, 0xd7, 0x42, 0x13, 0x29, 0x4d, 
-	0x52, 0x95, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x39, 0x49, 0x31, 0x47, 0x31, 0x05, 0x62, 0xcf, 
-	0x6a, 0xcf, 0x8b, 0x4d, 0x8b, 0xd5, 0x49, 0xcb, 
-	0x41, 0x87, 0x5a, 0x4d, 0xff, 0xfe, 0xff, 0xfe, 
-	0x21, 0x09, 0x39, 0xcf, 0x73, 0x9d, 0x63, 0x5b, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x4a, 0x53, 0x5b, 0x19, 0x52, 0x95, 
-	0x63, 0x5b, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x31, 0x47, 0x31, 0x47, 0x39, 0x45, 0x62, 0x8f, 
-	0x52, 0x0d, 0x41, 0x87, 0x5a, 0x4b, 0x4a, 0x0d, 
-	0x39, 0xcf, 0x41, 0xcb, 0xff, 0xfe, 0x18, 0xc7, 
-	0x31, 0x8d, 0x7b, 0xdf, 0x7c, 0x21, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x39, 0xcf, 0x52, 0x97, 0x63, 0x5b, 
-	0x42, 0x11, 0x21, 0x4b, 0xff, 0xfe, 0xff, 0xfe, 
-	0x31, 0x47, 0x39, 0x49, 0x41, 0x87, 0x5a, 0x4b, 
-	0x21, 0x07, 0x18, 0xc7, 0x52, 0x0b, 0x52, 0x4d, 
-	0x31, 0x8f, 0xff, 0xfe, 0x21, 0x09, 0x39, 0xcf, 
-	0x94, 0xa5, 0x6b, 0x9d, 0x94, 0xa5, 0x39, 0xd1, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x29, 0x4b, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x42, 0x13, 0x5b, 0x19, 
-	0x73, 0x9d, 0x5a, 0xd7, 0x39, 0xcf, 0x21, 0x09, 
-	0x29, 0x07, 0x31, 0x47, 0x49, 0xc9, 0x31, 0x45, 
-	0x21, 0x09, 0x39, 0xcf, 0x39, 0x89, 0x31, 0x49, 
-	0x21, 0x09, 0x31, 0x8d, 0x42, 0x11, 0x84, 0x21, 
-	0x42, 0x11, 0x29, 0x4b, 0x63, 0x19, 0x29, 0x4b, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0x31, 0x8d, 0x4a, 0x55, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x5a, 0xd7, 0x73, 0xdf, 0x7b, 0xe1, 0x6b, 0x9d, 
-	0x52, 0x95, 0x39, 0xcf, 0x29, 0x4b, 0x18, 0xc7, 
-	0x29, 0x4b, 0x4a, 0x53, 0x21, 0x09, 0x18, 0xc7, 
-	0x18, 0xc7, 0x18, 0xc9, 0x18, 0xc7, 0x18, 0xc7, 
-	0x21, 0x09, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x21, 0x09, 0x18, 0xc7, 0x31, 0x8d, 0x42, 0x11, 
-	0x21, 0x09, 0x21, 0x09, 0x21, 0x09, 0x21, 0x09, 
-	0x19, 0x09, 0x21, 0x0b, 0x5b, 0x19, 0x84, 0x21, 
-	0x84, 0x23, 0x84, 0x23, 0x84, 0x21, 0x52, 0x95, 
-	0x31, 0x8d, 0x5a, 0xd7, 0x4a, 0x53, 0x39, 0xcf, 
-	0x31, 0x8d, 0x29, 0x4d, 0x29, 0x4b, 0x29, 0x4b, 
-	0x29, 0x4b, 0x29, 0x4b, 0xff, 0xfe, 0x21, 0x09, 
-	0x21, 0x09, 0x21, 0x09, 0x21, 0x09, 0x21, 0x09, 
-	0x6b, 0x5b, 0x63, 0x19, 0x63, 0x19, 0x6b, 0x5b, 
-	0x6b, 0x5b, 0x6b, 0x5b, 0x6b, 0x5b, 0x73, 0x9d, 
-	0x52, 0x95, 0x42, 0x11, 0x84, 0x21, 0xa5, 0x6b, 
-	0x94, 0xa7, 0x94, 0xa5, 0x7b, 0xdf, 0x4a, 0x53, 
-	0x39, 0xcf, 0x6b, 0x9d, 0x84, 0x21, 0x8c, 0x63, 
-	0x84, 0x21, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x73, 0xdf, 0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 
-	0x6b, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 0x6b, 0x9d, 
-	0x73, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x73, 0x9d, 0x8c, 0x63, 0x94, 0xa5, 0x84, 0x23, 
-	0x7b, 0xe1, 0x6b, 0x5b, 0x94, 0xa5, 0x6b, 0x59, 
-	0x5a, 0xd7, 0xad, 0x6b, 0xa4, 0xa1, 0x72, 0xcf, 
-	0x4a, 0x53, 0x94, 0xa5, 0x93, 0x93, 0xa4, 0x9d, 
-	0x6b, 0x5d, 0x7b, 0xe1, 0x6b, 0x5b, 0x6b, 0x5b, 
-	0x6b, 0x5b, 0x6b, 0x5d, 0x6b, 0x5d, 0x6b, 0x5d, 
-	0x63, 0x1b, 0x73, 0x9f, 0x73, 0x9d, 0x6b, 0x5d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x6b, 0x9d, 0x84, 0x63, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x39, 0x89, 
-	0x39, 0x89, 0x94, 0xa5, 0xac, 0x9b, 0xc4, 0x95, 
-	0x52, 0x93, 0x7b, 0x9b, 0xbc, 0x93, 0xcd, 0x19, 
-	0x63, 0x5b, 0x84, 0x21, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x73, 0x9d, 0x73, 0x9d, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x6b, 0x5b, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x41, 0xc9, 
-	0x39, 0x47, 0x4a, 0x51, 0x9c, 0x57, 0xd5, 0x19, 
-	0xed, 0xdd, 0xf6, 0xe5, 0xd5, 0x19, 0xc4, 0x93, 
-	0x8c, 0x1d, 0x73, 0x9f, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x6b, 0x9d, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x63, 0x1b, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x83, 0x0f, 0x72, 0xcd, 0xb4, 0x9b, 0xc4, 0xd9, 
-	0xd5, 0x19, 0xf7, 0x69, 0xe5, 0x9d, 0xb4, 0x0f, 
-	0x8c, 0x1d, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0x63, 0x19, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x83, 0x0f, 0x62, 0x8d, 0x6a, 0xcf, 0xac, 0x97, 
-	0xb4, 0x95, 0xe6, 0x23, 0xe5, 0x9d, 0xb4, 0x0f, 
-	0x8c, 0x1d, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x39, 0x89, 0x5a, 0x4b, 0x62, 0x8d, 0x73, 0x0f, 
-	0x9c, 0x13, 0xac, 0x55, 0xbc, 0x99, 0x9c, 0x15, 
-	0xb4, 0xdb, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0x41, 0xcb, 
-	0x39, 0x89, 0x52, 0x0b, 0x5a, 0x4b, 0x5a, 0x4d, 
-	0x83, 0x51, 0xa4, 0x55, 0x93, 0xd3, 0x9c, 0x15, 
-	0xb4, 0xdb, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	
-};
-
-Gfx supergoomb__41A41EE3_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__41A41EE3_c_rgba16[] = {
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 
-	0x18, 0x85, 0x41, 0xcf, 0x7b, 0x9d, 0xa5, 0x27, 
-	0xc6, 0x31, 0xb5, 0x6b, 0x94, 0xa5, 0x7b, 0x9d, 
-	
-};
-
-Gfx supergoomb__1FAAE88D_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__1FAAE88D_c_rgba16[] = {
-	0x91, 0x01, 0xdb, 0xcd, 0xdb, 0xcd, 0xaa, 0x01, 
-	0x99, 0x81, 0x91, 0x41, 0xaa, 0x41, 0xc3, 0x07, 
-	0x91, 0x81, 0x99, 0xc1, 0xba, 0xc5, 0x91, 0x81, 
-	0x89, 0x41, 0x89, 0x01, 0x88, 0xc1, 0x91, 0x41, 
-	0xdc, 0x0f, 0xc3, 0x07, 0xc3, 0x05, 0xba, 0xc5, 
-	0xd3, 0xcb, 0xdc, 0x0f, 0xe4, 0x4f, 0xba, 0xc3, 
-	0xaa, 0x41, 0xba, 0xc5, 0xa2, 0x01, 0x91, 0x41, 
-	0xa2, 0x01, 0xaa, 0x43, 0x99, 0xc1, 0x91, 0x41, 
-	0x80, 0xc1, 0xd3, 0xcd, 0xf5, 0x5b, 0xe4, 0x93, 
-	0xcb, 0x4b, 0xcb, 0x8b, 0xba, 0xc5, 0xba, 0xc5, 
-	0x99, 0x81, 0xaa, 0x41, 0x91, 0x41, 0x89, 0x01, 
-	0x88, 0xc1, 0x88, 0xc1, 0x89, 0x01, 0x91, 0x41, 
-	0xcb, 0x49, 0xec, 0x93, 0xec, 0x93, 0xec, 0x93, 
-	0xe4, 0x51, 0xdc, 0x0d, 0xdc, 0x0f, 0xb2, 0xc5, 
-	0xcb, 0x49, 0xc3, 0x49, 0xba, 0xc5, 0xa1, 0xc1, 
-	0x91, 0x81, 0x89, 0x01, 0x88, 0xc1, 0x88, 0xc1, 
-	0x80, 0xc1, 0xa2, 0x01, 0xb2, 0x83, 0xcb, 0x49, 
-	0xf5, 0x9d, 0xf5, 0xdf, 0xf5, 0x59, 0xa2, 0x01, 
-	0x91, 0x41, 0x91, 0x41, 0x91, 0x41, 0x89, 0x01, 
-	0x89, 0x01, 0x89, 0x01, 0x91, 0x81, 0xa2, 0x01, 
-	0xa2, 0x01, 0xc3, 0x47, 0xd3, 0x8b, 0xc3, 0x07, 
-	0xdb, 0xcb, 0xec, 0x51, 0xb2, 0x83, 0x89, 0x01, 
-	0x91, 0x41, 0x89, 0x01, 0x91, 0x41, 0x99, 0x81, 
-	0x91, 0x81, 0x91, 0x41, 0x89, 0x01, 0x91, 0x41, 
-	0x88, 0xc1, 0x91, 0x41, 0xcb, 0x49, 0xa1, 0xc1, 
-	0xe4, 0x0d, 0xf6, 0x21, 0xec, 0x95, 0x91, 0x81, 
-	0x91, 0x41, 0x91, 0x41, 0x91, 0x81, 0x89, 0x01, 
-	0x89, 0x01, 0x89, 0x01, 0x99, 0xc1, 0xa2, 0x01, 
-	0xb2, 0x41, 0xb2, 0x81, 0xb2, 0x41, 0xb2, 0x83, 
-	0xcb, 0x49, 0xcb, 0x4b, 0xdc, 0x0f, 0xe4, 0x0f, 
-	0xba, 0xc5, 0x99, 0x81, 0x91, 0x41, 0x89, 0x01, 
-	0x99, 0x81, 0x91, 0x81, 0x91, 0x01, 0x91, 0x01, 
-	0x91, 0x41, 0xba, 0x83, 0xc3, 0x07, 0xd3, 0x8b, 
-	0xcb, 0x49, 0xb2, 0x83, 0x91, 0x41, 0x89, 0x01, 
-	0x89, 0x01, 0x91, 0x01, 0x91, 0x41, 0x89, 0x01, 
-	0x89, 0x01, 0x91, 0x41, 0xaa, 0x41, 0xba, 0xc5, 
-	0xcb, 0x49, 0xb2, 0x83, 0x99, 0xc1, 0xba, 0xc5, 
-	0x91, 0x41, 0x89, 0x41, 0x91, 0x81, 0xaa, 0x85, 
-	0xe4, 0x51, 0xcb, 0x49, 0xaa, 0x41, 0x99, 0xc1, 
-	0x91, 0x41, 0x89, 0x01, 0x89, 0x01, 0x89, 0x01, 
-	0x99, 0x81, 0xc3, 0x07, 0x99, 0x81, 0xb2, 0x83, 
-	0xf5, 0x9b, 0x99, 0x81, 0x78, 0x81, 0x88, 0xc1, 
-	0x80, 0xc1, 0x91, 0x41, 0x99, 0xc1, 0x91, 0x81, 
-	0x99, 0xc1, 0xaa, 0x83, 0x99, 0xc1, 0x99, 0xc1, 
-	0x91, 0x41, 0x91, 0x41, 0x99, 0xc1, 0x91, 0x81, 
-	0x88, 0xc1, 0x91, 0x41, 0x89, 0x01, 0x88, 0xc1, 
-	0x99, 0xc1, 0xb2, 0x83, 0xa2, 0x01, 0x91, 0x41, 
-	0x91, 0x41, 0x91, 0x41, 0x89, 0x01, 0x88, 0xc1, 
-	0x91, 0x41, 0x91, 0x41, 0xa1, 0xc1, 0xaa, 0x01, 
-	0xd3, 0x8b, 0xb2, 0x83, 0x88, 0xc1, 0x88, 0xc1, 
-	0xaa, 0x41, 0xa1, 0xc1, 0x99, 0x81, 0xb2, 0x83, 
-	0xaa, 0x41, 0xaa, 0x83, 0x99, 0xc1, 0x91, 0x81, 
-	0x91, 0x01, 0x99, 0xc1, 0xba, 0xc5, 0x91, 0x41, 
-	0x91, 0x01, 0x91, 0x81, 0x91, 0x01, 0x88, 0xc1, 
-	0x89, 0x01, 0x91, 0x41, 0x89, 0x01, 0x89, 0x01, 
-	0x89, 0x01, 0x91, 0x41, 0x91, 0x81, 0x91, 0x81, 
-	0xdb, 0xcd, 0xc3, 0x05, 0xba, 0xc5, 0xc3, 0x05, 
-	0xaa, 0x01, 0xba, 0xc5, 0xa2, 0x01, 0x99, 0xc1, 
-	0xe4, 0x51, 0xcb, 0x49, 0xba, 0xc5, 0xaa, 0x01, 
-	0xc3, 0x07, 0xc3, 0x09, 0x99, 0xc1, 0x88, 0xc1, 
-	0xb2, 0x83, 0xa1, 0xc1, 0x91, 0x81, 0x99, 0xc1, 
-	0x91, 0x81, 0x91, 0x41, 0x91, 0x81, 0x91, 0x41, 
-	0x89, 0x01, 0x89, 0x01, 0x89, 0x01, 0x91, 0x01, 
-	0x91, 0x01, 0x91, 0x81, 0xaa, 0x41, 0xd3, 0x8b, 
-	0xc2, 0xc5, 0xe4, 0x0f, 0xf4, 0x95, 0xec, 0x51, 
-	0xa1, 0xc1, 0x89, 0x01, 0xb2, 0x83, 0xd3, 0x8b, 
-	0xcb, 0x8b, 0xcb, 0x4b, 0xcb, 0x49, 0xc3, 0x49, 
-	0xd3, 0x8b, 0xc3, 0x07, 0xaa, 0x43, 0xaa, 0x41, 
-	0xb2, 0x83, 0xa1, 0xc1, 0xa2, 0x01, 0xc3, 0x07, 
-	0xba, 0xc5, 0xaa, 0x41, 0x99, 0x81, 0x91, 0x41, 
-	0x89, 0x01, 0x89, 0x01, 0x89, 0x01, 0x99, 0xc1, 
-	0xba, 0xc5, 0xc3, 0x07, 0xd3, 0xcd, 0xc3, 0x47, 
-	0xcb, 0x49, 0xdb, 0xcd, 0xec, 0x91, 0xe4, 0x0f, 
-	0xaa, 0x43, 0x80, 0x81, 0x80, 0xc1, 0x99, 0x81, 
-	0xd3, 0xcd, 0xec, 0x93, 0xba, 0xc7, 0xcb, 0x49, 
-	0xb2, 0xc5, 0xc3, 0x07, 0xf4, 0x95, 0xf5, 0x9d, 
-	0xb2, 0x83, 0xc3, 0x07, 0xd3, 0xcd, 0x99, 0xc1, 
-	0xaa, 0x41, 0xcb, 0x49, 0xa2, 0x01, 0x91, 0x41, 
-	0x88, 0xc1, 0x89, 0x01, 0x89, 0x01, 0xc3, 0x07, 
-	0xf4, 0xd7, 0xec, 0x93, 0xdc, 0x0f, 0xcb, 0x49, 
-	0xec, 0x51, 0xe4, 0x4f, 0xe4, 0x51, 0xec, 0x95, 
-	0x91, 0x81, 0x80, 0x81, 0x80, 0xc1, 0xa1, 0xc1, 
-	0xba, 0xc5, 0xc3, 0x07, 0xb2, 0x83, 0xaa, 0x01, 
-	0xb2, 0x43, 0xcb, 0x49, 0xb2, 0x83, 0xcb, 0x47, 
-	0xcb, 0x49, 0xd3, 0x8b, 0x99, 0xc1, 0x91, 0x01, 
-	0x91, 0x01, 0x91, 0x41, 0xa2, 0x01, 0x99, 0xc1, 
-	0x91, 0x01, 0x89, 0x01, 0xa2, 0x01, 0xcb, 0x47, 
-	0xaa, 0x41, 0xc3, 0x07, 0xcb, 0x49, 0xcb, 0x49, 
-	0xcb, 0x89, 0xc3, 0x07, 0xd3, 0xcb, 0xb2, 0x41, 
-	0x88, 0xc1, 0x88, 0xc1, 0xaa, 0x41, 0xd3, 0xcd, 
-	0xc3, 0x07, 0xc3, 0x07, 0xcb, 0x49, 0x91, 0x41, 
-	0xba, 0x85, 0xba, 0xc5, 0xaa, 0x01, 0xc2, 0xc5, 
-	0xcb, 0x49, 0x91, 0x41, 0x80, 0x81, 0x91, 0x41, 
-	0x89, 0x01, 0x91, 0x01, 0xb2, 0x83, 0xaa, 0x41, 
-	0x91, 0x41, 0x88, 0xc1, 0x91, 0x41, 0xaa, 0x41, 
-	0xaa, 0x41, 0xc3, 0x07, 0xd3, 0x8b, 0xcb, 0x49, 
-	0xb2, 0x83, 0xc3, 0x07, 0xba, 0xc3, 0x99, 0xc1, 
-	0x80, 0xc1, 0xa1, 0xc1, 0xcb, 0x49, 0xa2, 0x01, 
-	0xb2, 0xc5, 0xf4, 0xd7, 0xc3, 0x47, 0xb2, 0xc5, 
-	0xd3, 0x8d, 0xcb, 0x49, 0xe4, 0x51, 0xd3, 0xcd, 
-	0xa2, 0x01, 0xa2, 0x01, 0x91, 0x81, 0xa1, 0xc1, 
-	0xa1, 0xc1, 0x99, 0xc1, 0x99, 0x81, 0x91, 0x81, 
-	0x91, 0x01, 0x88, 0xc1, 0xaa, 0x01, 0xd3, 0xcb, 
-	0xd3, 0x8b, 0xd3, 0xcb, 0xc2, 0xc7, 0xc3, 0x07, 
-	0xcb, 0x49, 0xc3, 0x07, 0xaa, 0x01, 0x91, 0x81, 
-	0x91, 0x41, 0xc3, 0x07, 0xc3, 0x07, 0xb2, 0x41, 
-	0xcb, 0x49, 0xd3, 0x8b, 0xb2, 0xc5, 0xc3, 0x09, 
-	0xd3, 0xcd, 0xec, 0x93, 0xe4, 0x93, 0xc3, 0x49, 
-	0x91, 0x81, 0x99, 0x81, 0x99, 0xc1, 0xaa, 0x41, 
-	0xaa, 0x43, 0xa2, 0x01, 0xa2, 0x01, 0x99, 0xc1, 
-	0xa2, 0x01, 0xa2, 0x01, 0xec, 0x93, 0xd3, 0x8b, 
-	0xba, 0xc5, 0xcb, 0x89, 0xdb, 0xcd, 0xc3, 0x07, 
-	0xdc, 0x0f, 0xb2, 0x83, 0xc3, 0x05, 0xaa, 0x01, 
-	0xba, 0xc5, 0xd3, 0xcd, 0xcb, 0x8b, 0xd3, 0x8b, 
-	0xbb, 0x07, 0xc3, 0x07, 0xaa, 0x83, 0xd3, 0xcd, 
-	0xf5, 0x19, 0xf5, 0x9d, 0xf5, 0x19, 0xf5, 0x5b, 
-	0xc3, 0x49, 0x99, 0xc1, 0xaa, 0x01, 0x91, 0x81, 
-	0x91, 0x41, 0x99, 0xc1, 0x91, 0x81, 0x91, 0x41, 
-	0xa2, 0x01, 0xba, 0xc5, 0xe4, 0x0f, 0xc3, 0x07, 
-	0xb2, 0x83, 0xc2, 0xc5, 0xba, 0xc5, 0xd3, 0xcd, 
-	0xcb, 0x49, 0xdb, 0xcd, 0xd3, 0x8b, 0xb2, 0x83, 
-	0xba, 0xc5, 0xd3, 0x8d, 0xe4, 0x53, 0xdc, 0x51, 
-	0xd3, 0xcd, 0xaa, 0x41, 0xb2, 0x85, 0xd3, 0xcf, 
-	0xf4, 0xd5, 0xf5, 0x19, 0xf5, 0x5b, 0xf4, 0x95, 
-	0xdb, 0xcd, 0xb2, 0x85, 0xa2, 0x01, 0x91, 0x81, 
-	0x99, 0xc1, 0xaa, 0x41, 0x91, 0x41, 0x89, 0x01, 
-	0x99, 0xc1, 0xcb, 0x49, 0xba, 0xc5, 0xb2, 0x83, 
-	0xbb, 0x07, 0xb2, 0x41, 0xba, 0xc5, 0xcb, 0x89, 
-	0xaa, 0x41, 0xcb, 0x89, 0xaa, 0x41, 0x91, 0x41, 
-	0xa2, 0x01, 0xb2, 0xc5, 0xd3, 0xcf, 0xcb, 0x8d, 
-	0x91, 0x41, 0x91, 0x81, 0xa2, 0x01, 0xb2, 0xc5, 
-	0xdc, 0x0f, 0xf4, 0x97, 0xdc, 0x51, 0xcb, 0x8d, 
-	0xb2, 0x85, 0xa2, 0x01, 0x91, 0x41, 0xb2, 0x83, 
-	0xba, 0xc7, 0xba, 0x83, 0x99, 0xc1, 0x91, 0x41, 
-	0xa2, 0x01, 0xb2, 0x83, 0x91, 0x81, 0xaa, 0x41, 
-	0xa2, 0x01, 0xaa, 0x41, 0x99, 0xc1, 0x88, 0xc1, 
-	0x88, 0xc1, 0xa2, 0x01, 0x99, 0xc1, 0x91, 0x81, 
-	0x91, 0x41, 0x9a, 0x01, 0xb2, 0xc5, 0x99, 0x81, 
-	0x99, 0xc1, 0x99, 0xc1, 0xaa, 0x41, 0xba, 0xc5, 
-	0xb2, 0xc5, 0xc3, 0x49, 0xb2, 0xc5, 0x99, 0xc1, 
-	0x91, 0x81, 0x91, 0x81, 0xb2, 0x83, 0xd3, 0xcd, 
-	0xe4, 0x95, 0xd3, 0x8b, 0xaa, 0x83, 0x99, 0x81, 
-	0xa2, 0x01, 0xb2, 0x83, 0xa2, 0x01, 0x89, 0x01, 
-	0x99, 0xc1, 0xaa, 0x41, 0x91, 0x81, 0x91, 0x01, 
-	0x91, 0x81, 0xa2, 0x01, 0x99, 0xc1, 0x91, 0x41, 
-	0x89, 0x41, 0x89, 0x01, 0x89, 0x01, 0xa2, 0x01, 
-	0xba, 0xc5, 0x99, 0xc1, 0x99, 0xc1, 0xb2, 0xc5, 
-	0xa2, 0x41, 0x99, 0xc1, 0x91, 0x41, 0x91, 0x81, 
-	0x9a, 0x01, 0xba, 0xc5, 0xc3, 0x49, 0xdc, 0x0f, 
-	0xec, 0x93, 0xd4, 0x0f, 0xb2, 0x83, 0x91, 0x81, 
-	0x91, 0x81, 0xaa, 0x83, 0x91, 0x81, 0xa1, 0xc1, 
-	0xcb, 0x49, 0xb2, 0xc5, 0x91, 0x41, 0x91, 0x41, 
-	0x99, 0xc1, 0xb2, 0x85, 0xa2, 0x01, 0x91, 0x81, 
-	0x89, 0x01, 0x89, 0x01, 0x91, 0x41, 0xaa, 0x83, 
-	0x99, 0x81, 0x91, 0x41, 0xaa, 0x41, 0x91, 0x81, 
-	0x91, 0x81, 0x91, 0x41, 0x91, 0x41, 0x89, 0x01, 
-	0xaa, 0x41, 0xcb, 0x8b, 0xba, 0xc5, 0xcb, 0x49, 
-	0xc3, 0x47, 0xc3, 0x09, 0xaa, 0x41, 0x91, 0x81, 
-	0x91, 0x41, 0x91, 0x41, 0x91, 0x81, 0xc3, 0x07, 
-	0xcb, 0x49, 0x99, 0xc1, 0x91, 0x41, 0x89, 0x01, 
-	0xb2, 0x83, 0xa2, 0x01, 0xba, 0x83, 0x99, 0xc1, 
-	0x89, 0x01, 0x88, 0xc1, 0xaa, 0x41, 0x91, 0xc1, 
-	0x91, 0x41, 0x99, 0xc1, 0xc3, 0x09, 0x99, 0xc1, 
-	0x99, 0xc1, 0x91, 0x81, 0x91, 0x81, 0xa2, 0x01, 
-	0xbb, 0x07, 0xb2, 0x83, 0xb2, 0x83, 0xb2, 0x83, 
-	0x99, 0xc1, 0x99, 0xc1, 0xb2, 0x85, 0xb2, 0x83, 
-	0x91, 0x81, 0x91, 0x81, 0xa2, 0x01, 0xaa, 0x41, 
-	0xa2, 0x01, 0x89, 0x01, 0xaa, 0x43, 0xba, 0xc5, 
-	0xba, 0xc5, 0xa1, 0xc1, 0xaa, 0x41, 0x99, 0xc1, 
-	0x89, 0x01, 0x99, 0xc1, 0xaa, 0x43, 0x89, 0x01, 
-	0x91, 0x41, 0x91, 0x41, 0x99, 0x81, 0xa2, 0x01, 
-	0xaa, 0x41, 0x91, 0x81, 0x91, 0x41, 0xba, 0xc5, 
-	0xc3, 0x07, 0xcb, 0x49, 0xd3, 0xcd, 0xb2, 0x83, 
-	0x91, 0x81, 0x91, 0x81, 0x99, 0x81, 0x99, 0xc1, 
-	0xaa, 0x43, 0xaa, 0x01, 0x99, 0xc1, 0xaa, 0x41, 
-	0xa1, 0xc1, 0xb2, 0x41, 0xba, 0x85, 0xd3, 0x8b, 
-	0xb2, 0x83, 0xa2, 0x01, 0xa2, 0x01, 0x91, 0x41, 
-	0x91, 0x41, 0xba, 0xc5, 0x91, 0x81, 0x89, 0x01, 
-	0x91, 0x41, 0x91, 0x41, 0x91, 0x81, 0x91, 0x41, 
-	0x91, 0x41, 0x91, 0x41, 0x89, 0x01, 0xb2, 0x83, 
-	0xba, 0xc5, 0xcb, 0x49, 0xcb, 0x49, 0xa2, 0x01, 
-	0x99, 0x81, 0x99, 0xc1, 0x91, 0x41, 0x91, 0x41, 
-	0x91, 0x81, 0x91, 0x81, 0xaa, 0x41, 0xa2, 0x01, 
-	0xa2, 0x01, 0xb2, 0x83, 0xaa, 0x41, 0xb2, 0x83, 
-	0x99, 0xc1, 0xb2, 0x83, 0xaa, 0x41, 0x91, 0x81, 
-	0xba, 0xc7, 0x99, 0xc1, 0x89, 0x01, 0x91, 0x01, 
-	0x91, 0x41, 0x99, 0xc1, 0x99, 0xc1, 0x91, 0x41, 
-	0x89, 0x41, 0x89, 0x01, 0x89, 0x01, 0x99, 0xc1, 
-	0x99, 0x81, 0xba, 0xc5, 0xaa, 0x41, 0x91, 0x41, 
-	0x99, 0xc1, 0x91, 0x41, 0x91, 0x41, 0x91, 0x41, 
-	0x91, 0x81, 0xc3, 0x07, 0xdc, 0x0f, 0xaa, 0x43, 
-	0x99, 0xc1, 0x91, 0x81, 0x91, 0x41, 0xaa, 0x43, 
-	0x91, 0x41, 0x91, 0x81, 0x91, 0x81, 0xa2, 0x01, 
-	0x91, 0x81, 0x89, 0x01, 0x89, 0x01, 0x91, 0x41, 
-	0x91, 0x41, 0x91, 0x41, 0x89, 0x41, 0x91, 0x41, 
-	0x91, 0x41, 0x89, 0x01, 0x89, 0x01, 0x89, 0x01, 
-	0x91, 0x41, 0x99, 0xc1, 0x89, 0x01, 0x91, 0x41, 
-	0x91, 0x41, 0x91, 0x41, 0x91, 0x41, 0x91, 0x41, 
-	0x99, 0xc1, 0xcb, 0x49, 0xdb, 0xcd, 0xd3, 0xcd, 
-	0xa2, 0x01, 0x91, 0x01, 0x91, 0x41, 0xa2, 0x01, 
-	0x91, 0x41, 0x91, 0x41, 0x89, 0x01, 0x89, 0x41, 
-	0x89, 0x41, 0x89, 0x01, 0x91, 0x41, 0x91, 0x41, 
-	0x91, 0x41, 0x91, 0x81, 0x91, 0x81, 0x91, 0x41, 
-	0x91, 0x41, 0x89, 0x01, 0x89, 0x01, 0x89, 0x01, 
-	0x91, 0x01, 0x91, 0x81, 0x89, 0x01, 0x91, 0x41, 
-	0x91, 0x41, 0x91, 0x41, 0x91, 0x41, 0x91, 0x41, 
-	0xcb, 0x49, 0xec, 0x93, 0xec, 0x93, 0xf5, 0x59, 
-	0xec, 0x93, 0xaa, 0x01, 0x91, 0x01, 0x91, 0x81, 
-	0x91, 0x81, 0x91, 0x41, 0x91, 0x41, 0x91, 0x41, 
-	0x89, 0x01, 0x88, 0xc1, 0x88, 0xc1, 0x91, 0x41, 
-	0x91, 0x41, 0x91, 0x81, 0x91, 0x81, 0x91, 0x41, 
-	0x91, 0x01, 0x89, 0x01, 0x91, 0x41, 0x91, 0x41, 
-	0xa2, 0x01, 0x91, 0x81, 0x91, 0x01, 0xaa, 0x43, 
-	0xc3, 0x07, 0xb2, 0x81, 0xb2, 0x41, 0xd3, 0xcd, 
-	0xf5, 0x5b, 0xf5, 0x19, 0xec, 0x93, 0xdb, 0xcf, 
-	0xec, 0x93, 0xf4, 0x95, 0xb2, 0x85, 0x91, 0x81, 
-	0x91, 0x81, 0x91, 0x41, 0x91, 0x41, 0x91, 0x41, 
-	0x91, 0x01, 0x89, 0x01, 0x91, 0x41, 0x91, 0x01, 
-	0x91, 0x41, 0xaa, 0x01, 0xcb, 0x8b, 0xc3, 0x07, 
-	0xb2, 0x83, 0xa1, 0xc1, 0xa2, 0x01, 0xa2, 0x01, 
-	0xb2, 0x83, 0xaa, 0x41, 0xcb, 0x49, 0xd3, 0x8b, 
-	0xcb, 0x49, 0xc3, 0x07, 0xaa, 0x01, 0xd3, 0xcb, 
-	0xd3, 0x8b, 0xd3, 0xcd, 0xba, 0xc3, 0xa1, 0xc1, 
-	0xcb, 0x49, 0xf5, 0x9d, 0xf5, 0x5b, 0xba, 0xc5, 
-	0x89, 0x01, 0x91, 0x41, 0x91, 0x81, 0x91, 0x01, 
-	0x91, 0x01, 0x91, 0x01, 0x91, 0x81, 0x89, 0x01, 
-	0xb2, 0x83, 0xe4, 0x51, 0xdc, 0x0f, 0xec, 0x93, 
-	0xf5, 0x17, 0xdb, 0xcd, 0xc3, 0x07, 0xc3, 0x07, 
-	0xba, 0xc5, 0xd3, 0x8b, 0xcb, 0x49, 0xaa, 0x41, 
-	0xaa, 0x01, 0x91, 0xc1, 0x91, 0x81, 0xba, 0xc3, 
-	0xba, 0xc5, 0xba, 0xc5, 0xa1, 0xc1, 0xb2, 0x41, 
-	0xdc, 0x0f, 0xec, 0x93, 0xf6, 0x21, 0xc3, 0x49, 
-	0x91, 0x41, 0x91, 0x01, 0xaa, 0x41, 0x91, 0x81, 
-	0x91, 0x41, 0x88, 0xc1, 0x89, 0x01, 0x91, 0x41, 
-	0xcb, 0x8b, 0xe4, 0x51, 0xcb, 0x49, 0xe4, 0x51, 
-	0xcb, 0x49, 0xba, 0xc5, 0xd3, 0x8b, 0xd3, 0x8b, 
-	0xf4, 0xd7, 0xf5, 0x19, 0xf4, 0xd7, 0xdc, 0x0f, 
-	0xb2, 0x83, 0x99, 0xc1, 0xc3, 0x05, 0xcb, 0x49, 
-	0xb2, 0x83, 0xaa, 0x43, 0xcb, 0x89, 0xe4, 0x93, 
-	0xc3, 0x07, 0xaa, 0x01, 0xe4, 0x0f, 0xdc, 0x0f, 
-	0xd3, 0xcd, 0xba, 0xc5, 0xc3, 0x07, 0xaa, 0x43, 
-	0x89, 0x01, 0x89, 0x01, 0x89, 0x01, 0xa2, 0x01, 
-	0xec, 0x95, 0xd3, 0x8b, 0xc3, 0x07, 0xcb, 0x8b, 
-	0xb2, 0x83, 0xd3, 0x8b, 0xdc, 0x0f, 0xd3, 0x8b, 
-	0xf4, 0xd5, 0xb2, 0x83, 0x99, 0xc1, 0xa1, 0xc1, 
-	0xaa, 0x41, 0xc2, 0xc5, 0xcb, 0x49, 0xd3, 0xcd, 
-	0xd3, 0x8b, 0xcb, 0x89, 0xec, 0x91, 0xec, 0x93, 
-	0xb2, 0x83, 0x99, 0xc1, 0x91, 0x41, 0xb2, 0x83, 
-	0xb2, 0x83, 0xc3, 0x07, 0xb2, 0x83, 0xaa, 0x01, 
-	0x99, 0x81, 0x89, 0x01, 0xa1, 0xc1, 0xd3, 0xcd, 
-	0xba, 0xc7, 0x91, 0x81, 0xc3, 0x07, 0xcb, 0x49, 
-	0xb2, 0x83, 0x99, 0xc1, 0x91, 0x41, 0x91, 0x41, 
-	0xb2, 0x83, 0xaa, 0x01, 0x99, 0x81, 0x91, 0x01, 
-	0xaa, 0x01, 0xcb, 0x47, 0xc3, 0x07, 0xb2, 0x83, 
-	0xaa, 0x83, 0xba, 0x83, 0xaa, 0x41, 0x91, 0x81, 
-	0xba, 0xc5, 0xec, 0x93, 0xba, 0x83, 0x99, 0xc1, 
-	
-};
-
-Gfx supergoomb__359289F2_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__359289F2_c_rgba16[] = {
-	0x52, 0x0f, 0x8b, 0x11, 0x93, 0x51, 0x93, 0x51, 
-	0x93, 0x51, 0x9b, 0x93, 0xa3, 0xd3, 0x9b, 0x51, 
-	0xa3, 0x93, 0xa3, 0xd3, 0x8b, 0x11, 0x93, 0x11, 
-	0xab, 0xd1, 0xab, 0x91, 0xab, 0xd1, 0xb3, 0xd3, 
-	0xb3, 0xd1, 0xb3, 0xd1, 0xb4, 0x13, 0xb3, 0xd3, 
-	0xab, 0x91, 0x82, 0x8f, 0x9b, 0x0f, 0xab, 0x4f, 
-	0xa3, 0x4f, 0xab, 0x8f, 0xab, 0xd1, 0xab, 0xd1, 
-	0xa3, 0x8f, 0xa3, 0x91, 0xa3, 0x91, 0x83, 0x11, 
-	0x39, 0x05, 0x7a, 0x49, 0x8a, 0x89, 0x82, 0x89, 
-	0x8a, 0x89, 0x92, 0xc9, 0x9b, 0x0b, 0x92, 0x89, 
-	0x9b, 0x0b, 0x9b, 0x0b, 0x7a, 0x07, 0x8a, 0x47, 
-	0xa3, 0x09, 0xa3, 0x09, 0xa3, 0x09, 0xab, 0x4b, 
-	0xa2, 0xc7, 0xa2, 0xc9, 0xab, 0x4d, 0xab, 0x0b, 
-	0xa2, 0xc9, 0x71, 0xc5, 0x92, 0x45, 0x9a, 0x85, 
-	0x9a, 0x85, 0x9a, 0x87, 0xa3, 0x09, 0xa3, 0x09, 
-	0x9a, 0xc7, 0x92, 0xc7, 0x9a, 0xc9, 0x6a, 0x09, 
-	0x49, 0x47, 0x8a, 0x8b, 0x92, 0xcb, 0x92, 0xcb, 
-	0x92, 0xcb, 0x92, 0xcb, 0xa3, 0x4d, 0x92, 0xc9, 
-	0x9b, 0x0d, 0x9b, 0x0b, 0x82, 0x49, 0x8a, 0x89, 
-	0xab, 0x4b, 0xa3, 0x0b, 0xab, 0x0b, 0xab, 0x4d, 
-	0xa2, 0xc9, 0xab, 0x0b, 0xb3, 0x8d, 0xab, 0x4b, 
-	0xa3, 0x09, 0x79, 0xc7, 0x92, 0x45, 0xa2, 0xc7, 
-	0x9a, 0x85, 0xa2, 0xc7, 0xab, 0x0b, 0xa3, 0x09, 
-	0xa3, 0x09, 0x9a, 0xc9, 0x9b, 0x09, 0x72, 0x4b, 
-	0x51, 0x89, 0x8a, 0xcd, 0x92, 0xcb, 0x92, 0xcb, 
-	0x92, 0xcb, 0x92, 0xcb, 0xa3, 0x4d, 0x9a, 0xcb, 
-	0xa3, 0x4d, 0xa3, 0x4d, 0x8a, 0x8b, 0x92, 0x89, 
-	0xb3, 0x4b, 0xab, 0x4b, 0xa3, 0x0b, 0xab, 0x4d, 
-	0xa3, 0x09, 0xab, 0x4b, 0xb3, 0x8f, 0xb3, 0x4b, 
-	0xab, 0x09, 0x82, 0x07, 0x9a, 0x45, 0xaa, 0xc7, 
-	0xa2, 0x85, 0xa2, 0xc7, 0xab, 0x09, 0xa3, 0x09, 
-	0xa3, 0x09, 0xa3, 0x09, 0xa3, 0x09, 0x7a, 0x4b, 
-	0x61, 0xc9, 0x93, 0x0d, 0x92, 0xcb, 0x92, 0xcb, 
-	0x93, 0x0b, 0x9a, 0xcb, 0xa3, 0x4d, 0xa3, 0x0b, 
-	0xab, 0x8d, 0xab, 0x4d, 0x92, 0x8b, 0x92, 0xc9, 
-	0xb3, 0x4b, 0xb3, 0x4b, 0xab, 0x4b, 0xb3, 0x8d, 
-	0xab, 0x4b, 0xb3, 0x4d, 0xbb, 0xcf, 0xbb, 0x8b, 
-	0xab, 0x07, 0x82, 0x07, 0x9a, 0x85, 0xaa, 0xc7, 
-	0xa2, 0xc5, 0xa2, 0xc7, 0xab, 0x0b, 0xab, 0x49, 
-	0xab, 0x4b, 0xa3, 0x09, 0xa3, 0x09, 0x82, 0x8b, 
-	0x61, 0xc9, 0x93, 0x0d, 0x92, 0xcb, 0x93, 0x0b, 
-	0x9b, 0x0b, 0x9a, 0xcb, 0xa3, 0x4d, 0xa3, 0x4d, 
-	0xab, 0x8d, 0xab, 0x8d, 0x92, 0xcb, 0x92, 0xc9, 
-	0xbb, 0x8b, 0xb3, 0x4b, 0xb3, 0x4b, 0xbb, 0xcd, 
-	0xab, 0x0b, 0xb3, 0x4d, 0xc3, 0xcf, 0xbb, 0x8b, 
-	0xab, 0x07, 0x8a, 0x07, 0xa2, 0x85, 0xb3, 0x07, 
-	0xaa, 0xc5, 0xab, 0x07, 0xb3, 0x4b, 0xab, 0x4b, 
-	0xab, 0x4b, 0xab, 0x09, 0xa3, 0x09, 0x82, 0x8b, 
-	0x61, 0xc9, 0x93, 0x0d, 0x93, 0x0b, 0x9b, 0x0b, 
-	0x9b, 0x0b, 0x9b, 0x0b, 0xab, 0x8d, 0xab, 0x4d, 
-	0xb3, 0x8d, 0xb3, 0x8d, 0x92, 0xcb, 0x9a, 0xc9, 
-	0xbb, 0x8b, 0xbb, 0x8b, 0xbb, 0x8b, 0xc4, 0x0f, 
-	0xb3, 0x8f, 0xbb, 0xcf, 0xc3, 0xcf, 0xbb, 0x8b, 
-	0xb3, 0x07, 0x8a, 0x07, 0xa2, 0x85, 0xb3, 0x07, 
-	0xb2, 0xc7, 0xb3, 0x07, 0xbb, 0x8b, 0xb3, 0x4b, 
-	0xab, 0x4b, 0xab, 0x09, 0xab, 0x09, 0x8a, 0x8b, 
-	0x69, 0xc9, 0x93, 0x0d, 0x93, 0x0d, 0x9b, 0x0b, 
-	0x9b, 0x0b, 0xa3, 0x0b, 0xb3, 0x8f, 0xb3, 0x8d, 
-	0xb3, 0x8f, 0xab, 0x8d, 0x9b, 0x0b, 0x9a, 0xc9, 
-	0xc3, 0x8b, 0xbb, 0x8d, 0xbb, 0x8d, 0xcc, 0x0f, 
-	0xc4, 0x11, 0xc4, 0x11, 0xc3, 0xcf, 0xc3, 0x8b, 
-	0xb3, 0x07, 0x92, 0x47, 0xa2, 0x85, 0xbb, 0x07, 
-	0xbb, 0x07, 0xb3, 0x07, 0xbb, 0x8b, 0xb3, 0x4b, 
-	0xb3, 0x4b, 0xb3, 0x49, 0xab, 0x09, 0x8a, 0x8b, 
-	0x72, 0x09, 0x93, 0x0d, 0x9b, 0x0d, 0xa3, 0x0b, 
-	0xa3, 0x4d, 0xa3, 0x0b, 0xbb, 0xcf, 0xbb, 0xcf, 
-	0xb3, 0xcf, 0xab, 0x4d, 0x9a, 0xcb, 0xa2, 0xc9, 
-	0xc3, 0x8b, 0xbb, 0xcd, 0xc3, 0x8d, 0xcc, 0x0f, 
-	0xcc, 0x53, 0xcc, 0x51, 0xc3, 0xcf, 0xc3, 0x8b, 
-	0xbb, 0x07, 0x92, 0x47, 0xaa, 0x85, 0xc3, 0x47, 
-	0xbb, 0x07, 0xb3, 0x07, 0xc3, 0xcb, 0xbb, 0x8b, 
-	0xb3, 0x4b, 0xb3, 0x49, 0xb3, 0x49, 0x8a, 0x8b, 
-	0x72, 0x09, 0x93, 0x4f, 0x9b, 0x0d, 0xa3, 0x4d, 
-	0xab, 0x4d, 0xab, 0x4b, 0xbb, 0xcf, 0xbb, 0xcf, 
-	0xbb, 0xcf, 0xb3, 0x8d, 0x9b, 0x0b, 0xa2, 0xc9, 
-	0xc3, 0x89, 0xc3, 0xcd, 0xc3, 0xcd, 0xd4, 0x0f, 
-	0xd4, 0x93, 0xd4, 0x51, 0xc3, 0xcf, 0xc3, 0x8b, 
-	0xbb, 0x07, 0x92, 0x47, 0xb2, 0xc5, 0xc3, 0x47, 
-	0xc3, 0x47, 0xbb, 0x47, 0xc3, 0xcb, 0xbb, 0x8b, 
-	0xbb, 0x8b, 0xb3, 0x49, 0xb3, 0x49, 0x92, 0xcb, 
-	0x7a, 0x49, 0x9b, 0x4f, 0xa3, 0x4d, 0xab, 0x4d, 
-	0xab, 0x8d, 0xab, 0x4d, 0xbb, 0xcf, 0xc4, 0x0f, 
-	0xc4, 0x0f, 0xc3, 0xcf, 0xab, 0x0b, 0xab, 0x09, 
-	0xcb, 0x8b, 0xcb, 0xcd, 0xcb, 0xcd, 0xd4, 0x4f, 
-	0xdc, 0x93, 0xd4, 0x4f, 0xc3, 0xcf, 0xc3, 0x8b, 
-	0xbb, 0x07, 0x9a, 0x87, 0xb2, 0xc5, 0xc3, 0x47, 
-	0xc3, 0x47, 0xc3, 0x49, 0xcb, 0xcd, 0xc3, 0x8b, 
-	0xc3, 0x8b, 0xbb, 0x49, 0xbb, 0x4b, 0x92, 0xcb, 
-	0x7a, 0x09, 0x9b, 0x4d, 0xa3, 0x0b, 0xa3, 0x4d, 
-	0xab, 0x8d, 0xb3, 0x8d, 0xc4, 0x0f, 0xcc, 0x0f, 
-	0xcc, 0x51, 0xc3, 0xcf, 0xab, 0x4b, 0xab, 0x09, 
-	0xcb, 0xcb, 0xcb, 0xcd, 0xcb, 0xcd, 0xd4, 0x0f, 
-	0xdc, 0x91, 0xdc, 0x4f, 0xcc, 0x0f, 0xcb, 0x8b, 
-	0xc3, 0x07, 0x9a, 0x87, 0xba, 0xc5, 0xcb, 0x87, 
-	0xcb, 0x89, 0xc3, 0x49, 0xcb, 0xcd, 0xc3, 0xcb, 
-	0xc3, 0xcb, 0xbb, 0x49, 0xbb, 0x49, 0x92, 0xcd, 
-	0x7a, 0x09, 0x9b, 0x4d, 0xa3, 0x4d, 0xab, 0x8d, 
-	0xb3, 0x8d, 0xb3, 0x8d, 0xc3, 0xcf, 0xcc, 0x51, 
-	0xcc, 0x51, 0xc4, 0x0f, 0xb3, 0x4d, 0xb3, 0x09, 
-	0xd3, 0xcb, 0xcc, 0x0d, 0xd4, 0x0d, 0xd4, 0x51, 
-	0xdc, 0x91, 0xdc, 0x4f, 0xd4, 0x0f, 0xcb, 0xcb, 
-	0xc3, 0x47, 0xa2, 0x87, 0xba, 0xc5, 0xd3, 0xc9, 
-	0xd3, 0xc9, 0xcb, 0x89, 0xd4, 0x0d, 0xcb, 0xcb, 
-	0xcb, 0xcd, 0xc3, 0x89, 0xbb, 0x89, 0x93, 0x0d, 
-	0x7a, 0x09, 0x9b, 0x4d, 0xa3, 0x4d, 0xb3, 0x8d, 
-	0xbb, 0xcf, 0xbb, 0x8d, 0xc3, 0xcf, 0xcc, 0x51, 
-	0xd4, 0x51, 0xcc, 0x11, 0xbb, 0x8d, 0xb3, 0x09, 
-	0xd3, 0xcb, 0xd4, 0x0d, 0xdc, 0x4f, 0xdc, 0x51, 
-	0xe4, 0x91, 0xdc, 0x4f, 0xd4, 0x51, 0xd3, 0xcb, 
-	0xcb, 0x47, 0xa2, 0xc7, 0xbb, 0x05, 0xd3, 0xc7, 
-	0xd3, 0xc9, 0xcb, 0x89, 0xd4, 0x0d, 0xcb, 0xcb, 
-	0xd4, 0x0d, 0xc3, 0x8b, 0xc3, 0x8b, 0x9b, 0x0d, 
-	0x7a, 0x09, 0xa3, 0x4f, 0xab, 0x4d, 0xb3, 0x8f, 
-	0xbb, 0xcf, 0xbb, 0x8d, 0xcc, 0x0f, 0xd4, 0x91, 
-	0xd4, 0x93, 0xcc, 0x11, 0xbb, 0x8f, 0xb3, 0x4b, 
-	0xd4, 0x0b, 0xd4, 0x0d, 0xdc, 0x4f, 0xdc, 0x51, 
-	0xe4, 0x91, 0xdc, 0x51, 0xd4, 0x51, 0xd3, 0xcb, 
-	0xcb, 0x87, 0xa2, 0xc7, 0xc3, 0x05, 0xd3, 0xc7, 
-	0xd3, 0xc9, 0xcb, 0x89, 0xcc, 0x0d, 0xd4, 0x0d, 
-	0xd4, 0x4f, 0xc3, 0x8b, 0xc3, 0x89, 0x9b, 0x0d, 
-	0x82, 0x49, 0xa3, 0x4f, 0xab, 0x8d, 0xbb, 0x8f, 
-	0xbb, 0xcf, 0xbb, 0x8d, 0xcc, 0x0f, 0xdc, 0x93, 
-	0xdc, 0x93, 0xd4, 0x51, 0xc3, 0xcf, 0xbb, 0x8b, 
-	0xdc, 0x0b, 0xdc, 0x4d, 0xdc, 0x4f, 0xdc, 0x91, 
-	0xe4, 0x91, 0xdc, 0x4f, 0xd4, 0x4f, 0xd4, 0x0d, 
-	0xcb, 0x87, 0xa2, 0xc7, 0xc3, 0x05, 0xdb, 0xc9, 
-	0xdb, 0xc9, 0xcb, 0x89, 0xd4, 0x0d, 0xd4, 0x0d, 
-	0xdc, 0x4f, 0xcb, 0xcb, 0xcb, 0x89, 0xa3, 0x0d, 
-	0x82, 0x49, 0xab, 0x8f, 0xb3, 0x8f, 0xb3, 0x8f, 
-	0xbb, 0xcf, 0xc3, 0x8d, 0xcc, 0x11, 0xdc, 0x93, 
-	0xdc, 0x95, 0xd4, 0x51, 0xc3, 0xcf, 0xc3, 0x8b, 
-	0xdc, 0x0d, 0xdc, 0x4d, 0xdc, 0x4f, 0xe4, 0x91, 
-	0xdc, 0x91, 0xdc, 0x4f, 0xdc, 0x51, 0xdc, 0x0d, 
-	0xd3, 0xc9, 0xaa, 0xc7, 0xcb, 0x47, 0xdc, 0x09, 
-	0xdc, 0x0b, 0xcb, 0xc9, 0xd4, 0x0d, 0xd4, 0x0d, 
-	0xdc, 0x4d, 0xcb, 0xcb, 0xcb, 0xcb, 0xa3, 0x4d, 
-	0x8a, 0x49, 0xb3, 0x8f, 0xbb, 0xcf, 0xbb, 0x8f, 
-	0xc3, 0xcf, 0xc3, 0xcd, 0xcc, 0x51, 0xdc, 0x93, 
-	0xdc, 0x95, 0xd4, 0x51, 0xcb, 0xcd, 0xc3, 0xcb, 
-	0xe4, 0x4d, 0xdc, 0x4f, 0xdc, 0x4f, 0xe4, 0x91, 
-	0xdc, 0x93, 0xdc, 0x91, 0xdc, 0x91, 0xdc, 0x4f, 
-	0xdb, 0xc9, 0xb2, 0xc7, 0xcb, 0x87, 0xe4, 0x09, 
-	0xdc, 0x0b, 0xd3, 0xc9, 0xd4, 0x0d, 0xdc, 0x0d, 
-	0xdc, 0x4f, 0xcb, 0xcb, 0xcb, 0xcb, 0xab, 0x8f, 
-	0x8a, 0x49, 0xb3, 0x8f, 0xbb, 0xcf, 0xc3, 0xcf, 
-	0xc4, 0x0f, 0xcb, 0xcf, 0xd4, 0x51, 0xdc, 0x93, 
-	0xe4, 0x95, 0xdc, 0x51, 0xcb, 0xcd, 0xcb, 0xcb, 
-	0xe4, 0x4d, 0xe4, 0x8f, 0xe4, 0x91, 0xe4, 0x91, 
-	0xe4, 0x95, 0xdc, 0x91, 0xdc, 0x93, 0xe4, 0x4f, 
-	0xdc, 0x09, 0xb3, 0x07, 0xd3, 0x89, 0xe4, 0x09, 
-	0xe4, 0x4b, 0xd3, 0xc9, 0xdc, 0x4d, 0xd4, 0x0d, 
-	0xdc, 0x4f, 0xd3, 0xcb, 0xd3, 0xcb, 0xb3, 0x8f, 
-	0x8a, 0x49, 0xb3, 0x8f, 0xbb, 0xcf, 0xc3, 0xcf, 
-	0xcc, 0x0f, 0xcc, 0x0f, 0xd4, 0x51, 0xe4, 0x95, 
-	0xe4, 0x95, 0xdc, 0x93, 0xcb, 0xcd, 0xcb, 0xcb, 
-	0xe4, 0x8d, 0xe4, 0x8f, 0xe4, 0x91, 0xe4, 0x91, 
-	0xe4, 0x93, 0xdc, 0x93, 0xe4, 0x93, 0xe4, 0x8f, 
-	0xdc, 0x09, 0xbb, 0x07, 0xd3, 0xc9, 0xe4, 0x09, 
-	0xe4, 0x4b, 0xdc, 0x0b, 0xe4, 0x4d, 0xdc, 0x0b, 
-	0xdc, 0x4f, 0xd4, 0x0d, 0xd3, 0xcb, 0xb3, 0x8f, 
-	0x8a, 0x49, 0xb3, 0x8f, 0xbb, 0xcf, 0xc3, 0xcf, 
-	0xcc, 0x11, 0xc3, 0xcf, 0xdc, 0x51, 0xe4, 0x95, 
-	0xe4, 0x95, 0xdc, 0x93, 0xcb, 0xcd, 0xcb, 0xcb, 
-	0xe4, 0x8d, 0xe4, 0x4f, 0xe4, 0x91, 0xdc, 0x51, 
-	0xe4, 0x97, 0xe4, 0xd7, 0xe4, 0x93, 0xe4, 0x91, 
-	0xdc, 0x0b, 0xbb, 0x07, 0xdc, 0x09, 0xe4, 0x4b, 
-	0xe4, 0x4b, 0xdc, 0x0b, 0xe4, 0x4d, 0xdc, 0x4d, 
-	0xe4, 0x4d, 0xd4, 0x0d, 0xd4, 0x0b, 0xb3, 0xcf, 
-	0x8a, 0x49, 0xb3, 0xd1, 0xc3, 0xcf, 0xc4, 0x0f, 
-	0xcc, 0x11, 0xc3, 0xcf, 0xd4, 0x53, 0xe4, 0xd7, 
-	0xec, 0xd7, 0xdc, 0x93, 0xcb, 0xcd, 0xcb, 0xcd, 
-	0xe4, 0x8f, 0xdc, 0x4f, 0xe4, 0x91, 0xdc, 0x91, 
-	0xec, 0xd9, 0xec, 0xd7, 0xe4, 0x93, 0xec, 0x91, 
-	0xe4, 0x4b, 0xbb, 0x07, 0xdc, 0x0b, 0xe4, 0x8b, 
-	0xe4, 0x8d, 0xdc, 0x0b, 0xe4, 0x4d, 0xdc, 0x4d, 
-	0xe4, 0x4f, 0xdc, 0x0d, 0xdc, 0x0d, 0xbb, 0xcf, 
-	0x8a, 0x49, 0xbb, 0xd1, 0xc3, 0xcf, 0xc4, 0x0f, 
-	0xcc, 0x11, 0xcc, 0x0f, 0xd4, 0x53, 0xec, 0xd7, 
-	0xec, 0xd7, 0xe4, 0x93, 0xcc, 0x0f, 0xcb, 0xcd, 
-	0xe4, 0x8f, 0xe4, 0x8f, 0xe4, 0x91, 0xe4, 0x91, 
-	0xec, 0xd9, 0xec, 0xd7, 0xe4, 0x93, 0xe4, 0x91, 
-	0xe4, 0x4b, 0xbb, 0x47, 0xdc, 0x0b, 0xe4, 0x8b, 
-	0xe4, 0x8d, 0xdc, 0x0b, 0xe4, 0x4d, 0xe4, 0x8d, 
-	0xe4, 0x8f, 0xdc, 0x0d, 0xdc, 0x0d, 0xbb, 0xcf, 
-	0x92, 0x49, 0xbb, 0xd1, 0xc4, 0x11, 0xcc, 0x0f, 
-	0xcc, 0x51, 0xcc, 0x0f, 0xdc, 0x53, 0xec, 0xd7, 
-	0xec, 0xd9, 0xdc, 0x93, 0xcc, 0x0f, 0xd3, 0xcd, 
-	0xe4, 0x8f, 0xe4, 0x91, 0xe4, 0x93, 0xe4, 0x8f, 
-	0xec, 0xd7, 0xec, 0xd7, 0xe4, 0x93, 0xe4, 0x91, 
-	0xe4, 0x4b, 0xc3, 0x47, 0xdc, 0x0b, 0xe4, 0x8b, 
-	0xe4, 0x8d, 0xe4, 0x4d, 0xe4, 0x8f, 0xe4, 0x8f, 
-	0xe4, 0x91, 0xdc, 0x4d, 0xdc, 0x0d, 0xbb, 0xcf, 
-	0x92, 0x89, 0xbb, 0xd1, 0xc4, 0x11, 0xcc, 0x0f, 
-	0xd4, 0x51, 0xd4, 0x0f, 0xdc, 0x95, 0xec, 0xd9, 
-	0xec, 0xd9, 0xdc, 0x53, 0xcb, 0xcf, 0xd4, 0x0d, 
-	0xec, 0x8f, 0xe4, 0x91, 0xe4, 0x93, 0xe4, 0x91, 
-	0xec, 0x95, 0xec, 0xd7, 0xe4, 0x91, 0xec, 0x91, 
-	0xe4, 0x4d, 0xc3, 0x49, 0xdc, 0x0b, 0xe4, 0x8d, 
-	0xe4, 0x8f, 0xe4, 0x4d, 0xe4, 0x8f, 0xe4, 0x8f, 
-	0xec, 0x91, 0xdc, 0x4f, 0xdc, 0x0b, 0xbb, 0xcf, 
-	0x92, 0x89, 0xbb, 0xd1, 0xc4, 0x11, 0xcc, 0x0f, 
-	0xd4, 0x51, 0xcc, 0x0f, 0xdc, 0x95, 0xed, 0x19, 
-	0xed, 0x19, 0xdc, 0x93, 0xd4, 0x0f, 0xd4, 0x0d, 
-	0xec, 0x91, 0xe4, 0x91, 0xec, 0x93, 0xe4, 0x93, 
-	0xec, 0x95, 0xec, 0xd7, 0xe4, 0x91, 0xec, 0x93, 
-	0xe4, 0x4d, 0xc3, 0x49, 0xdc, 0x0b, 0xe4, 0x8d, 
-	0xec, 0x8f, 0xe4, 0x4d, 0xe4, 0x8f, 0xe4, 0x8f, 
-	0xe4, 0x91, 0xdc, 0x4f, 0xdc, 0x0d, 0xc4, 0x11, 
-	0x92, 0x89, 0xbb, 0xd1, 0xcc, 0x11, 0xcc, 0x0f, 
-	0xd4, 0x51, 0xcc, 0x11, 0xdc, 0x93, 0xec, 0xd9, 
-	0xed, 0x19, 0xe4, 0x93, 0xdc, 0x51, 0xd4, 0x0d, 
-	0xec, 0x8f, 0xec, 0x91, 0xec, 0x93, 0xec, 0x93, 
-	0xe4, 0x93, 0xec, 0xd7, 0xe4, 0x91, 0xec, 0x93, 
-	0xe4, 0x8d, 0xc3, 0x49, 0xdc, 0x0b, 0xe4, 0x8d, 
-	0xec, 0x8f, 0xe4, 0x4d, 0xe4, 0x8f, 0xe4, 0x8f, 
-	0xe4, 0x91, 0xe4, 0x4f, 0xdc, 0x0d, 0xc4, 0x11, 
-	0x92, 0x89, 0xbb, 0xd1, 0xcc, 0x11, 0xd4, 0x51, 
-	0xdc, 0x53, 0xd4, 0x11, 0xdc, 0x93, 0xec, 0xd7, 
-	0xed, 0x19, 0xe4, 0x93, 0xdc, 0x51, 0xd4, 0x0d, 
-	0xec, 0x8f, 0xec, 0x91, 0xec, 0x93, 0xec, 0x93, 
-	0xec, 0x93, 0xec, 0xd7, 0xe4, 0x91, 0xec, 0xd5, 
-	0xe4, 0x8f, 0xc3, 0x49, 0xdc, 0x0b, 0xec, 0x8d, 
-	0xe4, 0x8f, 0xe4, 0x4d, 0xe4, 0x8f, 0xe4, 0x8f, 
-	0xec, 0x91, 0xe4, 0x8f, 0xdc, 0x0b, 0xc3, 0xcf, 
-	0x9a, 0x89, 0xc4, 0x11, 0xc4, 0x11, 0xd4, 0x51, 
-	0xd4, 0x51, 0xd4, 0x51, 0xdc, 0x93, 0xec, 0xd7, 
-	0xed, 0x19, 0xe4, 0x95, 0xdc, 0x93, 0xd4, 0x0f, 
-	0xec, 0x91, 0xec, 0x91, 0xec, 0xd5, 0xec, 0xd5, 
-	0xe4, 0x95, 0xec, 0xd9, 0xe4, 0x91, 0xec, 0xd5, 
-	0xe4, 0x8f, 0xc3, 0x49, 0xdc, 0x4d, 0xec, 0x8d, 
-	0xe4, 0x8d, 0xe4, 0x8d, 0xe4, 0x8f, 0xe4, 0x91, 
-	0xec, 0x91, 0xe4, 0x8f, 0xd3, 0xcb, 0xc3, 0xcf, 
-	0x9a, 0xc9, 0xc3, 0xd1, 0xc4, 0x11, 0xcc, 0x51, 
-	0xdc, 0x93, 0xd4, 0x51, 0xdc, 0x51, 0xe4, 0xd7, 
-	0xed, 0x19, 0xe4, 0x95, 0xdc, 0x93, 0xdc, 0x4f, 
-	0xec, 0x91, 0xec, 0xd3, 0xec, 0xd5, 0xec, 0xd7, 
-	0xe4, 0x93, 0xec, 0xd7, 0xe4, 0x91, 0xec, 0xd5, 
-	0xe4, 0x91, 0xc3, 0x49, 0xdc, 0x4d, 0xec, 0x8f, 
-	0xec, 0x8f, 0xe4, 0x8f, 0xe4, 0x91, 0xe4, 0x91, 
-	0xec, 0x91, 0xe4, 0x91, 0xd3, 0xcb, 0xbb, 0x8d, 
-	0x9a, 0xc9, 0xbb, 0xd1, 0xc4, 0x11, 0xd4, 0x51, 
-	0xdc, 0x93, 0xdc, 0x51, 0xdc, 0x51, 0xe4, 0x97, 
-	0xed, 0x1b, 0xe4, 0x95, 0xdc, 0x91, 0xdc, 0x4d, 
-	0xec, 0x91, 0xec, 0x93, 0xec, 0xd5, 0xec, 0xd7, 
-	0xe4, 0x93, 0xec, 0xd7, 0xe4, 0x91, 0xec, 0xd5, 
-	0xe4, 0x91, 0xc3, 0x49, 0xdc, 0x4d, 0xec, 0xcf, 
-	0xec, 0x8f, 0xe4, 0x8f, 0xe4, 0x91, 0xec, 0x91, 
-	0xec, 0x91, 0xec, 0x91, 0xdc, 0x0b, 0xbb, 0x8d, 
-	0x9a, 0xc9, 0xc4, 0x11, 0xcc, 0x11, 0xd4, 0x51, 
-	0xdc, 0x95, 0xdc, 0x93, 0xdc, 0x93, 0xe4, 0xd7, 
-	0xed, 0x1b, 0xe4, 0x95, 0xdc, 0x51, 0xdc, 0x4f, 
-	0xec, 0x91, 0xe4, 0x91, 0xec, 0xd5, 0xed, 0x17, 
-	0xe4, 0x93, 0xec, 0x95, 0xe4, 0x91, 0xec, 0xd5, 
-	0xec, 0x91, 0xcb, 0x89, 0xdc, 0x4d, 0xec, 0xd1, 
-	0xec, 0xcf, 0xe4, 0x8f, 0xec, 0x91, 0xec, 0x93, 
-	0xec, 0x93, 0xec, 0x93, 0xe4, 0x8f, 0xc3, 0xcf, 
-	0xa2, 0xc9, 0xc4, 0x11, 0xd4, 0x51, 0xd4, 0x53, 
-	0xdc, 0x93, 0xdc, 0x93, 0xe4, 0x95, 0xed, 0x1b, 
-	0xed, 0x19, 0xe4, 0x95, 0xe4, 0x93, 0xdc, 0x4f, 
-	0xec, 0x8f, 0xec, 0x93, 0xec, 0x95, 0xec, 0xd7, 
-	0xe4, 0x93, 0xe4, 0x93, 0xe4, 0x91, 0xec, 0xd5, 
-	0xe4, 0x91, 0xcb, 0x89, 0xdc, 0x4d, 0xec, 0xd1, 
-	0xec, 0xd1, 0xe4, 0x8f, 0xe4, 0x91, 0xec, 0x93, 
-	0xec, 0xd3, 0xec, 0x91, 0xec, 0x93, 0xcc, 0x11, 
-	0xa3, 0x09, 0xbb, 0xd1, 0xcc, 0x11, 0xd4, 0x51, 
-	0xdc, 0x93, 0xdc, 0x93, 0xe4, 0x97, 0xed, 0x1d, 
-	0xed, 0x19, 0xe4, 0x95, 0xe4, 0x93, 0xdc, 0x4f, 
-	0xec, 0x8f, 0xec, 0x93, 0xec, 0x95, 0xec, 0xd7, 
-	0xe4, 0x93, 0xe4, 0x93, 0xe4, 0x91, 0xec, 0xd5, 
-	0xe4, 0x91, 0xcb, 0x89, 0xdc, 0x8f, 0xed, 0x13, 
-	0xec, 0xd1, 0xe4, 0x8f, 0xec, 0x91, 0xe4, 0x91, 
-	0xec, 0x93, 0xe4, 0x91, 0xec, 0xd5, 0xcc, 0x51, 
-	0xab, 0x0b, 0xbb, 0xd1, 0xd4, 0x53, 0xd4, 0x53, 
-	0xdc, 0x93, 0xdc, 0x93, 0xe4, 0x97, 0xed, 0x1d, 
-	0xed, 0x1b, 0xe4, 0x95, 0xe4, 0x93, 0xdc, 0x8f, 
-	0xec, 0x8f, 0xec, 0x93, 0xec, 0x95, 0xec, 0xd7, 
-	0xe4, 0x91, 0xe4, 0x91, 0xe4, 0x91, 0xec, 0xd5, 
-	0xe4, 0x93, 0xcb, 0x89, 0xdc, 0x4f, 0xed, 0x13, 
-	0xec, 0xd1, 0xe4, 0x8f, 0xec, 0x91, 0xe4, 0x91, 
-	0xec, 0x93, 0xec, 0x91, 0xec, 0xd5, 0xcc, 0x53, 
-	0xab, 0x0b, 0xc4, 0x11, 0xcc, 0x53, 0xdc, 0x93, 
-	0xdc, 0x95, 0xdc, 0x93, 0xe4, 0x95, 0xed, 0x1d, 
-	0xed, 0x1b, 0xe4, 0x95, 0xe4, 0x95, 0xdc, 0x8f, 
-	0xec, 0x91, 0xec, 0x93, 0xec, 0xd5, 0xed, 0x19, 
-	0xe4, 0x93, 0xe4, 0x51, 0xe4, 0x91, 0xec, 0xd7, 
-	0xec, 0xd5, 0xcb, 0x89, 0xdc, 0x4f, 0xed, 0x13, 
-	0xec, 0xd1, 0xe4, 0x8f, 0xec, 0x91, 0xe4, 0x91, 
-	0xec, 0x93, 0xec, 0x91, 0xec, 0xd5, 0xd4, 0x53, 
-	0xab, 0x0b, 0xbb, 0xd1, 0xcc, 0x53, 0xdc, 0x93, 
-	0xdc, 0x95, 0xdc, 0x95, 0xe4, 0x95, 0xed, 0x5d, 
-	0xed, 0x1d, 0xec, 0x97, 0xe4, 0x95, 0xdc, 0x4f, 
-	0xec, 0x91, 0xec, 0x93, 0xec, 0xd5, 0xed, 0x19, 
-	0xec, 0x95, 0xe4, 0x91, 0xe4, 0x91, 0xec, 0xd7, 
-	0xec, 0x95, 0xcb, 0x89, 0xe4, 0x8f, 0xed, 0x13, 
-	0xec, 0xd1, 0xe4, 0x8f, 0xec, 0x91, 0xec, 0x91, 
-	0xec, 0x93, 0xec, 0x91, 0xed, 0x17, 0xcc, 0x55, 
-	0xab, 0x0b, 0xc3, 0xd1, 0xd4, 0x53, 0xdc, 0x93, 
-	0xdc, 0x93, 0xe4, 0x95, 0xe4, 0x95, 0xed, 0x5d, 
-	0xed, 0x1d, 0xe4, 0x95, 0xe4, 0x95, 0xdc, 0x4f, 
-	0xec, 0x91, 0xec, 0x93, 0xec, 0xd7, 0xed, 0x1b, 
-	0xec, 0x95, 0xe4, 0x91, 0xe4, 0x91, 0xec, 0xd7, 
-	0xec, 0xd5, 0xd3, 0xcb, 0xe4, 0x8f, 0xed, 0x15, 
-	0xec, 0xd1, 0xe4, 0x8f, 0xe4, 0x91, 0xec, 0x91, 
-	0xec, 0xd3, 0xec, 0x91, 0xed, 0x17, 0xcc, 0x95, 
-	0xab, 0x0b, 0xc4, 0x11, 0xd4, 0x53, 0xdc, 0x93, 
-	0xdc, 0x95, 0xe4, 0x95, 0xe4, 0x95, 0xf5, 0x5f, 
-	0xed, 0x5d, 0xe4, 0x95, 0xe4, 0x95, 0xdc, 0x91, 
-	0xec, 0x91, 0xec, 0xd3, 0xec, 0xd7, 0xed, 0x1b, 
-	0xec, 0xd7, 0xe4, 0x91, 0xe4, 0x91, 0xec, 0xd7, 
-	0xec, 0xd5, 0xd3, 0xcb, 0xe4, 0x8f, 0xed, 0x15, 
-	0xec, 0xd1, 0xe4, 0x8f, 0xe4, 0x91, 0xec, 0x91, 
-	0xec, 0xd5, 0xec, 0x91, 0xec, 0xd7, 0xd4, 0x97, 
-	0xab, 0x0b, 0xc4, 0x13, 0xd4, 0x55, 0xdc, 0x93, 
-	0xdc, 0x95, 0xe4, 0x95, 0xe4, 0x95, 0xf5, 0x5f, 
-	0xed, 0x1b, 0xe4, 0x95, 0xe4, 0x95, 0xe4, 0x91, 
-	0xec, 0x91, 0xec, 0x93, 0xec, 0xd5, 0xed, 0x1b, 
-	0xec, 0xd7, 0xe4, 0x93, 0xe4, 0x91, 0xec, 0xd7, 
-	0xec, 0xd7, 0xd3, 0xcb, 0xe4, 0x8f, 0xed, 0x17, 
-	0xec, 0xd3, 0xe4, 0x8f, 0xec, 0x91, 0xec, 0x91, 
-	0xec, 0x95, 0xe4, 0x91, 0xed, 0x19, 0xd4, 0x97, 
-	0xab, 0x0b, 0xc4, 0x13, 0xd4, 0x53, 0xdc, 0x95, 
-	0xe4, 0x95, 0xe4, 0x95, 0xe4, 0x95, 0xf5, 0xa1, 
-	0xed, 0x1d, 0xe4, 0x95, 0xe4, 0x97, 0xe4, 0x91, 
-	0xec, 0x91, 0xec, 0xd3, 0xec, 0xd5, 0xed, 0x19, 
-	0xec, 0xd7, 0xe4, 0x91, 0xe4, 0x91, 0xed, 0x19, 
-	0xec, 0xd7, 0xd3, 0xcd, 0xe4, 0x4f, 0xed, 0x17, 
-	0xec, 0xd3, 0xe4, 0x8f, 0xec, 0x91, 0xec, 0x93, 
-	0xec, 0x93, 0xec, 0x93, 0xf5, 0x19, 0xd4, 0x97, 
-	0xab, 0x0b, 0xc4, 0x11, 0xd4, 0x93, 0xd4, 0x53, 
-	0xdc, 0x95, 0xe4, 0x95, 0xe4, 0x97, 0xf5, 0xa1, 
-	0xed, 0x1d, 0xe4, 0x95, 0xe4, 0x97, 0xe4, 0x91, 
-	0xec, 0x91, 0xec, 0x93, 0xec, 0xd5, 0xec, 0xd9, 
-	0xec, 0xd5, 0xe4, 0x93, 0xe4, 0x91, 0xec, 0xd7, 
-	0xec, 0xd7, 0xd4, 0x0d, 0xe4, 0x91, 0xed, 0x17, 
-	0xec, 0xd5, 0xe4, 0x8f, 0xec, 0x91, 0xec, 0x93, 
-	0xec, 0x93, 0xec, 0x93, 0xed, 0x19, 0xd4, 0x95, 
-	0xab, 0x0b, 0xc4, 0x11, 0xd4, 0x53, 0xdc, 0x93, 
-	0xdc, 0x95, 0xd4, 0x93, 0xe4, 0x97, 0xf5, 0xa1, 
-	0xed, 0x1d, 0xe4, 0x95, 0xe4, 0x97, 0xe4, 0x91, 
-	0xec, 0x93, 0xec, 0xd5, 0xec, 0x95, 0xed, 0x19, 
-	0xec, 0xd7, 0xe4, 0x93, 0xe4, 0x91, 0xec, 0xd7, 
-	0xed, 0x19, 0xd4, 0x0d, 0xe4, 0x91, 0xed, 0x17, 
-	0xec, 0xd5, 0xe4, 0x8f, 0xe4, 0x91, 0xec, 0x95, 
-	0xec, 0x95, 0xec, 0x93, 0xed, 0x19, 0xd4, 0x95, 
-	0xab, 0x0b, 0xc4, 0x11, 0xd4, 0x55, 0xdc, 0x93, 
-	0xdc, 0x95, 0xdc, 0x95, 0xe4, 0x97, 0xed, 0x5f, 
-	0xed, 0x1d, 0xec, 0x97, 0xe4, 0x97, 0xe4, 0x91, 
-	0xec, 0x93, 0xec, 0xd5, 0xec, 0x95, 0xec, 0xd9, 
-	0xec, 0x97, 0xe4, 0x91, 0xe4, 0x51, 0xec, 0xd7, 
-	0xed, 0x19, 0xd4, 0x0f, 0xe4, 0x93, 0xed, 0x59, 
-	0xec, 0xd5, 0xe4, 0x8f, 0xec, 0x93, 0xec, 0xd5, 
-	0xec, 0x95, 0xec, 0x93, 0xed, 0x19, 0xd4, 0x95, 
-	0xab, 0x0b, 0xcc, 0x11, 0xd4, 0x55, 0xd4, 0x53, 
-	0xdc, 0x97, 0xdc, 0x95, 0xe4, 0x97, 0xed, 0x5f, 
-	0xed, 0x1b, 0xe4, 0x95, 0xe4, 0xd7, 0xe4, 0x93, 
-	0xec, 0x91, 0xec, 0xd5, 0xec, 0xd5, 0xec, 0xd9, 
-	0xe4, 0x95, 0xe4, 0x91, 0xe4, 0x4f, 0xec, 0xd7, 
-	0xed, 0x19, 0xd4, 0x0f, 0xe4, 0x93, 0xed, 0x19, 
-	0xed, 0x17, 0xe4, 0x91, 0xec, 0x93, 0xec, 0xd5, 
-	0xec, 0x95, 0xe4, 0x93, 0xed, 0x19, 0xd4, 0x97, 
-	0xab, 0x0b, 0xcc, 0x11, 0xd4, 0x95, 0xd4, 0x53, 
-	0xdc, 0x97, 0xdc, 0x95, 0xe4, 0x97, 0xed, 0x5f, 
-	0xed, 0x1d, 0xec, 0x97, 0xec, 0xd7, 0xe4, 0x91, 
-	0xe4, 0x91, 0xec, 0x95, 0xec, 0xd5, 0xed, 0x19, 
-	0xe4, 0x95, 0xe4, 0x93, 0xdc, 0x4f, 0xec, 0xd7, 
-	0xed, 0x19, 0xd4, 0x0f, 0xe4, 0x93, 0xed, 0x17, 
-	0xed, 0x19, 0xec, 0x91, 0xec, 0x91, 0xec, 0x95, 
-	0xe4, 0x93, 0xe4, 0x91, 0xec, 0xd9, 0xdc, 0x97, 
-	0xb3, 0x4b, 0xcc, 0x11, 0xd4, 0x55, 0xd4, 0x95, 
-	0xdc, 0x95, 0xe4, 0x95, 0xe4, 0x97, 0xed, 0x5f, 
-	0xed, 0x5f, 0xec, 0x97, 0xe4, 0xd7, 0xe4, 0x91, 
-	0xec, 0x93, 0xec, 0x93, 0xec, 0x95, 0xec, 0xd9, 
-	0xe4, 0x95, 0xdc, 0x93, 0xdc, 0x51, 0xec, 0xd7, 
-	0xed, 0x19, 0xd4, 0x0f, 0xe4, 0x93, 0xed, 0x17, 
-	0xed, 0x19, 0xec, 0x93, 0xe4, 0x91, 0xec, 0x93, 
-	0xec, 0x95, 0xe4, 0x91, 0xec, 0xd7, 0xd4, 0x95, 
-	0xb3, 0x4d, 0xcc, 0x11, 0xd4, 0x55, 0xdc, 0x95, 
-	0xdc, 0x93, 0xdc, 0x95, 0xe4, 0x97, 0xed, 0x61, 
-	0xed, 0x5f, 0xe4, 0x97, 0xe4, 0x97, 0xdc, 0x91, 
-	0xe4, 0x91, 0xec, 0x93, 0xec, 0xd7, 0xed, 0x19, 
-	0xe4, 0x95, 0xdc, 0x53, 0xdc, 0x51, 0xe4, 0x95, 
-	0xed, 0x19, 0xd4, 0x0f, 0xe4, 0x95, 0xed, 0x17, 
-	0xed, 0x19, 0xec, 0x93, 0xe4, 0x91, 0xec, 0x93, 
-	0xec, 0x95, 0xe4, 0x91, 0xec, 0xd7, 0xd4, 0x95, 
-	0xb3, 0x4d, 0xcc, 0x11, 0xcc, 0x55, 0xdc, 0x93, 
-	0xdc, 0x93, 0xdc, 0x95, 0xdc, 0x97, 0xed, 0x5f, 
-	0xed, 0x5f, 0xe4, 0x97, 0xe4, 0xd7, 0xe4, 0x91, 
-	0xec, 0x91, 0xec, 0x93, 0xe4, 0x95, 0xec, 0xd9, 
-	0xe4, 0x95, 0xdc, 0x93, 0xdc, 0x51, 0xe4, 0x95, 
-	0xec, 0xd7, 0xd4, 0x0f, 0xdc, 0x93, 0xed, 0x17, 
-	0xec, 0xd7, 0xe4, 0x91, 0xe4, 0x8f, 0xe4, 0x93, 
-	0xec, 0xd5, 0xe4, 0x93, 0xec, 0xd7, 0xdc, 0x97, 
-	0xb3, 0x4d, 0xc3, 0xd1, 0xcc, 0x53, 0xd4, 0x53, 
-	0xd4, 0x53, 0xdc, 0x95, 0xdc, 0x95, 0xed, 0x5f, 
-	0xed, 0x1d, 0xe4, 0x97, 0xe4, 0x99, 0xe4, 0x93, 
-	0xec, 0x93, 0xec, 0x95, 0xe4, 0x95, 0xec, 0xd9, 
-	0xe4, 0x95, 0xe4, 0x95, 0xdc, 0x93, 0xe4, 0x95, 
-	0xed, 0x19, 0xd3, 0xcd, 0xdc, 0x53, 0xec, 0xd7, 
-	0xec, 0xd5, 0xe4, 0x91, 0xe4, 0x91, 0xec, 0x93, 
-	0xec, 0xd5, 0xe4, 0x93, 0xec, 0xd7, 0xdc, 0x95, 
-	0xb3, 0x4d, 0xc3, 0xcf, 0xcc, 0x53, 0xd4, 0x53, 
-	0xd4, 0x93, 0xdc, 0x95, 0xdc, 0x95, 0xed, 0x1f, 
-	0xe4, 0xdb, 0xe4, 0x97, 0xe4, 0x97, 0xe4, 0x93, 
-	0xe4, 0x93, 0xe4, 0x95, 0xe4, 0x95, 0xec, 0xd9, 
-	0xe4, 0x95, 0xec, 0xd9, 0xe4, 0x95, 0xe4, 0x93, 
-	0xed, 0x19, 0xd3, 0xcd, 0xdc, 0x51, 0xed, 0x17, 
-	0xec, 0xd7, 0xe4, 0x91, 0xe4, 0x4f, 0xec, 0x95, 
-	0xec, 0xd7, 0xe4, 0x93, 0xec, 0x95, 0xd4, 0x95, 
-	0xb3, 0x4d, 0xc3, 0xcf, 0xc4, 0x13, 0xcc, 0x13, 
-	0xdc, 0x95, 0xdc, 0x95, 0xdc, 0x95, 0xed, 0x1f, 
-	0xed, 0x1d, 0xe4, 0x97, 0xdc, 0x97, 0xe4, 0x93, 
-	0xe4, 0x93, 0xe4, 0x93, 0xe4, 0x95, 0xec, 0xd9, 
-	0xe4, 0x95, 0xec, 0xd9, 0xe4, 0x97, 0xe4, 0x93, 
-	0xed, 0x19, 0xcb, 0xcd, 0xd4, 0x51, 0xed, 0x19, 
-	0xed, 0x17, 0xe4, 0x93, 0xe4, 0x4f, 0xe4, 0x95, 
-	0xec, 0xd7, 0xe4, 0x93, 0xe4, 0x93, 0xdc, 0x95, 
-	0xb3, 0x4b, 0xc3, 0xcf, 0xbc, 0x11, 0xcc, 0x13, 
-	0xdc, 0x93, 0xdc, 0x95, 0xdc, 0x95, 0xed, 0x61, 
-	0xed, 0x1d, 0xe4, 0x97, 0xdc, 0x97, 0xe4, 0x93, 
-	0xe4, 0x91, 0xe4, 0x95, 0xe4, 0x95, 0xec, 0xd7, 
-	0xe4, 0x95, 0xec, 0xdb, 0xe4, 0x97, 0xdc, 0x93, 
-	0xed, 0x19, 0xd4, 0x0f, 0xd4, 0x11, 0xed, 0x19, 
-	0xec, 0xd7, 0xe4, 0x91, 0xe4, 0x4f, 0xe4, 0x93, 
-	0xec, 0x95, 0xe4, 0x93, 0xe4, 0x93, 0xd4, 0x95, 
-	0xb3, 0x4b, 0xc3, 0xcf, 0xc4, 0x11, 0xcc, 0x53, 
-	0xd4, 0x53, 0xdc, 0x95, 0xdc, 0x95, 0xed, 0x61, 
-	0xed, 0x1d, 0xdc, 0x97, 0xdc, 0x97, 0xe4, 0x93, 
-	0xe4, 0x91, 0xe4, 0x93, 0xe4, 0x95, 0xe4, 0x97, 
-	0xdc, 0x95, 0xec, 0xdb, 0xe4, 0xd9, 0xdc, 0x93, 
-	0xed, 0x19, 0xd4, 0x11, 0xd4, 0x0f, 0xed, 0x19, 
-	0xec, 0xd7, 0xe4, 0x91, 0xe4, 0x51, 0xe4, 0x93, 
-	0xec, 0x95, 0xe4, 0x93, 0xe4, 0x93, 0xd4, 0x53, 
-	0xb3, 0x4b, 0xc3, 0xcf, 0xbc, 0x11, 0xcc, 0x11, 
-	0xd4, 0x53, 0xd4, 0x95, 0xdc, 0x95, 0xed, 0x5f, 
-	0xed, 0x1d, 0xdc, 0x97, 0xd4, 0x97, 0xe4, 0x93, 
-	0xe4, 0x93, 0xe4, 0x95, 0xe4, 0x95, 0xe4, 0x97, 
-	0xdc, 0x95, 0xed, 0x1d, 0xe4, 0xd9, 0xdc, 0x93, 
-	0xec, 0xd7, 0xcc, 0x0f, 0xd3, 0xcf, 0xed, 0x19, 
-	0xed, 0x17, 0xe4, 0x91, 0xe4, 0x51, 0xe4, 0x91, 
-	0xe4, 0x93, 0xe4, 0x95, 0xe4, 0x93, 0xd4, 0x53, 
-	0xb3, 0x4d, 0xc3, 0xcf, 0xc4, 0x11, 0xcc, 0x11, 
-	0xcc, 0x53, 0xd4, 0x53, 0xdc, 0x95, 0xed, 0x1f, 
-	0xe4, 0xdb, 0xdc, 0x97, 0xdc, 0x97, 0xe4, 0x93, 
-	0xe4, 0x93, 0xec, 0x95, 0xe4, 0x95, 0xe4, 0x97, 
-	0xdc, 0x95, 0xed, 0x1b, 0xe4, 0xdb, 0xdc, 0x53, 
-	0xec, 0xd7, 0xcb, 0xcf, 0xcb, 0xcf, 0xed, 0x19, 
-	0xec, 0xd7, 0xe4, 0x8f, 0xe4, 0x51, 0xe4, 0x91, 
-	0xe4, 0x93, 0xe4, 0x95, 0xe4, 0x91, 0xd4, 0x53, 
-	0xb3, 0x4d, 0xbb, 0x8f, 0xc4, 0x11, 0xc4, 0x11, 
-	0xd4, 0x53, 0xd4, 0x53, 0xdc, 0x95, 0xed, 0x1f, 
-	0xe4, 0xdb, 0xdc, 0x97, 0xe4, 0x97, 0xe4, 0x93, 
-	0xe4, 0x93, 0xe4, 0x95, 0xe4, 0x95, 0xe4, 0x97, 
-	0xdc, 0x95, 0xec, 0xdd, 0xec, 0xdb, 0xdc, 0x93, 
-	0xec, 0xd5, 0xcc, 0x11, 0xcb, 0xcd, 0xec, 0xd7, 
-	0xec, 0xd7, 0xe4, 0x91, 0xe4, 0x4f, 0xe4, 0x4f, 
-	0xe4, 0x93, 0xe4, 0x93, 0xdc, 0x51, 0xd4, 0x53, 
-	0xb3, 0x4d, 0xbb, 0x8f, 0xbc, 0x11, 0xc4, 0x11, 
-	0xcc, 0x51, 0xd4, 0x53, 0xd4, 0x95, 0xed, 0x1f, 
-	0xe4, 0xdb, 0xdc, 0x97, 0xe4, 0x99, 0xe4, 0x93, 
-	0xe4, 0x91, 0xe4, 0x95, 0xe4, 0x95, 0xe4, 0x97, 
-	0xdc, 0x95, 0xed, 0x1d, 0xed, 0x1d, 0xdc, 0x93, 
-	0xec, 0x95, 0xd4, 0x11, 0xcb, 0xcd, 0xec, 0xd7, 
-	0xec, 0xd7, 0xe4, 0x91, 0xe4, 0x4f, 0xe4, 0x4f, 
-	0xe4, 0x91, 0xe4, 0x93, 0xdc, 0x51, 0xd4, 0x93, 
-	0xb3, 0x4d, 0xbb, 0x8f, 0xbb, 0xd1, 0xc3, 0xd1, 
-	0xcc, 0x11, 0xd4, 0x53, 0xd4, 0x53, 0xe5, 0x1d, 
-	0xe4, 0xdd, 0xdc, 0x97, 0xdc, 0x99, 0xdc, 0x93, 
-	0xe4, 0x91, 0xe4, 0x93, 0xe4, 0x95, 0xe4, 0x95, 
-	0xdc, 0x95, 0xed, 0x1d, 0xed, 0x1d, 0xdc, 0x93, 
-	0xe4, 0x95, 0xd4, 0x11, 0xcb, 0x8d, 0xec, 0xd7, 
-	0xec, 0xd7, 0xe4, 0x91, 0xdc, 0x4f, 0xe4, 0x51, 
-	0xe4, 0x91, 0xe4, 0x93, 0xdc, 0x51, 0xdc, 0x95, 
-	0xb3, 0x4d, 0xbb, 0x8f, 0xbb, 0xd1, 0xc3, 0xd1, 
-	0xc4, 0x11, 0xd4, 0x53, 0xd4, 0x55, 0xed, 0x1f, 
-	0xed, 0x1d, 0xdc, 0x97, 0xdc, 0x97, 0xdc, 0x93, 
-	0xe4, 0x91, 0xe4, 0x93, 0xe4, 0x93, 0xdc, 0x95, 
-	0xdc, 0x95, 0xed, 0x1d, 0xec, 0xdb, 0xdc, 0x93, 
-	0xe4, 0x93, 0xd4, 0x11, 0xcb, 0x8d, 0xec, 0x95, 
-	0xec, 0xd5, 0xe4, 0x91, 0xdc, 0x4f, 0xdc, 0x4f, 
-	0xdc, 0x51, 0xe4, 0x93, 0xd4, 0x0f, 0xdc, 0x95, 
-	0xab, 0x4d, 0xbb, 0x8f, 0xbb, 0xd1, 0xbb, 0xd1, 
-	0xbb, 0xd1, 0xcc, 0x53, 0xd4, 0x55, 0xe5, 0x1f, 
-	0xe5, 0x1d, 0xdc, 0x97, 0xdc, 0x97, 0xdc, 0x51, 
-	0xdc, 0x51, 0xe4, 0x93, 0xdc, 0x93, 0xe4, 0x95, 
-	0xdc, 0x95, 0xe4, 0xdb, 0xe4, 0xd9, 0xdc, 0x53, 
-	0xe4, 0x93, 0xd4, 0x11, 0xcb, 0x8d, 0xec, 0x93, 
-	0xec, 0xd5, 0xe4, 0x4f, 0xdc, 0x4f, 0xdc, 0x0f, 
-	0xdc, 0x0f, 0xdc, 0x51, 0xd4, 0x0f, 0xd4, 0x95, 
-	0xab, 0x4b, 0xbb, 0x8f, 0xb3, 0xd1, 0xc4, 0x11, 
-	0xcc, 0x13, 0xd4, 0x53, 0xd4, 0x95, 0xe4, 0xdd, 
-	0xdc, 0xdb, 0xd4, 0x97, 0xd4, 0x95, 0xd4, 0x51, 
-	0xdc, 0x4f, 0xe4, 0x93, 0xe4, 0x95, 0xdc, 0x95, 
-	0xdc, 0x95, 0xe4, 0xdd, 0xe4, 0xd9, 0xdc, 0x53, 
-	0xe4, 0x93, 0xd4, 0x11, 0xc3, 0x8b, 0xec, 0x93, 
-	0xec, 0xd5, 0xe4, 0x4f, 0xdc, 0x0d, 0xd3, 0xcd, 
-	0xd3, 0xcd, 0xdc, 0x51, 0xd4, 0x0f, 0xd4, 0x53, 
-	0xa3, 0x0b, 0xb3, 0x8d, 0xbb, 0xd1, 0xc4, 0x11, 
-	0xcc, 0x13, 0xd4, 0x53, 0xdc, 0x95, 0xe5, 0x1d, 
-	0xe4, 0xdd, 0xd4, 0x95, 0xcc, 0x55, 0xdc, 0x51, 
-	0xdc, 0x4f, 0xdc, 0x93, 0xe4, 0x93, 0xdc, 0x95, 
-	0xdc, 0x95, 0xed, 0x1d, 0xe4, 0xdb, 0xdc, 0x53, 
-	0xe4, 0x93, 0xcc, 0x11, 0xc3, 0x4b, 0xe4, 0x91, 
-	0xec, 0x93, 0xe4, 0x4f, 0xdc, 0x0d, 0xd4, 0x0d, 
-	0xd4, 0x0f, 0xdc, 0x51, 0xcc, 0x0f, 0xcc, 0x53, 
-	0xa3, 0x0b, 0xb3, 0x4d, 0xbb, 0xd1, 0xc4, 0x11, 
-	0xcc, 0x13, 0xd4, 0x53, 0xd4, 0x95, 0xed, 0x1f, 
-	0xe5, 0x1d, 0xd4, 0x55, 0xd4, 0x95, 0xd4, 0x4f, 
-	0xdc, 0x0f, 0xe4, 0x93, 0xe4, 0x93, 0xdc, 0x95, 
-	0xdc, 0x95, 0xe5, 0x1d, 0xe4, 0xdb, 0xe4, 0x95, 
-	0xe4, 0x91, 0xd4, 0x11, 0xc3, 0x4b, 0xe4, 0x91, 
-	0xec, 0x93, 0xe4, 0x4f, 0xdc, 0x0d, 0xdc, 0x0f, 
-	0xdc, 0x0f, 0xdc, 0x51, 0xcc, 0x0f, 0xc4, 0x11, 
-	
-};
-
-Gfx supergoomb__6E3A21B_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__6E3A21B_c_rgba16[] = {
-	0x6a, 0x49, 0x41, 0x01, 0x49, 0x41, 0x59, 0x83, 
-	0x59, 0xc5, 0x59, 0x83, 0x51, 0x41, 0x30, 0x81, 
-	0x59, 0xc5, 0x6a, 0x87, 0x62, 0x47, 0x62, 0x89, 
-	0x62, 0x09, 0x8b, 0x53, 0x93, 0x93, 0x6a, 0x05, 
-	0x73, 0x4d, 0x83, 0x0d, 0x59, 0xc5, 0x83, 0x0f, 
-	0x6a, 0x49, 0x6a, 0x05, 0x83, 0x0f, 0x83, 0x0f, 
-	0x6a, 0x49, 0x6a, 0x05, 0x7a, 0xcd, 0x83, 0x0f, 
-	0x93, 0x93, 0x59, 0xc5, 0x49, 0x41, 0x7a, 0xcb, 
-	0x83, 0x0f, 0x51, 0x41, 0x40, 0xc1, 0x59, 0x83, 
-	0x62, 0x05, 0x51, 0x81, 0x51, 0x41, 0x49, 0x01, 
-	0x49, 0x85, 0x49, 0x43, 0x62, 0x47, 0x62, 0x47, 
-	0x62, 0x05, 0x59, 0xc5, 0x6a, 0x49, 0x7a, 0x8b, 
-	0x51, 0x83, 0x6a, 0x47, 0x51, 0x43, 0x83, 0x0f, 
-	0x83, 0x0f, 0x49, 0x01, 0x59, 0xc3, 0x59, 0x81, 
-	0x51, 0x83, 0x59, 0xc5, 0x49, 0x01, 0x59, 0x81, 
-	0x72, 0x89, 0x62, 0x07, 0x5a, 0xc7, 0x62, 0x05, 
-	0x6a, 0x4b, 0x62, 0x07, 0x30, 0x81, 0x59, 0x83, 
-	0x59, 0x83, 0x51, 0x41, 0x51, 0x83, 0x61, 0xc5, 
-	0x39, 0x03, 0x6a, 0x4b, 0x5a, 0x05, 0x6a, 0x47, 
-	0x59, 0xc3, 0x59, 0xc5, 0x6a, 0x07, 0x8b, 0x4f, 
-	0x62, 0x87, 0x6a, 0x47, 0x40, 0xc1, 0x40, 0xc1, 
-	0x6a, 0x07, 0x51, 0x83, 0x38, 0xc1, 0x51, 0x83, 
-	0x40, 0xc1, 0x72, 0x8b, 0x93, 0xd7, 0x7a, 0xcf, 
-	0x83, 0x0f, 0x62, 0x49, 0x62, 0x47, 0x51, 0x41, 
-	0x6a, 0x09, 0x51, 0x87, 0x28, 0x01, 0x38, 0x81, 
-	0x59, 0x83, 0x6a, 0x47, 0x6a, 0x07, 0x62, 0x05, 
-	0x51, 0x85, 0x49, 0x03, 0x73, 0x0b, 0x62, 0x05, 
-	0x59, 0xc3, 0x59, 0xc5, 0x30, 0x41, 0x51, 0x81, 
-	0x62, 0x87, 0x62, 0x05, 0x59, 0x81, 0x51, 0x81, 
-	0x30, 0x41, 0x30, 0x81, 0x59, 0x81, 0x49, 0x01, 
-	0x38, 0x81, 0x59, 0xc9, 0x83, 0x51, 0x7b, 0x0f, 
-	0x72, 0xcb, 0x5a, 0x47, 0x62, 0x47, 0x59, 0xc3, 
-	0x49, 0x05, 0x38, 0x83, 0x28, 0x01, 0x28, 0x41, 
-	0x62, 0x07, 0x6a, 0x49, 0x6a, 0x49, 0x62, 0x05, 
-	0x62, 0x07, 0x83, 0x0f, 0x6a, 0x47, 0x72, 0x87, 
-	0x7a, 0x89, 0x6a, 0x45, 0x6a, 0x05, 0x61, 0xc1, 
-	0x51, 0x85, 0x7a, 0xc9, 0x7a, 0x89, 0x6a, 0x45, 
-	0x6a, 0x05, 0x30, 0x81, 0x38, 0xc1, 0x40, 0xc1, 
-	0x40, 0xc1, 0x8b, 0x53, 0x93, 0x95, 0x9c, 0x19, 
-	0x7b, 0x0f, 0x62, 0x47, 0x5a, 0x07, 0x51, 0x41, 
-	0x38, 0xc1, 0x41, 0x03, 0x38, 0xc1, 0x28, 0x41, 
-	0x83, 0x0f, 0x72, 0x8b, 0x62, 0x07, 0x62, 0x07, 
-	0x6a, 0x49, 0x6a, 0x09, 0x82, 0xcb, 0x82, 0xcb, 
-	0x82, 0xcb, 0x72, 0x47, 0x6a, 0x05, 0x82, 0xc9, 
-	0x8b, 0x0d, 0x9b, 0xd1, 0x8b, 0x0b, 0x72, 0x47, 
-	0x6a, 0x05, 0x51, 0x83, 0x62, 0x4b, 0x6a, 0x49, 
-	0x59, 0xc5, 0x6a, 0x49, 0x83, 0x51, 0x59, 0xc5, 
-	0x51, 0x83, 0x51, 0x41, 0x59, 0xc7, 0x30, 0x41, 
-	0x62, 0x07, 0x72, 0x89, 0x7a, 0xcd, 0x40, 0xc3, 
-	0x72, 0x8b, 0x7a, 0xcd, 0x59, 0xc5, 0x59, 0x87, 
-	0x93, 0x91, 0x8b, 0x51, 0x59, 0x85, 0x72, 0x47, 
-	0x93, 0x8d, 0x72, 0x47, 0x72, 0x47, 0x6a, 0x05, 
-	0x38, 0x81, 0x72, 0x47, 0x93, 0x8d, 0x7a, 0x45, 
-	0x61, 0xc3, 0x61, 0xc5, 0x72, 0x8b, 0x59, 0xc3, 
-	0x49, 0x41, 0x49, 0x41, 0x38, 0xc1, 0x20, 0x01, 
-	0x28, 0x01, 0x6a, 0x49, 0x49, 0x43, 0x30, 0x81, 
-	0x51, 0x41, 0x93, 0xd5, 0x6a, 0x09, 0x41, 0x03, 
-	0x6a, 0x09, 0x7b, 0x0f, 0x51, 0x41, 0x41, 0x03, 
-	0x72, 0x89, 0x93, 0x93, 0x72, 0x4b, 0x40, 0xc1, 
-	0x72, 0x8b, 0x61, 0xc5, 0x6a, 0x49, 0x72, 0x8b, 
-	0x30, 0x41, 0x40, 0xc1, 0x6a, 0x07, 0x61, 0xc5, 
-	0x6a, 0x49, 0x40, 0xc1, 0x51, 0x81, 0x51, 0x81, 
-	0x51, 0x81, 0x38, 0xc1, 0x59, 0x81, 0x82, 0xc9, 
-	0x6a, 0x47, 0x62, 0x47, 0x62, 0x07, 0x62, 0x05, 
-	0x6a, 0x47, 0x93, 0xd3, 0x93, 0x91, 0x6a, 0x07, 
-	0x51, 0x87, 0x59, 0xc5, 0x49, 0x41, 0x51, 0x85, 
-	0x61, 0xc7, 0x51, 0x41, 0x9b, 0xd3, 0x82, 0xcd, 
-	0x72, 0x8b, 0x7a, 0x89, 0x61, 0xc5, 0x51, 0x41, 
-	0x9b, 0xd3, 0x93, 0x4f, 0x72, 0x47, 0x72, 0x47, 
-	0x61, 0xc5, 0x49, 0x01, 0x41, 0x01, 0x51, 0x81, 
-	0x40, 0xc1, 0x83, 0x0b, 0x9b, 0xcf, 0x82, 0xc9, 
-	0x72, 0x8b, 0x72, 0x8b, 0x62, 0x87, 0x7a, 0x8b, 
-	0x62, 0x05, 0x8b, 0x51, 0x7a, 0x8b, 0x62, 0x07, 
-	0x59, 0xc5, 0x8b, 0x4f, 0x6a, 0x49, 0x51, 0x85, 
-	0x49, 0x03, 0x49, 0x45, 0xa4, 0x57, 0x72, 0x49, 
-	0x82, 0xcd, 0x83, 0x0d, 0x72, 0x49, 0x38, 0x81, 
-	0xa4, 0x57, 0x93, 0x91, 0x93, 0x91, 0x93, 0x4f, 
-	0x72, 0x49, 0x59, 0x81, 0x20, 0x01, 0x28, 0x01, 
-	0x20, 0x01, 0x7a, 0x87, 0x82, 0xcb, 0x61, 0xc3, 
-	0x61, 0xc5, 0x6a, 0x89, 0x6a, 0xcb, 0x93, 0x91, 
-	0x51, 0x41, 0x61, 0xc5, 0x62, 0x09, 0x6a, 0x07, 
-	0x83, 0x0f, 0x93, 0x4f, 0x82, 0xcb, 0x72, 0x8b, 
-	0x51, 0x85, 0x62, 0x07, 0x93, 0x93, 0x72, 0x4b, 
-	0x82, 0xcd, 0x93, 0x91, 0x8b, 0x0d, 0x72, 0x89, 
-	0x93, 0x93, 0x7a, 0xcb, 0x8b, 0x51, 0x93, 0x91, 
-	0x8b, 0x0d, 0x40, 0xc1, 0x51, 0x81, 0x62, 0x07, 
-	0x20, 0x01, 0x40, 0xc1, 0x51, 0x41, 0x38, 0x81, 
-	0x51, 0x81, 0x72, 0x89, 0x6a, 0x49, 0x83, 0x0d, 
-	0x59, 0xc3, 0x49, 0x01, 0x62, 0x07, 0x72, 0x49, 
-	0x83, 0x0d, 0x8b, 0x4f, 0x8b, 0x0f, 0x8b, 0x4f, 
-	0x7a, 0x8b, 0x59, 0x83, 0x6a, 0x07, 0x61, 0xc7, 
-	0x62, 0x07, 0x9c, 0x17, 0x83, 0x0d, 0x62, 0x07, 
-	0x40, 0xc3, 0x82, 0xcd, 0x72, 0x89, 0x9c, 0x17, 
-	0x83, 0x0d, 0x28, 0x41, 0x59, 0xc3, 0x41, 0x01, 
-	0x49, 0x01, 0x20, 0x01, 0x20, 0x01, 0x51, 0x81, 
-	0x51, 0x81, 0x6a, 0xc9, 0x5a, 0xc7, 0x38, 0xc1, 
-	0x62, 0x05, 0x51, 0x81, 0x59, 0xc7, 0x6a, 0x47, 
-	0x62, 0x07, 0x93, 0x4f, 0x93, 0x93, 0x93, 0x93, 
-	0x82, 0xcd, 0x72, 0x49, 0x30, 0x41, 0x51, 0x85, 
-	0x51, 0x85, 0x51, 0x43, 0x49, 0x41, 0x49, 0x41, 
-	0x30, 0x41, 0x40, 0xc1, 0x41, 0x01, 0x51, 0x43, 
-	0x49, 0x41, 0x62, 0x07, 0x59, 0xc5, 0x72, 0x8b, 
-	0x83, 0x0f, 0x6a, 0x47, 0x59, 0xc3, 0x72, 0xcb, 
-	0x72, 0x8b, 0x6a, 0xc9, 0x62, 0x47, 0x38, 0xc1, 
-	0x30, 0x81, 0x41, 0x01, 0x49, 0x45, 0x59, 0xc5, 
-	0x59, 0xc5, 0x83, 0x0d, 0x8b, 0x4f, 0x8b, 0x51, 
-	0x82, 0xcd, 0x93, 0x51, 0x62, 0x07, 0x59, 0x85, 
-	0x59, 0xc5, 0x72, 0x8b, 0x6a, 0x8b, 0x72, 0x8b, 
-	0x49, 0x01, 0x49, 0x41, 0x59, 0xc5, 0x72, 0x8b, 
-	0x6a, 0x8b, 0x83, 0x0f, 0x72, 0xcd, 0x7b, 0x11, 
-	0x72, 0xcd, 0x51, 0x83, 0x82, 0xcd, 0x7a, 0xcd, 
-	0x83, 0x0f, 0x7b, 0x0d, 0x6a, 0x89, 0x72, 0xcd, 
-	0x10, 0x01, 0x18, 0x01, 0x39, 0x03, 0x59, 0x85, 
-	0x51, 0x83, 0x72, 0x89, 0x83, 0x0d, 0x93, 0xd5, 
-	0x8b, 0x51, 0x8b, 0x0f, 0x82, 0xcd, 0x62, 0x07, 
-	0x6a, 0x49, 0x82, 0xcd, 0x83, 0x0d, 0x7a, 0xcd, 
-	0x72, 0x47, 0x6a, 0x09, 0x6a, 0x49, 0x82, 0xcd, 
-	0x83, 0x0d, 0x62, 0x07, 0x49, 0x41, 0x62, 0x07, 
-	0x38, 0xc1, 0x30, 0x81, 0x62, 0x07, 0x59, 0xc5, 
-	0x72, 0x8b, 0x6a, 0x8b, 0x6a, 0x89, 0x62, 0x0b, 
-	0x41, 0x01, 0x62, 0x05, 0x83, 0x0f, 0x62, 0x09, 
-	0x28, 0x41, 0x51, 0x83, 0x7a, 0xcd, 0x72, 0x8b, 
-	0x49, 0x41, 0x40, 0xc1, 0x7a, 0x8b, 0x72, 0x8b, 
-	0x62, 0x07, 0x82, 0xcd, 0x8b, 0x4f, 0x83, 0x0f, 
-	0x7a, 0x8b, 0x72, 0x8b, 0x62, 0x07, 0x82, 0xcd, 
-	0x8b, 0x4f, 0x59, 0xc3, 0x51, 0x41, 0x38, 0xc1, 
-	0x40, 0xc1, 0x38, 0x81, 0x38, 0xc1, 0x49, 0x01, 
-	0x51, 0x41, 0x6a, 0x49, 0x6a, 0x07, 0x62, 0x07, 
-	0x49, 0x43, 0x38, 0x81, 0x51, 0x85, 0x49, 0x03, 
-	0x28, 0x41, 0x20, 0x01, 0x28, 0x01, 0x40, 0xc1, 
-	0x49, 0x01, 0x51, 0x41, 0x49, 0x01, 0x82, 0xcd, 
-	0x72, 0x8b, 0x6a, 0x49, 0x8b, 0x51, 0x8b, 0x4f, 
-	0x49, 0x01, 0x6a, 0x49, 0x7a, 0xcd, 0x6a, 0x49, 
-	0x83, 0x0f, 0x38, 0x81, 0x51, 0x85, 0x49, 0x03, 
-	0x28, 0x41, 0x20, 0x01, 0x28, 0x01, 0x40, 0xc1, 
-	0x49, 0x01, 0x51, 0x41, 0x49, 0x01, 0x6a, 0x49, 
-	0x62, 0x07, 0x59, 0xc3, 0x51, 0x41, 0x38, 0xc1, 
-	0x40, 0xc1, 0x38, 0x81, 0x38, 0xc1, 0x49, 0x01, 
-	0x51, 0x41, 0x6a, 0x49, 0x6a, 0x07, 0x6a, 0x07, 
-	0x62, 0x05, 0x6a, 0x47, 0x9c, 0x59, 0x8b, 0x51, 
-	0x49, 0x41, 0x6a, 0x49, 0x59, 0xc3, 0x6a, 0x4b, 
-	0x6a, 0x49, 0x62, 0x05, 0x83, 0x0f, 0x62, 0x09, 
-	0x28, 0x41, 0x51, 0x83, 0x7a, 0xcd, 0x72, 0x8b, 
-	0x49, 0x41, 0x40, 0xc1, 0x7a, 0x8b, 0x30, 0x41, 
-	0x83, 0x0f, 0x62, 0x07, 0x49, 0x41, 0x62, 0x07, 
-	0x38, 0xc1, 0x30, 0x81, 0x62, 0x07, 0x59, 0xc5, 
-	0x72, 0x8b, 0x6a, 0x8b, 0x6a, 0x89, 0x5a, 0x03, 
-	0x38, 0xc1, 0x40, 0xc1, 0x72, 0x8b, 0x8b, 0x4f, 
-	0x72, 0x89, 0x62, 0x07, 0x59, 0xc5, 0x49, 0x43, 
-	0x51, 0x85, 0x18, 0x01, 0x39, 0x03, 0x59, 0x85, 
-	0x51, 0x83, 0x72, 0x89, 0x83, 0x0d, 0x93, 0xd5, 
-	0x8b, 0x51, 0x8b, 0x0f, 0x82, 0xcd, 0x18, 0x01, 
-	0x49, 0x01, 0x83, 0x0f, 0x72, 0xcd, 0x7b, 0x11, 
-	0x72, 0xcd, 0x51, 0x83, 0x82, 0xcd, 0x7a, 0xcd, 
-	0x83, 0x0f, 0x7b, 0x0d, 0x6a, 0x89, 0x62, 0x47, 
-	0x62, 0x07, 0x61, 0xc5, 0x38, 0xc1, 0x40, 0xc1, 
-	0x62, 0x05, 0x62, 0x07, 0x62, 0x07, 0x51, 0x81, 
-	0x49, 0x43, 0x41, 0x01, 0x49, 0x45, 0x59, 0xc5, 
-	0x59, 0xc5, 0x83, 0x0d, 0x8b, 0x4f, 0x8b, 0x51, 
-	0x82, 0xcd, 0x93, 0x51, 0x62, 0x07, 0x41, 0x01, 
-	0x20, 0x01, 0x62, 0x07, 0x59, 0xc5, 0x72, 0x8b, 
-	0x83, 0x0f, 0x6a, 0x47, 0x59, 0xc3, 0x72, 0xcb, 
-	0x72, 0x8b, 0x6a, 0xc9, 0x62, 0x47, 0x5a, 0x05, 
-	0x62, 0x07, 0x83, 0x0d, 0x62, 0x05, 0x30, 0x41, 
-	0x5a, 0x05, 0x94, 0x15, 0x93, 0xd3, 0x62, 0x07, 
-	0x62, 0x05, 0x51, 0x81, 0x59, 0xc7, 0x6a, 0x47, 
-	0x62, 0x07, 0x93, 0x4f, 0x93, 0x93, 0x93, 0x93, 
-	0x82, 0xcd, 0x72, 0x49, 0x30, 0x41, 0x49, 0x01, 
-	0x49, 0x41, 0x28, 0x41, 0x59, 0xc3, 0x41, 0x01, 
-	0x49, 0x01, 0x20, 0x01, 0x20, 0x01, 0x51, 0x81, 
-	0x51, 0x81, 0x6a, 0xc9, 0x5a, 0xc7, 0x6a, 0x49, 
-	0x93, 0xd5, 0x93, 0x53, 0x83, 0x0f, 0x30, 0x81, 
-	0x94, 0x55, 0x94, 0x13, 0x94, 0x13, 0x6a, 0x89, 
-	0x59, 0x85, 0x49, 0x01, 0x62, 0x07, 0x72, 0x49, 
-	0x83, 0x0d, 0x8b, 0x4f, 0x8b, 0x0f, 0x8b, 0x4f, 
-	0x7a, 0x8b, 0x59, 0x83, 0x6a, 0x07, 0x41, 0x01, 
-	0x8b, 0x0d, 0x40, 0xc1, 0x51, 0x81, 0x62, 0x07, 
-	0x20, 0x01, 0x40, 0xc1, 0x51, 0x41, 0x38, 0x81, 
-	0x51, 0x81, 0x72, 0x89, 0x6a, 0x49, 0x5a, 0x05, 
-	0x62, 0x47, 0x83, 0x0f, 0x51, 0x41, 0x40, 0xc1, 
-	0x8c, 0x53, 0x84, 0x51, 0x93, 0x93, 0x5a, 0x05, 
-	0x51, 0x43, 0x61, 0xc5, 0x62, 0x09, 0x6a, 0x07, 
-	0x83, 0x0f, 0x93, 0x4f, 0x82, 0xcb, 0x72, 0x8b, 
-	0x51, 0x85, 0x62, 0x07, 0x93, 0x93, 0x62, 0x05, 
-	0x72, 0x47, 0x59, 0x81, 0x20, 0x01, 0x28, 0x01, 
-	0x20, 0x01, 0x7a, 0x87, 0x82, 0xcb, 0x61, 0xc3, 
-	0x61, 0xc5, 0x6a, 0x89, 0x6a, 0xcb, 0x6a, 0x49, 
-	0x59, 0xc5, 0x61, 0xc7, 0x49, 0x01, 0x41, 0x01, 
-	0x5a, 0x45, 0x8b, 0xd3, 0x83, 0x51, 0x51, 0x83, 
-	0x51, 0x83, 0x8b, 0x51, 0x7a, 0x8b, 0x62, 0x07, 
-	0x59, 0xc5, 0x8b, 0x4f, 0x6a, 0x49, 0x51, 0x85, 
-	0x49, 0x03, 0x49, 0x45, 0xa4, 0x57, 0x20, 0x01, 
-	0x59, 0xc3, 0x49, 0x01, 0x41, 0x01, 0x51, 0x81, 
-	0x40, 0xc1, 0x83, 0x0b, 0x9b, 0xcf, 0x82, 0xc9, 
-	0x72, 0x8b, 0x72, 0x8b, 0x62, 0x87, 0x59, 0xc5, 
-	0x28, 0x01, 0x59, 0x85, 0x20, 0x01, 0x28, 0x01, 
-	0x59, 0xc5, 0x51, 0xc5, 0x49, 0x03, 0x41, 0x03, 
-	0x28, 0x01, 0x93, 0xd3, 0x93, 0x91, 0x6a, 0x07, 
-	0x51, 0x87, 0x59, 0xc5, 0x49, 0x41, 0x51, 0x85, 
-	0x61, 0xc7, 0x51, 0x41, 0x9b, 0xd3, 0x10, 0x01, 
-	0x62, 0x05, 0x40, 0xc1, 0x51, 0x81, 0x51, 0x81, 
-	0x51, 0x81, 0x38, 0xc1, 0x59, 0x81, 0x82, 0xc9, 
-	0x6a, 0x47, 0x62, 0x47, 0x62, 0x07, 0x59, 0xc5, 
-	0x61, 0xc5, 0x61, 0xc7, 0x49, 0x01, 0x20, 0x01, 
-	0x59, 0xc5, 0x51, 0x43, 0x51, 0x43, 0x38, 0x81, 
-	0x30, 0x41, 0x93, 0xd5, 0x6a, 0x09, 0x41, 0x03, 
-	0x6a, 0x09, 0x7b, 0x0f, 0x51, 0x41, 0x41, 0x03, 
-	0x72, 0x89, 0x93, 0x93, 0x72, 0x4b, 0x51, 0x41, 
-	0x59, 0x83, 0x61, 0xc5, 0x72, 0x8b, 0x59, 0xc3, 
-	0x49, 0x41, 0x49, 0x41, 0x38, 0xc1, 0x20, 0x01, 
-	0x28, 0x01, 0x6a, 0x49, 0x49, 0x43, 0x59, 0xc3, 
-	0xa3, 0x8d, 0x8b, 0x0b, 0x59, 0x83, 0x49, 0x41, 
-	0x7a, 0xcd, 0x72, 0x8b, 0x61, 0xc5, 0x38, 0xc1, 
-	0x49, 0x03, 0x72, 0x89, 0x7a, 0xcd, 0x40, 0xc3, 
-	0x72, 0x8b, 0x7a, 0xcd, 0x59, 0xc5, 0x59, 0x87, 
-	0x93, 0x91, 0x8b, 0x51, 0x59, 0x85, 0x72, 0x47, 
-	0x62, 0x07, 0x51, 0x83, 0x62, 0x4b, 0x6a, 0x49, 
-	0x59, 0xc5, 0x6a, 0x49, 0x83, 0x51, 0x59, 0xc5, 
-	0x51, 0x83, 0x51, 0x41, 0x59, 0xc7, 0x69, 0xc1, 
-	0x69, 0xc1, 0x72, 0x49, 0x61, 0xc5, 0x59, 0xc5, 
-	0x83, 0x51, 0x6a, 0x4b, 0x59, 0x85, 0x40, 0xc1, 
-	0x30, 0x81, 0x41, 0x03, 0x38, 0xc1, 0x28, 0x41, 
-	0x83, 0x0f, 0x72, 0x8b, 0x62, 0x07, 0x62, 0x07, 
-	0x6a, 0x49, 0x6a, 0x09, 0x82, 0xcb, 0x59, 0x81, 
-	0x59, 0xc5, 0x30, 0x81, 0x38, 0xc1, 0x40, 0xc1, 
-	0x40, 0xc1, 0x8b, 0x53, 0x93, 0x95, 0x9c, 0x19, 
-	0x7b, 0x0f, 0x62, 0x47, 0x5a, 0x07, 0x6a, 0x07, 
-	0x6a, 0x05, 0x7a, 0x89, 0x41, 0x01, 0x38, 0xc1, 
-	0x51, 0xc3, 0x59, 0xc5, 0x61, 0xc7, 0x49, 0x03, 
-	0x28, 0x41, 0x38, 0x83, 0x28, 0x01, 0x28, 0x41, 
-	0x62, 0x07, 0x6a, 0x49, 0x6a, 0x49, 0x62, 0x05, 
-	0x62, 0x07, 0x83, 0x0f, 0x6a, 0x47, 0x49, 0x01, 
-	0x51, 0x83, 0x30, 0x81, 0x59, 0x81, 0x49, 0x01, 
-	0x38, 0x81, 0x59, 0xc9, 0x83, 0x51, 0x7b, 0x0f, 
-	0x72, 0xcb, 0x5a, 0x47, 0x62, 0x47, 0x62, 0x09, 
-	0x51, 0x83, 0x49, 0x01, 0x40, 0xc1, 0x20, 0x01, 
-	0x49, 0x43, 0x59, 0xc5, 0x72, 0x07, 0x51, 0x83, 
-	0x30, 0x41, 0x51, 0x87, 0x28, 0x01, 0x38, 0x81, 
-	0x59, 0x83, 0x6a, 0x47, 0x6a, 0x07, 0x62, 0x05, 
-	0x51, 0x85, 0x49, 0x03, 0x73, 0x0b, 0x38, 0x81, 
-	0x94, 0x19, 0x51, 0x83, 0x38, 0xc1, 0x51, 0x83, 
-	0x40, 0xc1, 0x72, 0x8b, 0x93, 0xd7, 0x7a, 0xcf, 
-	0x83, 0x0f, 0x62, 0x49, 0x62, 0x47, 0x62, 0x49, 
-	0x49, 0x45, 0x41, 0x03, 0x41, 0x01, 0x49, 0x03, 
-	0x49, 0x03, 0x40, 0xc1, 0x38, 0x81, 0x30, 0x41, 
-	0x49, 0x01, 0x62, 0x07, 0x30, 0x81, 0x59, 0x83, 
-	0x59, 0x83, 0x51, 0x41, 0x51, 0x83, 0x61, 0xc5, 
-	0x39, 0x03, 0x6a, 0x4b, 0x5a, 0x05, 0x6a, 0x47, 
-	0x40, 0xc1, 0x49, 0x01, 0x59, 0xc3, 0x59, 0x81, 
-	0x51, 0x83, 0x59, 0xc5, 0x49, 0x01, 0x59, 0x81, 
-	0x72, 0x89, 0x62, 0x07, 0x5a, 0xc7, 0x51, 0x83, 
-	0x51, 0xc7, 0x83, 0x11, 0x8b, 0x51, 0x6a, 0x47, 
-	0x5a, 0xc9, 0x7a, 0xcd, 0x59, 0xc5, 0x49, 0x03, 
-	0x72, 0x89, 0x51, 0x41, 0x40, 0xc1, 0x59, 0x83, 
-	0x62, 0x05, 0x51, 0x81, 0x51, 0x41, 0x49, 0x01, 
-	0x49, 0x85, 0x49, 0x43, 0x62, 0x47, 0x51, 0x81, 
-	
-};
-
-Gfx supergoomb__6B1A233B_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__6B1A233B_c_rgba16[] = {
-	0x49, 0x89, 0x82, 0xcd, 0x93, 0x0d, 0x92, 0xcd, 
-	0x93, 0x0d, 0x93, 0x0d, 0xa3, 0x8f, 0x92, 0xcd, 
-	0x9b, 0x4f, 0xa3, 0x4f, 0x82, 0x8d, 0x8a, 0xcd, 
-	0xab, 0x4d, 0x94, 0x21, 0x62, 0x95, 0x62, 0x95, 
-	0x62, 0x95, 0x8b, 0xdf, 0xab, 0x8f, 0xab, 0x8f, 
-	0xa3, 0x4d, 0x7a, 0x0b, 0x92, 0x89, 0xa3, 0x09, 
-	0xa2, 0xc9, 0xa3, 0x0b, 0xa3, 0x4d, 0xa3, 0x4d, 
-	0xa3, 0x0b, 0x9b, 0x0b, 0x9b, 0x4d, 0x7a, 0x8d, 
-	0x49, 0x47, 0x8a, 0x8b, 0x92, 0xcb, 0x92, 0xcb, 
-	0x92, 0xcb, 0x92, 0xc9, 0xa3, 0x4d, 0x92, 0xc9, 
-	0xa3, 0x4d, 0xa3, 0x0b, 0x8a, 0x49, 0xb5, 0xad, 
-	0x94, 0x61, 0x83, 0x9d, 0x62, 0xd5, 0x6a, 0x95, 
-	0x62, 0x95, 0x7b, 0x5b, 0x8b, 0xdf, 0x9c, 0xa5, 
-	0xac, 0xe7, 0x79, 0xc7, 0x92, 0x45, 0xa2, 0xc5, 
-	0x9a, 0x85, 0xa2, 0xc7, 0xa3, 0x09, 0xa3, 0x09, 
-	0xa3, 0x09, 0x9a, 0xc9, 0x9b, 0x09, 0x7a, 0x49, 
-	0x61, 0xc9, 0x93, 0x0d, 0x92, 0xcb, 0x92, 0xcb, 
-	0x9b, 0x0b, 0x9a, 0xcb, 0xa3, 0x4d, 0xa3, 0x4d, 
-	0xab, 0x8d, 0xb5, 0xad, 0x9c, 0xa3, 0x83, 0x9d, 
-	0x6a, 0xd7, 0x6a, 0xd7, 0x6a, 0xd7, 0x6a, 0x95, 
-	0x62, 0x95, 0x62, 0x95, 0x62, 0x95, 0x62, 0x95, 
-	0x73, 0x19, 0x8b, 0xdf, 0xac, 0xe7, 0xaa, 0xc7, 
-	0xaa, 0xc5, 0xaa, 0xc7, 0xab, 0x4b, 0xab, 0x49, 
-	0xab, 0x4b, 0xab, 0x09, 0xa3, 0x09, 0x82, 0x8b, 
-	0x61, 0xc9, 0x93, 0x0d, 0x93, 0x0b, 0x9b, 0x0b, 
-	0x9b, 0x0b, 0xa3, 0x0b, 0xab, 0x8d, 0xb5, 0xad, 
-	0x9c, 0xa5, 0x8b, 0xdf, 0x6a, 0xd7, 0x6a, 0xd7, 
-	0x6a, 0xd7, 0x62, 0x95, 0x52, 0x13, 0x49, 0xcf, 
-	0x41, 0x8d, 0x49, 0xcf, 0x5a, 0x53, 0x62, 0x95, 
-	0x62, 0x95, 0x62, 0x93, 0x73, 0x19, 0x83, 0x9d, 
-	0xac, 0xe5, 0xb3, 0x07, 0xbb, 0x8b, 0xb3, 0x4b, 
-	0xb3, 0x4b, 0xab, 0x09, 0xab, 0x09, 0x8a, 0x8b, 
-	0x72, 0x09, 0x93, 0x0f, 0x9b, 0x0d, 0xa3, 0x4d, 
-	0xab, 0x4d, 0xab, 0x4b, 0xb5, 0xad, 0x94, 0x1f, 
-	0x73, 0x19, 0x73, 0x19, 0x73, 0x59, 0x83, 0x9d, 
-	0x8b, 0xdf, 0x8b, 0xdf, 0xa4, 0xa5, 0x94, 0x63, 
-	0xb5, 0xab, 0xb5, 0xad, 0x94, 0x21, 0x41, 0x8d, 
-	0x49, 0xcf, 0x52, 0x11, 0x62, 0x93, 0x5a, 0x53, 
-	0x73, 0x19, 0x94, 0x63, 0xc3, 0xcb, 0xbb, 0x8b, 
-	0xbb, 0x4b, 0xb3, 0x49, 0xb3, 0x49, 0x8a, 0xcb, 
-	0x7a, 0x49, 0x9b, 0x4f, 0xa3, 0x0b, 0xab, 0x4d, 
-	0xab, 0x8d, 0xb5, 0xad, 0x94, 0x1f, 0x73, 0x19, 
-	0x7b, 0x5b, 0x83, 0x9d, 0x94, 0x63, 0x5a, 0x51, 
-	0x08, 0x01, 0x08, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x5a, 0x53, 0xb5, 0x6b, 
-	0xb5, 0xad, 0x49, 0xcf, 0x49, 0xcf, 0x52, 0x11, 
-	0x5a, 0x53, 0x73, 0x19, 0x94, 0x63, 0xc3, 0x8b, 
-	0xc3, 0x8b, 0xbb, 0x49, 0xbb, 0x49, 0x92, 0xcb, 
-	0x7a, 0x09, 0x9b, 0x4d, 0xa3, 0x4d, 0xab, 0x8d, 
-	0xb5, 0xad, 0xa4, 0xa5, 0x94, 0x61, 0x83, 0x9d, 
-	0x94, 0x61, 0x5a, 0x53, 0x10, 0x01, 0x28, 0xc5, 
-	0x31, 0x09, 0x39, 0x4b, 0x39, 0x49, 0x39, 0x4b, 
-	0x39, 0x4b, 0x28, 0xc7, 0x18, 0x43, 0x00, 0x01, 
-	0x00, 0x01, 0xa4, 0xa5, 0xb5, 0xad, 0x52, 0x11, 
-	0x52, 0x11, 0x5a, 0x53, 0x73, 0x19, 0x94, 0x63, 
-	0xcc, 0x0d, 0xc3, 0x89, 0xc3, 0x89, 0x93, 0x0d, 
-	0x82, 0x49, 0xa3, 0x4f, 0xab, 0x4d, 0xb5, 0xad, 
-	0x94, 0x63, 0x8b, 0xdf, 0x94, 0x23, 0x94, 0x63, 
-	0x39, 0x49, 0x28, 0xc5, 0x31, 0x09, 0x39, 0x4b, 
-	0x28, 0xc7, 0x20, 0x85, 0x10, 0x01, 0x10, 0x01, 
-	0x10, 0x01, 0x10, 0x01, 0x18, 0x43, 0x28, 0xc7, 
-	0x18, 0x43, 0x08, 0x01, 0x00, 0x01, 0xb5, 0xad, 
-	0x52, 0x11, 0x52, 0x11, 0x5a, 0x53, 0x73, 0x19, 
-	0xac, 0xe5, 0xcb, 0x8b, 0xc3, 0x89, 0x9b, 0x0d, 
-	0x8a, 0x49, 0xab, 0x8f, 0xbb, 0xcf, 0xb5, 0x29, 
-	0x83, 0x5b, 0x83, 0x9d, 0x94, 0x21, 0x28, 0xc7, 
-	0x29, 0x09, 0x41, 0x8d, 0x28, 0xc7, 0x20, 0x85, 
-	0x08, 0x01, 0x9c, 0xa5, 0x94, 0x21, 0x94, 0x21, 
-	0x94, 0x21, 0x94, 0x21, 0x94, 0x63, 0x00, 0x01, 
-	0x20, 0x83, 0x28, 0xc7, 0x20, 0x85, 0x00, 0x01, 
-	0xb5, 0xad, 0x52, 0x11, 0x52, 0x11, 0x5a, 0x53, 
-	0x83, 0x9d, 0xcb, 0xcb, 0xcb, 0xcb, 0xab, 0x4d, 
-	0x8a, 0x49, 0xb3, 0x8f, 0xb5, 0xad, 0x9c, 0xa5, 
-	0x7b, 0x5b, 0x94, 0x63, 0x08, 0x01, 0x20, 0xc7, 
-	0x31, 0x09, 0x31, 0x07, 0x10, 0x01, 0xa4, 0xa5, 
-	0x94, 0x1f, 0x83, 0x9d, 0x7b, 0x5b, 0x6a, 0xd7, 
-	0x52, 0x11, 0x52, 0x11, 0x6a, 0xd7, 0x83, 0x9d, 
-	0x94, 0x63, 0x10, 0x01, 0x28, 0xc7, 0x20, 0x85, 
-	0x00, 0x01, 0xb5, 0xad, 0x49, 0xcf, 0x62, 0x93, 
-	0x73, 0x19, 0xac, 0xe7, 0xd3, 0xcb, 0xb3, 0x8f, 
-	0x8a, 0x49, 0xb3, 0xcf, 0xb5, 0x6b, 0x83, 0x9b, 
-	0x94, 0x21, 0xb5, 0x27, 0x20, 0x85, 0x31, 0x09, 
-	0x31, 0x09, 0x39, 0x49, 0xa4, 0xa5, 0x94, 0x21, 
-	0x94, 0x21, 0x9c, 0xa5, 0x49, 0xcf, 0x73, 0x17, 
-	0xb5, 0xad, 0xb5, 0xad, 0x52, 0x11, 0x52, 0x11, 
-	0x6a, 0xd7, 0x93, 0xdf, 0x10, 0x01, 0x28, 0xc7, 
-	0x08, 0x01, 0xb5, 0xad, 0x49, 0xcf, 0x52, 0x11, 
-	0x62, 0x93, 0x8b, 0xdf, 0xdc, 0x0b, 0xbb, 0xcf, 
-	0x8a, 0x49, 0xb5, 0xad, 0x94, 0x21, 0x83, 0x9d, 
-	0x9c, 0xa5, 0x00, 0x01, 0x18, 0x85, 0x29, 0x09, 
-	0x20, 0x85, 0x9c, 0xa5, 0xa4, 0xe7, 0xa4, 0xa5, 
-	0x00, 0x01, 0x10, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x94, 0x1f, 0xb5, 0xad, 
-	0x5a, 0x53, 0x6a, 0xd7, 0x94, 0x63, 0x20, 0x83, 
-	0x18, 0x43, 0x00, 0x01, 0xb5, 0xad, 0x49, 0xcf, 
-	0x62, 0x95, 0x73, 0x19, 0xac, 0xe7, 0xbb, 0xcf, 
-	0x92, 0x89, 0xb5, 0xad, 0x83, 0x9d, 0x83, 0x9d, 
-	0xac, 0xe7, 0x18, 0x41, 0x28, 0xc7, 0x31, 0x07, 
-	0x00, 0x01, 0x94, 0x63, 0xa4, 0xa5, 0x9c, 0xa5, 
-	0x18, 0x43, 0x41, 0x8d, 0x4a, 0x11, 0x52, 0x11, 
-	0x52, 0x11, 0x49, 0xcf, 0x00, 0x01, 0x00, 0x01, 
-	0xb5, 0xad, 0x52, 0x11, 0x83, 0x9d, 0x00, 0x01, 
-	0x28, 0xc7, 0x00, 0x01, 0xb5, 0xad, 0x41, 0x8d, 
-	0x62, 0x95, 0x62, 0x95, 0x9c, 0xa5, 0xc4, 0x11, 
-	0x92, 0x89, 0xb5, 0x6b, 0x83, 0x9d, 0x94, 0x63, 
-	0xb5, 0x6b, 0x28, 0xc7, 0x39, 0x4b, 0x20, 0x85, 
-	0xb5, 0x29, 0x9c, 0xa3, 0xa4, 0xa5, 0x00, 0x01, 
-	0x41, 0x8d, 0x73, 0x19, 0x7b, 0x5b, 0x73, 0x19, 
-	0x73, 0x19, 0x83, 0x9b, 0x52, 0x11, 0x00, 0x01, 
-	0x94, 0x1f, 0x52, 0x11, 0x6a, 0xd7, 0x94, 0x63, 
-	0x18, 0x43, 0x08, 0x01, 0xb5, 0xad, 0x49, 0xcf, 
-	0x5a, 0x53, 0x62, 0x95, 0x8b, 0xdf, 0xc4, 0x0f, 
-	0xb5, 0xad, 0x94, 0x21, 0x8b, 0xdd, 0xac, 0xe5, 
-	0x00, 0x01, 0x20, 0xc7, 0x31, 0x49, 0x18, 0x41, 
-	0xac, 0xe7, 0xa4, 0xa5, 0x00, 0x01, 0x28, 0xc5, 
-	0x5a, 0x53, 0x94, 0x21, 0x7b, 0x5b, 0x73, 0x19, 
-	0x73, 0x19, 0x73, 0x19, 0x83, 0x9b, 0x49, 0xcf, 
-	0x00, 0x01, 0xb5, 0xad, 0x52, 0x11, 0x94, 0x21, 
-	0x10, 0x01, 0x20, 0x83, 0x00, 0x01, 0xb5, 0xad, 
-	0x49, 0xcf, 0x62, 0x95, 0x7b, 0x5b, 0x8b, 0xdf, 
-	0x9c, 0xa5, 0x52, 0x0f, 0x8b, 0xdf, 0xb5, 0xad, 
-	0x00, 0x01, 0x28, 0xc7, 0x39, 0x4b, 0x10, 0x01, 
-	0xa4, 0xe7, 0xb5, 0x6b, 0x00, 0x01, 0x20, 0x85, 
-	0x7b, 0x5b, 0x94, 0x63, 0x83, 0x9b, 0x7b, 0x5b, 
-	0x73, 0x59, 0x73, 0x19, 0x73, 0x19, 0x6a, 0xd7, 
-	0x00, 0x01, 0xb5, 0xad, 0x52, 0x11, 0x94, 0x21, 
-	0x10, 0x01, 0x39, 0x4b, 0x00, 0x01, 0xb5, 0xad, 
-	0x41, 0x8d, 0x62, 0x95, 0x62, 0x95, 0x62, 0x95, 
-	0xb5, 0xad, 0x39, 0x4b, 0x8b, 0xdf, 0xb5, 0xad, 
-	0x00, 0x01, 0x20, 0xc7, 0x31, 0x4b, 0x18, 0x41, 
-	0xb5, 0xad, 0xb5, 0x6b, 0x00, 0x01, 0x20, 0x85, 
-	0x8b, 0xdf, 0x9c, 0xa5, 0x94, 0xa3, 0x8b, 0xdf, 
-	0x7b, 0x5b, 0x73, 0x19, 0x73, 0x19, 0x73, 0x19, 
-	0x00, 0x01, 0x94, 0x21, 0x6a, 0xd7, 0x94, 0x21, 
-	0x10, 0x01, 0x39, 0x4b, 0x00, 0x01, 0xb5, 0xad, 
-	0x49, 0xcf, 0x62, 0xd5, 0x62, 0x95, 0x62, 0x95, 
-	0xb5, 0xad, 0x5a, 0x53, 0x7b, 0x5b, 0xb5, 0x29, 
-	0x00, 0x01, 0x18, 0x43, 0x31, 0x49, 0x10, 0x01, 
-	0xb5, 0xad, 0xa4, 0xa5, 0x00, 0x01, 0x18, 0x43, 
-	0x6b, 0x19, 0xad, 0x29, 0xb5, 0xad, 0x94, 0xa5, 
-	0x83, 0x9d, 0x83, 0x9d, 0x7b, 0x5b, 0x52, 0x11, 
-	0x00, 0x01, 0x49, 0xcf, 0x7b, 0x5b, 0x94, 0x21, 
-	0x10, 0x01, 0x39, 0x49, 0x00, 0x01, 0xb5, 0xad, 
-	0x5a, 0x11, 0x6a, 0xd7, 0x83, 0x9b, 0x94, 0x21, 
-	0xab, 0x0b, 0xb5, 0xad, 0x5a, 0x53, 0x9c, 0xa5, 
-	0xb5, 0xad, 0x00, 0x01, 0x29, 0x09, 0x28, 0xc7, 
-	0xb5, 0xad, 0xa4, 0xa5, 0xb5, 0xad, 0x00, 0x01, 
-	0x20, 0x85, 0x73, 0x5b, 0x83, 0x9d, 0x83, 0xdf, 
-	0x8b, 0xdf, 0x8b, 0xdf, 0x83, 0x9d, 0x18, 0x41, 
-	0x10, 0x01, 0x9c, 0xa5, 0x83, 0x9d, 0x9c, 0xa5, 
-	0x20, 0x85, 0x39, 0x4b, 0x08, 0x01, 0x8b, 0xdf, 
-	0x62, 0x95, 0x6a, 0xd7, 0x94, 0x63, 0xcc, 0x95, 
-	0xab, 0x0b, 0xb5, 0xad, 0x39, 0x4b, 0x8b, 0xdf, 
-	0xb5, 0xad, 0x00, 0x01, 0x31, 0x09, 0x31, 0x49, 
-	0x08, 0x01, 0xb5, 0xad, 0xac, 0xe7, 0x00, 0x01, 
-	0x20, 0x85, 0x20, 0x85, 0x39, 0x4b, 0x5a, 0x53, 
-	0x52, 0x51, 0x41, 0x8d, 0x20, 0x85, 0x18, 0x43, 
-	0x00, 0x01, 0x94, 0x21, 0x94, 0x1f, 0x08, 0x01, 
-	0x28, 0xc7, 0x20, 0x85, 0x00, 0x01, 0x7b, 0x5b, 
-	0x6a, 0xd7, 0x6a, 0xd7, 0xac, 0xe7, 0xd4, 0x97, 
-	0xab, 0x0b, 0xb5, 0xad, 0x49, 0xcf, 0x6a, 0xd7, 
-	0xb5, 0x69, 0x00, 0x01, 0x18, 0x43, 0x28, 0xc7, 
-	0x28, 0xc5, 0xb5, 0xad, 0xa4, 0xa5, 0xb5, 0x6b, 
-	0x00, 0x01, 0x00, 0x01, 0x18, 0x43, 0x28, 0xc5, 
-	0x28, 0xc7, 0x28, 0xc5, 0x00, 0x01, 0x52, 0x11, 
-	0xa4, 0xa5, 0x94, 0x21, 0xa4, 0xa5, 0x20, 0x85, 
-	0x39, 0x4b, 0x10, 0x01, 0x9c, 0xa5, 0x6a, 0xd7, 
-	0x6a, 0xd7, 0x83, 0x9d, 0xb5, 0xad, 0xd4, 0x95, 
-	0xab, 0x0b, 0xc4, 0x11, 0xb5, 0xad, 0x49, 0xcf, 
-	0x9c, 0xa5, 0xb5, 0xad, 0x00, 0x01, 0x18, 0x85, 
-	0x28, 0xc7, 0x18, 0x41, 0xb5, 0xad, 0xa4, 0xa5, 
-	0xac, 0xe7, 0xb5, 0xad, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xb5, 0xad, 0x9c, 0xa5, 
-	0xb5, 0x6b, 0x9c, 0xa5, 0x10, 0x01, 0x28, 0xc7, 
-	0x20, 0x85, 0x00, 0x01, 0x73, 0x19, 0x62, 0x95, 
-	0x6a, 0xd7, 0x9c, 0xa3, 0xed, 0x19, 0xd4, 0x95, 
-	0xab, 0x0b, 0xcc, 0x11, 0xb5, 0xad, 0x49, 0xcf, 
-	0x6a, 0xd7, 0xb5, 0x6b, 0x00, 0x01, 0x18, 0x43, 
-	0x28, 0xc7, 0x31, 0x09, 0x18, 0x41, 0xb5, 0xad, 
-	0xb5, 0xad, 0xa4, 0xa5, 0xac, 0xa5, 0xb5, 0x6b, 
-	0xb5, 0x6b, 0xa4, 0xa5, 0x9c, 0xa3, 0x94, 0x63, 
-	0xac, 0xe7, 0x62, 0x95, 0x31, 0x09, 0x41, 0x4b, 
-	0x10, 0x41, 0xb5, 0x27, 0x73, 0x19, 0x73, 0x19, 
-	0x73, 0x17, 0xb5, 0x29, 0xed, 0x19, 0xd4, 0x97, 
-	0xb3, 0x4b, 0xcc, 0x11, 0xd4, 0x55, 0xb5, 0xad, 
-	0x49, 0xcf, 0xa4, 0xa5, 0xb5, 0xad, 0x00, 0x01, 
-	0x10, 0x43, 0x31, 0x09, 0x31, 0x09, 0x28, 0xc5, 
-	0x00, 0x01, 0xb5, 0xad, 0xb5, 0xad, 0xac, 0xe7, 
-	0xac, 0xa5, 0xac, 0xe7, 0xb5, 0x29, 0x00, 0x01, 
-	0x20, 0x85, 0x39, 0x4b, 0x49, 0xcd, 0x39, 0x4b, 
-	0x00, 0x01, 0x83, 0x9d, 0x6a, 0xd5, 0x73, 0x19, 
-	0x8b, 0xdf, 0xb5, 0xad, 0xec, 0xd7, 0xd4, 0x95, 
-	0xb3, 0x4d, 0xcc, 0x11, 0xcc, 0x55, 0xb5, 0xad, 
-	0x49, 0xcf, 0x73, 0x17, 0xa4, 0xa5, 0xb5, 0xad, 
-	0x00, 0x01, 0x18, 0x43, 0x29, 0x07, 0x39, 0x8b, 
-	0x39, 0x4b, 0x28, 0xc7, 0x10, 0x01, 0x18, 0x43, 
-	0x10, 0x01, 0x18, 0x41, 0x20, 0x85, 0x31, 0x09, 
-	0x41, 0x8d, 0x41, 0x8d, 0x39, 0x4b, 0x62, 0x95, 
-	0xb5, 0xad, 0x83, 0x9d, 0x73, 0x19, 0x73, 0x19, 
-	0xa4, 0xa5, 0xe4, 0x93, 0xec, 0xd7, 0xdc, 0x97, 
-	0xb3, 0x4d, 0xc3, 0xcf, 0xc4, 0x13, 0xcc, 0x53, 
-	0xb5, 0xad, 0x73, 0x19, 0x73, 0x17, 0xa4, 0xa5, 
-	0xb5, 0xad, 0x10, 0x43, 0x08, 0x01, 0x18, 0x43, 
-	0x18, 0x85, 0x31, 0x09, 0x39, 0x8b, 0x41, 0x8d, 
-	0x41, 0x8d, 0x41, 0x8d, 0x41, 0x8d, 0x41, 0x8d, 
-	0x31, 0x09, 0x20, 0x85, 0x08, 0x01, 0xa4, 0xa5, 
-	0xa4, 0xa5, 0x8b, 0xdf, 0x83, 0x9d, 0x83, 0x9d, 
-	0xb5, 0xad, 0xe4, 0x93, 0xec, 0x95, 0xdc, 0x95, 
-	0xb3, 0x4b, 0xc3, 0xcf, 0xbc, 0x11, 0xcc, 0x13, 
-	0xd4, 0x93, 0xb5, 0xad, 0x73, 0x19, 0x73, 0x17, 
-	0xa4, 0xa5, 0xb5, 0x6b, 0xb5, 0xad, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0x18, 0x43, 0x20, 0xc5, 
-	0x31, 0x09, 0x39, 0x4b, 0x28, 0xc7, 0x18, 0x01, 
-	0x00, 0x01, 0xb5, 0x29, 0x94, 0x61, 0x8b, 0xdf, 
-	0x94, 0x21, 0x94, 0x21, 0x94, 0x21, 0xb5, 0xad, 
-	0xec, 0x95, 0xe4, 0x93, 0xe4, 0x93, 0xd4, 0x55, 
-	0xb3, 0x4d, 0xc3, 0xcf, 0xc4, 0x11, 0xcc, 0x11, 
-	0xd4, 0x53, 0xd4, 0x95, 0xb5, 0xad, 0x49, 0xcf, 
-	0x49, 0xcf, 0x6a, 0xd7, 0x9c, 0xa5, 0xb5, 0x69, 
-	0xb5, 0xad, 0xb5, 0xad, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x01, 0xb5, 0x6b, 0xac, 0xe7, 
-	0x9c, 0xa5, 0x94, 0x21, 0x7b, 0x5b, 0x7b, 0x9b, 
-	0x94, 0x21, 0x94, 0x63, 0xb5, 0xad, 0xe4, 0x91, 
-	0xe4, 0x93, 0xe4, 0x95, 0xe4, 0x93, 0xd4, 0x53, 
-	0xb3, 0x4d, 0xbb, 0x8f, 0xbc, 0x11, 0xc4, 0x11, 
-	0xd4, 0x51, 0xd4, 0x53, 0xd4, 0x95, 0xb5, 0xad, 
-	0xb5, 0xad, 0x49, 0xcf, 0x49, 0xcf, 0x6a, 0xd7, 
-	0x8b, 0xdf, 0x9c, 0xa5, 0xb5, 0x29, 0xb5, 0xad, 
-	0xb5, 0xad, 0xac, 0xe5, 0x94, 0x63, 0x83, 0x9d, 
-	0x83, 0x9d, 0x83, 0x9b, 0x83, 0x9d, 0x94, 0x63, 
-	0xac, 0xe7, 0xb5, 0xad, 0xe4, 0x4f, 0xe4, 0x4f, 
-	0xe4, 0x93, 0xe4, 0x93, 0xdc, 0x51, 0xd4, 0x53, 
-	0xb3, 0x4d, 0xbb, 0x8f, 0xbb, 0xd1, 0xc3, 0xd1, 
-	0xcc, 0x11, 0xd4, 0x53, 0xd4, 0x55, 0xed, 0x1d, 
-	0xed, 0x1d, 0xb5, 0xad, 0xb5, 0xad, 0x5a, 0x53, 
-	0x5a, 0x53, 0x7b, 0x5b, 0x8b, 0xdf, 0x8b, 0xdf, 
-	0x8b, 0xdf, 0x8b, 0xdd, 0x83, 0x9d, 0x83, 0x9d, 
-	0x83, 0x9d, 0x9c, 0xa5, 0xb5, 0x6b, 0xb5, 0xad, 
-	0xec, 0xd7, 0xe4, 0x91, 0xdc, 0x4f, 0xdc, 0x4f, 
-	0xdc, 0x51, 0xe4, 0x93, 0xd4, 0x51, 0xdc, 0x95, 
-	0xab, 0x4d, 0xbb, 0x8f, 0xbb, 0xd1, 0xbb, 0xd1, 
-	0xc4, 0x11, 0xcc, 0x53, 0xd4, 0x55, 0xe5, 0x1d, 
-	0xe4, 0xdd, 0xdc, 0x97, 0xd4, 0x95, 0xb5, 0xad, 
-	0xb5, 0xad, 0x5a, 0x53, 0x39, 0x4b, 0x52, 0x11, 
-	0x6a, 0xd7, 0x7b, 0x5b, 0x9c, 0xa5, 0xb5, 0xab, 
-	0xb5, 0xad, 0xb5, 0xad, 0xc3, 0x8d, 0xec, 0x93, 
-	0xec, 0xd5, 0xe4, 0x4f, 0xdc, 0x0d, 0xdc, 0x0d, 
-	0xd4, 0x0d, 0xdc, 0x51, 0xd4, 0x0f, 0xd4, 0x53, 
-	0xa3, 0x0b, 0xb3, 0x4d, 0xbb, 0xd1, 0xc4, 0x11, 
-	0xcc, 0x13, 0xd4, 0x53, 0xd4, 0x95, 0xe5, 0x1d, 
-	0xe4, 0xdd, 0xd4, 0x95, 0xcc, 0x55, 0xdc, 0x51, 
-	0xdc, 0x0f, 0xb5, 0xad, 0xb5, 0xad, 0xb5, 0xad, 
-	0xb5, 0x6b, 0xa4, 0xa5, 0xb5, 0x6b, 0xdc, 0x93, 
-	0xe4, 0x93, 0xd4, 0x11, 0xc3, 0x4b, 0xe4, 0x91, 
-	0xec, 0x93, 0xe4, 0x4f, 0xdc, 0x0d, 0xd4, 0x0d, 
-	0xd4, 0x0f, 0xdc, 0x51, 0xcc, 0x0f, 0xcc, 0x11, 
-	
-};
-
-Gfx supergoomb__6B2D96F_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__6B2D96F_c_rgba16[] = {
-	0x35, 0x89, 0x4c, 0x8f, 0x4c, 0x91, 0x44, 0xcb, 
-	0x7a, 0x8b, 0x72, 0x8b, 0x62, 0x07, 0x82, 0xcd, 
-	0x8b, 0x4f, 0x83, 0x0f, 0x7a, 0xcb, 0x59, 0xc5, 
-	0x62, 0x49, 0x59, 0xc5, 0x59, 0xc7, 0x62, 0x07, 
-	0x41, 0x01, 0x62, 0x05, 0x83, 0x0f, 0x62, 0x09, 
-	0x28, 0x41, 0x51, 0x83, 0x7a, 0xcd, 0x72, 0x8b, 
-	0x49, 0x41, 0x40, 0xc1, 0x2b, 0x41, 0x24, 0x01, 
-	0x03, 0x81, 0x15, 0xc1, 0x15, 0x81, 0x15, 0xc1, 
-	0x35, 0xc5, 0x45, 0x05, 0x7a, 0xcb, 0x7a, 0x8b, 
-	0x49, 0x01, 0x82, 0xcd, 0x7a, 0xcd, 0x6a, 0x49, 
-	0x83, 0x0f, 0x8b, 0x4f, 0x83, 0x0f, 0x8b, 0x0f, 
-	0x6a, 0x49, 0x62, 0x05, 0x6a, 0x07, 0x6a, 0x49, 
-	0x49, 0x43, 0x38, 0x81, 0x51, 0x85, 0x49, 0x03, 
-	0x28, 0x41, 0x20, 0x01, 0x28, 0x01, 0x40, 0xc1, 
-	0x49, 0x01, 0x51, 0x41, 0x2b, 0x01, 0x03, 0xc1, 
-	0x1d, 0x41, 0x24, 0x41, 0x02, 0x41, 0x1d, 0x43, 
-	0x45, 0x45, 0x82, 0xcb, 0x7a, 0xcb, 0x82, 0xcb, 
-	0x49, 0x41, 0x83, 0x0d, 0x59, 0x83, 0x72, 0x8b, 
-	0x83, 0x0f, 0x8b, 0x51, 0x51, 0x41, 0x61, 0xc5, 
-	0xb4, 0x9b, 0x61, 0xc5, 0x28, 0x01, 0x30, 0x41, 
-	0x62, 0x07, 0x59, 0xc3, 0x51, 0x41, 0x38, 0xc1, 
-	0x40, 0xc1, 0x38, 0x81, 0x38, 0xc1, 0x49, 0x01, 
-	0x51, 0x41, 0x62, 0x07, 0x59, 0x83, 0x33, 0x01, 
-	0x3a, 0x01, 0x22, 0x81, 0x1d, 0x43, 0x0e, 0x41, 
-	0x6b, 0x5b, 0x93, 0x91, 0x8b, 0x0f, 0x8b, 0x4f, 
-	0x72, 0x89, 0x49, 0x41, 0x38, 0xc1, 0x40, 0xc1, 
-	0x72, 0x8b, 0x8b, 0x4f, 0x20, 0x01, 0x20, 0x01, 
-	0x7a, 0xcd, 0x72, 0x89, 0x20, 0x01, 0x18, 0x01, 
-	0x83, 0x0f, 0x62, 0x07, 0x49, 0x41, 0x62, 0x07, 
-	0x38, 0xc1, 0x30, 0x81, 0x62, 0x07, 0x59, 0xc5, 
-	0x6a, 0x4b, 0x72, 0xcd, 0x7a, 0xcd, 0x40, 0xc1, 
-	0x30, 0xc1, 0x23, 0xc1, 0x1c, 0xc1, 0x05, 0xc1, 
-	0x26, 0x85, 0x1c, 0x01, 0xac, 0x59, 0x7a, 0xcb, 
-	0x62, 0x05, 0x6a, 0x07, 0x6a, 0x07, 0x51, 0x81, 
-	0x38, 0xc1, 0x40, 0xc1, 0x38, 0x81, 0x30, 0x41, 
-	0x28, 0x41, 0x49, 0x41, 0x6a, 0x47, 0x41, 0x01, 
-	0x49, 0x01, 0x83, 0x0f, 0x72, 0xcd, 0x7b, 0x11, 
-	0x72, 0xcd, 0x51, 0x83, 0x82, 0xcd, 0x83, 0x0f, 
-	0x8b, 0x51, 0x83, 0x0f, 0x8b, 0x51, 0x38, 0x81, 
-	0x30, 0x81, 0x32, 0xc1, 0x25, 0x83, 0x04, 0xc1, 
-	0x35, 0xc7, 0x64, 0x8b, 0x74, 0x8f, 0x4b, 0x45, 
-	0x4a, 0x45, 0x7a, 0x8b, 0x51, 0x41, 0x6a, 0x07, 
-	0x62, 0x05, 0x30, 0x41, 0x59, 0xc3, 0x38, 0x81, 
-	0x49, 0x41, 0x83, 0x0d, 0x93, 0x91, 0x49, 0x01, 
-	0x20, 0x01, 0x62, 0x07, 0x59, 0xc5, 0x72, 0x8b, 
-	0x83, 0x0f, 0x6a, 0x47, 0x59, 0xc3, 0x83, 0x0f, 
-	0x7a, 0xcb, 0x8b, 0x4f, 0x72, 0x89, 0x51, 0x83, 
-	0x38, 0xc1, 0x6a, 0x07, 0x44, 0x05, 0x04, 0x81, 
-	0x35, 0xc5, 0x04, 0x01, 0x15, 0xc1, 0x1d, 0x03, 
-	0x33, 0x43, 0x59, 0x83, 0x8b, 0x0d, 0x83, 0x0d, 
-	0x6a, 0x49, 0x30, 0x81, 0x59, 0xc3, 0x62, 0x05, 
-	0x7a, 0xcb, 0x7a, 0xcb, 0x8b, 0x0d, 0x41, 0x01, 
-	0x49, 0x41, 0x28, 0x41, 0x59, 0xc3, 0x41, 0x01, 
-	0x49, 0x01, 0x20, 0x01, 0x20, 0x01, 0x51, 0x81, 
-	0x51, 0x81, 0x83, 0x0d, 0x72, 0x49, 0x9b, 0xd5, 
-	0x72, 0x8b, 0x72, 0x8b, 0x16, 0x01, 0x06, 0x01, 
-	0x2e, 0x07, 0x05, 0x81, 0x1e, 0x03, 0x25, 0x03, 
-	0x25, 0x03, 0x33, 0x01, 0x6a, 0x07, 0x82, 0xcb, 
-	0x51, 0x41, 0x40, 0xc1, 0x7a, 0xcd, 0x72, 0x89, 
-	0x72, 0x89, 0x82, 0xcb, 0x72, 0x89, 0x62, 0x05, 
-	0x8b, 0x0d, 0x40, 0xc1, 0x51, 0x81, 0x62, 0x07, 
-	0x20, 0x01, 0x40, 0xc1, 0x51, 0x41, 0x38, 0x81, 
-	0x51, 0x81, 0x72, 0x89, 0x28, 0x01, 0x82, 0xcd, 
-	0x93, 0x93, 0x61, 0xc5, 0x3c, 0x85, 0x06, 0x01, 
-	0x43, 0x45, 0x3d, 0x89, 0x5c, 0x8d, 0x4c, 0xc9, 
-	0x59, 0xc5, 0x61, 0xc5, 0x38, 0x81, 0x30, 0x81, 
-	0x49, 0x01, 0x41, 0x01, 0x72, 0x8b, 0x7a, 0xcb, 
-	0x7a, 0xcb, 0x82, 0xcb, 0x72, 0x89, 0x20, 0x01, 
-	0x72, 0x47, 0x59, 0x81, 0x20, 0x01, 0x28, 0x01, 
-	0x20, 0x01, 0x7a, 0x87, 0x82, 0xcb, 0x61, 0xc3, 
-	0x61, 0xc5, 0x8b, 0x51, 0x49, 0x01, 0x30, 0x41, 
-	0x30, 0x41, 0x20, 0x01, 0x14, 0x01, 0x04, 0x41, 
-	0x2d, 0x05, 0x52, 0x05, 0x51, 0x85, 0x9c, 0x17, 
-	0x6a, 0x49, 0x38, 0x81, 0x28, 0x01, 0x28, 0x01, 
-	0x20, 0x01, 0x28, 0x01, 0x30, 0x41, 0x61, 0xc5, 
-	0x82, 0xcb, 0x82, 0xcb, 0x51, 0x83, 0x10, 0x01, 
-	0x59, 0xc3, 0x49, 0x01, 0x41, 0x01, 0x51, 0x81, 
-	0x40, 0xc1, 0x83, 0x0b, 0x9b, 0xcf, 0x82, 0xc9, 
-	0x82, 0xcd, 0x93, 0x93, 0x72, 0x49, 0x59, 0x81, 
-	0x59, 0xc5, 0x1c, 0x01, 0x26, 0x07, 0x06, 0x01, 
-	0x46, 0x09, 0x45, 0x0f, 0x38, 0xc1, 0x59, 0x83, 
-	0x49, 0x01, 0x38, 0x81, 0x7a, 0x45, 0x93, 0x0b, 
-	0x49, 0x01, 0x20, 0x01, 0x28, 0x01, 0x18, 0x01, 
-	0x28, 0x01, 0x62, 0x05, 0x6a, 0x07, 0x51, 0x41, 
-	0x62, 0x05, 0x40, 0xc1, 0x51, 0x81, 0x51, 0x81, 
-	0x51, 0x81, 0x38, 0xc1, 0x59, 0x81, 0x82, 0xc9, 
-	0x6a, 0x47, 0x7a, 0xcd, 0x72, 0x89, 0x6a, 0x47, 
-	0x3c, 0xc3, 0x2d, 0x83, 0x2c, 0x85, 0x06, 0x01, 
-	0x1e, 0xc3, 0x7c, 0x8f, 0x51, 0x41, 0x20, 0x01, 
-	0x30, 0x81, 0x72, 0x03, 0xa3, 0x8d, 0x8b, 0x0b, 
-	0x59, 0x83, 0x49, 0x41, 0x59, 0x83, 0x62, 0x07, 
-	0x40, 0xc1, 0x20, 0x01, 0x6a, 0x47, 0x72, 0x47, 
-	0x59, 0x83, 0x61, 0xc5, 0x72, 0x8b, 0x59, 0xc3, 
-	0x49, 0x41, 0x49, 0x41, 0x38, 0xc1, 0x20, 0x01, 
-	0x28, 0x01, 0x6a, 0x49, 0x7a, 0x8b, 0x5c, 0x09, 
-	0x4c, 0x07, 0x3d, 0x05, 0x04, 0x81, 0x06, 0x01, 
-	0x04, 0x81, 0x9b, 0xd3, 0x8b, 0x0d, 0x40, 0xc1, 
-	0x38, 0x81, 0x69, 0xc1, 0x69, 0xc1, 0x93, 0x0d, 
-	0x61, 0xc5, 0x59, 0xc5, 0x6a, 0x09, 0x59, 0xc5, 
-	0x59, 0xc5, 0x49, 0x41, 0x20, 0x01, 0x59, 0x81, 
-	0x62, 0x07, 0x51, 0x83, 0x62, 0x4b, 0x6a, 0x49, 
-	0x59, 0xc5, 0x6a, 0x49, 0x83, 0x51, 0x59, 0xc5, 
-	0x51, 0x83, 0x51, 0x41, 0x62, 0x07, 0x62, 0x05, 
-	0x5b, 0x07, 0x16, 0x01, 0x0b, 0xc1, 0x3d, 0xc9, 
-	0x44, 0xc7, 0x3c, 0x05, 0x72, 0x47, 0x40, 0xc1, 
-	0x40, 0xc1, 0x72, 0x45, 0x6a, 0x05, 0x7a, 0x89, 
-	0x41, 0x01, 0x38, 0xc1, 0x6a, 0x49, 0x62, 0x07, 
-	0x51, 0x85, 0x51, 0x85, 0x18, 0x01, 0x49, 0x01, 
-	0x59, 0xc5, 0x30, 0x81, 0x38, 0xc1, 0x40, 0xc1, 
-	0x40, 0xc1, 0x8b, 0x53, 0x93, 0x95, 0x9c, 0x19, 
-	0x7b, 0x0f, 0x72, 0x8d, 0x51, 0x81, 0x40, 0xc1, 
-	0x59, 0xc5, 0x7a, 0xcd, 0x05, 0x81, 0x45, 0x49, 
-	0x06, 0x01, 0x24, 0x81, 0x41, 0x03, 0x51, 0x47, 
-	0x28, 0x41, 0x28, 0x01, 0x40, 0xc1, 0x49, 0x01, 
-	0x40, 0xc1, 0x20, 0x01, 0x59, 0x83, 0x72, 0x89, 
-	0x59, 0xc5, 0x72, 0x8b, 0x30, 0x41, 0x38, 0x81, 
-	0x51, 0x83, 0x30, 0x81, 0x59, 0x81, 0x49, 0x01, 
-	0x38, 0x81, 0x59, 0xc9, 0x83, 0x51, 0x93, 0x93, 
-	0x7a, 0xcd, 0x6a, 0x49, 0x83, 0x0f, 0x59, 0xc5, 
-	0x51, 0x83, 0x72, 0x8b, 0x64, 0x8f, 0x45, 0x8b, 
-	0x04, 0x81, 0x0e, 0x81, 0x02, 0xc1, 0x24, 0x81, 
-	0x49, 0x03, 0x59, 0xc3, 0x20, 0x01, 0x30, 0x41, 
-	0x49, 0x01, 0x49, 0x03, 0x28, 0x41, 0x51, 0x45, 
-	0x49, 0x45, 0x38, 0xc1, 0x40, 0xc1, 0x6a, 0x47, 
-	0x94, 0x19, 0x51, 0x83, 0x38, 0xc1, 0x51, 0x83, 
-	0x40, 0xc1, 0x72, 0x8b, 0x93, 0xd7, 0x7a, 0xcf, 
-	0x83, 0x0f, 0x51, 0x83, 0x83, 0x0f, 0x83, 0x11, 
-	0x6a, 0x49, 0x9c, 0x19, 0x74, 0xd3, 0x07, 0x81, 
-	0x16, 0x01, 0x25, 0x01, 0x04, 0x81, 0x06, 0x01, 
-	0x55, 0xcb, 0x9c, 0x17, 0x49, 0x45, 0x40, 0xc3, 
-	0x72, 0x89, 0x6a, 0x47, 0x51, 0x87, 0x6a, 0x4b, 
-	0x59, 0xc7, 0x62, 0x07, 0x61, 0xc5, 0x51, 0x81, 
-	0x40, 0xc1, 0x49, 0x01, 0x59, 0xc3, 0x59, 0x81, 
-	0x51, 0x83, 0x59, 0xc5, 0x49, 0x01, 0x59, 0x81, 
-	0x72, 0x89, 0x82, 0xcd, 0x9c, 0x15, 0x93, 0x91, 
-	0x9c, 0x15, 0x9c, 0x19, 0x8b, 0xdb, 0x55, 0xcd, 
-	0x04, 0xc1, 0x42, 0xc1, 0x2c, 0x81, 0x24, 0x41, 
-	0x62, 0x07, 0x83, 0x0d, 0x83, 0x0f, 0x83, 0x0f, 
-	0x6a, 0x49, 0x6a, 0x05, 0x7a, 0xcd, 0x83, 0x0f, 
-	0x93, 0x93, 0x59, 0xc5, 0x49, 0x41, 0x7a, 0xcb, 
-	0x6a, 0x49, 0x41, 0x01, 0x49, 0x41, 0x59, 0x83, 
-	0x59, 0xc5, 0x59, 0x83, 0x51, 0x41, 0x30, 0x81, 
-	0x61, 0xc5, 0x82, 0xcd, 0x7a, 0xcb, 0x93, 0x91, 
-	0xac, 0x99, 0xb4, 0x9b, 0x94, 0x1b, 0x4d, 0xcd, 
-	0x0f, 0x01, 0x3d, 0x05, 0x18, 0x01, 0x38, 0xc1, 
-	0x49, 0x41, 0x51, 0x41, 0x49, 0x01, 0x83, 0x0f, 
-	0x83, 0x0f, 0x7a, 0x8b, 0x83, 0x0d, 0x8b, 0x0f, 
-	0x7a, 0x8b, 0x7a, 0x8b, 0x49, 0x01, 0x62, 0x05, 
-	0x83, 0x0f, 0x51, 0x41, 0x40, 0xc1, 0x59, 0x83, 
-	0x62, 0x05, 0x51, 0x81, 0x51, 0x41, 0x49, 0x01, 
-	0x30, 0x81, 0x49, 0x01, 0x49, 0x01, 0x61, 0xc5, 
-	0x51, 0x83, 0x24, 0x81, 0x16, 0x01, 0x07, 0x81, 
-	0x35, 0x85, 0x7a, 0x8b, 0x7a, 0x8d, 0x62, 0x07, 
-	0x59, 0xc5, 0x59, 0x83, 0x40, 0xc1, 0x40, 0xc1, 
-	0x6a, 0x07, 0x8b, 0x4f, 0x83, 0x0d, 0x61, 0xc5, 
-	0x49, 0x01, 0x7a, 0x8b, 0x61, 0xc5, 0x51, 0x41, 
-	0x6a, 0x4b, 0x62, 0x07, 0x30, 0x81, 0x59, 0x83, 
-	0x59, 0x83, 0x51, 0x41, 0x51, 0x83, 0x61, 0xc5, 
-	0x30, 0x81, 0x30, 0x41, 0x28, 0x01, 0x22, 0x41, 
-	0x22, 0xc1, 0x1d, 0x01, 0x1c, 0xc3, 0x0e, 0x41, 
-	0x13, 0x81, 0x54, 0x89, 0x93, 0x51, 0x72, 0x8b, 
-	0x7a, 0xcd, 0x62, 0x05, 0x59, 0x81, 0x51, 0x81, 
-	0x30, 0x41, 0x51, 0x81, 0x61, 0xc5, 0x6a, 0x07, 
-	0x49, 0x01, 0x30, 0x41, 0x30, 0x41, 0x59, 0xc3, 
-	0x6a, 0x09, 0x51, 0x87, 0x28, 0x01, 0x38, 0x81, 
-	0x59, 0x83, 0x6a, 0x47, 0x6a, 0x07, 0x61, 0xc5, 
-	0x49, 0x03, 0x49, 0x03, 0x51, 0x83, 0x51, 0x83, 
-	0x49, 0x41, 0x1d, 0x01, 0x06, 0x01, 0x25, 0x03, 
-	0x05, 0x81, 0x04, 0xc1, 0x4d, 0x49, 0x7a, 0xcd, 
-	0x7a, 0x89, 0x93, 0x8f, 0x7a, 0x89, 0x6a, 0x45, 
-	0x6a, 0x05, 0x61, 0xc1, 0x38, 0x81, 0x59, 0x81, 
-	0x49, 0x41, 0x49, 0x01, 0x38, 0xc1, 0x51, 0x41, 
-	0x49, 0x05, 0x38, 0x83, 0x28, 0x01, 0x28, 0x41, 
-	0x62, 0x07, 0x6a, 0x49, 0x6a, 0x49, 0x59, 0x83, 
-	0x59, 0x85, 0x9b, 0xd5, 0x8b, 0x0f, 0x72, 0x8b, 
-	0x62, 0x07, 0x41, 0x01, 0x1c, 0x81, 0x33, 0xc3, 
-	0x03, 0xc1, 0x05, 0x81, 0x06, 0x01, 0x1c, 0x41, 
-	0x8b, 0x0d, 0x9b, 0xd1, 0x8b, 0x0b, 0x72, 0x47, 
-	0x6a, 0x05, 0x82, 0xc9, 0x93, 0x8b, 0x61, 0xc3, 
-	0x51, 0x83, 0x38, 0xc1, 0x30, 0x41, 0x30, 0x41, 
-	0x38, 0xc1, 0x41, 0x03, 0x38, 0xc1, 0x28, 0x41, 
-	0x83, 0x0f, 0x72, 0x8b, 0x62, 0x07, 0x62, 0x07, 
-	0x6a, 0x49, 0xa4, 0x57, 0x9c, 0x15, 0x93, 0xd5, 
-	0x6a, 0x4b, 0x59, 0xc7, 0x07, 0x81, 0x16, 0x01, 
-	0x04, 0x01, 0x35, 0x8d, 0x34, 0xc3, 0x38, 0x81, 
-	0x38, 0x81, 0x72, 0x47, 0x93, 0x8d, 0x7a, 0x45, 
-	0x61, 0xc3, 0x6a, 0x05, 0x72, 0x87, 0x82, 0xcb, 
-	0x59, 0xc5, 0x59, 0xc5, 0x49, 0x41, 0x30, 0x81, 
-	0x62, 0x07, 0x72, 0x89, 0x7a, 0xcd, 0x40, 0xc3, 
-	0x72, 0x8b, 0x7a, 0xcd, 0x59, 0xc5, 0x59, 0x87, 
-	0x93, 0x91, 0xa4, 0x57, 0xa4, 0x5b, 0xac, 0x9d, 
-	0x83, 0x53, 0x59, 0xc7, 0x45, 0x49, 0x2c, 0x83, 
-	0x2d, 0x87, 0x44, 0xd1, 0x62, 0x07, 0x40, 0xc1, 
-	0x30, 0x41, 0x40, 0xc1, 0x6a, 0x07, 0x61, 0xc5, 
-	0x6a, 0x49, 0x72, 0x8b, 0x6a, 0x47, 0x62, 0x07, 
-	0x62, 0x07, 0x72, 0x89, 0x83, 0x0d, 0x62, 0x05, 
-	0x51, 0x41, 0x93, 0xd5, 0x6a, 0x09, 0x41, 0x03, 
-	0x6a, 0x09, 0x7b, 0x0f, 0x51, 0x41, 0x41, 0x03, 
-	0x72, 0x89, 0x93, 0x93, 0x9c, 0x17, 0x9c, 0x59, 
-	0x93, 0xd7, 0x6a, 0x8b, 0x4d, 0x8d, 0x26, 0x85, 
-	0x03, 0x01, 0x5a, 0xc5, 0x51, 0x83, 0x49, 0x03, 
-	0x9b, 0xd3, 0x93, 0x4f, 0x72, 0x47, 0x72, 0x47, 
-	0x61, 0xc5, 0x51, 0x41, 0x59, 0x85, 0x62, 0x07, 
-	0x51, 0x83, 0x6a, 0x07, 0x72, 0x89, 0x7a, 0x8b, 
-	0x6a, 0x47, 0x93, 0xd3, 0x93, 0x91, 0x6a, 0x07, 
-	0x51, 0x87, 0x59, 0xc5, 0x49, 0x41, 0x38, 0x81, 
-	0x40, 0xc1, 0x51, 0x41, 0x8b, 0x51, 0xac, 0x9b, 
-	0x8b, 0x95, 0x72, 0x8b, 0x0b, 0x41, 0x2d, 0x85, 
-	0x16, 0x83, 0x4b, 0x85, 0x6a, 0x47, 0x51, 0x85, 
-	0xa4, 0x57, 0x93, 0x91, 0x93, 0x91, 0x93, 0x4f, 
-	0x72, 0x49, 0x38, 0x81, 0x38, 0x81, 0x72, 0x49, 
-	0x6a, 0x49, 0x6a, 0x07, 0x6a, 0x47, 0x93, 0x91, 
-	0x62, 0x05, 0x8b, 0x51, 0x7a, 0x8b, 0x62, 0x07, 
-	0x59, 0xc5, 0x8b, 0x4f, 0x6a, 0x49, 0x59, 0x83, 
-	0x38, 0xc1, 0x20, 0x01, 0x59, 0xc5, 0xbc, 0x9d, 
-	0x93, 0xd5, 0x62, 0x07, 0x3c, 0x85, 0x04, 0x01, 
-	0x04, 0xc1, 0x3c, 0x83, 0x34, 0xc3, 0x2c, 0x83, 
-	0x93, 0x93, 0x7a, 0xcb, 0x8b, 0x51, 0x93, 0x91, 
-	0x8b, 0x0d, 0x72, 0x89, 0x51, 0x41, 0x49, 0x01, 
-	0x51, 0x83, 0x6a, 0x47, 0x83, 0x0b, 0x83, 0x0d, 
-	0x51, 0x41, 0x61, 0xc5, 0x62, 0x09, 0x6a, 0x07, 
-	0x83, 0x0f, 0x93, 0x4f, 0x82, 0xcb, 0x7a, 0xcb, 
-	0x6a, 0x09, 0x51, 0x85, 0x51, 0x43, 0x72, 0x49, 
-	0x93, 0xd3, 0x2d, 0x05, 0x2d, 0x45, 0x05, 0xc1, 
-	0x07, 0x81, 0x16, 0x81, 0x2c, 0x83, 0x59, 0xc5, 
-	0x40, 0xc3, 0x82, 0xcd, 0x72, 0x89, 0x9c, 0x17, 
-	0x83, 0x0d, 0x62, 0x07, 0x30, 0x41, 0x30, 0x41, 
-	0x59, 0xc3, 0x49, 0x01, 0x51, 0x81, 0x38, 0xc1, 
-	0x59, 0xc3, 0x49, 0x01, 0x62, 0x07, 0x72, 0x49, 
-	0x83, 0x0d, 0x8b, 0x4f, 0x8b, 0x0f, 0x8b, 0x4f, 
-	0x72, 0x89, 0x59, 0x83, 0x42, 0x83, 0x53, 0x87, 
-	0x4b, 0xc7, 0x25, 0xc7, 0x26, 0x05, 0x0f, 0x41, 
-	0x04, 0xc1, 0x55, 0xcd, 0xa4, 0x59, 0x83, 0x0d, 
-	0x30, 0x41, 0x40, 0xc1, 0x41, 0x01, 0x51, 0x43, 
-	0x49, 0x41, 0x49, 0x41, 0x51, 0x83, 0x40, 0xc1, 
-	0x59, 0x81, 0x30, 0x81, 0x41, 0x01, 0x38, 0xc1, 
-	0x62, 0x05, 0x51, 0x81, 0x59, 0xc7, 0x6a, 0x47, 
-	0x62, 0x07, 0x93, 0x4f, 0x93, 0x93, 0x93, 0x93, 
-	0x8b, 0x4f, 0x7a, 0xcd, 0x41, 0x01, 0x6a, 0x47, 
-	0x34, 0xc3, 0x34, 0xc7, 0x05, 0x41, 0x1e, 0x47, 
-	0x06, 0x01, 0x2e, 0x85, 0x93, 0xd5, 0x93, 0xd3, 
-	0x49, 0x01, 0x49, 0x41, 0x59, 0xc5, 0x72, 0x8b, 
-	0x6a, 0x8b, 0x72, 0x8b, 0x83, 0x0f, 0x51, 0x41, 
-	0x49, 0x01, 0x49, 0x41, 0x72, 0x8b, 0x72, 0xcd, 
-	0x30, 0x81, 0x41, 0x01, 0x49, 0x45, 0x59, 0xc5, 
-	0x59, 0xc5, 0x83, 0x0d, 0x8b, 0x4f, 0x8b, 0x51, 
-	0x9b, 0xd5, 0xa4, 0x17, 0x62, 0x05, 0x72, 0x49, 
-	0x3c, 0xc5, 0x26, 0x05, 0x05, 0x41, 0x3d, 0x0f, 
-	0x06, 0x01, 0x5e, 0x0d, 0xac, 0x9b, 0x93, 0xd3, 
-	0x72, 0x47, 0x6a, 0x09, 0x6a, 0x49, 0x82, 0xcd, 
-	0x83, 0x0d, 0x7a, 0xcd, 0x7a, 0xcb, 0x59, 0x81, 
-	0x61, 0xc5, 0x6a, 0x49, 0x72, 0x8d, 0x62, 0x0b, 
-	0x10, 0x01, 0x18, 0x01, 0x39, 0x03, 0x59, 0x85, 
-	0x51, 0x83, 0x72, 0x89, 0x83, 0x0d, 0x93, 0xd5, 
-	0x8b, 0x51, 0x93, 0x93, 0x7a, 0x8b, 0x3d, 0x05, 
-	0x04, 0xc1, 0x06, 0x01, 0x1e, 0x85, 0x05, 0x81, 
-	
-};
-
-Gfx supergoomb__12436720_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__12436720_c_rgba16[] = {
-	0x05, 0x47, 0x05, 0xcb, 0x04, 0xc1, 0x04, 0x81, 
-	0x05, 0x03, 0x04, 0x81, 0x05, 0x89, 0x05, 0x05, 
-	0x05, 0x45, 0x16, 0x51, 0x05, 0xcb, 0x05, 0x89, 
-	0x05, 0x03, 0x05, 0x05, 0x05, 0x47, 0x04, 0xc3, 
-	0x05, 0x47, 0x05, 0x89, 0x04, 0xc3, 0x05, 0x47, 
-	0x05, 0x05, 0x05, 0x05, 0x04, 0xc5, 0x04, 0xc3, 
-	0x05, 0xc7, 0x05, 0x87, 0x05, 0x87, 0x05, 0x05, 
-	0x05, 0x47, 0x04, 0x81, 0x05, 0x89, 0x05, 0x05, 
-	0x05, 0x87, 0x05, 0x45, 0x05, 0x03, 0x05, 0x01, 
-	0x1e, 0x53, 0x16, 0x51, 0x05, 0x87, 0x05, 0x01, 
-	0x05, 0x45, 0x05, 0xc7, 0x05, 0x03, 0x05, 0x05, 
-	0x05, 0x89, 0x0d, 0xcd, 0x05, 0x47, 0x05, 0x89, 
-	0x05, 0x87, 0x05, 0x05, 0x05, 0x05, 0x0d, 0xcf, 
-	0x05, 0x4b, 0x05, 0x07, 0x05, 0x03, 0x05, 0x8b, 
-	0x05, 0x87, 0x04, 0x81, 0x05, 0x47, 0x05, 0x03, 
-	0x05, 0x47, 0x05, 0x89, 0x05, 0x89, 0x05, 0x47, 
-	0x05, 0x45, 0x05, 0x45, 0x05, 0x03, 0x1e, 0x8d, 
-	0x05, 0x8b, 0x05, 0xcd, 0x05, 0x47, 0x05, 0x45, 
-	0x16, 0x0d, 0x05, 0x43, 0x05, 0xcb, 0x16, 0x4f, 
-	0x04, 0xc3, 0x05, 0x89, 0x05, 0x05, 0x05, 0x45, 
-	0x1d, 0xc3, 0x46, 0xcb, 0x05, 0x4b, 0x04, 0x81, 
-	0x05, 0x49, 0x04, 0xc7, 0x05, 0x49, 0x05, 0x49, 
-	0x05, 0x05, 0x05, 0x87, 0x05, 0x45, 0x05, 0x89, 
-	0x05, 0x45, 0x05, 0x05, 0x05, 0x47, 0x05, 0x89, 
-	0x05, 0xcb, 0x05, 0x45, 0x04, 0xc1, 0x16, 0x4b, 
-	0x04, 0xc3, 0x05, 0x05, 0x04, 0xc1, 0x05, 0x89, 
-	0x04, 0x81, 0x1e, 0x8d, 0x05, 0x87, 0x05, 0x01, 
-	0x05, 0x47, 0x05, 0x8b, 0x05, 0x05, 0x04, 0xc5, 
-	0x05, 0x07, 0x05, 0x07, 0x05, 0x49, 0x04, 0x81, 
-	0x36, 0x99, 0x05, 0x4d, 0x05, 0x07, 0x05, 0x89, 
-	0x05, 0x01, 0x16, 0x0f, 0x05, 0xcb, 0x05, 0x49, 
-	0x05, 0xcd, 0x04, 0x81, 0x04, 0xc3, 0x05, 0x47, 
-	0x05, 0xcd, 0x04, 0x81, 0x05, 0x87, 0x05, 0xc7, 
-	0x04, 0x81, 0x4f, 0x9f, 0x0e, 0x0f, 0x04, 0xc3, 
-	0x05, 0x03, 0x05, 0x45, 0x04, 0xc3, 0x05, 0x05, 
-	0x05, 0x05, 0x05, 0x47, 0x04, 0x85, 0x05, 0x4b, 
-	0x05, 0x8d, 0x05, 0x8b, 0x05, 0x49, 0x05, 0x4b, 
-	0x57, 0xa1, 0x0d, 0xcf, 0x05, 0x8d, 0x05, 0x8d, 
-	0x05, 0x47, 0x05, 0x89, 0x05, 0x03, 0x04, 0xc1, 
-	0x05, 0x49, 0x04, 0x83, 0x05, 0x07, 0x16, 0x51, 
-	0x05, 0x89, 0x05, 0x47, 0x0e, 0x0d, 0x04, 0xc1, 
-	0x05, 0x05, 0x05, 0xcd, 0x04, 0xc3, 0x05, 0x45, 
-	0x26, 0x01, 0x04, 0xc1, 0x06, 0x0b, 0x05, 0x07, 
-	0x04, 0x81, 0x05, 0x8b, 0x05, 0x09, 0x05, 0x49, 
-	0x04, 0xc3, 0x05, 0x49, 0x05, 0x8b, 0x2e, 0x97, 
-	0x04, 0x83, 0x04, 0xc5, 0x0d, 0x8f, 0x04, 0x83, 
-	0x05, 0x01, 0x67, 0x41, 0x05, 0xcb, 0x05, 0x8b, 
-	0x05, 0x8b, 0x26, 0x97, 0x05, 0x49, 0x0e, 0x0f, 
-	0x05, 0x49, 0x05, 0x89, 0x05, 0x47, 0x05, 0x03, 
-	0x05, 0x07, 0x04, 0xc5, 0x05, 0x07, 0x1e, 0x09, 
-	0x1d, 0xc1, 0x04, 0xc3, 0x04, 0xc3, 0x04, 0xc3, 
-	0x04, 0xc3, 0x04, 0x81, 0x04, 0x81, 0x05, 0x07, 
-	0x05, 0x49, 0x04, 0x81, 0x05, 0x05, 0x04, 0x81, 
-	0x04, 0x81, 0x1e, 0x53, 0x04, 0x83, 0x04, 0x83, 
-	0x05, 0x87, 0x2e, 0x45, 0x05, 0x05, 0x05, 0x05, 
-	0x05, 0x49, 0x05, 0x8b, 0x04, 0x83, 0x05, 0x49, 
-	0x05, 0x07, 0x04, 0xc3, 0x04, 0x81, 0x04, 0xc1, 
-	0x04, 0x85, 0x04, 0xc5, 0x05, 0x07, 0x04, 0x41, 
-	0x05, 0x49, 0x0e, 0x0d, 0x04, 0xc3, 0x05, 0x47, 
-	0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
-	0x04, 0xc1, 0x05, 0xcd, 0x05, 0x49, 0x05, 0x07, 
-	0x05, 0x8b, 0x04, 0xc5, 0x04, 0x83, 0x0d, 0xcf, 
-	0x05, 0x87, 0x05, 0x89, 0x0d, 0xcd, 0x05, 0x07, 
-	0x04, 0xc5, 0x04, 0xc5, 0x04, 0xc5, 0x04, 0xc5, 
-	0x05, 0x07, 0x04, 0x81, 0x16, 0x0f, 0x05, 0x87, 
-	0x05, 0x09, 0x0d, 0xd1, 0x05, 0x4b, 0x05, 0x09, 
-	0x05, 0x49, 0x04, 0xc7, 0x05, 0x8d, 0x04, 0xc1, 
-	0x04, 0xc1, 0x04, 0x81, 0x05, 0x47, 0x05, 0x8b, 
-	0x05, 0xcd, 0x0e, 0x0d, 0x16, 0x11, 0x05, 0x49, 
-	0x04, 0xc5, 0x04, 0xc1, 0x05, 0x8b, 0x05, 0x07, 
-	0x04, 0xc3, 0x05, 0x05, 0x05, 0x05, 0x05, 0x07, 
-	0x04, 0xc5, 0x05, 0x07, 0x05, 0x07, 0x04, 0xc5, 
-	0x04, 0xc5, 0x05, 0x07, 0x04, 0x83, 0x04, 0xc7, 
-	0x36, 0xd7, 0x04, 0x81, 0x05, 0x05, 0x05, 0x43, 
-	0x05, 0x47, 0x05, 0xcb, 0x04, 0xc5, 0x04, 0xc1, 
-	0x04, 0xc5, 0x04, 0xc3, 0x05, 0x07, 0x05, 0x07, 
-	0x05, 0x09, 0x04, 0xc9, 0x04, 0xc7, 0x16, 0x11, 
-	0x04, 0xc5, 0x0d, 0xcf, 0x0d, 0xcf, 0x04, 0xc5, 
-	0x05, 0x47, 0x05, 0x49, 0x05, 0x07, 0x05, 0x8d, 
-	0x04, 0xc5, 0x04, 0x81, 0x05, 0x07, 0x05, 0x07, 
-	0x05, 0x07, 0x04, 0xc5, 0x05, 0x8b, 0x26, 0x57, 
-	0x05, 0x49, 0x05, 0x03, 0x05, 0x43, 0x16, 0x0b, 
-	0x05, 0xc9, 0x05, 0x45, 0x04, 0xc3, 0x04, 0xc3, 
-	0x05, 0x07, 0x05, 0x47, 0x04, 0xc3, 0x05, 0x07, 
-	0x05, 0x09, 0x05, 0x4f, 0x04, 0x43, 0x05, 0x4d, 
-	0x05, 0x09, 0x05, 0x49, 0x04, 0x81, 0x05, 0x49, 
-	0x16, 0x11, 0x04, 0xc3, 0x05, 0x4b, 0x05, 0x49, 
-	0x05, 0x07, 0x05, 0x07, 0x04, 0xc5, 0x05, 0x8b, 
-	0x04, 0xc5, 0x05, 0x8b, 0x05, 0x49, 0x05, 0x07, 
-	0x04, 0xc3, 0x0d, 0xcf, 0x05, 0xcb, 0x05, 0xcb, 
-	0x05, 0x47, 0x05, 0x49, 0x05, 0x05, 0x05, 0x07, 
-	0x05, 0x09, 0x16, 0x13, 0x05, 0xcf, 0x05, 0x4b, 
-	0x05, 0x4b, 0x05, 0x4b, 0x05, 0x49, 0x05, 0x8f, 
-	0x04, 0xc3, 0x3e, 0xd9, 0x05, 0x05, 0x05, 0x49, 
-	0x04, 0x81, 0x05, 0x49, 0x05, 0xcd, 0x04, 0xc5, 
-	0x05, 0x07, 0x04, 0xc5, 0x04, 0xc5, 0x05, 0x07, 
-	0x05, 0x49, 0x05, 0x8d, 0x05, 0x49, 0x0d, 0xcd, 
-	0x0d, 0xcf, 0x05, 0x07, 0x05, 0x89, 0x05, 0x49, 
-	0x05, 0x05, 0x05, 0x49, 0x05, 0x07, 0x05, 0x09, 
-	0x04, 0xc5, 0x05, 0x4b, 0x04, 0xc5, 0x05, 0x07, 
-	0x05, 0x09, 0x05, 0x09, 0x04, 0xc7, 0x05, 0x4b, 
-	0x04, 0xc3, 0x36, 0xd7, 0x04, 0xc1, 0x05, 0x89, 
-	0x0e, 0x11, 0x05, 0x8b, 0x04, 0xc5, 0x26, 0x55, 
-	0x05, 0x49, 0x05, 0x07, 0x1e, 0x53, 0x05, 0x05, 
-	0x05, 0xcd, 0x04, 0xc5, 0x05, 0x49, 0x05, 0x8b, 
-	0x05, 0x8d, 0x05, 0x8d, 0x05, 0x07, 0x05, 0x49, 
-	0x04, 0xc1, 0x05, 0xcd, 0x05, 0x07, 0x05, 0x8d, 
-	0x05, 0x09, 0x05, 0x0b, 0x04, 0x85, 0x04, 0xc7, 
-	0x04, 0xc5, 0x05, 0x07, 0x05, 0x4b, 0x16, 0x11, 
-	0x04, 0xc5, 0x05, 0x05, 0x05, 0x8b, 0x05, 0x01, 
-	0x05, 0x8b, 0x05, 0x49, 0x05, 0x07, 0x05, 0xcd, 
-	0x04, 0xc5, 0x05, 0xcd, 0x05, 0x49, 0x05, 0xcd, 
-	0x26, 0x03, 0x67, 0x41, 0x05, 0x89, 0x05, 0x89, 
-	0x05, 0x8b, 0x1e, 0x53, 0x05, 0x07, 0x04, 0x81, 
-	0x05, 0xcd, 0x05, 0x05, 0x04, 0xc5, 0x05, 0x8d, 
-	0x05, 0x4b, 0x05, 0x4b, 0x05, 0x8f, 0x04, 0xc3, 
-	0x04, 0xc5, 0x04, 0x83, 0x05, 0x49, 0x05, 0x07, 
-	0x05, 0x07, 0x05, 0x8b, 0x0d, 0xcd, 0x05, 0x05, 
-	0x05, 0x49, 0x05, 0x8b, 0x05, 0x49, 0x05, 0x07, 
-	0x05, 0x49, 0x04, 0xc3, 0x04, 0xc3, 0x04, 0x81, 
-	0x05, 0x07, 0x05, 0xcd, 0x05, 0xcb, 0x05, 0xcb, 
-	0x16, 0x11, 0x1e, 0x53, 0x05, 0xcd, 0x05, 0xcd, 
-	0x16, 0x51, 0x05, 0x47, 0x05, 0x8b, 0x05, 0x09, 
-	0x04, 0xc7, 0x04, 0xc7, 0x05, 0x4b, 0x05, 0x09, 
-	0x04, 0xc5, 0x04, 0xc3, 0x04, 0xc5, 0x04, 0xc5, 
-	0x05, 0x05, 0x05, 0x47, 0x05, 0x89, 0x05, 0x47, 
-	0x05, 0x89, 0x05, 0x07, 0x05, 0x4b, 0x05, 0x49, 
-	0x05, 0x49, 0x05, 0x07, 0x05, 0x47, 0x05, 0x05, 
-	0x05, 0x03, 0x05, 0x87, 0x05, 0x89, 0x05, 0x07, 
-	0x0e, 0x0f, 0x05, 0xcd, 0x05, 0x03, 0x05, 0x47, 
-	0x05, 0x47, 0x05, 0x05, 0x05, 0x05, 0x05, 0x07, 
-	0x04, 0xc3, 0x05, 0x05, 0x05, 0x07, 0x04, 0x81, 
-	0x04, 0xc3, 0x05, 0x05, 0x04, 0xc3, 0x04, 0xc5, 
-	0x04, 0xc5, 0x05, 0x47, 0x05, 0x47, 0x05, 0x05, 
-	0x05, 0x05, 0x05, 0x07, 0x05, 0x07, 0x05, 0x05, 
-	0x05, 0x47, 0x05, 0xcb, 0x05, 0x45, 0x05, 0x01, 
-	0x04, 0x81, 0x04, 0xc1, 0x05, 0xc9, 0x05, 0x8b, 
-	0x05, 0xcb, 0x05, 0x45, 0x05, 0x05, 0x04, 0xc1, 
-	0x05, 0x03, 0x04, 0xc3, 0x04, 0xc3, 0x05, 0x07, 
-	0x04, 0x81, 0x04, 0x81, 0x04, 0xc5, 0x04, 0xc3, 
-	0x04, 0xc3, 0x04, 0xc3, 0x04, 0xc5, 0x0d, 0x41, 
-	0x04, 0x81, 0x04, 0xc5, 0x04, 0x81, 0x05, 0x89, 
-	0x05, 0x47, 0x05, 0x89, 0x05, 0x47, 0x05, 0x05, 
-	0x05, 0x47, 0x05, 0x47, 0x04, 0x81, 0x04, 0xc1, 
-	0x04, 0x81, 0x04, 0x81, 0x05, 0xcb, 0x05, 0x05, 
-	0x05, 0x8b, 0x04, 0xc1, 0x05, 0x45, 0x04, 0xc1, 
-	0x05, 0x03, 0x04, 0xc1, 0x04, 0xc1, 0x05, 0x05, 
-	0x04, 0xc3, 0x05, 0xcb, 0x05, 0x49, 0x05, 0x03, 
-	0x05, 0x03, 0x04, 0xc5, 0x15, 0xc1, 0x4e, 0x81, 
-	0x05, 0x43, 0x04, 0xc3, 0x1e, 0x91, 0x3f, 0x19, 
-	0x04, 0xc1, 0x05, 0x45, 0x05, 0x05, 0x04, 0x81, 
-	0x05, 0x8b, 0x04, 0x81, 0x04, 0x81, 0x05, 0x87, 
-	0x05, 0x43, 0x04, 0xc1, 0x05, 0xcb, 0x05, 0x05, 
-	0x05, 0x87, 0x05, 0x47, 0x05, 0x03, 0x04, 0x81, 
-	0x05, 0x03, 0x04, 0xc1, 0x04, 0xc1, 0x05, 0x03, 
-	0x05, 0x03, 0x05, 0x45, 0x04, 0xc1, 0x05, 0x87, 
-	0x04, 0xc1, 0x04, 0x01, 0x04, 0xc3, 0x0d, 0x81, 
-	0x04, 0x81, 0x05, 0x05, 0x05, 0x47, 0x05, 0xc9, 
-	0x04, 0xc1, 0x04, 0x81, 0x05, 0x47, 0x05, 0x49, 
-	0x05, 0x47, 0x05, 0x47, 0x05, 0x01, 0x05, 0x03, 
-	0x0e, 0x0b, 0x04, 0x81, 0x05, 0x87, 0x05, 0x47, 
-	0x04, 0x81, 0x05, 0x43, 0x05, 0x43, 0x16, 0x01, 
-	0x05, 0x03, 0x04, 0xc1, 0x04, 0x81, 0x05, 0x03, 
-	0x05, 0x43, 0x04, 0x81, 0x05, 0x45, 0x05, 0x87, 
-	0x04, 0xc1, 0x04, 0xc1, 0x05, 0x47, 0x04, 0x41, 
-	0x05, 0x05, 0x05, 0x89, 0x05, 0x47, 0x0e, 0x0d, 
-	0x04, 0xc1, 0x05, 0x47, 0x05, 0x05, 0x05, 0x07, 
-	0x05, 0x05, 0x05, 0x05, 0x04, 0x81, 0x05, 0x03, 
-	0x04, 0xc1, 0x04, 0x41, 0x05, 0x87, 0x05, 0x89, 
-	0x04, 0xc1, 0x05, 0x81, 0x05, 0x01, 0x1e, 0x01, 
-	0x04, 0x81, 0x05, 0x01, 0x05, 0x01, 0x05, 0x03, 
-	0x05, 0x03, 0x05, 0x01, 0x05, 0x01, 0x05, 0xc9, 
-	0x05, 0x45, 0x04, 0xc5, 0x05, 0x49, 0x05, 0x49, 
-	0x04, 0xc3, 0x05, 0x05, 0x05, 0x03, 0x05, 0x43, 
-	0x05, 0x85, 0x05, 0x49, 0x05, 0x05, 0x04, 0x41, 
-	0x05, 0x47, 0x05, 0x05, 0x04, 0xc3, 0x16, 0x51, 
-	0x05, 0x89, 0x04, 0x81, 0x05, 0x89, 0x06, 0x0f, 
-	0x04, 0xc1, 0x05, 0x43, 0x04, 0xc1, 0x04, 0x81, 
-	0x04, 0x81, 0x05, 0x43, 0x04, 0x81, 0x05, 0x43, 
-	0x05, 0xc9, 0x05, 0x43, 0x04, 0x81, 0x05, 0x43, 
-	0x05, 0x87, 0x05, 0x47, 0x05, 0x4b, 0x04, 0xc5, 
-	0x04, 0xc3, 0x05, 0x03, 0x05, 0x45, 0x05, 0x87, 
-	0x06, 0x09, 0x05, 0x45, 0x05, 0x03, 0x05, 0x8d, 
-	0x04, 0x81, 0x05, 0x05, 0x05, 0x49, 0x04, 0x81, 
-	0x1e, 0x93, 0x05, 0x49, 0x04, 0xc3, 0x04, 0x81, 
-	0x04, 0x81, 0x04, 0xc1, 0x04, 0xc1, 0x04, 0x81, 
-	0x04, 0xc1, 0x04, 0xc1, 0x04, 0xc1, 0x05, 0x01, 
-	0x05, 0x01, 0x05, 0x01, 0x04, 0xc1, 0x05, 0x01, 
-	0x05, 0x43, 0x04, 0xc1, 0x05, 0x47, 0x05, 0x47, 
-	0x04, 0xc3, 0x05, 0x89, 0x05, 0xc9, 0x05, 0x87, 
-	0x0e, 0x0b, 0x06, 0x0b, 0x05, 0x47, 0x05, 0xcd, 
-	0x05, 0x49, 0x04, 0x81, 0x05, 0xcd, 0x05, 0x05, 
-	0x05, 0x8b, 0x05, 0x8b, 0x04, 0x81, 0x04, 0x81, 
-	0x04, 0x81, 0x04, 0x81, 0x05, 0xcb, 0x04, 0xc1, 
-	0x04, 0xc1, 0x05, 0x01, 0x05, 0x01, 0x05, 0x01, 
-	0x05, 0x85, 0x05, 0x43, 0x04, 0x81, 0x05, 0xc5, 
-	0x05, 0x85, 0x04, 0x81, 0x04, 0xc3, 0x04, 0x81, 
-	0x05, 0x45, 0x05, 0x03, 0x05, 0xc9, 0x05, 0xcb, 
-	0x05, 0xc9, 0x05, 0x89, 0x05, 0x47, 0x05, 0x03, 
-	0x3f, 0x5b, 0x05, 0x49, 0x05, 0x05, 0x05, 0xcd, 
-	0x04, 0xc3, 0x05, 0x47, 0x04, 0x81, 0x04, 0x83, 
-	0x04, 0xc5, 0x04, 0x81, 0x04, 0xc1, 0x04, 0xc1, 
-	0x04, 0xc1, 0x05, 0x01, 0x04, 0x81, 0x04, 0x81, 
-	0x05, 0x01, 0x04, 0xc1, 0x26, 0x41, 0x36, 0x85, 
-	0x05, 0x87, 0x05, 0x89, 0x04, 0xc3, 0x05, 0xcf, 
-	0x05, 0x47, 0x04, 0xc3, 0x05, 0x87, 0x05, 0x05, 
-	0x05, 0x01, 0x05, 0x45, 0x05, 0x03, 0x04, 0xc3, 
-	0x05, 0x05, 0x37, 0x1b, 0x04, 0xc3, 0x05, 0x49, 
-	0x04, 0xc3, 0x04, 0x81, 0x04, 0xc3, 0x04, 0xc5, 
-	0x04, 0xc5, 0x04, 0x81, 0x0e, 0x0f, 0x04, 0x81, 
-	0x04, 0xc1, 0x04, 0x81, 0x04, 0x81, 0x04, 0x81, 
-	0x04, 0x81, 0x04, 0xc1, 0x05, 0x43, 0x05, 0xc9, 
-	0x06, 0x0b, 0x05, 0x03, 0x04, 0xc3, 0x04, 0x81, 
-	0x2e, 0xd7, 0x05, 0x89, 0x05, 0x85, 0x05, 0x87, 
-	0x05, 0x41, 0x05, 0x85, 0x05, 0x01, 0x05, 0xcd, 
-	0x05, 0x49, 0x05, 0x07, 0x05, 0x8d, 0x05, 0x8b, 
-	0x04, 0x81, 0x04, 0x81, 0x04, 0x81, 0x04, 0xc5, 
-	0x05, 0x07, 0x04, 0xc1, 0x04, 0x81, 0x05, 0x03, 
-	0x04, 0xc1, 0x04, 0x81, 0x05, 0x05, 0x05, 0x87, 
-	0x05, 0x01, 0x04, 0x81, 0x05, 0xc5, 0x05, 0x01, 
-	0x05, 0x03, 0x06, 0x0d, 0x05, 0x89, 0x04, 0xc3, 
-	0x04, 0x81, 0x05, 0x45, 0x16, 0x4d, 0x04, 0xc3, 
-	0x05, 0xc3, 0x05, 0x83, 0x05, 0x45, 0x05, 0x89, 
-	0x05, 0x8d, 0x05, 0x49, 0x05, 0x07, 0x04, 0x81, 
-	0x04, 0xc5, 0x04, 0xc5, 0x05, 0x05, 0x05, 0x05, 
-	0x0e, 0x0b, 0x04, 0xc1, 0x05, 0x07, 0x05, 0x05, 
-	0x05, 0x07, 0x04, 0xc5, 0x04, 0x81, 0x05, 0x05, 
-	0x05, 0x01, 0x05, 0x83, 0x0e, 0x45, 0x05, 0x81, 
-	0x05, 0x01, 0x05, 0xcb, 0x05, 0x85, 0x05, 0x45, 
-	0x05, 0x45, 0x05, 0xc9, 0x05, 0x03, 0x1e, 0x91, 
-	0x05, 0x01, 0x16, 0x0b, 0x05, 0x01, 0x0e, 0x0d, 
-	0x26, 0x95, 0x04, 0x81, 0x05, 0x49, 0x05, 0x09, 
-	0x04, 0xc3, 0x05, 0x05, 0x05, 0x89, 0x04, 0xc3, 
-	0x04, 0xc1, 0x05, 0x43, 0x04, 0x41, 0x04, 0xc3, 
-	0x05, 0xcd, 0x04, 0xc5, 0x04, 0xc3, 0x04, 0x81, 
-	0x04, 0xc1, 0x04, 0xc1, 0x05, 0x43, 0x05, 0x01, 
-	0x05, 0x01, 0x05, 0x87, 0x04, 0xc1, 0x05, 0x43, 
-	0x16, 0x4f, 0x05, 0x89, 0x05, 0x87, 0x05, 0x05, 
-	0x05, 0x41, 0x05, 0xcb, 0x05, 0xcb, 0x04, 0x81, 
-	0x05, 0x47, 0x04, 0x81, 0x05, 0x05, 0x04, 0x81, 
-	0x5f, 0x01, 0x04, 0xc3, 0x05, 0x05, 0x05, 0x47, 
-	0x05, 0x89, 0x05, 0x01, 0x04, 0x01, 0x04, 0x81, 
-	0x05, 0x07, 0x04, 0x83, 0x04, 0xc5, 0x04, 0x81, 
-	0x1e, 0x51, 0x05, 0x01, 0x05, 0x41, 0x05, 0x41, 
-	0x05, 0x45, 0x04, 0xc1, 0x04, 0xc1, 0x05, 0x47, 
-	0x05, 0xcb, 0x05, 0x03, 0x05, 0x87, 0x05, 0x45, 
-	0x05, 0x01, 0x05, 0x87, 0x05, 0x45, 0x04, 0xc3, 
-	0x05, 0x05, 0x05, 0x05, 0x04, 0xc3, 0x26, 0x03, 
-	0x67, 0x41, 0x04, 0xc1, 0x05, 0x47, 0x05, 0x43, 
-	0x05, 0x89, 0x04, 0x81, 0x05, 0x05, 0x05, 0xcb, 
-	0x05, 0x45, 0x05, 0x05, 0x37, 0x19, 0x04, 0x81, 
-	0x1e, 0x51, 0x04, 0xc1, 0x05, 0x03, 0x04, 0xc1, 
-	0x05, 0x05, 0x04, 0x81, 0x04, 0xc3, 0x05, 0x49, 
-	0x05, 0x07, 0x05, 0x07, 0x05, 0x47, 0x05, 0x49, 
-	0x05, 0x45, 0x04, 0x81, 0x05, 0x47, 0x26, 0x93, 
-	0x05, 0x89, 0x05, 0x47, 0x04, 0xc3, 0x05, 0x83, 
-	
-};
-
-Gfx supergoomb__275F399C_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__275F399C_c_rgba16[] = {
-	0x1c, 0x03, 0x03, 0x01, 0x12, 0x01, 0x74, 0x8b, 
-	0x1c, 0x43, 0x04, 0x41, 0x04, 0x81, 0x14, 0x43, 
-	0xbe, 0xd3, 0x2c, 0x83, 0x04, 0x01, 0x04, 0x41, 
-	0x03, 0x01, 0x02, 0x81, 0x6c, 0x8b, 0x86, 0x0b, 
-	0x96, 0x4f, 0x54, 0x07, 0x04, 0x41, 0x04, 0x81, 
-	0x03, 0xc1, 0x04, 0x81, 0x04, 0x81, 0x23, 0xc3, 
-	0x3c, 0x05, 0x04, 0x81, 0x04, 0x81, 0x03, 0xc1, 
-	0x03, 0xc1, 0x04, 0x41, 0x13, 0x03, 0x8d, 0x8d, 
-	0x74, 0x8b, 0x02, 0x01, 0x11, 0xc3, 0x65, 0x09, 
-	0x13, 0x41, 0x74, 0x8b, 0x1b, 0xc3, 0x12, 0x81, 
-	0xa6, 0xd1, 0x2c, 0x43, 0x13, 0x01, 0x7c, 0x8b, 
-	0x02, 0x41, 0x01, 0x41, 0x64, 0x89, 0x6d, 0x89, 
-	0x86, 0x4b, 0x4b, 0x87, 0x01, 0x41, 0x54, 0x07, 
-	0x43, 0x05, 0x02, 0x01, 0x03, 0x41, 0x54, 0xc7, 
-	0x8d, 0x4d, 0x03, 0x41, 0x5c, 0x09, 0x32, 0x45, 
-	0x02, 0x81, 0x02, 0x41, 0x32, 0xc5, 0x85, 0xcb, 
-	0x9e, 0x8f, 0x01, 0x81, 0x1a, 0x43, 0x55, 0x07, 
-	0x02, 0xc1, 0x6c, 0x89, 0x2b, 0x43, 0x09, 0x81, 
-	0x96, 0xcd, 0x22, 0xc3, 0x19, 0xc3, 0x74, 0x8b, 
-	0x00, 0xc1, 0x00, 0xc1, 0x54, 0x87, 0x54, 0x87, 
-	0x6d, 0xc9, 0x44, 0x05, 0x01, 0x01, 0x64, 0x49, 
-	0x3a, 0xc5, 0x8d, 0x4d, 0x09, 0x81, 0x4c, 0x47, 
-	0x75, 0x0b, 0x3a, 0xc5, 0x54, 0x47, 0x4b, 0x47, 
-	0x4c, 0x47, 0x01, 0xc1, 0x4c, 0x87, 0x54, 0x87, 
-	0x8e, 0x8d, 0x08, 0xc1, 0x1a, 0x43, 0x45, 0x05, 
-	0x00, 0xc1, 0x4c, 0x07, 0x33, 0x05, 0x01, 0x01, 
-	0x7e, 0x8b, 0x22, 0x43, 0x2a, 0x45, 0x5c, 0x89, 
-	0x00, 0xc1, 0x00, 0xc1, 0x4c, 0x87, 0x44, 0x87, 
-	0x55, 0x87, 0x3b, 0xc5, 0x00, 0xc1, 0x5c, 0xc9, 
-	0x22, 0x03, 0x96, 0x4d, 0x19, 0x83, 0x3b, 0xc5, 
-	0x5d, 0x09, 0x64, 0x49, 0x3b, 0x45, 0x4b, 0xc7, 
-	0x54, 0x87, 0x09, 0x41, 0x4d, 0xc7, 0x22, 0x83, 
-	0x33, 0x05, 0x08, 0x81, 0x1a, 0x83, 0x2c, 0xc3, 
-	0x00, 0x41, 0x33, 0x45, 0x3b, 0x85, 0x00, 0x41, 
-	0x66, 0x89, 0x1a, 0x03, 0x1a, 0x03, 0x4c, 0x87, 
-	0x00, 0x01, 0x00, 0x41, 0x3c, 0x85, 0x34, 0x45, 
-	0x3d, 0x05, 0x2b, 0xc3, 0x08, 0xc1, 0x55, 0x47, 
-	0x11, 0x01, 0x3b, 0x05, 0x19, 0x43, 0x33, 0x85, 
-	0x4d, 0x07, 0x4c, 0x07, 0x22, 0x43, 0x44, 0x87, 
-	0x33, 0x85, 0x12, 0x41, 0x3d, 0x85, 0x00, 0x41, 
-	0x22, 0xc3, 0x08, 0xc1, 0x13, 0x01, 0x1c, 0xc3, 
-	0x00, 0x01, 0x1a, 0x43, 0x34, 0x85, 0x00, 0x01, 
-	0x4e, 0x87, 0x1a, 0x03, 0x1a, 0x03, 0x3c, 0xc5, 
-	0x00, 0x41, 0x00, 0x01, 0x2c, 0xc3, 0x23, 0xc3, 
-	0x2d, 0x03, 0x1c, 0x03, 0x11, 0x41, 0x3d, 0x45, 
-	0x00, 0x41, 0x19, 0xc3, 0x19, 0x83, 0x2b, 0xc3, 
-	0x3d, 0x05, 0x33, 0x85, 0x11, 0xc3, 0x3d, 0x05, 
-	0x1a, 0xc3, 0x13, 0xc3, 0x1c, 0x43, 0x00, 0x01, 
-	0x1a, 0x83, 0x08, 0xc1, 0x03, 0x01, 0x0d, 0x01, 
-	0x00, 0x01, 0x09, 0xc1, 0x2d, 0x03, 0x00, 0x01, 
-	0x36, 0x45, 0x12, 0x01, 0x12, 0x81, 0x25, 0x03, 
-	0x08, 0xc1, 0x00, 0x01, 0x13, 0x41, 0x09, 0xc1, 
-	0x14, 0xc3, 0x14, 0x01, 0x12, 0x01, 0x25, 0x03, 
-	0x00, 0x01, 0x11, 0x41, 0x1a, 0x03, 0x1b, 0xc3, 
-	0x25, 0x03, 0x1a, 0xc3, 0x09, 0x41, 0x2d, 0x83, 
-	0x12, 0xc1, 0x0c, 0x81, 0x0b, 0xc1, 0x00, 0x01, 
-	0x0a, 0x41, 0x01, 0x01, 0x03, 0x01, 0x05, 0x41, 
-	0x00, 0x01, 0x01, 0xc1, 0x15, 0x41, 0x00, 0x01, 
-	0x1e, 0x43, 0x0a, 0x41, 0x0a, 0x81, 0x15, 0x01, 
-	0x09, 0x81, 0x00, 0x01, 0x02, 0x81, 0x01, 0x41, 
-	0x04, 0xc1, 0x04, 0x01, 0x0a, 0x01, 0x15, 0x41, 
-	0x00, 0x01, 0x08, 0xc1, 0x12, 0x81, 0x0c, 0x01, 
-	0x15, 0x01, 0x09, 0xc1, 0x01, 0x41, 0x15, 0xc1, 
-	0x02, 0xc1, 0x05, 0x01, 0x03, 0x01, 0x00, 0x01, 
-	0x02, 0x41, 0x01, 0x01, 0x03, 0x01, 0x05, 0x81, 
-	0x00, 0x01, 0x01, 0xc1, 0x05, 0x81, 0x00, 0x01, 
-	0x06, 0x01, 0x02, 0x41, 0x02, 0x81, 0x04, 0x41, 
-	0x02, 0x01, 0x00, 0x01, 0x02, 0x81, 0x01, 0x41, 
-	0x02, 0xc1, 0x02, 0xc1, 0x00, 0xc1, 0x03, 0x41, 
-	0x00, 0x01, 0x00, 0xc1, 0x02, 0x81, 0x03, 0xc1, 
-	0x05, 0x01, 0x01, 0xc1, 0x01, 0x41, 0x05, 0xc1, 
-	0x02, 0xc1, 0x05, 0xc1, 0x02, 0x41, 0x00, 0x01, 
-	0x02, 0x41, 0x01, 0x41, 0x03, 0x41, 0x05, 0x81, 
-	0x00, 0x01, 0x01, 0x41, 0x05, 0x41, 0x00, 0x01, 
-	0x06, 0x01, 0x02, 0x41, 0x01, 0xc1, 0x02, 0xc1, 
-	0x02, 0x41, 0x00, 0x01, 0x02, 0x81, 0x01, 0x41, 
-	0x02, 0x01, 0x02, 0x01, 0x00, 0xc1, 0x02, 0xc1, 
-	0x00, 0x01, 0x00, 0x81, 0x02, 0xc1, 0x02, 0x01, 
-	0x04, 0x01, 0x01, 0xc1, 0x01, 0x41, 0x05, 0x41, 
-	0x02, 0xc1, 0x06, 0x01, 0x01, 0xc1, 0x00, 0x01, 
-	0x02, 0x41, 0x01, 0x41, 0x03, 0x41, 0x05, 0xc1, 
-	0x00, 0x01, 0x01, 0x01, 0x02, 0xc1, 0x00, 0x01, 
-	0x05, 0xc1, 0x02, 0x41, 0x01, 0x81, 0x02, 0xc1, 
-	0x02, 0x81, 0x00, 0x01, 0x02, 0x81, 0x01, 0x41, 
-	0x01, 0xc1, 0x02, 0x01, 0x00, 0xc1, 0x02, 0xc1, 
-	0x00, 0x01, 0x00, 0x81, 0x02, 0xc1, 0x01, 0x81, 
-	0x03, 0x01, 0x01, 0xc1, 0x00, 0xc1, 0x03, 0x41, 
-	0x03, 0x41, 0x05, 0x81, 0x00, 0xc1, 0x00, 0x01, 
-	0x02, 0x01, 0x01, 0x41, 0x03, 0x41, 0x05, 0xc1, 
-	0x00, 0x01, 0x01, 0x01, 0x02, 0x81, 0x00, 0x01, 
-	0x05, 0x81, 0x01, 0x81, 0x01, 0x81, 0x02, 0xc1, 
-	0x02, 0xc1, 0x00, 0x01, 0x02, 0x81, 0x01, 0x41, 
-	0x01, 0xc1, 0x02, 0x41, 0x00, 0xc1, 0x03, 0x01, 
-	0x00, 0x01, 0x00, 0x41, 0x02, 0xc1, 0x01, 0xc1, 
-	0x03, 0x01, 0x02, 0x01, 0x00, 0xc1, 0x02, 0xc1, 
-	0x03, 0x01, 0x03, 0x01, 0x00, 0x41, 0x00, 0x01, 
-	0x0a, 0x01, 0x01, 0x81, 0x02, 0x01, 0x05, 0x81, 
-	0x00, 0x01, 0x01, 0x41, 0x02, 0x81, 0x00, 0x01, 
-	0x02, 0xc1, 0x01, 0x01, 0x01, 0x41, 0x02, 0x81, 
-	0x03, 0x01, 0x00, 0x41, 0x02, 0x81, 0x09, 0x81, 
-	0x1a, 0x01, 0x02, 0x01, 0x00, 0xc1, 0x03, 0x01, 
-	0x00, 0x41, 0x00, 0x01, 0x02, 0xc1, 0x02, 0x01, 
-	0x03, 0x01, 0x02, 0x01, 0x00, 0xc1, 0x03, 0x01, 
-	0x02, 0xc1, 0x02, 0xc1, 0x00, 0x81, 0x10, 0x81, 
-	0x19, 0x01, 0x08, 0xc1, 0x00, 0xc1, 0x03, 0x01, 
-	0x00, 0x41, 0x01, 0xc1, 0x02, 0x01, 0x00, 0x01, 
-	0x02, 0x81, 0x01, 0x01, 0x01, 0x41, 0x02, 0xc1, 
-	0x03, 0x01, 0x00, 0x41, 0x19, 0xc1, 0x31, 0xc1, 
-	0x31, 0xc1, 0x29, 0xc1, 0x19, 0x41, 0x03, 0x01, 
-	0x00, 0x81, 0x00, 0x41, 0x02, 0xc1, 0x01, 0xc1, 
-	0x02, 0xc1, 0x02, 0x41, 0x01, 0x01, 0x02, 0xc1, 
-	0x0a, 0x81, 0x12, 0x81, 0x39, 0xc1, 0x31, 0x81, 
-	0x39, 0x81, 0x31, 0x81, 0x19, 0x41, 0x03, 0x01, 
-	0x00, 0x81, 0x02, 0x41, 0x01, 0x81, 0x00, 0x01, 
-	0x02, 0x81, 0x01, 0x01, 0x01, 0x01, 0x02, 0xc1, 
-	0x02, 0xc1, 0x29, 0x41, 0x42, 0x01, 0x4a, 0x41, 
-	0x52, 0x41, 0x4a, 0x41, 0x42, 0x01, 0x1a, 0x41, 
-	0x01, 0x01, 0x00, 0x41, 0x02, 0xc1, 0x01, 0xc1, 
-	0x02, 0x81, 0x02, 0xc1, 0x01, 0x81, 0x0a, 0x01, 
-	0x21, 0x81, 0x29, 0x41, 0x31, 0x81, 0x31, 0x81, 
-	0x29, 0x81, 0x31, 0xc1, 0x39, 0xc1, 0x29, 0xc1, 
-	0x08, 0xc1, 0x02, 0xc1, 0x01, 0x01, 0x00, 0x01, 
-	0x02, 0xc1, 0x01, 0x01, 0x00, 0xc1, 0x03, 0x01, 
-	0x32, 0x81, 0x3a, 0x01, 0x4a, 0x41, 0x5a, 0x81, 
-	0x62, 0xc1, 0x52, 0x81, 0x52, 0x81, 0x4a, 0x41, 
-	0x19, 0x01, 0x00, 0x81, 0x02, 0xc1, 0x01, 0xc1, 
-	0x0a, 0x01, 0x12, 0x41, 0x19, 0x01, 0x19, 0x41, 
-	0x21, 0x41, 0x21, 0x41, 0x29, 0x81, 0x31, 0xc1, 
-	0x39, 0xc1, 0x29, 0x81, 0x42, 0x41, 0x4a, 0x41, 
-	0x29, 0x41, 0x29, 0x81, 0x19, 0x01, 0x08, 0x41, 
-	0x02, 0xc1, 0x09, 0x41, 0x19, 0x41, 0x3a, 0x01, 
-	0x42, 0x01, 0x42, 0x41, 0x73, 0x41, 0x73, 0x81, 
-	0x6b, 0x01, 0x5a, 0x81, 0x4a, 0x41, 0x42, 0x01, 
-	0x29, 0x81, 0x31, 0xc1, 0x31, 0xc1, 0x39, 0xc1, 
-	0x39, 0xc1, 0x31, 0x81, 0x31, 0x81, 0x29, 0x41, 
-	0x29, 0x81, 0x39, 0xc1, 0x52, 0x41, 0x52, 0x41, 
-	0x4a, 0xc1, 0x4a, 0x81, 0x42, 0x41, 0x52, 0x81, 
-	0x52, 0x81, 0x31, 0x81, 0x41, 0xc1, 0x42, 0x01, 
-	0x21, 0x41, 0x32, 0x01, 0x4a, 0x41, 0x5a, 0x81, 
-	0x42, 0x41, 0x52, 0xc1, 0x7b, 0xc1, 0x5b, 0x41, 
-	0x5a, 0xc1, 0x63, 0x01, 0x52, 0x81, 0x42, 0x01, 
-	0x3a, 0x01, 0x4a, 0x01, 0x29, 0x81, 0x3a, 0x01, 
-	0x4a, 0x01, 0x4a, 0x01, 0x39, 0xc1, 0x29, 0x81, 
-	0x4a, 0x41, 0x6b, 0x01, 0x5a, 0xc1, 0x52, 0xc1, 
-	0x84, 0x01, 0x5b, 0x81, 0x73, 0xc1, 0x94, 0x41, 
-	0x84, 0x01, 0x52, 0x81, 0x4a, 0x01, 0x39, 0xc1, 
-	0x31, 0xc1, 0x21, 0x81, 0x3a, 0x01, 0x4a, 0x81, 
-	0x3a, 0x41, 0x52, 0x81, 0x6b, 0x81, 0x53, 0x41, 
-	0x73, 0x81, 0x73, 0x81, 0x52, 0x81, 0x31, 0xc1, 
-	0x29, 0xc1, 0x31, 0xc1, 0x39, 0xc1, 0x4a, 0x01, 
-	0x52, 0x41, 0x52, 0x41, 0x41, 0xc1, 0x42, 0x01, 
-	0x52, 0xc1, 0x63, 0x41, 0x63, 0x41, 0x7b, 0x81, 
-	0xa5, 0x41, 0x6b, 0xc1, 0x9c, 0xc1, 0xcd, 0xc1, 
-	0x94, 0x81, 0x73, 0xc1, 0x63, 0x01, 0x52, 0x81, 
-	0x5b, 0x01, 0x42, 0x41, 0x4a, 0x81, 0x52, 0xc1, 
-	0x4a, 0x81, 0x63, 0x41, 0x6b, 0x81, 0x53, 0x41, 
-	0x6b, 0x41, 0x84, 0x01, 0x63, 0x01, 0x32, 0x01, 
-	0x21, 0xc1, 0x29, 0xc1, 0x3a, 0x01, 0x62, 0xc1, 
-	0x73, 0x41, 0x62, 0xc1, 0x62, 0xc1, 0x6b, 0x81, 
-	0x63, 0x01, 0x7c, 0x01, 0x8c, 0x81, 0xad, 0x81, 
-	0x95, 0x01, 0xc5, 0xc1, 0xee, 0xc1, 0xee, 0x81, 
-	0x94, 0x81, 0x5b, 0x41, 0x4a, 0xc1, 0x63, 0x41, 
-	0x52, 0xc1, 0x52, 0xc1, 0x63, 0x41, 0x7b, 0x81, 
-	0x8c, 0x01, 0x73, 0x81, 0x63, 0xc1, 0x53, 0x81, 
-	0x7c, 0x41, 0xad, 0x01, 0xa4, 0x81, 0x63, 0x41, 
-	0x52, 0xc1, 0x53, 0x01, 0x74, 0x01, 0xbd, 0x81, 
-	0xb5, 0x01, 0xa4, 0x81, 0x84, 0x01, 0x63, 0x81, 
-	0x94, 0x81, 0x7c, 0x41, 0x74, 0x41, 0x8c, 0x81, 
-	0xad, 0x81, 0xde, 0xc1, 0xef, 0x41, 0xf7, 0x41, 
-	0xd6, 0x01, 0xa4, 0xc1, 0x8c, 0x01, 0x6b, 0x81, 
-	0x6b, 0x81, 0x7b, 0xc1, 0x6b, 0xc1, 0x84, 0x01, 
-	0x9c, 0x81, 0x94, 0x81, 0x7c, 0x01, 0x74, 0x01, 
-	0x8c, 0x81, 0xad, 0x41, 0xc5, 0xc1, 0x9c, 0xc1, 
-	0xa5, 0x01, 0x8c, 0x81, 0x7c, 0x81, 0x95, 0x01, 
-	0xc5, 0xc1, 0xbd, 0x41, 0x94, 0x41, 0x43, 0x41, 
-	0x7c, 0x81, 0x94, 0x81, 0x94, 0xc1, 0x95, 0x01, 
-	0xb6, 0x01, 0xc6, 0x01, 0xc6, 0x41, 0xe7, 0x01, 
-	0xf7, 0x81, 0xf7, 0x01, 0xcd, 0xc1, 0x84, 0x41, 
-	0x63, 0xc1, 0x84, 0x41, 0x84, 0x01, 0x8c, 0x41, 
-	0x94, 0x81, 0x94, 0xc1, 0x7c, 0x81, 0x9d, 0x01, 
-	0xa4, 0xc1, 0xb5, 0x81, 0xd6, 0x41, 0xb5, 0xc1, 
-	0xb5, 0xc1, 0x95, 0x01, 0x8c, 0x81, 0x95, 0x01, 
-	0xc5, 0xc1, 0xc5, 0x81, 0x94, 0x81, 0x3a, 0xc1, 
-	0x7c, 0x41, 0xb5, 0x81, 0xbd, 0xc1, 0xb5, 0xc1, 
-	0xce, 0x41, 0xde, 0x81, 0xe6, 0xc1, 0xbe, 0x41, 
-	0xae, 0x01, 0xd6, 0x81, 0xd6, 0x01, 0x7c, 0x01, 
-	0x4b, 0x01, 0x7c, 0x01, 0xb5, 0x41, 0x94, 0x81, 
-	0x7c, 0x41, 0x74, 0x81, 0x84, 0x81, 0xcd, 0xc1, 
-	0xd6, 0x41, 0xf7, 0x01, 0xde, 0x81, 0xb5, 0xc1, 
-	0xae, 0x01, 0xad, 0xc1, 0xb6, 0x01, 0xd6, 0x81, 
-	0xde, 0x81, 0xc5, 0xc1, 0x84, 0x41, 0x63, 0xc1, 
-	0x84, 0x81, 0xc6, 0x01, 0xf7, 0x01, 0xf7, 0x01, 
-	0xad, 0xc1, 0xde, 0xc1, 0xf7, 0x41, 0xc6, 0x81, 
-	0xde, 0xc1, 0xef, 0x01, 0xc6, 0x01, 0x94, 0x81, 
-	0x94, 0x81, 0xa4, 0xc1, 0xb5, 0x41, 0x94, 0xc1, 
-	0x7c, 0x81, 0x6c, 0x41, 0xad, 0x41, 0xee, 0x81, 
-	0xd6, 0x81, 0xf7, 0x41, 0xf7, 0x01, 0xd6, 0x81, 
-	0xa5, 0xc1, 0xae, 0x01, 0xef, 0x01, 0xf7, 0x81, 
-	0xf7, 0x01, 0xa5, 0x41, 0x6b, 0xc1, 0xa4, 0xc1, 
-	0xa5, 0x41, 0xd6, 0x81, 0xf7, 0x81, 0xdf, 0x01, 
-	0x84, 0xc1, 0xe6, 0xc1, 0xf7, 0x41, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x41, 0xad, 0xc1, 0x95, 0x01, 
-	0xc6, 0x01, 0xe6, 0x81, 0xc5, 0x81, 0x8c, 0xc1, 
-	0x5c, 0x41, 0x7c, 0x81, 0xde, 0x81, 0xf7, 0x81, 
-	0xde, 0x81, 0xf7, 0x81, 0xf7, 0x41, 0xc6, 0x41, 
-	0xa5, 0xc1, 0xc6, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xbe, 0x41, 0x8c, 0x81, 0x84, 0x41, 0xe6, 0x41, 
-	0xe6, 0x81, 0xce, 0x41, 0xad, 0xc1, 0x95, 0x41, 
-	0xbe, 0x01, 0xf7, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xe7, 0x41, 0xae, 0x01, 0x9d, 0x81, 0x95, 0x01, 
-	0x9d, 0x41, 0xce, 0x41, 0xee, 0xc1, 0xa5, 0x81, 
-	0x6c, 0x81, 0x74, 0x81, 0x9d, 0x81, 0xc6, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xde, 0x81, 0xb6, 0x01, 
-	0xc6, 0x81, 0xdf, 0x01, 0xf7, 0x81, 0xf7, 0x41, 
-	0x84, 0x81, 0x8c, 0x81, 0xc5, 0xc1, 0xe6, 0xc1, 
-	0xd6, 0x81, 0xc6, 0x41, 0xde, 0x81, 0xce, 0x41, 
-	0xef, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xc6, 0x41, 0x9d, 0x81, 0xad, 0x81, 
-	0xbd, 0xc1, 0xce, 0x41, 0xf7, 0x41, 0xd6, 0x81, 
-	0x95, 0x01, 0x8d, 0x01, 0x95, 0x01, 0xa5, 0x81, 
-	0xf7, 0x81, 0xd6, 0xc1, 0xad, 0xc1, 0x95, 0x81, 
-	0x85, 0x01, 0x95, 0x81, 0xbe, 0x41, 0xde, 0x81, 
-	0xce, 0x01, 0xad, 0xc1, 0x95, 0x41, 0xad, 0xc1, 
-	0xc6, 0x01, 0xce, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xc6, 0x41, 0xd6, 0x81, 0xef, 0x41, 0xf7, 0x81, 
-	0xf7, 0x81, 0xd6, 0xc1, 0xad, 0xc1, 0xd6, 0x81, 
-	0xe6, 0x81, 0xd6, 0x81, 0xe7, 0x01, 0xd6, 0xc1, 
-	0xa5, 0xc1, 0xa5, 0x81, 0xad, 0xc1, 0xd6, 0x81, 
-	0xc6, 0x41, 0xb5, 0xc1, 0xc5, 0xc1, 0xbd, 0xc1, 
-	0xc6, 0x01, 0xbe, 0x01, 0xde, 0xc1, 0xef, 0x01, 
-	0xde, 0xc1, 0x95, 0x81, 0x64, 0x41, 0x8c, 0xc1, 
-	0xad, 0xc1, 0xd6, 0x81, 0xf7, 0x81, 0xf7, 0x01, 
-	0xd6, 0x01, 0xd6, 0x41, 0xf7, 0x81, 0xc6, 0xc1, 
-	0x75, 0x01, 0x95, 0x81, 0xef, 0x41, 0xf7, 0x01, 
-	0xc6, 0x41, 0xbe, 0x01, 0xb6, 0x41, 0x8d, 0x41, 
-	0x85, 0x01, 0xce, 0x81, 0xf7, 0x81, 0xce, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xef, 0x41, 0xde, 0xc1, 0xce, 0x41, 
-	0x95, 0x41, 0x6c, 0x81, 0x54, 0x41, 0xa5, 0xc1, 
-	0xbe, 0x01, 0xc6, 0x41, 0xf7, 0x81, 0xf7, 0x01, 
-	0xf6, 0xc1, 0xde, 0xc1, 0xde, 0xc1, 0xe7, 0x01, 
-	0xb6, 0x01, 0xd6, 0x81, 0xf7, 0x81, 0xd6, 0xc1, 
-	0xb6, 0x01, 0xef, 0x01, 0xd6, 0xc1, 0xbe, 0x41, 
-	0xc6, 0x41, 0xef, 0x41, 0xf7, 0x81, 0xae, 0x01, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xdf, 0x01, 0xa5, 0xc1, 0x8d, 0x01, 0x8c, 0x81, 
-	0x8c, 0xc1, 0xa5, 0x81, 0xad, 0xc1, 0x95, 0x41, 
-	0x9d, 0x81, 0xa5, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xe6, 0x81, 0x7c, 0x81, 0xa5, 0xc1, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xa5, 0xc1, 
-	0xc6, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xbe, 0x81, 0xad, 0xc1, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xd6, 0x81, 0xad, 0x81, 0xbd, 0xc1, 
-	0xc6, 0x41, 0xce, 0xc1, 0xce, 0xc1, 0x95, 0x41, 
-	0x7c, 0x81, 0x94, 0xc1, 0xf7, 0x81, 0xf7, 0x81, 
-	
-};
-
-Gfx supergoomb__4020CDFE_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__4020CDFE_c_rgba16[] = {
-	0xf7, 0x81, 0x9d, 0x81, 0xae, 0x01, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xce, 0xc1, 0xb6, 0x41, 
-	0x84, 0xc1, 0x6c, 0x81, 0x9d, 0xc1, 0xae, 0x01, 
-	0xc6, 0x81, 0xdf, 0x01, 0xdf, 0x01, 0xa5, 0x81, 
-	0x7c, 0x81, 0xce, 0x81, 0xef, 0x81, 0x84, 0xc1, 
-	0x74, 0x81, 0xa5, 0xc1, 0xd7, 0x01, 0xf7, 0x81, 
-	0xe7, 0x41, 0xa5, 0xc1, 0xa5, 0x81, 0x9d, 0x41, 
-	0x7c, 0x81, 0x94, 0xc1, 0x9d, 0x01, 0x94, 0x81, 
-	0xd6, 0xc1, 0xc6, 0x41, 0xce, 0x41, 0xef, 0x41, 
-	0xe7, 0x41, 0xd7, 0x01, 0xe7, 0x41, 0xce, 0xc1, 
-	0x85, 0x01, 0x54, 0x01, 0x5c, 0x41, 0x7c, 0xc1, 
-	0xb6, 0x41, 0xef, 0x81, 0xf7, 0x81, 0xa5, 0x81, 
-	0x63, 0xc1, 0x8c, 0xc1, 0xa5, 0xc1, 0x85, 0x01, 
-	0xb6, 0x41, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xef, 0x81, 0x9e, 0x01, 0xa6, 0x01, 0x8d, 0x41, 
-	0x6c, 0x81, 0x74, 0x81, 0x9d, 0x81, 0x9d, 0x01, 
-	0x8c, 0x81, 0x8c, 0x81, 0xad, 0x81, 0xe7, 0x41, 
-	0xdf, 0x41, 0xc6, 0x81, 0xdf, 0x41, 0xe7, 0x41, 
-	0x95, 0x81, 0x7c, 0xc1, 0xa6, 0x01, 0xa6, 0x01, 
-	0x8d, 0x01, 0x9d, 0x01, 0xf7, 0x81, 0xcc, 0xcb, 
-	0xf2, 0x27, 0xe2, 0xa1, 0xcd, 0x85, 0x9d, 0xc1, 
-	0xb6, 0x41, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xc6, 0xc1, 0x95, 0x81, 0xae, 0x41, 0x9d, 0xc1, 
-	0x64, 0x81, 0x54, 0x41, 0x84, 0xc1, 0xa5, 0x81, 
-	0x5b, 0xc1, 0x53, 0xc1, 0xa5, 0xc1, 0xf7, 0x81, 
-	0xf7, 0x81, 0xef, 0x81, 0xef, 0x81, 0xef, 0x81, 
-	0xc6, 0xc1, 0xd7, 0x01, 0xf7, 0x81, 0xe7, 0x81, 
-	0x5b, 0x03, 0xd2, 0x5f, 0xcc, 0x91, 0xf5, 0x9d, 
-	0xf4, 0x7d, 0xf3, 0x31, 0xf4, 0xdd, 0xb6, 0x41, 
-	0xad, 0xc1, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xef, 0x81, 0xce, 0xc1, 0xdf, 0x41, 0xbe, 0x81, 
-	0x74, 0xc1, 0x4c, 0x01, 0x64, 0x81, 0x95, 0x81, 
-	0x8c, 0xc1, 0x95, 0x41, 0xae, 0x01, 0xae, 0x41, 
-	0xae, 0x01, 0xdf, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xa6, 0x01, 0x95, 0x41, 0xae, 0x01, 0x95, 0x41, 
-	0xcb, 0x19, 0xf3, 0x37, 0xf5, 0x7d, 0xf6, 0x2d, 
-	0xf6, 0x7d, 0xf5, 0xfb, 0xc5, 0x49, 0x94, 0xc1, 
-	0x9d, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xce, 0xc1, 0xef, 0x81, 0xf7, 0x81, 
-	0xae, 0x41, 0x8d, 0x41, 0xcf, 0x01, 0xf7, 0x81, 
-	0x94, 0xc1, 0xce, 0x81, 0xa5, 0xc1, 0x3b, 0x01, 
-	0x43, 0x01, 0x74, 0x01, 0xf7, 0x81, 0xf7, 0x81, 
-	0xbe, 0x81, 0x85, 0x01, 0x7c, 0xc1, 0x7c, 0xc1, 
-	0xeb, 0x61, 0xf3, 0xb5, 0xf5, 0xbd, 0xf7, 0x0f, 
-	0xf7, 0x09, 0xf5, 0xef, 0xe4, 0x25, 0xcc, 0x51, 
-	0xae, 0x41, 0xb6, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xce, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xcf, 0x01, 0xf7, 0x81, 0xf7, 0x81, 
-	0xad, 0x41, 0xce, 0x41, 0xb5, 0xc1, 0x53, 0x01, 
-	0x8b, 0x09, 0xc4, 0x8b, 0xef, 0x01, 0xde, 0xc1, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xef, 0x81, 
-	0xbe, 0x03, 0xcd, 0x17, 0xcc, 0xe3, 0xf7, 0x63, 
-	0xf7, 0x9d, 0xf5, 0x3b, 0xf4, 0x3d, 0xf3, 0xeb, 
-	0xdf, 0x41, 0xbe, 0x81, 0xae, 0x41, 0xbe, 0x41, 
-	0xc6, 0x81, 0xce, 0xc1, 0xef, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xde, 0xc1, 0xd6, 0x81, 0xa5, 0x01, 0xab, 0x11, 
-	0xf2, 0xaf, 0xf2, 0x6d, 0xeb, 0xdb, 0xbd, 0xc1, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xef, 0x81, 0xd5, 0x8b, 0xf4, 0x77, 0xf4, 0xb9, 
-	0xe5, 0x65, 0xf4, 0xf5, 0xf2, 0xf3, 0xf4, 0xd9, 
-	0xd7, 0x01, 0xa6, 0x01, 0x85, 0x01, 0x64, 0x81, 
-	0x8d, 0x41, 0xb6, 0x41, 0x9e, 0x01, 0xb6, 0x41, 
-	0xe7, 0x81, 0xe7, 0x41, 0xb5, 0xc1, 0x9c, 0xc1, 
-	0xf7, 0x81, 0xa5, 0x01, 0x83, 0xc1, 0xa3, 0x93, 
-	0xf5, 0x3d, 0xf4, 0xbd, 0xcc, 0x9f, 0xad, 0x41, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xef, 0x81, 0xec, 0x97, 0xf3, 0x79, 0xf3, 0x77, 
-	0xf5, 0x63, 0xad, 0x03, 0xc4, 0x93, 0xad, 0xc3, 
-	0x95, 0x81, 0x9d, 0xc1, 0xa5, 0xc1, 0x8d, 0x41, 
-	0x9e, 0x01, 0xae, 0x01, 0x7c, 0x81, 0x74, 0x81, 
-	0x94, 0x81, 0x6b, 0x81, 0x3a, 0x41, 0x4a, 0xc1, 
-	0xe7, 0x01, 0xca, 0xd9, 0xf3, 0x73, 0xdc, 0xa5, 
-	0xf6, 0xaf, 0xf6, 0xf1, 0xc4, 0x63, 0xf3, 0xad, 
-	0xf4, 0x5d, 0xcf, 0x01, 0xf7, 0x81, 0xf7, 0x81, 
-	0xe7, 0x01, 0xd6, 0xc1, 0xf5, 0xd3, 0xf4, 0xe1, 
-	0xf7, 0x89, 0xf7, 0x81, 0xc6, 0x41, 0x95, 0x81, 
-	0x9d, 0xc1, 0x84, 0xc1, 0x95, 0x41, 0x9d, 0x81, 
-	0x8c, 0x81, 0x94, 0x81, 0x74, 0x01, 0x5b, 0x01, 
-	0x63, 0x41, 0x5b, 0x41, 0x63, 0x81, 0x95, 0x01, 
-	0xef, 0x41, 0xf2, 0xe7, 0xf3, 0x77, 0xf6, 0x3d, 
-	0xf7, 0x4b, 0xf7, 0x87, 0xf5, 0xfd, 0xf3, 0xf9, 
-	0xf3, 0x2f, 0xae, 0x01, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xdf, 0x41, 0xf7, 0x81, 0xf7, 0x81, 0xdf, 0x41, 
-	0xce, 0xc1, 0xb6, 0x01, 0x74, 0x41, 0x7c, 0x01, 
-	0x7c, 0x01, 0x94, 0x81, 0xbd, 0xc1, 0xad, 0x81, 
-	0xce, 0x41, 0xd7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 
-	0xb6, 0x01, 0xf3, 0xdf, 0xf4, 0x39, 0xed, 0xad, 
-	0xf6, 0xe9, 0xf6, 0xa7, 0xf5, 0x6f, 0xf3, 0xf9, 
-	0xf4, 0x25, 0xef, 0x81, 0xf7, 0x81, 0xce, 0xc1, 
-	0xd7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xef, 0x81, 0xef, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xef, 0x81, 0x8c, 0x81, 0x8c, 0x81, 
-	0x9d, 0x01, 0xb4, 0xc3, 0xd6, 0x81, 0xb5, 0x81, 
-	0x9c, 0xc1, 0xb6, 0x01, 0xf7, 0x81, 0xf7, 0x81, 
-	0x5b, 0xc1, 0x64, 0x01, 0x7c, 0x43, 0x93, 0x53, 
-	0xf4, 0xbd, 0xf4, 0x77, 0xcc, 0xd5, 0xd5, 0x89, 
-	0xf7, 0x43, 0xf7, 0x81, 0xf7, 0x81, 0xc6, 0x81, 
-	0xa5, 0xc1, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xbe, 0x81, 0xbe, 0x01, 0x73, 0xc1, 
-	0xdc, 0x53, 0xf2, 0xaf, 0xdb, 0xdd, 0xbc, 0x8f, 
-	0xf2, 0xad, 0xca, 0x9b, 0x94, 0xc1, 0xa5, 0x81, 
-	0xbe, 0x41, 0x8d, 0x41, 0x7d, 0x01, 0xcb, 0x9b, 
-	0xf3, 0xbb, 0xf3, 0x77, 0xf4, 0x9d, 0xad, 0x41, 
-	0xef, 0x41, 0xf7, 0x81, 0xf7, 0x81, 0xd6, 0xc1, 
-	0xa5, 0x81, 0xb6, 0x01, 0xe7, 0x41, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xce, 0xc1, 0xd6, 0xc1, 0xe6, 0xc1, 
-	0xf2, 0xef, 0xf3, 0xf7, 0xf5, 0xfd, 0xf5, 0xaf, 
-	0xf4, 0xbd, 0xf2, 0xaf, 0xd5, 0x89, 0xe7, 0x41, 
-	0xf7, 0x81, 0xa6, 0x01, 0x8d, 0x41, 0x8c, 0xc3, 
-	0xab, 0xd5, 0xb3, 0xd5, 0xc5, 0xc3, 0xc6, 0x01, 
-	0xc6, 0x41, 0xb6, 0x01, 0xef, 0x41, 0xce, 0x41, 
-	0xa5, 0x41, 0x95, 0x01, 0xce, 0x81, 0xbe, 0x41, 
-	0x9d, 0x81, 0x8d, 0x01, 0x95, 0x41, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xe7, 0x41, 0xe7, 0x41, 
-	0xcc, 0xd7, 0xf5, 0xb5, 0xf6, 0xdf, 0xf7, 0x1b, 
-	0xf6, 0x7d, 0xf4, 0xe7, 0xe7, 0x01, 0xef, 0x81, 
-	0xdf, 0x41, 0xae, 0x41, 0x95, 0xc1, 0x9d, 0xc1, 
-	0x8d, 0x41, 0x8d, 0x01, 0xde, 0xc1, 0xe7, 0x41, 
-	0xe7, 0x41, 0xdf, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xce, 0xc1, 0xe7, 0x41, 0xbe, 0x01, 0x94, 0x81, 
-	0x6b, 0xc1, 0x9d, 0x81, 0xd6, 0xc1, 0xf7, 0x81, 
-	0xf7, 0x81, 0xd7, 0x01, 0xdf, 0x01, 0xf7, 0x81, 
-	0xdc, 0x95, 0xf4, 0xf1, 0xf7, 0x9b, 0xf7, 0x97, 
-	0xf5, 0xb1, 0xa3, 0xcf, 0xa6, 0x01, 0xcf, 0x01, 
-	0xa5, 0x41, 0x8c, 0x81, 0x84, 0x81, 0x94, 0xc1, 
-	0x94, 0xc1, 0x8c, 0x81, 0xc6, 0x01, 0xe7, 0x41, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xdf, 0x41, 
-	0xa6, 0x01, 0xdf, 0x41, 0xce, 0x41, 0x9d, 0x01, 
-	0x74, 0x41, 0xc6, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xbe, 0x81, 0xe7, 0x81, 0xf7, 0x83, 
-	0xf3, 0x77, 0xf4, 0x3b, 0xf5, 0x75, 0xf5, 0xf3, 
-	0xf4, 0x7b, 0xf3, 0x77, 0xd5, 0xc7, 0xf7, 0x81, 
-	0xa5, 0x41, 0x7c, 0x41, 0x8c, 0xc1, 0xce, 0x81, 
-	0xde, 0xc1, 0x95, 0x01, 0xa5, 0x01, 0xa4, 0xc1, 
-	0xad, 0x81, 0xad, 0x81, 0xde, 0xc1, 0xde, 0xc1, 
-	0x9d, 0x81, 0x95, 0x01, 0xce, 0x81, 0x94, 0xc1, 
-	0x8c, 0x81, 0x8c, 0x81, 0x8c, 0x81, 0xa5, 0x81, 
-	0xd7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf4, 0x5f, 0xf3, 0x37, 0xcc, 0x1d, 0xd4, 0x9f, 
-	0xf3, 0x35, 0xf3, 0xe5, 0xd6, 0x41, 0xc6, 0x01, 
-	0xad, 0x41, 0x84, 0x81, 0xae, 0x01, 0xf7, 0x81, 
-	0xef, 0x41, 0xb5, 0xc1, 0xdf, 0x01, 0xef, 0x41, 
-	0x9d, 0x41, 0x64, 0x41, 0xad, 0x41, 0x9c, 0xc1, 
-	0x63, 0x81, 0x4b, 0x01, 0x74, 0x01, 0x94, 0x43, 
-	0xb3, 0x8f, 0x93, 0x89, 0x63, 0x81, 0x5b, 0x81, 
-	0xa6, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xef, 0x81, 
-	0xb6, 0x01, 0xc5, 0x09, 0x7c, 0x01, 0x94, 0x81, 
-	0xe5, 0x8b, 0xbd, 0xc1, 0x94, 0x81, 0x73, 0xc1, 
-	0xdf, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xef, 0x41, 0xc6, 0x41, 0xa5, 0xc1, 
-	0x84, 0xc1, 0x6c, 0x41, 0x9d, 0x81, 0xdf, 0x01, 
-	0x84, 0x41, 0x4a, 0x81, 0x52, 0xc1, 0xf2, 0xab, 
-	0xf2, 0xf3, 0xf3, 0x31, 0x5b, 0x03, 0x63, 0xc1, 
-	0xb6, 0x41, 0xe7, 0x81, 0xf7, 0x81, 0xe7, 0x01, 
-	0xad, 0x81, 0x8c, 0x81, 0x94, 0xc1, 0x8c, 0x81, 
-	0x7c, 0x81, 0x95, 0x01, 0xce, 0x81, 0xad, 0x81, 
-	0xbe, 0x41, 0xdf, 0x41, 0xd7, 0x01, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xad, 0xc1, 0x6c, 0x41, 
-	0x5b, 0x81, 0x5b, 0x41, 0x94, 0x81, 0xf7, 0x81, 
-	0xbe, 0x41, 0x6b, 0xc1, 0x74, 0x01, 0xf4, 0xb3, 
-	0xf4, 0xfd, 0xf5, 0xbd, 0x9d, 0x05, 0xcc, 0x93, 
-	0xbd, 0xc3, 0xa5, 0xc1, 0xa5, 0x41, 0x94, 0xc1, 
-	0x73, 0xc1, 0x74, 0x01, 0xa5, 0x41, 0x94, 0xc1, 
-	0x6c, 0x01, 0x8c, 0xc1, 0xdf, 0x41, 0xe7, 0x81, 
-	0xae, 0x41, 0x9d, 0xc1, 0xa6, 0x01, 0xb6, 0x01, 
-	0xae, 0x01, 0x95, 0x41, 0xa5, 0x81, 0x74, 0x41, 
-	0x74, 0x01, 0x7b, 0xc1, 0x84, 0x01, 0xb5, 0xc1, 
-	0x6c, 0x81, 0xcc, 0x15, 0xec, 0x63, 0xe5, 0x63, 
-	0xf7, 0x2f, 0xf6, 0xe7, 0xf5, 0xfb, 0xf3, 0xfb, 
-	0xe3, 0x21, 0x63, 0x81, 0x6b, 0x81, 0x5b, 0x41, 
-	0x5b, 0x41, 0x63, 0xc1, 0x94, 0xc1, 0x94, 0xc1, 
-	0xce, 0x81, 0xef, 0x81, 0xe7, 0x41, 0xb6, 0x41, 
-	0xce, 0x81, 0x94, 0xc1, 0x7c, 0x81, 0x74, 0x41, 
-	0x7c, 0x81, 0x64, 0x01, 0x84, 0x81, 0x63, 0xc1, 
-	0x42, 0xc1, 0x5b, 0x01, 0x5b, 0x01, 0x4a, 0x81, 
-	0x42, 0x81, 0xf3, 0x31, 0xf4, 0xbd, 0xf6, 0xfd, 
-	0xf7, 0x85, 0xf7, 0x91, 0xf5, 0xfd, 0xf3, 0x77, 
-	0xf2, 0xe5, 0x63, 0x81, 0x7c, 0x41, 0x95, 0x01, 
-	0x9d, 0x41, 0x9d, 0x81, 0xa5, 0x81, 0x8d, 0x01, 
-	0xd7, 0x01, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xd6, 0xc1, 0x95, 0x41, 0x64, 0x41, 
-	0x43, 0x41, 0x43, 0x01, 0x5b, 0x81, 0x5b, 0x81, 
-	0x7b, 0xc1, 0xda, 0x9f, 0xea, 0xa5, 0xa2, 0x91, 
-	0x4a, 0x41, 0xf2, 0xa7, 0xf3, 0xf9, 0xf5, 0xb9, 
-	0xf6, 0xeb, 0xf6, 0xf1, 0xcc, 0xe5, 0xf4, 0xab, 
-	0xd4, 0x91, 0x9c, 0xc1, 0xbe, 0x01, 0xe7, 0x41, 
-	0xf7, 0x81, 0xc6, 0x81, 0x95, 0x81, 0x85, 0x01, 
-	0x95, 0x41, 0xbe, 0x41, 0xf7, 0x81, 0xf7, 0x81, 
-	0xf7, 0x81, 0xdf, 0x41, 0xa6, 0x01, 0x6c, 0x81, 
-	0x64, 0x41, 0x74, 0x81, 0x53, 0x81, 0x42, 0xc1, 
-	0x8b, 0x4b, 0xf3, 0xf9, 0xf3, 0x77, 0xf3, 0xf1, 
-	0x94, 0x81, 0x93, 0xc9, 0xa3, 0x19, 0x73, 0x09, 
-	0xf4, 0xbd, 0xf4, 0xbd, 0xe4, 0x25, 0xad, 0x41, 
-	0xd6, 0x81, 0xe7, 0x01, 0xe7, 0x01, 0xc6, 0x41, 
-	0xb6, 0x01, 0x9d, 0x81, 0x95, 0x41, 0x8d, 0x01, 
-	0x84, 0xc1, 0xae, 0x01, 0xd7, 0x01, 0xef, 0x81, 
-	0xd7, 0x01, 0xcf, 0x01, 0xa6, 0x01, 0x85, 0x01, 
-	0xc6, 0xc1, 0xc6, 0xc1, 0x7b, 0x85, 0xb2, 0xd9, 
-	0x7b, 0x0d, 0xf6, 0x3d, 0xf6, 0x7d, 0xdd, 0x63, 
-	0xc4, 0x51, 0xb4, 0x0f, 0x5b, 0x81, 0x83, 0x0d, 
-	0xf3, 0x79, 0xf3, 0x79, 0xf3, 0xe9, 0xbd, 0xc1, 
-	0xce, 0x41, 0xe7, 0x01, 0xd6, 0x81, 0x9d, 0x01, 
-	0x7c, 0x81, 0x53, 0x81, 0x53, 0xc1, 0x5c, 0x01, 
-	0x8c, 0xc1, 0xb6, 0x01, 0xa5, 0xc1, 0xce, 0xc1, 
-	0xe7, 0x41, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xdf, 0x41, 0x9d, 0xc1, 0xd3, 0x5b, 0xf3, 0xb9, 
-	0xf6, 0x3d, 0xf6, 0xe1, 0xf7, 0x8f, 0xf6, 0x79, 
-	0xf4, 0xbd, 0xf3, 0x35, 0x8c, 0x81, 0x9d, 0x01, 
-	0xe5, 0x0f, 0xa3, 0x91, 0x73, 0xc3, 0x9c, 0xc1, 
-	0x9c, 0xc1, 0xb5, 0x81, 0xbd, 0xc1, 0x94, 0x81, 
-	0x74, 0x01, 0x5b, 0x81, 0x53, 0x41, 0x4b, 0x41, 
-	0x64, 0x01, 0x84, 0xc1, 0xbe, 0x41, 0xf7, 0x81, 
-	0xef, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xb6, 0x41, 0x74, 0x81, 0xe3, 0x5b, 0xf3, 0x35, 
-	0xf5, 0xbd, 0xf7, 0x9f, 0xf7, 0x87, 0xf6, 0xbb, 
-	0xf4, 0x39, 0xf2, 0xf3, 0xd5, 0xc3, 0xc6, 0x41, 
-	0xbe, 0x41, 0x5b, 0x81, 0x5b, 0xc1, 0xbe, 0x01, 
-	0x94, 0x81, 0x8c, 0x81, 0x7c, 0x01, 0x6b, 0x81, 
-	0x73, 0xc1, 0x7c, 0x41, 0x6c, 0x01, 0x53, 0xc1, 
-	0x43, 0x81, 0x64, 0x41, 0xef, 0x81, 0xf7, 0x81, 
-	0xad, 0xc1, 0xef, 0x41, 0xef, 0x41, 0x9d, 0xc1, 
-	0x7d, 0x01, 0x7c, 0xc1, 0xe6, 0x47, 0xf5, 0x23, 
-	0xb4, 0x97, 0xf5, 0xb9, 0xf6, 0x3d, 0xcd, 0x1d, 
-	0xe4, 0xa5, 0xe4, 0x1f, 0xad, 0xc1, 0x8c, 0xc1, 
-	0x7c, 0x81, 0x7c, 0x81, 0xb6, 0x01, 0xe7, 0x41, 
-	0xd6, 0x81, 0x9d, 0x41, 0xb5, 0xc1, 0xd6, 0x81, 
-	0xb5, 0xc1, 0x74, 0x01, 0x6c, 0x01, 0x84, 0x81, 
-	0x8d, 0x01, 0x9d, 0xc1, 0xc6, 0xc1, 0xdf, 0x41, 
-	0xad, 0x81, 0xe7, 0x01, 0xdf, 0x01, 0x8d, 0x41, 
-	0x7c, 0xc1, 0x8d, 0x01, 0xe7, 0x01, 0xde, 0xc1, 
-	0xc4, 0x8f, 0xf4, 0x3d, 0xf3, 0xfb, 0xf4, 0xe9, 
-	0xa6, 0x01, 0x8d, 0x01, 0x6c, 0x81, 0x5c, 0x01, 
-	0x6c, 0x41, 0xad, 0x81, 0xe7, 0x41, 0xdf, 0x41, 
-	0xe7, 0x41, 0xce, 0xc1, 0xef, 0x81, 0xf7, 0x81, 
-	0xe7, 0x41, 0x95, 0x01, 0x95, 0x01, 0xad, 0x81, 
-	0xc6, 0x41, 0xdf, 0x01, 0xcf, 0x01, 0xbe, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xd6, 0xc1, 0x94, 0xc1, 0xad, 0x41, 0xb5, 0x81, 
-	0xac, 0x87, 0xf3, 0x2f, 0xf3, 0x33, 0xf5, 0x9d, 
-	0xf7, 0x81, 0xbe, 0x81, 0x7d, 0x01, 0x5c, 0x41, 
-	0x5c, 0x01, 0x95, 0x41, 0xdf, 0x01, 0xef, 0x81, 
-	0xe7, 0x41, 0xae, 0x41, 0xb6, 0x81, 0xef, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xef, 0x41, 0xce, 0x41, 
-	0xce, 0x41, 0xef, 0x41, 0xf7, 0x81, 0xe7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 0xf7, 0x81, 
-	0xef, 0x41, 0xbe, 0x01, 0xbd, 0xc1, 0xde, 0xc1, 
-	0xc6, 0x41, 0x9d, 0x81, 0xd7, 0x01, 0xf7, 0x81, 
-	0xf7, 0x81, 0xf7, 0x81, 0x9d, 0xc1, 0x95, 0x41, 
-	0x8d, 0x01, 0xae, 0x01, 0xdf, 0x41, 0xcf, 0x01, 
-	0xb6, 0x41, 0x95, 0x81, 0x9d, 0xc1, 0xdf, 0x41, 
-	0xf7, 0x81, 0xf7, 0x81, 0xef, 0x41, 0xbe, 0x01, 
-	0xa5, 0x41, 0xce, 0x41, 0xef, 0x41, 0xc6, 0xc1, 
-	
-};
-
-Gfx supergoomb__1B46C8C_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__1B46C8C_c_rgba16[] = {
-	0x63, 0x19, 0x6b, 0x5b, 0x6b, 0x5b, 0x4a, 0x53, 
-	0x29, 0x4b, 0x4a, 0x53, 0x73, 0x9d, 0x42, 0x11, 
-	0x31, 0x8d, 0x29, 0x4b, 0x52, 0x95, 0x73, 0x9d, 
-	0x84, 0x21, 0x7b, 0xdf, 0x73, 0x9d, 0x8c, 0x63, 
-	0xa5, 0x29, 0x9c, 0xe7, 0x94, 0xa5, 0x8c, 0x63, 
-	0x8c, 0x63, 0x31, 0x8d, 0x42, 0x11, 0x94, 0xa5, 
-	0x8c, 0x63, 0x73, 0x9d, 0x4a, 0x53, 0x5a, 0xd7, 
-	0x73, 0x9d, 0x94, 0xa5, 0x63, 0x19, 0x52, 0x95, 
-	0x63, 0x19, 0x84, 0x21, 0x8c, 0x63, 0x52, 0x95, 
-	0x39, 0xcf, 0x42, 0x11, 0x5a, 0xd7, 0x4a, 0x53, 
-	0x4a, 0x53, 0x63, 0x19, 0x8c, 0x63, 0x8c, 0x63, 
-	0x8c, 0x63, 0x94, 0xa5, 0x63, 0x19, 0x6b, 0x5b, 
-	0xb5, 0xad, 0xbd, 0xef, 0xa5, 0x29, 0xb5, 0xad, 
-	0xad, 0x6b, 0x6b, 0x5b, 0x29, 0x4b, 0x29, 0x4b, 
-	0x73, 0x9d, 0x8c, 0x63, 0x84, 0x21, 0x63, 0x19, 
-	0x52, 0x95, 0x6b, 0x5b, 0x5a, 0xd7, 0x63, 0x19, 
-	0x94, 0xa5, 0x7b, 0xdf, 0x84, 0x21, 0x63, 0x19, 
-	0x31, 0x8d, 0x42, 0x11, 0x6b, 0x5b, 0x63, 0x19, 
-	0x73, 0x9d, 0x84, 0x21, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x73, 0x9d, 0x94, 0xa5, 0x6b, 0x5b, 0x42, 0x11, 
-	0xa5, 0x29, 0xb5, 0xad, 0x9c, 0xe7, 0xa5, 0x29, 
-	0xbd, 0xef, 0x94, 0xa5, 0x42, 0x11, 0x42, 0x11, 
-	0x21, 0x09, 0x4a, 0x53, 0x52, 0x95, 0x29, 0x4b, 
-	0x18, 0xc7, 0x6b, 0x5b, 0x94, 0xa5, 0x94, 0xa5, 
-	0x8c, 0x63, 0x84, 0x21, 0x5a, 0xd7, 0x21, 0x09, 
-	0x18, 0xc7, 0x7b, 0xdf, 0x8c, 0x63, 0x84, 0x21, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x84, 0x21, 0x94, 0xa5, 
-	0x6b, 0x5b, 0x84, 0x21, 0x73, 0x9d, 0x4a, 0x53, 
-	0x39, 0xcf, 0x84, 0x21, 0x84, 0x21, 0x94, 0xa5, 
-	0x8c, 0x63, 0x52, 0x95, 0x5a, 0xd7, 0x6b, 0x5b, 
-	0x73, 0x9d, 0x8c, 0x63, 0x5a, 0xd7, 0x21, 0x09, 
-	0x18, 0xc7, 0x31, 0x8d, 0x63, 0x19, 0x8c, 0x63, 
-	0x6b, 0x5b, 0x63, 0x19, 0x6b, 0x5b, 0x6b, 0x5b, 
-	0x42, 0x11, 0x84, 0x21, 0x73, 0x9d, 0x73, 0x9d, 
-	0x63, 0x19, 0x73, 0x9d, 0x7b, 0xdf, 0x84, 0x21, 
-	0x84, 0x21, 0x7b, 0xdf, 0x5a, 0xd7, 0x52, 0x95, 
-	0x42, 0x11, 0x18, 0xc7, 0x31, 0x8d, 0x5a, 0xd7, 
-	0x29, 0x4b, 0x5a, 0xd7, 0x84, 0x21, 0x6b, 0x5b, 
-	0x6b, 0x5b, 0x8c, 0x63, 0x84, 0x21, 0x73, 0x9d, 
-	0x6b, 0x5b, 0x42, 0x11, 0x31, 0x8d, 0x31, 0x8d, 
-	0x18, 0xc7, 0x29, 0x4b, 0x39, 0xcf, 0x29, 0x4b, 
-	0x21, 0x09, 0x63, 0x19, 0x8c, 0x63, 0x94, 0xa5, 
-	0x84, 0x21, 0x84, 0x21, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x73, 0x9d, 0x63, 0x19, 
-	0x52, 0x95, 0x29, 0x4b, 0x21, 0x09, 0x21, 0x09, 
-	0x42, 0x11, 0x6b, 0x5b, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x7b, 0xdf, 0x94, 0xa5, 0x94, 0xa5, 0x84, 0x21, 
-	0x7b, 0xdf, 0x84, 0x21, 0x73, 0x9d, 0x18, 0xc7, 
-	0x21, 0x09, 0x18, 0xc7, 0x10, 0x85, 0x4a, 0x53, 
-	0x31, 0x8d, 0x10, 0x85, 0x39, 0xcf, 0x6b, 0x5b, 
-	0x8c, 0x63, 0x94, 0xa5, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x84, 0x21, 0x73, 0x9d, 0x6b, 0x5b, 0x42, 0x11, 
-	0x42, 0x11, 0x29, 0x4b, 0x29, 0x4b, 0x39, 0xcf, 
-	0x63, 0x19, 0x73, 0x9d, 0x8c, 0x63, 0x8c, 0x63, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x84, 0x21, 0x73, 0x9d, 0x21, 0x09, 0x18, 0xc7, 
-	0x6b, 0x5b, 0x5a, 0xd7, 0x31, 0x8d, 0x29, 0x4b, 
-	0x21, 0x09, 0x21, 0x09, 0x10, 0x85, 0x00, 0x01, 
-	0x10, 0x85, 0x4a, 0x53, 0x6b, 0x5b, 0x84, 0x21, 
-	0x7b, 0xdf, 0x84, 0x21, 0x7b, 0xdf, 0x52, 0x95, 
-	0x31, 0x8d, 0x21, 0x09, 0x21, 0x09, 0x31, 0x8d, 
-	0x73, 0x9d, 0x5a, 0xd7, 0x5a, 0xd7, 0x6b, 0x5b, 
-	0x7b, 0xdf, 0x84, 0x21, 0x9c, 0xe7, 0x8c, 0x63, 
-	0x29, 0x4b, 0x21, 0x09, 0x29, 0x4b, 0x42, 0x11, 
-	0x8c, 0x63, 0x9c, 0xe7, 0x73, 0x9d, 0x18, 0xc7, 
-	0x29, 0x4b, 0x21, 0x09, 0x42, 0x11, 0x39, 0xcf, 
-	0x21, 0x09, 0x08, 0x43, 0x10, 0x85, 0x4a, 0x53, 
-	0x73, 0x9d, 0x8c, 0x63, 0x7b, 0xdf, 0x6b, 0x5b, 
-	0x39, 0xcf, 0x29, 0x4b, 0x39, 0xcf, 0x31, 0x8d, 
-	0x21, 0x09, 0x39, 0xcf, 0x21, 0x09, 0x18, 0xc7, 
-	0x18, 0xc7, 0x18, 0xc7, 0x39, 0xcf, 0x39, 0xcf, 
-	0x29, 0x4b, 0x4a, 0x53, 0x8c, 0x63, 0x94, 0xa5, 
-	0x84, 0x21, 0x7b, 0xdf, 0x63, 0x19, 0x4a, 0x53, 
-	0x5a, 0xd7, 0x42, 0x11, 0x5a, 0xd7, 0x6b, 0x5b, 
-	0x6b, 0x5b, 0x52, 0x95, 0x29, 0x4b, 0x10, 0x85, 
-	0x21, 0x09, 0x5a, 0xd7, 0x5a, 0xd7, 0x4a, 0x53, 
-	0x42, 0x11, 0x39, 0xcf, 0x6b, 0x5b, 0x8c, 0x63, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x7b, 0xdf, 0x5a, 0xd7, 
-	0x52, 0x95, 0x21, 0x09, 0x29, 0x4b, 0x4a, 0x53, 
-	0x21, 0x09, 0x73, 0x9d, 0xa5, 0x29, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x5a, 0xd7, 0x52, 0x95, 
-	0x73, 0x9d, 0x73, 0x9d, 0x7b, 0xdf, 0x73, 0x9d, 
-	0x63, 0x19, 0x63, 0x19, 0x63, 0x19, 0x4a, 0x53, 
-	0x31, 0x8d, 0x21, 0x09, 0x29, 0x4b, 0x4a, 0x53, 
-	0x5a, 0xd7, 0x84, 0x21, 0x84, 0x21, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x9c, 0xe7, 0x94, 0xa5, 
-	0x8c, 0x63, 0x4a, 0x53, 0x31, 0x8d, 0x4a, 0x53, 
-	0x39, 0xcf, 0x63, 0x19, 0x63, 0x19, 0x73, 0x9d, 
-	0x6b, 0x5b, 0x9c, 0xe7, 0x84, 0x21, 0x39, 0xcf, 
-	0x5a, 0xd7, 0x63, 0x19, 0x63, 0x19, 0x63, 0x19, 
-	0x52, 0x95, 0x4a, 0x53, 0x6b, 0x5b, 0x5a, 0xd7, 
-	0x39, 0xcf, 0x08, 0x43, 0x18, 0xc7, 0x21, 0x09, 
-	0x52, 0x95, 0x5a, 0xd7, 0x94, 0xa5, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x73, 0x9d, 0x52, 0x95, 0x31, 0x8d, 0x21, 0x09, 
-	0x52, 0x95, 0x7b, 0xdf, 0x52, 0x95, 0x5a, 0xd7, 
-	0x6b, 0x5b, 0x6b, 0x5b, 0x5a, 0xd7, 0x18, 0xc7, 
-	0x31, 0x8d, 0x73, 0x9d, 0x73, 0x9d, 0x6b, 0x5b, 
-	0x63, 0x19, 0x52, 0x95, 0x63, 0x19, 0x6b, 0x5b, 
-	0x39, 0xcf, 0x29, 0x4b, 0x29, 0x4b, 0x31, 0x8d, 
-	0x42, 0x11, 0x52, 0x95, 0x5a, 0xd7, 0x73, 0x9d, 
-	0x84, 0x21, 0x8c, 0x63, 0x94, 0xa5, 0x8c, 0x63, 
-	0x6b, 0x5b, 0x5a, 0xd7, 0x31, 0x8d, 0x31, 0x8d, 
-	0x5a, 0xd7, 0x7b, 0xdf, 0x7b, 0xdf, 0x63, 0x19, 
-	0x73, 0x9d, 0x52, 0x95, 0x42, 0x11, 0x29, 0x4b, 
-	0x18, 0xc7, 0x31, 0x8d, 0x73, 0x9d, 0x84, 0x21, 
-	0x73, 0x9d, 0x39, 0xcf, 0x29, 0x4b, 0x29, 0x4b, 
-	0x21, 0x09, 0x21, 0x09, 0x21, 0x09, 0x31, 0x8d, 
-	0x42, 0x11, 0x42, 0x11, 0x4a, 0x53, 0x4a, 0x53, 
-	0x94, 0xa5, 0x84, 0x21, 0x94, 0xa5, 0x6b, 0x5b, 
-	0x42, 0x11, 0x21, 0x09, 0x39, 0xcf, 0x42, 0x11, 
-	0x29, 0x4b, 0x42, 0x11, 0x42, 0x11, 0x52, 0x95, 
-	0x21, 0x09, 0x18, 0xc7, 0x5a, 0xd7, 0x39, 0xcf, 
-	0x21, 0x09, 0x10, 0x85, 0x63, 0x19, 0x4a, 0x53, 
-	0x29, 0x4b, 0x10, 0x85, 0x29, 0x4b, 0x4a, 0x53, 
-	0x52, 0x95, 0x52, 0x95, 0x5a, 0xd7, 0x84, 0x21, 
-	0x7b, 0xdf, 0x7b, 0xdf, 0x73, 0x9d, 0x21, 0x09, 
-	0x52, 0x95, 0x84, 0x21, 0x6b, 0x5b, 0x5a, 0xd7, 
-	0x21, 0x09, 0x18, 0xc7, 0x21, 0x09, 0x21, 0x09, 
-	0x21, 0x09, 0x18, 0xc7, 0x10, 0x85, 0x21, 0x09, 
-	0x29, 0x4b, 0x42, 0x11, 0x42, 0x11, 0x4a, 0x53, 
-	0x21, 0x09, 0x18, 0xc7, 0x21, 0x09, 0x29, 0x4b, 
-	0x29, 0x4b, 0x39, 0xcf, 0x4a, 0x53, 0x52, 0x95, 
-	0x5a, 0xd7, 0x5a, 0xd7, 0x6b, 0x5b, 0x8c, 0x63, 
-	0x84, 0x21, 0x84, 0x21, 0x94, 0xa5, 0x6b, 0x5b, 
-	0x29, 0x4b, 0x42, 0x11, 0x5a, 0xd7, 0x7b, 0xdf, 
-	0x73, 0x9d, 0x6b, 0x5b, 0x73, 0x9d, 0x7b, 0xdf, 
-	0x8c, 0x63, 0x8c, 0x63, 0x42, 0x11, 0x10, 0x85, 
-	0x94, 0xa5, 0x84, 0x21, 0x84, 0x21, 0x5a, 0xd7, 
-	0x29, 0x4b, 0x18, 0xc7, 0x39, 0xcf, 0x84, 0x21, 
-	0x63, 0x19, 0x63, 0x19, 0x6b, 0x5b, 0x6b, 0x5b, 
-	0x63, 0x19, 0x6b, 0x5b, 0x84, 0x21, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x7b, 0xdf, 0x94, 0xa5, 0xa5, 0x29, 
-	0x4a, 0x53, 0x73, 0x9d, 0x6b, 0x5b, 0x84, 0x21, 
-	0x39, 0xcf, 0x63, 0x19, 0x94, 0xa5, 0xad, 0x6b, 
-	0xad, 0x6b, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x84, 0x21, 0x8c, 0x63, 0x84, 0x21, 
-	0x4a, 0x53, 0x4a, 0x53, 0x21, 0x09, 0x7b, 0xdf, 
-	0x84, 0x21, 0x73, 0x9d, 0x84, 0x21, 0x6b, 0x5b, 
-	0x73, 0x9d, 0x7b, 0xdf, 0x84, 0x21, 0x94, 0xa5, 
-	0x8c, 0x63, 0x63, 0x19, 0x4a, 0x53, 0x5a, 0xd7, 
-	0x63, 0x19, 0x5a, 0xd7, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x8c, 0x63, 0x7b, 0xdf, 0x9c, 0xe7, 0xad, 0x6b, 
-	0x94, 0xa5, 0x7b, 0xdf, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x94, 0xa5, 0x84, 0x21, 0x8c, 0x63, 
-	0x7b, 0xdf, 0x6b, 0x5b, 0x52, 0x95, 0x31, 0x8d, 
-	0x52, 0x95, 0x42, 0x11, 0x5a, 0xd7, 0x73, 0x9d, 
-	0x73, 0x9d, 0x8c, 0x63, 0x8c, 0x63, 0x7b, 0xdf, 
-	0x39, 0xcf, 0x18, 0xc7, 0x39, 0xcf, 0x73, 0x9d, 
-	0x52, 0x95, 0x31, 0x8d, 0x5a, 0xd7, 0x6b, 0x5b, 
-	0x52, 0x95, 0x5a, 0xd7, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x7b, 0xdf, 0x7b, 0xdf, 0x9c, 0xe7, 
-	0xb5, 0xad, 0xad, 0x6b, 0x7b, 0xdf, 0x94, 0xa5, 
-	0x84, 0x21, 0x4a, 0x53, 0x52, 0x95, 0x10, 0x85, 
-	0x18, 0xc7, 0x31, 0x8d, 0x31, 0x8d, 0x52, 0x95, 
-	0x6b, 0x5b, 0x6b, 0x5b, 0x73, 0x9d, 0x4a, 0x53, 
-	0x29, 0x4b, 0x5a, 0xd7, 0x84, 0x21, 0x9c, 0xe7, 
-	0x94, 0xa5, 0x8c, 0x63, 0x94, 0xa5, 0xbd, 0xef, 
-	0xc6, 0x31, 0x94, 0xa5, 0x4a, 0x53, 0x8c, 0x63, 
-	0x8c, 0x63, 0x84, 0x21, 0x6b, 0x5b, 0x84, 0x21, 
-	0x7b, 0xdf, 0xa5, 0x29, 0x73, 0x9d, 0x63, 0x19, 
-	0x52, 0x95, 0x21, 0x09, 0x18, 0xc7, 0x18, 0xc7, 
-	0x18, 0xc7, 0x18, 0xc7, 0x29, 0x4b, 0x39, 0xcf, 
-	0x39, 0xcf, 0x29, 0x4b, 0x18, 0xc7, 0x08, 0x43, 
-	0x63, 0x19, 0x94, 0xa5, 0xb5, 0xad, 0xbd, 0xef, 
-	0xc6, 0x31, 0xbd, 0xef, 0x9c, 0xe7, 0x94, 0xa5, 
-	0xb5, 0xad, 0xbd, 0xef, 0x31, 0x8d, 0x42, 0x11, 
-	0x84, 0x21, 0x8c, 0x63, 0x6b, 0x5b, 0x5a, 0xd7, 
-	0x42, 0x11, 0x5a, 0xd7, 0x39, 0xcf, 0x39, 0xcf, 
-	0x4a, 0x53, 0x6b, 0x5b, 0x7b, 0xdf, 0x42, 0x11, 
-	0x21, 0x09, 0x31, 0x8d, 0x39, 0xcf, 0x31, 0x8d, 
-	0x42, 0x11, 0x5a, 0xd7, 0x5a, 0xd7, 0x52, 0x95, 
-	0x7b, 0xdf, 0x9c, 0xe7, 0xd6, 0xb5, 0xce, 0x73, 
-	0xce, 0x73, 0xc6, 0x31, 0xb5, 0xad, 0xa5, 0x29, 
-	0x9c, 0xe7, 0xce, 0x73, 0x5a, 0xd7, 0x18, 0xc7, 
-	0x42, 0x11, 0x52, 0x95, 0x63, 0x19, 0x42, 0x11, 
-	0x6b, 0x5b, 0x8c, 0x63, 0x84, 0x21, 0x73, 0x9d, 
-	0x7b, 0xdf, 0x8c, 0x63, 0x8c, 0x63, 0x73, 0x9d, 
-	0x31, 0x8d, 0x42, 0x11, 0x52, 0x95, 0x63, 0x19, 
-	0x7b, 0xdf, 0x84, 0x21, 0x7b, 0xdf, 0x7b, 0xdf, 
-	0x6b, 0x5b, 0xd6, 0xb5, 0xde, 0xf7, 0xb5, 0xad, 
-	0xbd, 0xef, 0x9c, 0xe7, 0x94, 0xa5, 0xad, 0x6b, 
-	0x94, 0xa5, 0x9c, 0xe7, 0xa5, 0x29, 0x31, 0x8d, 
-	0x5a, 0xd7, 0x4a, 0x53, 0x42, 0x11, 0x63, 0x19, 
-	0x94, 0xa5, 0x7b, 0xdf, 0x84, 0x21, 0x7b, 0xdf, 
-	0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 0x52, 0x95, 
-	0x39, 0xcf, 0x63, 0x19, 0x63, 0x19, 0x73, 0x9d, 
-	0x73, 0x9d, 0x84, 0x21, 0x84, 0x21, 0x7b, 0xdf, 
-	0x5a, 0xd7, 0xd6, 0xb5, 0xc6, 0x31, 0xbd, 0xef, 
-	0xc6, 0x31, 0xc6, 0x31, 0x9c, 0xe7, 0xad, 0x6b, 
-	0xa5, 0x29, 0x8c, 0x63, 0x9c, 0xe7, 0x6b, 0x5b, 
-	0x4a, 0x53, 0x7b, 0xdf, 0x6b, 0x5b, 0x84, 0x21, 
-	0x7b, 0xdf, 0x94, 0xa5, 0x8c, 0x63, 0x94, 0xa5, 
-	0x8c, 0x63, 0x7b, 0xdf, 0x8c, 0x63, 0x63, 0x19, 
-	0x42, 0x11, 0x6b, 0x5b, 0x5a, 0xd7, 0x6b, 0x5b, 
-	0x73, 0x9d, 0x73, 0x9d, 0x73, 0x9d, 0x63, 0x19, 
-	0x5a, 0xd7, 0x84, 0x21, 0xa5, 0x29, 0xa5, 0x29, 
-	0xbd, 0xef, 0xbd, 0xef, 0xd6, 0xb5, 0xbd, 0xef, 
-	0xbd, 0xef, 0xa5, 0x29, 0xa5, 0x29, 0x8c, 0x63, 
-	0x52, 0x95, 0x7b, 0xdf, 0x6b, 0x5b, 0x63, 0x19, 
-	0x73, 0x9d, 0x94, 0xa5, 0x8c, 0x63, 0x94, 0xa5, 
-	0x8c, 0x63, 0x84, 0x21, 0x8c, 0x63, 0x4a, 0x53, 
-	0x4a, 0x53, 0x73, 0x9d, 0x63, 0x19, 0x63, 0x19, 
-	0x6b, 0x5b, 0x5a, 0xd7, 0x6b, 0x5b, 0x6b, 0x5b, 
-	0x4a, 0x53, 0x42, 0x11, 0x73, 0x9d, 0x7b, 0xdf, 
-	0x52, 0x95, 0x21, 0x09, 0x5a, 0xd7, 0xb5, 0xad, 
-	0xbd, 0xef, 0xbd, 0xef, 0xc6, 0x31, 0x84, 0x21, 
-	0x5a, 0xd7, 0x94, 0xa5, 0x73, 0x9d, 0x5a, 0xd7, 
-	0x84, 0x21, 0x7b, 0xdf, 0x84, 0x21, 0x8c, 0x63, 
-	0x8c, 0x63, 0x8c, 0x63, 0x84, 0x21, 0x42, 0x11, 
-	0x73, 0x9d, 0x7b, 0xdf, 0x73, 0x9d, 0x63, 0x19, 
-	0x5a, 0xd7, 0x52, 0x95, 0x6b, 0x5b, 0x7b, 0xdf, 
-	0x7b, 0xdf, 0x63, 0x19, 0x5a, 0xd7, 0x7b, 0xdf, 
-	0x39, 0xcf, 0x5a, 0xd7, 0x63, 0x19, 0x4a, 0x53, 
-	0x7b, 0xdf, 0x9c, 0xe7, 0xad, 0x6b, 0x63, 0x19, 
-	0x42, 0x11, 0x94, 0xa5, 0x8c, 0x63, 0x6b, 0x5b, 
-	0x6b, 0x5b, 0x73, 0x9d, 0x84, 0x21, 0x94, 0xa5, 
-	0x94, 0xa5, 0x84, 0x21, 0x84, 0x21, 0x29, 0x4b, 
-	0x63, 0x19, 0x7b, 0xdf, 0x7b, 0xdf, 0x63, 0x19, 
-	0x6b, 0x5b, 0x6b, 0x5b, 0x7b, 0xdf, 0x6b, 0x5b, 
-	0x84, 0x21, 0x84, 0x21, 0x5a, 0xd7, 0x73, 0x9d, 
-	0x94, 0xa5, 0xa5, 0x29, 0x94, 0xa5, 0x7b, 0xdf, 
-	0x94, 0xa5, 0x84, 0x21, 0x39, 0xcf, 0x39, 0xcf, 
-	0x63, 0x19, 0x94, 0xa5, 0x94, 0xa5, 0x7b, 0xdf, 
-	0x73, 0x9d, 0x84, 0x21, 0x8c, 0x63, 0x7b, 0xdf, 
-	0x9c, 0xe7, 0x7b, 0xdf, 0x39, 0xcf, 0x21, 0x09, 
-	0x84, 0x21, 0xb5, 0xad, 0xb5, 0xad, 0x52, 0x95, 
-	0x52, 0x95, 0x63, 0x19, 0x7b, 0xdf, 0x84, 0x21, 
-	0x8c, 0x63, 0x8c, 0x63, 0x6b, 0x5b, 0xa5, 0x29, 
-	0x9c, 0xe7, 0x8c, 0x63, 0x84, 0x21, 0x6b, 0x5b, 
-	0x73, 0x9d, 0x94, 0xa5, 0x6b, 0x5b, 0x31, 0x8d, 
-	0x6b, 0x5b, 0x94, 0xa5, 0x6b, 0x5b, 0x6b, 0x5b, 
-	0x39, 0xcf, 0x73, 0x9d, 0x8c, 0x63, 0x84, 0x21, 
-	0x94, 0xa5, 0x6b, 0x5b, 0x10, 0x85, 0x18, 0xc7, 
-	0x39, 0xcf, 0x9c, 0xe7, 0xce, 0x73, 0xad, 0x6b, 
-	0x4a, 0x53, 0x42, 0x11, 0x5a, 0xd7, 0x7b, 0xdf, 
-	0x8c, 0x63, 0x7b, 0xdf, 0x4a, 0x53, 0x94, 0xa5, 
-	0x8c, 0x63, 0x94, 0xa5, 0x94, 0xa5, 0x84, 0x21, 
-	0x73, 0x9d, 0x84, 0x21, 0x8c, 0x63, 0x8c, 0x63, 
-	0x52, 0x95, 0x7b, 0xdf, 0x21, 0x09, 0x18, 0xc7, 
-	0x42, 0x11, 0x21, 0x09, 0x42, 0x11, 0x8c, 0x63, 
-	0x9c, 0xe7, 0x4a, 0x53, 0x08, 0x43, 0x21, 0x09, 
-	0x21, 0x09, 0x31, 0x8d, 0x63, 0x19, 0x52, 0x95, 
-	0x31, 0x8d, 0x31, 0x8d, 0x31, 0x8d, 0x21, 0x09, 
-	0x39, 0xcf, 0x31, 0x8d, 0x21, 0x09, 0x52, 0x95, 
-	0x9c, 0xe7, 0xa5, 0x29, 0x94, 0xa5, 0xb5, 0xad, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x94, 0xa5, 0x94, 0xa5, 
-	0x42, 0x11, 0x39, 0xcf, 0x73, 0x9d, 0x6b, 0x5b, 
-	0x7b, 0xdf, 0x5a, 0xd7, 0x31, 0x8d, 0x29, 0x4b, 
-	0x21, 0x09, 0x31, 0x8d, 0x42, 0x11, 0x39, 0xcf, 
-	0x39, 0xcf, 0x39, 0xcf, 0x21, 0x09, 0x4a, 0x53, 
-	0x6b, 0x5b, 0x63, 0x19, 0x52, 0x95, 0x29, 0x4b, 
-	0x4a, 0x53, 0x6b, 0x5b, 0x63, 0x19, 0x42, 0x11, 
-	0x42, 0x11, 0x6b, 0x5b, 0xbd, 0xef, 0xce, 0x73, 
-	0x9c, 0xe7, 0x94, 0xa5, 0x6b, 0x5b, 0x84, 0x21, 
-	0x52, 0x95, 0x84, 0x21, 0x73, 0x9d, 0x63, 0x19, 
-	
-};
-
-Gfx supergoomb__6C631877_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__6C631877_c_rgba16[] = {
-	0xce, 0x71, 0xce, 0x73, 0xd6, 0x73, 0xd6, 0xb3, 
-	0xd6, 0xb3, 0xd6, 0x73, 0xce, 0x2f, 0xc5, 0xed, 
-	0xce, 0x73, 0xd6, 0xb5, 0xce, 0x6f, 0xd6, 0x6f, 
-	0xde, 0xb5, 0xd6, 0xb5, 0xd6, 0xb3, 0xce, 0x73, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xbd, 0xed, 0xac, 0xe3, 0xce, 0x2f, 0xce, 0x31, 
-	0xbd, 0xed, 0xad, 0x25, 0xbd, 0xa9, 0xce, 0x71, 
-	0xc6, 0x31, 0xc6, 0x2f, 0xce, 0x6f, 0xce, 0x73, 
-	0xce, 0x71, 0xce, 0x73, 0xd6, 0xb3, 0xd6, 0xb3, 
-	0xd6, 0xb5, 0xce, 0x73, 0xc6, 0x2f, 0xce, 0x31, 
-	0xc6, 0x2f, 0xd6, 0xb5, 0xce, 0x2b, 0xd6, 0x6f, 
-	0xde, 0xf5, 0xde, 0xf5, 0xd6, 0xb3, 0xce, 0x31, 
-	0xce, 0x71, 0xc6, 0x2f, 0xc5, 0xef, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xa4, 0xe3, 0xc6, 0x2f, 0xc6, 0x73, 
-	0xbd, 0xeb, 0xb5, 0xa7, 0xbd, 0xa9, 0xc6, 0x73, 
-	0xc6, 0x31, 0xc6, 0x2d, 0xce, 0x71, 0xce, 0x73, 
-	0xce, 0x71, 0xce, 0x71, 0xd6, 0x73, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xc6, 0x2d, 0xc5, 0xa7, 0xc6, 0x2f, 
-	0xce, 0x2f, 0xce, 0x2d, 0xce, 0x2f, 0xd6, 0xb3, 
-	0xde, 0xf5, 0xd6, 0xb5, 0xce, 0x71, 0xce, 0x71, 
-	0xce, 0x71, 0xc6, 0x2f, 0xce, 0x31, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xb5, 0xad, 0xad, 0x25, 0xc6, 0x2f, 
-	0xc5, 0xef, 0xc5, 0xed, 0xbd, 0xa7, 0xce, 0x73, 
-	0xc6, 0x2f, 0xbd, 0xa7, 0xc6, 0x31, 0xce, 0xb3, 
-	0xce, 0x73, 0xce, 0x73, 0xd6, 0x73, 0xd6, 0xb3, 
-	0xd6, 0xb5, 0xbd, 0xa7, 0xbd, 0x65, 0xc6, 0x2d, 
-	0xce, 0x71, 0xc6, 0x2b, 0xce, 0x71, 0xd6, 0xb5, 
-	0xde, 0xb5, 0xd6, 0xb3, 0xce, 0x71, 0xce, 0x73, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xbe, 0x31, 0xad, 0x25, 0xbd, 0xeb, 
-	0xc6, 0x2f, 0xce, 0x31, 0xbd, 0xed, 0xc6, 0x31, 
-	0xc6, 0x2f, 0xbd, 0xab, 0xbd, 0xeb, 0xc6, 0x2f, 
-	0xce, 0x73, 0xce, 0x73, 0xce, 0x71, 0xd6, 0xb3, 
-	0xd6, 0xb5, 0xbd, 0xa7, 0xbd, 0xa7, 0xc5, 0xed, 
-	0xce, 0x2f, 0xce, 0x2f, 0xce, 0x71, 0xd6, 0xb3, 
-	0xde, 0xf5, 0xd6, 0xb3, 0xd6, 0xb5, 0xd6, 0x73, 
-	0xce, 0x31, 0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x31, 0xb5, 0xab, 0xb5, 0x67, 
-	0xc6, 0x71, 0xc6, 0x2f, 0xbd, 0xed, 0xc6, 0x31, 
-	0xc5, 0xed, 0xc5, 0xed, 0xbd, 0xa9, 0xc5, 0xeb, 
-	0xce, 0x73, 0xce, 0x71, 0xd6, 0x73, 0xd6, 0x73, 
-	0xd6, 0xb5, 0xbd, 0xa7, 0xbd, 0xa9, 0xc5, 0xe9, 
-	0xce, 0x71, 0xce, 0x73, 0xce, 0x71, 0xd6, 0xb5, 
-	0xd6, 0xb3, 0xd6, 0xb3, 0xd6, 0xb3, 0xd6, 0xb3, 
-	0xce, 0x71, 0xc6, 0x2f, 0xc6, 0x2f, 0xc5, 0xef, 
-	0xc6, 0x2f, 0xc6, 0x31, 0xbd, 0xed, 0xad, 0x65, 
-	0xce, 0x31, 0xc6, 0x2f, 0xbd, 0xeb, 0xc6, 0x2f, 
-	0xbd, 0xab, 0xbd, 0xeb, 0xbd, 0x67, 0xc6, 0x2f, 
-	0xce, 0x31, 0xce, 0x71, 0xd6, 0xb3, 0xce, 0x71, 
-	0xce, 0x73, 0xbd, 0xa7, 0xb5, 0xa9, 0xc6, 0x2d, 
-	0xce, 0x73, 0xce, 0x71, 0xd6, 0x73, 0xd6, 0xb5, 
-	0xde, 0xf5, 0xd6, 0xb3, 0xce, 0x6f, 0xce, 0x71, 
-	0xce, 0x71, 0xce, 0x71, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xbe, 0x2f, 0xb5, 0x67, 
-	0xc6, 0x31, 0xc6, 0x31, 0xbd, 0xed, 0xc6, 0x31, 
-	0xbd, 0xa9, 0xb5, 0x67, 0xbd, 0xab, 0xce, 0x71, 
-	0xc6, 0x31, 0xce, 0x31, 0xd6, 0x73, 0xce, 0x31, 
-	0xce, 0x71, 0xbd, 0x65, 0xb5, 0x65, 0xc6, 0x2d, 
-	0xce, 0x73, 0xce, 0x2f, 0xd6, 0x73, 0xd6, 0xb5, 
-	0xd6, 0xb3, 0xd6, 0x71, 0xd6, 0xb3, 0xce, 0x73, 
-	0xce, 0x71, 0xce, 0x71, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xbe, 0x31, 0xb5, 0x69, 
-	0xbd, 0x67, 0xc6, 0x31, 0xbd, 0xef, 0xbd, 0xeb, 
-	0xb5, 0xa7, 0xb5, 0x65, 0xc5, 0xed, 0xce, 0xb3, 
-	0xc6, 0x71, 0xc6, 0x31, 0xce, 0x71, 0xce, 0x73, 
-	0xd6, 0xb5, 0xbd, 0xeb, 0xb5, 0x23, 0xc6, 0x2f, 
-	0xce, 0x71, 0xce, 0x6f, 0xd6, 0xb3, 0xd6, 0xb3, 
-	0xd6, 0xb3, 0xd6, 0xb3, 0xce, 0x2f, 0xd6, 0xb3, 
-	0xce, 0x71, 0xc5, 0xed, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 0xbd, 0xef, 
-	0xb5, 0x25, 0xbd, 0xa9, 0xb5, 0x69, 0xb5, 0x25, 
-	0xc6, 0x33, 0xb5, 0xa9, 0xce, 0x71, 0xce, 0x73, 
-	0xce, 0x71, 0xce, 0x73, 0xce, 0x71, 0xce, 0x73, 
-	0xd6, 0xb5, 0xbd, 0xa9, 0xbd, 0x67, 0xce, 0x73, 
-	0xce, 0x2f, 0xce, 0x6f, 0xd6, 0xb3, 0xd6, 0xb5, 
-	0xd6, 0xb3, 0xd6, 0xb5, 0xd6, 0x71, 0xd6, 0xb3, 
-	0xce, 0x71, 0xce, 0x71, 0xc6, 0x2f, 0xce, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xbd, 0xef, 0xb5, 0x25, 0xad, 0x25, 0xbd, 0xeb, 
-	0xc6, 0x73, 0xbd, 0xeb, 0xce, 0x71, 0xce, 0x71, 
-	0xce, 0x71, 0xce, 0x73, 0xce, 0x71, 0xce, 0x73, 
-	0xd6, 0xb3, 0xbd, 0xa9, 0xbd, 0x65, 0xc6, 0x2d, 
-	0xce, 0x2f, 0xd6, 0x6f, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb3, 0xce, 0x2f, 0xce, 0x2f, 0xce, 0x73, 
-	0xce, 0x2f, 0xce, 0x71, 0xce, 0x2f, 0xce, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xc6, 0x31, 0xb5, 0xab, 0xac, 0xe3, 0xb5, 0xa9, 
-	0xb5, 0x65, 0xbd, 0xeb, 0xce, 0x73, 0xce, 0x71, 
-	0xce, 0x71, 0xce, 0x71, 0xce, 0x71, 0xce, 0x73, 
-	0xce, 0xb3, 0xbd, 0xa7, 0xbd, 0x65, 0xce, 0x71, 
-	0xc6, 0x2d, 0xce, 0x6f, 0xd6, 0x73, 0xd6, 0xb3, 
-	0xd6, 0xb3, 0xd6, 0x73, 0xce, 0x71, 0xd6, 0x71, 
-	0xce, 0x71, 0xc5, 0xed, 0xbd, 0xed, 0xc6, 0x2d, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x73, 0xb5, 0xab, 0x9c, 0x9d, 
-	0xad, 0x25, 0xc6, 0x31, 0xce, 0x73, 0xce, 0x71, 
-	0xce, 0x71, 0xce, 0x73, 0xce, 0x71, 0xce, 0x73, 
-	0xce, 0xb3, 0xbd, 0x65, 0xbd, 0xab, 0xce, 0x71, 
-	0xce, 0x6f, 0xce, 0x71, 0xd6, 0x73, 0xd6, 0xb3, 
-	0xd6, 0xb3, 0xd6, 0xb3, 0xc5, 0xeb, 0xd6, 0xb3, 
-	0xce, 0x71, 0xbd, 0xed, 0xc5, 0xed, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x31, 0xa4, 0xe5, 
-	0xad, 0x25, 0xbd, 0xed, 0xce, 0x73, 0xce, 0x71, 
-	0xce, 0x71, 0xce, 0x71, 0xce, 0x31, 0xce, 0x71, 
-	0xd6, 0x73, 0xb5, 0x65, 0xb5, 0x65, 0xc5, 0xa3, 
-	0xce, 0x71, 0xce, 0x6f, 0xd6, 0xb3, 0xd6, 0xb3, 
-	0xd6, 0xb3, 0xce, 0x71, 0xc6, 0x2d, 0xd6, 0xb3, 
-	0xce, 0x2f, 0xce, 0x2f, 0xc5, 0xed, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x31, 0xb5, 0x69, 
-	0xb5, 0x69, 0xb5, 0xa9, 0xce, 0xb3, 0xc6, 0x2f, 
-	0xce, 0x73, 0xce, 0x73, 0xc5, 0xed, 0xd6, 0x73, 
-	0xce, 0x73, 0xbd, 0x65, 0xbd, 0x63, 0xc5, 0xe7, 
-	0xce, 0x31, 0xce, 0x2f, 0xd6, 0xb3, 0xd6, 0xb3, 
-	0xd6, 0xb3, 0xbd, 0xeb, 0xbd, 0xa7, 0xd6, 0xb3, 
-	0xc6, 0x2f, 0xbd, 0xab, 0xbd, 0xed, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc5, 0xed, 0xc5, 0xef, 0xbd, 0xab, 
-	0xbd, 0xed, 0xb5, 0xa9, 0xce, 0x73, 0xce, 0x71, 
-	0xc6, 0x2f, 0xce, 0x73, 0xc6, 0x2f, 0xce, 0x31, 
-	0xce, 0x73, 0xbd, 0x65, 0xbd, 0x63, 0xce, 0x31, 
-	0xce, 0x71, 0xc5, 0xeb, 0xd6, 0xb3, 0xd6, 0xb3, 
-	0xd6, 0xb3, 0xb5, 0x67, 0xbd, 0xa9, 0xce, 0x71, 
-	0xc6, 0x31, 0xad, 0x25, 0xbd, 0xeb, 0xc5, 0xed, 
-	0xc6, 0x2d, 0xc6, 0x2f, 0xc5, 0xed, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xc6, 0x31, 0xc5, 0xed, 
-	0xbd, 0xed, 0xb5, 0xab, 0xc6, 0x2f, 0xbd, 0xeb, 
-	0xbd, 0xeb, 0xce, 0x75, 0xb5, 0x69, 0xc5, 0xef, 
-	0xc6, 0x33, 0xc5, 0xeb, 0xc5, 0xed, 0xce, 0x71, 
-	0xbd, 0xed, 0xb5, 0x65, 0xd6, 0x73, 0xd6, 0xb5, 
-	0xce, 0xb5, 0xac, 0xe3, 0xc5, 0xed, 0xd6, 0xb3, 
-	0xc6, 0x2f, 0xbd, 0xab, 0xb5, 0xab, 0xbd, 0xef, 
-	0xc6, 0x2f, 0xbd, 0xed, 0xbd, 0xeb, 0xce, 0x71, 
-	0xc6, 0x2f, 0xb5, 0x69, 0xbd, 0xa9, 0xc6, 0x2f, 
-	0xbd, 0xed, 0xce, 0x31, 0xbd, 0xed, 0xbe, 0x31, 
-	0xbd, 0xab, 0xc6, 0x33, 0xb5, 0x65, 0xc6, 0x2f, 
-	0xce, 0x73, 0xbd, 0xa9, 0xc5, 0xe9, 0xce, 0x6f, 
-	0xbd, 0xeb, 0xbd, 0xa9, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xc6, 0x31, 0xac, 0xe3, 0xde, 0xf7, 
-	0xbd, 0xab, 0xb5, 0x67, 0xbd, 0xad, 0xc5, 0xef, 
-	0xc6, 0x2f, 0xbd, 0xef, 0xc5, 0xed, 0xce, 0x31, 
-	0xce, 0x31, 0xbd, 0xa9, 0xbd, 0xa7, 0xc6, 0x2f, 
-	0xc5, 0xed, 0xc6, 0x31, 0xbd, 0xab, 0xad, 0x25, 
-	0xc6, 0x31, 0xb5, 0x25, 0xad, 0x25, 0xbd, 0xeb, 
-	0xce, 0x73, 0xc5, 0xed, 0xc5, 0xed, 0xc6, 0x2d, 
-	0xbd, 0xa9, 0xc5, 0xe9, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xb5, 0x67, 0xd6, 0x75, 
-	0xad, 0x25, 0xa4, 0xe3, 0xad, 0x67, 0xc5, 0xef, 
-	0xbd, 0xed, 0xbd, 0xab, 0xbd, 0xef, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x2f, 0xc5, 0xed, 0xc5, 0xed, 
-	0xc5, 0xef, 0xc6, 0x73, 0xad, 0x25, 0xad, 0x25, 
-	0xad, 0x25, 0xbd, 0x67, 0xbd, 0xa9, 0xac, 0xe1, 
-	0xc5, 0xed, 0xc6, 0x31, 0xc6, 0x31, 0xbd, 0xab, 
-	0xb5, 0x65, 0xc5, 0xed, 0xde, 0xb7, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xc5, 0xeb, 0xc5, 0xa7, 
-	0x94, 0x5b, 0x9c, 0xa3, 0x9c, 0x9d, 0xbd, 0xeb, 
-	0xc5, 0xed, 0xbd, 0x67, 0xbd, 0xab, 0xc6, 0x31, 
-	0xc6, 0x2f, 0xc5, 0xef, 0xc6, 0x2f, 0xc5, 0xed, 
-	0xc6, 0x2f, 0xc6, 0x31, 0xac, 0xe3, 0xbd, 0xef, 
-	0xb5, 0x67, 0xc6, 0x2f, 0xb5, 0x25, 0xc5, 0xed, 
-	0xbd, 0x65, 0xc6, 0x2f, 0xce, 0xb7, 0xbd, 0xef, 
-	0xad, 0x25, 0xce, 0x2f, 0xd6, 0xb7, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb3, 0xce, 0x71, 0xb5, 0x25, 
-	0xbd, 0xab, 0x9c, 0x9d, 0xa4, 0xe3, 0xbd, 0xab, 
-	0xc6, 0x33, 0xc6, 0x31, 0xc5, 0xeb, 0xc6, 0x2f, 
-	0xc6, 0x31, 0xc6, 0x2f, 0xc6, 0x2f, 0xc5, 0xed, 
-	0xc6, 0x2f, 0xb5, 0xab, 0xac, 0x9f, 0xbd, 0xef, 
-	0xbd, 0xab, 0xc5, 0xeb, 0xb5, 0xab, 0xce, 0x2f, 
-	0xc5, 0xeb, 0xac, 0xe1, 0xbd, 0xab, 0xbd, 0xab, 
-	0xc5, 0xef, 0xce, 0x71, 0xde, 0xf5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb3, 0xd6, 0x73, 0xc5, 0xeb, 
-	0xbd, 0xab, 0xa4, 0xe5, 0xad, 0x25, 0xbd, 0xa9, 
-	0xc6, 0x31, 0xc6, 0x31, 0xc6, 0x2d, 0xc5, 0xed, 
-	0xc6, 0x31, 0xbd, 0xed, 0xc6, 0x31, 0xc5, 0xef, 
-	0xc6, 0x2f, 0xb5, 0x69, 0xb5, 0x25, 0xbd, 0xab, 
-	0xb5, 0x67, 0xc5, 0xeb, 0xc6, 0x2f, 0xce, 0x2d, 
-	0xd6, 0x6f, 0xb5, 0x25, 0xad, 0x23, 0xb5, 0x23, 
-	0xbd, 0xa7, 0xd6, 0x73, 0xde, 0xb7, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xd6, 0x73, 0xc6, 0x2f, 
-	0xbd, 0xab, 0xad, 0x25, 0xb5, 0xab, 0xbd, 0x67, 
-	0xc5, 0xed, 0xc6, 0x71, 0xc6, 0x31, 0xce, 0x2f, 
-	0xbd, 0xab, 0xb5, 0x69, 0xc6, 0x73, 0xb5, 0xab, 
-	0xbd, 0xeb, 0xbd, 0xeb, 0xbd, 0xad, 0xbd, 0xab, 
-	0xbd, 0xed, 0xc5, 0xed, 0xc6, 0x2f, 0xce, 0x71, 
-	0xd6, 0xb5, 0xbd, 0xa7, 0xb5, 0x25, 0xb5, 0x67, 
-	0xac, 0xe3, 0xce, 0x6f, 0xde, 0xf7, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xce, 0x73, 0xd6, 0xb3, 0xce, 0x71, 
-	0xce, 0x71, 0xbd, 0xeb, 0xb5, 0xad, 0xb5, 0x69, 
-	0xbd, 0x63, 0xc6, 0x2d, 0xce, 0x75, 0xbd, 0xa5, 
-	0x9c, 0x9f, 0xb5, 0x69, 0xbe, 0x2f, 0xad, 0x25, 
-	0xbd, 0xab, 0xc6, 0x31, 0xc6, 0x31, 0xbd, 0xab, 
-	0xce, 0x33, 0xc6, 0x31, 0xc5, 0xed, 0xce, 0x71, 
-	0xd6, 0xb5, 0xbd, 0xa9, 0xb5, 0x67, 0xc6, 0x75, 
-	0xb5, 0x69, 0xb5, 0x65, 0xd6, 0xf9, 0xd6, 0xf7, 
-	0xd6, 0xb7, 0xc5, 0xeb, 0xce, 0x71, 0xbd, 0xa7, 
-	0xce, 0x73, 0xc6, 0x2f, 0xbd, 0xed, 0xbd, 0xef, 
-	0xb5, 0x65, 0xc5, 0xa7, 0xce, 0x73, 0xbd, 0xed, 
-	0x9c, 0xa3, 0xac, 0xe5, 0xbd, 0x69, 0xb5, 0xa9, 
-	0xc6, 0x2f, 0xc6, 0x31, 0xc6, 0x31, 0xbd, 0xeb, 
-	0xce, 0x75, 0xce, 0x73, 0xc6, 0x2f, 0xc5, 0xed, 
-	0xd6, 0xb7, 0xce, 0x31, 0xc6, 0x33, 0xce, 0x75, 
-	0xc6, 0x33, 0xad, 0x25, 0xb5, 0x67, 0xbd, 0xed, 
-	0xc5, 0xed, 0xc6, 0x2d, 0xce, 0x2f, 0xbd, 0xa7, 
-	0xb5, 0xa7, 0xc6, 0x2f, 0xbd, 0xed, 0xc6, 0x2f, 
-	0xbd, 0xa9, 0xc5, 0xe9, 0xc6, 0x2f, 0xc6, 0x31, 
-	0xbd, 0xef, 0xad, 0x65, 0xb5, 0x67, 0xb5, 0x67, 
-	0xc6, 0x31, 0xc6, 0x31, 0xb5, 0xad, 0xbd, 0xa9, 
-	0xce, 0xb5, 0xce, 0x75, 0xb5, 0x65, 0xb5, 0xa7, 
-	0xce, 0x75, 0xce, 0x6f, 0xd6, 0xb5, 0xce, 0xb3, 
-	0xd6, 0xb7, 0xbd, 0xed, 0xac, 0xe1, 0xb4, 0xe1, 
-	0xbd, 0xa7, 0xde, 0xf9, 0xce, 0x71, 0xbd, 0xa5, 
-	0xad, 0x69, 0xb5, 0x67, 0xbd, 0xed, 0xc5, 0xef, 
-	0xc5, 0xed, 0xc5, 0xeb, 0xc6, 0x2f, 0xc6, 0x31, 
-	0xbd, 0xed, 0xb5, 0xa9, 0xad, 0x25, 0xbd, 0xab, 
-	0xce, 0x73, 0xc6, 0x33, 0xad, 0x67, 0xc5, 0xe9, 
-	0xce, 0x75, 0xbd, 0xeb, 0xbd, 0xab, 0xb5, 0x65, 
-	0xc5, 0xa9, 0xce, 0x6f, 0xd6, 0xb3, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xc6, 0x31, 0xb5, 0x65, 0xc5, 0xa9, 
-	0xc5, 0xeb, 0xd6, 0xb7, 0xd6, 0xb5, 0xce, 0x2b, 
-	0xbd, 0xef, 0xb5, 0x67, 0xc5, 0xed, 0xbd, 0xef, 
-	0xc6, 0x2f, 0xbd, 0x67, 0xbd, 0xed, 0xce, 0x71, 
-	0xce, 0x31, 0xb5, 0xa9, 0xad, 0x25, 0xc6, 0x31, 
-	0xce, 0x73, 0xc6, 0x31, 0xb5, 0x67, 0xbd, 0xa9, 
-	0xc5, 0xed, 0xbd, 0xa9, 0xd6, 0xb7, 0xd6, 0xb5, 
-	0xc6, 0x2d, 0xc5, 0xeb, 0xce, 0x71, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xce, 0x75, 0xad, 0x25, 0xc5, 0xe9, 
-	0xde, 0xb5, 0xc5, 0xeb, 0xbd, 0x65, 0xc6, 0x2f, 
-	0xbd, 0xef, 0xb5, 0x67, 0xbd, 0xa7, 0xc6, 0x31, 
-	0xbd, 0xed, 0xa4, 0x9f, 0xc6, 0x31, 0xce, 0x73, 
-	0xc6, 0x31, 0xb5, 0x67, 0xb5, 0x67, 0xce, 0x31, 
-	0xc6, 0x71, 0xbd, 0xf1, 0xbd, 0xeb, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xd6, 0xb5, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xc6, 0x2f, 0xc6, 0x2f, 0xd6, 0xb5, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xc6, 0x2f, 0xbd, 0x65, 
-	0xd6, 0xb3, 0xd6, 0xb3, 0xc5, 0xe9, 0xbd, 0xa9, 
-	0xbd, 0xef, 0xb5, 0xab, 0xad, 0x25, 0xc6, 0x2f, 
-	0x9c, 0x9d, 0xa4, 0x9f, 0xce, 0x73, 0xc6, 0x73, 
-	0xc6, 0x2f, 0xad, 0x65, 0xb5, 0xa7, 0xce, 0x31, 
-	0xc6, 0x71, 0xc6, 0x2f, 0xc6, 0x2f, 0xce, 0x73, 
-	0xc6, 0x31, 0xce, 0x71, 0xd6, 0xb3, 0xce, 0xb3, 
-	0xd6, 0xb3, 0xd6, 0x73, 0xbd, 0xa7, 0xce, 0x73, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xce, 0xb5, 0xc5, 0xa5, 
-	0xce, 0x2d, 0xde, 0xf7, 0xde, 0xf7, 0xbd, 0xa9, 
-	0xbd, 0xef, 0xbd, 0xed, 0xbd, 0xed, 0xb5, 0x67, 
-	0x94, 0x5b, 0x9c, 0xa1, 0xce, 0x73, 0xc6, 0x2f, 
-	0xbd, 0xef, 0xad, 0x25, 0xb5, 0x67, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc6, 0x2f, 0xce, 0x71, 0xce, 0x73, 
-	0xce, 0x31, 0xce, 0xb3, 0xce, 0x73, 0xd6, 0xb3, 
-	0xce, 0xb3, 0xd6, 0x73, 0xc5, 0xeb, 0xc6, 0x2d, 
-	0xd6, 0xb7, 0xd6, 0xb5, 0xd6, 0xb3, 0xc5, 0xe7, 
-	0xce, 0x2d, 0xd6, 0xb5, 0xde, 0xf7, 0xc6, 0x2f, 
-	0xc6, 0x2f, 0xc6, 0x2f, 0xbd, 0xef, 0xbd, 0xef, 
-	0xad, 0xad, 0xa4, 0xe1, 0xce, 0x73, 0xc6, 0x2f, 
-	0xbd, 0xed, 0xad, 0x65, 0xb5, 0xa7, 0xc6, 0x31, 
-	0xc6, 0x31, 0xc5, 0xef, 0xce, 0x71, 0xce, 0x73, 
-	
-};
-
-Gfx supergoomb__3D49A9D5_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__3D49A9D5_c_rgba16[] = {
-	0x8b, 0xdb, 0xac, 0xa1, 0x9c, 0x5d, 0xac, 0x9f, 
-	0x9c, 0x1d, 0xbd, 0x25, 0x9c, 0x5d, 0x94, 0x1d, 
-	0x93, 0xd9, 0x7b, 0x55, 0x9c, 0xa1, 0x94, 0x1d, 
-	0x83, 0x99, 0x83, 0x57, 0x9c, 0x1b, 0xbd, 0x25, 
-	0x83, 0x55, 0x83, 0x97, 0x8b, 0x99, 0x83, 0x57, 
-	0x83, 0x55, 0x5a, 0x51, 0x94, 0x1d, 0x9c, 0xa1, 
-	0x9c, 0x5d, 0xa4, 0x9f, 0xb4, 0xe1, 0xb4, 0xe3, 
-	0xac, 0xa1, 0xb4, 0xe3, 0x9c, 0xa1, 0x6a, 0x91, 
-	0x94, 0x1d, 0xac, 0xa3, 0x9c, 0x5f, 0xb4, 0xe5, 
-	0xac, 0xa1, 0xa4, 0x9f, 0xbd, 0x25, 0x94, 0x1b, 
-	0x94, 0x1b, 0xb4, 0xe3, 0x8b, 0x99, 0x94, 0x5d, 
-	0x8b, 0x99, 0xbd, 0x25, 0x83, 0x57, 0x93, 0xd9, 
-	0x94, 0x1b, 0xac, 0xa3, 0x8b, 0xdb, 0xa4, 0x9f, 
-	0x8b, 0x97, 0x62, 0x91, 0x94, 0x1d, 0xac, 0xa1, 
-	0x9c, 0x5d, 0xb4, 0xe3, 0xb5, 0x23, 0xac, 0x9d, 
-	0xb4, 0xe1, 0xce, 0x2f, 0xac, 0xa3, 0x7b, 0x15, 
-	0x9c, 0x5f, 0x94, 0x1d, 0x8b, 0x99, 0x9c, 0x9f, 
-	0x83, 0x55, 0xac, 0xa1, 0xb4, 0xe5, 0x7b, 0x15, 
-	0xac, 0x9f, 0xcd, 0xa5, 0x8b, 0x99, 0xb5, 0x25, 
-	0x73, 0x15, 0x93, 0xd9, 0x9c, 0x5f, 0x93, 0xd9, 
-	0xb4, 0xe1, 0xb4, 0xe5, 0xa4, 0xa1, 0xac, 0xe3, 
-	0xb5, 0x25, 0x7b, 0x55, 0x83, 0x97, 0xc5, 0x65, 
-	0xbd, 0x65, 0xb5, 0x23, 0xb5, 0x23, 0xbd, 0x65, 
-	0xde, 0xb3, 0xac, 0xa3, 0x94, 0x1b, 0x93, 0x99, 
-	0xbd, 0x67, 0xb4, 0xe5, 0xa4, 0xa1, 0x9c, 0x5f, 
-	0xac, 0xa1, 0xb4, 0xa3, 0xa4, 0xa1, 0x94, 0x5d, 
-	0xc5, 0x65, 0xcd, 0xa5, 0xac, 0xe3, 0xce, 0x2d, 
-	0x9c, 0x5d, 0x83, 0x57, 0x93, 0xd9, 0xac, 0xe3, 
-	0xb4, 0xe5, 0xac, 0xa3, 0x9c, 0x9f, 0x9c, 0x5d, 
-	0xcd, 0xeb, 0x72, 0xd1, 0x59, 0xcb, 0x9c, 0x5b, 
-	0xa4, 0x9f, 0xb5, 0x23, 0xc5, 0xa7, 0xd6, 0x71, 
-	0x7b, 0x13, 0x7b, 0x13, 0x8b, 0x57, 0x93, 0xd9, 
-	0xb4, 0xe5, 0xbd, 0x67, 0x9c, 0x5f, 0xac, 0x9f, 
-	0x93, 0xdb, 0xb4, 0xe5, 0x9c, 0xa1, 0xa4, 0xa1, 
-	0xde, 0x29, 0xb4, 0x9f, 0xbd, 0x25, 0xcd, 0xa7, 
-	0xac, 0xa3, 0x94, 0x1d, 0x9c, 0x9f, 0xac, 0xa1, 
-	0x94, 0x1d, 0xa4, 0xa1, 0x94, 0x5d, 0xac, 0xe3, 
-	0xa4, 0x9f, 0x8b, 0x97, 0x39, 0x07, 0x72, 0x91, 
-	0xd6, 0x2d, 0xd6, 0x2d, 0xbd, 0x67, 0x8b, 0xd9, 
-	0x41, 0x89, 0x5a, 0x0d, 0x7b, 0x13, 0x93, 0xd9, 
-	0xa4, 0xa1, 0xbd, 0xed, 0xc5, 0x25, 0xa4, 0x9f, 
-	0xac, 0xa3, 0xbd, 0x25, 0xb4, 0xe3, 0xb4, 0xe3, 
-	0xbd, 0x65, 0xb4, 0xe1, 0x94, 0x1b, 0xbd, 0x23, 
-	0xbd, 0x23, 0x9c, 0x5d, 0x9c, 0x5d, 0xa4, 0xa1, 
-	0x94, 0x5f, 0xb4, 0xe5, 0xb4, 0xe3, 0x94, 0x1b, 
-	0xac, 0xa1, 0xbd, 0x25, 0x8b, 0x59, 0x49, 0x8b, 
-	0x5a, 0x0d, 0x5a, 0x0d, 0x62, 0x4f, 0x5a, 0x0d, 
-	0x83, 0x55, 0x6a, 0x8f, 0x72, 0xd3, 0x9c, 0x5d, 
-	0x94, 0x1b, 0xb5, 0xa9, 0xcd, 0xab, 0xac, 0xa1, 
-	0xc5, 0x67, 0xac, 0xa1, 0xa4, 0x5f, 0x93, 0xd9, 
-	0x8b, 0x99, 0x8b, 0xd9, 0x8b, 0x99, 0x7b, 0x15, 
-	0x72, 0xd3, 0x6a, 0xd1, 0x6a, 0x91, 0x62, 0x91, 
-	0x62, 0x4f, 0x8b, 0x99, 0xb4, 0xe3, 0x94, 0x1b, 
-	0x8b, 0x99, 0x93, 0xd7, 0xb4, 0xe5, 0x9c, 0x5f, 
-	0x7a, 0xd1, 0x9c, 0x5b, 0x93, 0x97, 0x7b, 0x13, 
-	0xb5, 0x25, 0x93, 0xd7, 0x72, 0xd3, 0x93, 0xd9, 
-	0x94, 0x5f, 0xac, 0xe5, 0xb5, 0x27, 0xd6, 0x2f, 
-	0xac, 0xa3, 0x94, 0x1d, 0x83, 0x57, 0x9c, 0x5f, 
-	0xac, 0xe3, 0xbd, 0x25, 0xac, 0x9f, 0xa4, 0x9f, 
-	0x9c, 0x9f, 0x94, 0x1b, 0x93, 0xd9, 0x94, 0x1d, 
-	0x9c, 0x5f, 0x6a, 0x91, 0x5a, 0x0d, 0x9c, 0x5b, 
-	0xac, 0xa3, 0x9c, 0x5f, 0xbd, 0x25, 0xbd, 0x67, 
-	0xb4, 0xe1, 0x93, 0xd9, 0xcd, 0xeb, 0xc5, 0xab, 
-	0x62, 0x4f, 0x9c, 0x1b, 0x9c, 0x5d, 0x72, 0xd3, 
-	0x73, 0x15, 0x83, 0x99, 0x94, 0x1d, 0x93, 0xd9, 
-	0xb4, 0xe5, 0x72, 0xd3, 0x7b, 0x55, 0x94, 0x5f, 
-	0xbd, 0x67, 0xd6, 0x2b, 0xde, 0x29, 0xb4, 0xe1, 
-	0xbd, 0x67, 0xa4, 0xa1, 0xa4, 0xa3, 0x9c, 0x5d, 
-	0xa4, 0x9f, 0xc5, 0xa7, 0x6a, 0x91, 0x6a, 0x91, 
-	0x94, 0x1d, 0xac, 0xa1, 0xac, 0xa3, 0xa4, 0x9f, 
-	0xbd, 0x25, 0x93, 0xd7, 0xa4, 0xa1, 0xbd, 0x67, 
-	0xa4, 0x5d, 0xb4, 0xe3, 0xa4, 0x9f, 0x8b, 0xd9, 
-	0x73, 0x15, 0x62, 0x4f, 0x62, 0x91, 0x52, 0x0d, 
-	0x6a, 0xd1, 0x83, 0x55, 0x94, 0x5d, 0xa4, 0xa1, 
-	0xa4, 0xa1, 0xcd, 0xeb, 0xb4, 0xe5, 0xb4, 0xe1, 
-	0xc5, 0x23, 0xbd, 0x23, 0xbd, 0x25, 0xb4, 0xe3, 
-	0xa4, 0xa1, 0x9c, 0x5d, 0x8b, 0x97, 0x62, 0x51, 
-	0xb4, 0xe5, 0xac, 0xa1, 0x9c, 0x5f, 0x9c, 0x5d, 
-	0x9c, 0x5d, 0xa4, 0xa1, 0x93, 0x97, 0xbd, 0x25, 
-	0xac, 0x9f, 0xa4, 0x9d, 0x9c, 0x5d, 0xac, 0xe3, 
-	0x7b, 0x55, 0xac, 0xa1, 0x94, 0x5d, 0x83, 0x55, 
-	0x51, 0xcb, 0x93, 0xd9, 0xac, 0xa1, 0xb5, 0x23, 
-	0x93, 0xd9, 0xbd, 0x65, 0xbd, 0x21, 0xbc, 0xe1, 
-	0xcd, 0xa7, 0xbd, 0x23, 0xbd, 0x65, 0xa4, 0xa3, 
-	0xac, 0xa3, 0xb4, 0xe3, 0xac, 0xe3, 0x93, 0xd9, 
-	0xb4, 0xa1, 0xb4, 0xe5, 0x8b, 0x57, 0xc5, 0x67, 
-	0xac, 0xa3, 0xac, 0xa1, 0x93, 0x99, 0x9c, 0x5d, 
-	0xb4, 0xe3, 0x8b, 0x97, 0x94, 0x1b, 0xbd, 0x25, 
-	0x7b, 0x15, 0x93, 0xd9, 0xac, 0xe3, 0x83, 0x55, 
-	0x49, 0xcb, 0x9c, 0x9f, 0xb4, 0xe3, 0xac, 0xa1, 
-	0xac, 0xa1, 0xb5, 0x23, 0xc5, 0x23, 0xb4, 0xe1, 
-	0x9c, 0x9f, 0xc5, 0x65, 0xcd, 0xe9, 0xb4, 0xe5, 
-	0xac, 0xa1, 0xcd, 0xe9, 0xcd, 0xe9, 0xa4, 0xa1, 
-	0x93, 0x97, 0xbd, 0x67, 0xa4, 0xa1, 0xa4, 0xa1, 
-	0xac, 0xa1, 0x9c, 0x19, 0x9c, 0x5d, 0x94, 0x1b, 
-	0xac, 0x9f, 0x9c, 0x1b, 0x9c, 0x5d, 0x8b, 0x97, 
-	0x73, 0x15, 0xbd, 0x25, 0xbd, 0x65, 0xb5, 0x23, 
-	0x8b, 0x97, 0x6a, 0xd1, 0xbd, 0x25, 0xbd, 0x65, 
-	0x9c, 0x5b, 0xb4, 0xe3, 0xac, 0x9d, 0xbd, 0x23, 
-	0xac, 0xe1, 0xb4, 0xe1, 0x9c, 0x5b, 0xac, 0xa1, 
-	0xa4, 0xa1, 0xc5, 0xa7, 0xb4, 0xe3, 0x94, 0x5d, 
-	0x7b, 0x13, 0xac, 0xa1, 0xac, 0xa1, 0xa4, 0xa1, 
-	0x9c, 0x5d, 0x93, 0xd7, 0x9c, 0x5d, 0xb4, 0xe5, 
-	0x9c, 0x5d, 0x94, 0x1b, 0x93, 0x97, 0x7a, 0xd3, 
-	0x8b, 0xd9, 0xac, 0xa1, 0x94, 0x5d, 0xbd, 0x65, 
-	0xac, 0xa1, 0x83, 0x55, 0x62, 0x91, 0x9c, 0x9f, 
-	0xac, 0x9f, 0xac, 0xe1, 0xcd, 0x65, 0xc5, 0x65, 
-	0xb4, 0xe1, 0xac, 0x9d, 0xc5, 0x65, 0xac, 0xa1, 
-	0xcd, 0xe9, 0xb4, 0xe3, 0xac, 0xa1, 0x83, 0x55, 
-	0xac, 0xa3, 0x9c, 0x1f, 0xac, 0xa3, 0xa4, 0x9f, 
-	0x62, 0x4f, 0xa4, 0xa1, 0x94, 0x5d, 0xb4, 0xe3, 
-	0xbd, 0xab, 0xb4, 0xe3, 0xa4, 0xa1, 0x7b, 0x15, 
-	0x9c, 0x9f, 0x8b, 0x97, 0x9c, 0x5d, 0xb5, 0x23, 
-	0xb4, 0xe1, 0xcd, 0xa7, 0x51, 0xcb, 0x94, 0x5d, 
-	0xb5, 0x25, 0xb4, 0xe1, 0xd5, 0xa7, 0xb4, 0xe1, 
-	0xd5, 0xa5, 0xde, 0x29, 0xc5, 0x65, 0xbd, 0x25, 
-	0xd5, 0xe7, 0xd5, 0xe9, 0xa4, 0x9f, 0x83, 0x57, 
-	0xbd, 0x25, 0x93, 0xdb, 0x93, 0x97, 0xa4, 0x5d, 
-	0x9c, 0x5d, 0xbd, 0x25, 0x9c, 0x19, 0x94, 0x1b, 
-	0xc5, 0xa9, 0xb5, 0x25, 0x9c, 0x9f, 0x8b, 0x97, 
-	0x94, 0x5f, 0xa4, 0x9f, 0xa4, 0xa1, 0xbd, 0x25, 
-	0xc5, 0xa7, 0xde, 0x6d, 0x5a, 0x0d, 0x6a, 0x91, 
-	0xac, 0xe3, 0xc5, 0x65, 0xac, 0x9f, 0xcd, 0xa5, 
-	0xbc, 0xe1, 0xac, 0x9f, 0xe6, 0xaf, 0xcd, 0xeb, 
-	0xd6, 0x6f, 0xc5, 0x67, 0x9c, 0x9f, 0x93, 0xd9, 
-	0xac, 0xa1, 0x8b, 0x97, 0x94, 0x1b, 0xac, 0xa3, 
-	0xa4, 0x9f, 0x94, 0x1b, 0xac, 0xa1, 0xb4, 0xe5, 
-	0xb5, 0x25, 0xb4, 0xe5, 0xac, 0xa3, 0x93, 0xd9, 
-	0xbd, 0x25, 0x9c, 0x5d, 0x9c, 0x5f, 0xbd, 0x23, 
-	0xb4, 0xe3, 0xcd, 0xe9, 0x6a, 0xd1, 0x8b, 0xdb, 
-	0x49, 0xcd, 0xb4, 0xe3, 0xd5, 0xe9, 0xde, 0x6d, 
-	0xd5, 0xe7, 0xc5, 0x23, 0xde, 0x2b, 0xd6, 0x6f, 
-	0xbd, 0x69, 0x7b, 0x57, 0x83, 0x97, 0x9c, 0x9d, 
-	0xac, 0x9f, 0xa4, 0x9f, 0xac, 0xa3, 0xa4, 0xa1, 
-	0xa4, 0x9f, 0xb4, 0xe3, 0x94, 0x19, 0xa4, 0x5d, 
-	0xc5, 0xa9, 0xa4, 0xa3, 0x7b, 0x13, 0xac, 0x9f, 
-	0xa4, 0x9f, 0xa4, 0xa3, 0xa4, 0xa1, 0xb5, 0x23, 
-	0xac, 0x9f, 0xa4, 0x9d, 0x7b, 0x55, 0x9c, 0x5d, 
-	0x8b, 0x97, 0x62, 0x8f, 0x6a, 0xd3, 0xac, 0xe3, 
-	0xce, 0x2b, 0xc5, 0x65, 0xbd, 0x67, 0x6a, 0x8f, 
-	0x83, 0x55, 0x9c, 0x5d, 0xac, 0xe3, 0xac, 0x9f, 
-	0x94, 0x1b, 0xb5, 0x25, 0xcd, 0xa9, 0xb4, 0xe5, 
-	0xac, 0xa3, 0x94, 0x5d, 0xb4, 0xe3, 0x93, 0xd7, 
-	0xbd, 0xa7, 0xbd, 0x69, 0x6a, 0x8f, 0xb4, 0xe3, 
-	0xa4, 0x9f, 0xa4, 0xa3, 0xa4, 0x9f, 0xa4, 0x9f, 
-	0xa4, 0x5d, 0xbc, 0xe3, 0x8b, 0xd9, 0xb4, 0xe1, 
-	0xb4, 0xa1, 0x9c, 0x1b, 0x9c, 0x5d, 0x6a, 0x8f, 
-	0x72, 0xd3, 0x83, 0x97, 0x83, 0x55, 0x9c, 0x5d, 
-	0xac, 0xa1, 0xac, 0xa1, 0xa4, 0x9f, 0xb4, 0x9f, 
-	0x9c, 0x5b, 0xb5, 0x67, 0xbd, 0x67, 0xb4, 0xe5, 
-	0xbd, 0x67, 0x94, 0x1b, 0x8b, 0x97, 0xac, 0xa3, 
-	0x8b, 0x99, 0x9c, 0x5f, 0x94, 0x19, 0x9c, 0x9f, 
-	0x93, 0xd9, 0xb5, 0x27, 0x9c, 0x5f, 0xa4, 0xa1, 
-	0xbd, 0x23, 0xb4, 0xe3, 0x93, 0xd9, 0xc5, 0x25, 
-	0xbc, 0xe3, 0xbc, 0xe1, 0xc5, 0xa7, 0xcd, 0xa7, 
-	0xa4, 0x9f, 0x94, 0x1b, 0x94, 0x1b, 0xbd, 0x65, 
-	0xa4, 0x9f, 0x93, 0xd9, 0xa4, 0x9f, 0xc5, 0xa7, 
-	0x9c, 0x5b, 0xa4, 0x9f, 0xa4, 0xa3, 0xbd, 0x27, 
-	0xb5, 0x25, 0x93, 0xdb, 0xb5, 0x25, 0xbd, 0xa9, 
-	0xc5, 0xeb, 0xac, 0xa1, 0xbd, 0x23, 0xac, 0xe3, 
-	0x8b, 0x99, 0x83, 0x99, 0xbd, 0x67, 0xa4, 0xa1, 
-	0xb4, 0xe1, 0xb4, 0xe1, 0x83, 0x97, 0xb4, 0xe3, 
-	0xc5, 0x65, 0xcd, 0xa7, 0xd6, 0x2d, 0xbd, 0x65, 
-	0xb5, 0x25, 0x83, 0x97, 0x9c, 0x5f, 0xb4, 0xe3, 
-	0x94, 0x5d, 0x9c, 0x9f, 0xac, 0xa1, 0x9c, 0x5b, 
-	0xbd, 0x25, 0xb4, 0xe3, 0xac, 0xe3, 0xa4, 0xa3, 
-	0xb4, 0xe3, 0xcd, 0xeb, 0xcd, 0xeb, 0xb5, 0x25, 
-	0xc5, 0x25, 0xac, 0xa1, 0xac, 0xe3, 0xac, 0x9f, 
-	0xa4, 0x9f, 0x62, 0x91, 0x94, 0x1d, 0x9c, 0x9f, 
-	0x94, 0x5d, 0x8b, 0x99, 0x9c, 0x5f, 0xc5, 0xa7, 
-	0xcd, 0xa5, 0xc5, 0x23, 0xb5, 0x25, 0xb4, 0xe3, 
-	0xc5, 0x65, 0xac, 0xe3, 0x94, 0x5d, 0x9c, 0x9f, 
-	0xc5, 0xa9, 0xbd, 0x25, 0xa4, 0x9f, 0x9c, 0x5d, 
-	0xb4, 0xe1, 0xb5, 0x23, 0x9c, 0x5d, 0xb5, 0x25, 
-	0xac, 0xe3, 0x94, 0x5f, 0x94, 0x1b, 0xa4, 0xa1, 
-	0xcd, 0xeb, 0x9c, 0x5d, 0xb4, 0xe3, 0xbd, 0x65, 
-	0xbd, 0x25, 0x9c, 0x9f, 0x7b, 0x55, 0x8b, 0xd9, 
-	0x7b, 0x55, 0x83, 0x57, 0x93, 0xdb, 0xac, 0xe1, 
-	0xbd, 0x25, 0xac, 0x9f, 0xc5, 0x23, 0xb4, 0xa1, 
-	0xac, 0xa1, 0xbd, 0x65, 0xbd, 0x67, 0xac, 0xe3, 
-	0xa4, 0xa1, 0x9c, 0x5d, 0xac, 0xa1, 0xac, 0xa1, 
-	0x8b, 0x95, 0x72, 0xd1, 0x9c, 0x5d, 0x94, 0x1b, 
-	0x41, 0x89, 0x28, 0xc5, 0x72, 0xd3, 0x9c, 0x5f, 
-	0xcd, 0xa9, 0xb4, 0xe1, 0xac, 0xe3, 0xb5, 0x25, 
-	0xbc, 0xe1, 0xac, 0xe5, 0x94, 0x1d, 0x93, 0xdb, 
-	0x9c, 0x5d, 0x73, 0x13, 0x93, 0xdb, 0x9c, 0x5d, 
-	0xb4, 0xe3, 0x9c, 0x5b, 0xbd, 0x23, 0xac, 0x9f, 
-	0xb4, 0x9f, 0x93, 0xdb, 0x9c, 0x9f, 0x7b, 0x57, 
-	0x93, 0xd9, 0xbd, 0xa7, 0xa4, 0x9f, 0x8b, 0x55, 
-	0x9c, 0x9f, 0xac, 0x9d, 0x7b, 0x13, 0x73, 0x13, 
-	0x5a, 0x4f, 0x6a, 0x8f, 0x51, 0x89, 0x49, 0x89, 
-	0x8b, 0x99, 0xbd, 0x65, 0xbd, 0x65, 0xb5, 0x25, 
-	0xa4, 0x9f, 0x94, 0x1d, 0x9c, 0x5f, 0x93, 0xd7, 
-	0xac, 0xa1, 0x93, 0x97, 0x94, 0x1b, 0x94, 0x1b, 
-	0xac, 0x9f, 0xb4, 0xdf, 0xac, 0x9d, 0xa4, 0x5d, 
-	0xb4, 0xe3, 0x8b, 0x99, 0x7b, 0x57, 0x73, 0x15, 
-	0x83, 0x55, 0x93, 0xd9, 0x94, 0x1b, 0x94, 0x5b, 
-	0xb4, 0xa1, 0xc5, 0x65, 0xac, 0xa1, 0x7b, 0x15, 
-	0x94, 0x1b, 0xac, 0x9f, 0xa4, 0x9b, 0x6a, 0x8f, 
-	0x41, 0x49, 0x83, 0x97, 0x94, 0x5d, 0xb5, 0x65, 
-	0xb4, 0x9f, 0xac, 0xe5, 0x8b, 0x97, 0xa4, 0x9f, 
-	0xb4, 0xa1, 0xa4, 0x9d, 0x7b, 0x55, 0xb4, 0xe3, 
-	0xb4, 0xe3, 0xbc, 0xe1, 0xac, 0xa1, 0x93, 0xd9, 
-	0x93, 0xdb, 0x9c, 0xa1, 0x8b, 0xd9, 0xb5, 0x25, 
-	0x9c, 0x5d, 0x94, 0x5d, 0x8b, 0x97, 0x8b, 0x55, 
-	0xac, 0xa1, 0xbd, 0x23, 0xb4, 0xe1, 0x7b, 0x15, 
-	0x93, 0xd9, 0x9c, 0x5d, 0xa4, 0x9d, 0xa4, 0x5b, 
-	0x72, 0xd1, 0x39, 0x47, 0x72, 0xd3, 0x8b, 0x55, 
-	0x93, 0xd9, 0x9c, 0x5f, 0xa4, 0x9f, 0xcd, 0xa7, 
-	0xbc, 0xe3, 0x9c, 0x5d, 0x93, 0xd9, 0xb5, 0x25, 
-	0xb4, 0xe3, 0x9c, 0x5d, 0x9c, 0x5d, 0x9c, 0x19, 
-	0xac, 0xa1, 0xc5, 0xa9, 0x83, 0x97, 0xa4, 0x9f, 
-	0xbd, 0x67, 0x94, 0x1d, 0x7b, 0x13, 0x8b, 0x97, 
-	0x94, 0x1b, 0xbc, 0xdf, 0xac, 0x9f, 0x5a, 0x4f, 
-	0x8b, 0x97, 0x94, 0x1b, 0x9c, 0x19, 0x9c, 0x19, 
-	0x93, 0xd9, 0x83, 0x55, 0x49, 0xcb, 0xa4, 0x5b, 
-	0x93, 0xdb, 0xa4, 0xa1, 0x9c, 0x5f, 0xac, 0x9d, 
-	0xb4, 0x9d, 0xa4, 0x9f, 0x93, 0xd9, 0x94, 0x19, 
-	0xc5, 0x65, 0x9c, 0x5d, 0xa4, 0x5d, 0x9c, 0x1b, 
-	0x94, 0x1b, 0xb5, 0x25, 0x94, 0x1d, 0x94, 0x1b, 
-	0x94, 0x1b, 0x8b, 0x97, 0x83, 0x57, 0x9c, 0x5d, 
-	0xa4, 0x9f, 0xac, 0x9d, 0x5a, 0x4f, 0x7b, 0x15, 
-	0x9c, 0x5d, 0xac, 0xa1, 0xac, 0xa1, 0x9c, 0x5d, 
-	0xac, 0xa1, 0x94, 0x1b, 0x83, 0x53, 0x62, 0x4f, 
-	0x8b, 0xdb, 0x8b, 0x9b, 0x9c, 0x5f, 0xa4, 0x5d, 
-	0x62, 0x91, 0x94, 0x1b, 0x9c, 0x1b, 0xbd, 0x67, 
-	0xde, 0x71, 0xac, 0x9f, 0x93, 0xd9, 0x93, 0x97, 
-	0xb4, 0xe3, 0xac, 0xe3, 0x9c, 0x9f, 0x9c, 0x5d, 
-	0xac, 0xe3, 0x7b, 0x55, 0x8b, 0x97, 0xac, 0xe1, 
-	0xa4, 0x9f, 0xbd, 0x23, 0x39, 0x4b, 0x7b, 0x55, 
-	0x94, 0x1b, 0xac, 0x9f, 0xa4, 0x9f, 0xa4, 0x9d, 
-	0x9c, 0x5d, 0x9c, 0x5d, 0x94, 0x1b, 0x51, 0xcd, 
-	0x7b, 0x57, 0x8b, 0xdb, 0x9c, 0x5f, 0xb4, 0xe1, 
-	0xa4, 0x5f, 0x93, 0x97, 0x8b, 0x95, 0xac, 0xa3, 
-	0xbd, 0x67, 0xc5, 0x65, 0xa4, 0x9f, 0x9c, 0x5d, 
-	0xa4, 0xa1, 0xa4, 0xa1, 0xa4, 0xe3, 0x8b, 0x97, 
-	0x8b, 0x97, 0x93, 0xd9, 0x83, 0x97, 0x8b, 0x99, 
-	0xa4, 0x5b, 0xa4, 0x9d, 0x31, 0x09, 0x7b, 0x57, 
-	0x94, 0x19, 0xa4, 0x9f, 0xa4, 0x9d, 0x9c, 0x5b, 
-	0x9c, 0x5d, 0x9c, 0x5d, 0x8b, 0x99, 0x49, 0x8b, 
-	0x94, 0x1b, 0x73, 0x17, 0x9c, 0x5d, 0xbd, 0x23, 
-	0xa4, 0x5d, 0xb4, 0xe3, 0x93, 0xdb, 0x9c, 0x5d, 
-	0xc5, 0xa7, 0xac, 0xa1, 0x9c, 0x5d, 0x93, 0xdb, 
-	0x93, 0xdb, 0xa4, 0xa3, 0x7b, 0x55, 0x93, 0xd9, 
-	0x7b, 0x15, 0x8b, 0x99, 0x8b, 0x99, 0x72, 0xd3, 
-	0x73, 0x15, 0x52, 0x0f, 0x41, 0xcd, 0x83, 0x99, 
-	0x83, 0x55, 0xa4, 0x9f, 0xac, 0x9f, 0xa4, 0x9d, 
-	0x9c, 0x5d, 0x9c, 0x5d, 0x8b, 0x99, 0x39, 0x49, 
-	0x94, 0x5d, 0x83, 0x59, 0x94, 0x1b, 0x9c, 0x5d, 
-	0xac, 0xe3, 0x9c, 0x5f, 0x93, 0xdb, 0x8b, 0x99, 
-	0x94, 0x1b, 0x83, 0x57, 0x94, 0x1b, 0x83, 0x97, 
-	0x7b, 0x15, 0xbd, 0x67, 0x83, 0x97, 0x8b, 0x97, 
-	0x6a, 0xd5, 0x6a, 0xd3, 0x8b, 0x99, 0x73, 0x15, 
-	0x6a, 0xd3, 0x39, 0x49, 0x6a, 0xd3, 0x93, 0xdb, 
-	0x83, 0x55, 0xac, 0x9f, 0xa4, 0x9f, 0x9c, 0x1b, 
-	0x94, 0x1b, 0xa4, 0x9f, 0x94, 0x1d, 0x5a, 0x4f, 
-	
-};
-
-Gfx supergoomb_C1DF883_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb_C1DF883_c_rgba16[] = {
-	0x00, 0x81, 0x00, 0x81, 0x00, 0x01, 0x01, 0x43, 
-	0x01, 0xc7, 0x0a, 0xcf, 0x00, 0x81, 0x00, 0x81, 
-	0x00, 0x81, 0x00, 0x81, 0x00, 0x01, 0x01, 0x85, 
-	0x01, 0x01, 0x00, 0xc1, 0x00, 0xc1, 0x01, 0x45, 
-	0x00, 0xc1, 0x01, 0x85, 0x01, 0x01, 0x01, 0xc7, 
-	0x02, 0x4b, 0x01, 0xc7, 0x00, 0x41, 0x00, 0xc1, 
-	0x01, 0x85, 0x01, 0x43, 0x01, 0x85, 0x01, 0xc7, 
-	0x01, 0x85, 0x02, 0x09, 0x01, 0x87, 0x01, 0x43, 
-	0x00, 0x01, 0x00, 0x41, 0x00, 0x01, 0x00, 0x01, 
-	0x01, 0x43, 0x01, 0x43, 0x01, 0xc9, 0x01, 0xc7, 
-	0x00, 0x41, 0x00, 0x41, 0x01, 0x01, 0x01, 0x85, 
-	0x00, 0xc1, 0x00, 0x81, 0x01, 0x03, 0x01, 0x85, 
-	0x00, 0x01, 0x00, 0xc1, 0x01, 0x85, 0x00, 0xc1, 
-	0x00, 0xc1, 0x02, 0x8b, 0x01, 0x45, 0x00, 0xc1, 
-	0x01, 0xc5, 0x01, 0x85, 0x01, 0x85, 0x02, 0x09, 
-	0x01, 0xc7, 0x01, 0x43, 0x01, 0xc7, 0x02, 0x8b, 
-	0x00, 0x41, 0x00, 0x41, 0x00, 0x81, 0x00, 0x41, 
-	0x00, 0x41, 0x01, 0x45, 0x01, 0x85, 0x01, 0x43, 
-	0x01, 0x85, 0x00, 0x41, 0x00, 0xc1, 0x00, 0x81, 
-	0x00, 0x81, 0x01, 0x03, 0x01, 0x03, 0x00, 0xc1, 
-	0x00, 0x81, 0x00, 0x81, 0x02, 0x0b, 0x1b, 0x53, 
-	0x00, 0x01, 0x01, 0x03, 0x01, 0x85, 0x01, 0x01, 
-	0x01, 0xc7, 0x01, 0xc7, 0x00, 0x01, 0x01, 0xc7, 
-	0x01, 0xc7, 0x02, 0x09, 0x00, 0x81, 0x02, 0x09, 
-	0x00, 0x41, 0x00, 0x01, 0x00, 0x01, 0x00, 0x41, 
-	0x00, 0x41, 0x01, 0x03, 0x01, 0x45, 0x00, 0x81, 
-	0x01, 0xc9, 0x02, 0x09, 0x00, 0x81, 0x00, 0xc1, 
-	0x00, 0x41, 0x00, 0x81, 0x01, 0x43, 0x00, 0x41, 
-	0x00, 0xc1, 0x00, 0xc1, 0x01, 0x87, 0x54, 0xe1, 
-	0x00, 0x01, 0x00, 0xc1, 0x02, 0x4b, 0x00, 0xc1, 
-	0x01, 0x87, 0x01, 0x43, 0x00, 0xc1, 0x01, 0x43, 
-	0x01, 0x85, 0x01, 0x87, 0x01, 0x85, 0x02, 0x09, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0xc1, 
-	0x00, 0x41, 0x01, 0x01, 0x00, 0x81, 0x01, 0x45, 
-	0x01, 0x45, 0x01, 0x01, 0x00, 0x81, 0x00, 0xc1, 
-	0x00, 0x41, 0x00, 0x81, 0x01, 0x43, 0x01, 0x43, 
-	0x01, 0x01, 0x00, 0x01, 0x00, 0x81, 0x02, 0x09, 
-	0x1b, 0x53, 0x01, 0x01, 0x01, 0x87, 0x33, 0xd7, 
-	0x01, 0x85, 0x00, 0x81, 0x01, 0x85, 0x01, 0x43, 
-	0x00, 0x01, 0x00, 0xc1, 0x1b, 0x11, 0x01, 0x43, 
-	0x01, 0x87, 0x00, 0x81, 0x00, 0x41, 0x00, 0x01, 
-	0x00, 0x01, 0x00, 0x81, 0x00, 0x01, 0x01, 0x85, 
-	0x01, 0xc7, 0x00, 0xc1, 0x00, 0x01, 0x00, 0xc1, 
-	0x00, 0xc1, 0x00, 0xc1, 0x00, 0xc1, 0x00, 0x81, 
-	0x00, 0x81, 0x00, 0xc1, 0x01, 0x03, 0x00, 0x01, 
-	0x01, 0xc5, 0x34, 0x19, 0x02, 0x49, 0x1b, 0x53, 
-	0x01, 0xc9, 0x00, 0x81, 0x01, 0xc7, 0x00, 0x81, 
-	0x00, 0x81, 0x00, 0x81, 0x0a, 0xcd, 0x23, 0x95, 
-	0x00, 0x81, 0x2b, 0x95, 0x44, 0x5d, 0x01, 0xc7, 
-	0x00, 0x81, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x81, 0x01, 0x43, 0x00, 0x81, 0x00, 0x01, 
-	0x01, 0xc5, 0x02, 0x8d, 0x02, 0x09, 0x01, 0x01, 
-	0x00, 0x81, 0x00, 0x81, 0x00, 0x81, 0x01, 0x01, 
-	0x00, 0xc1, 0x2b, 0xd7, 0x01, 0xc9, 0x01, 0x85, 
-	0x01, 0x03, 0x00, 0x41, 0x01, 0x01, 0x01, 0x41, 
-	0x01, 0x41, 0x12, 0xcf, 0x1b, 0x11, 0x33, 0xd9, 
-	0x0a, 0xcf, 0x7d, 0xe7, 0x0b, 0x0b, 0x0a, 0xcd, 
-	0x54, 0x9f, 0x44, 0x5d, 0x0a, 0x8d, 0x00, 0xc1, 
-	0x01, 0x87, 0x00, 0x01, 0x0a, 0xcf, 0x01, 0x01, 
-	0x01, 0x45, 0x01, 0x43, 0x01, 0x87, 0x01, 0xc7, 
-	0x01, 0x43, 0x00, 0x81, 0x00, 0x81, 0x01, 0x01, 
-	0x00, 0xc1, 0x01, 0x03, 0x00, 0x81, 0x1b, 0x53, 
-	0x00, 0xc1, 0x5c, 0xe1, 0x2b, 0x55, 0x01, 0x87, 
-	0x01, 0xc7, 0x02, 0x4d, 0x00, 0xc1, 0x00, 0x41, 
-	0x02, 0x4b, 0x02, 0x07, 0x02, 0x4b, 0x01, 0x83, 
-	0x01, 0x01, 0x01, 0x45, 0x23, 0x95, 0x23, 0x93, 
-	0x1b, 0x13, 0x01, 0x01, 0x0a, 0xcf, 0x02, 0x4d, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0xc1, 0x01, 0x85, 
-	0x01, 0x87, 0x00, 0x81, 0x00, 0x81, 0x00, 0x81, 
-	0x01, 0x85, 0x02, 0x07, 0x0a, 0xcf, 0x54, 0xdf, 
-	0xa7, 0x33, 0x54, 0xa3, 0x01, 0x01, 0x00, 0x01, 
-	0x01, 0x87, 0x00, 0x81, 0x00, 0x81, 0x01, 0x83, 
-	0x00, 0x41, 0x00, 0x81, 0x00, 0x41, 0x01, 0xc7, 
-	0x01, 0x43, 0x00, 0x81, 0x01, 0x83, 0x02, 0x07, 
-	0x02, 0x07, 0x02, 0x0b, 0x02, 0x09, 0x0b, 0x0d, 
-	0x02, 0x09, 0x00, 0xc1, 0x01, 0x03, 0x01, 0x45, 
-	0x01, 0x87, 0x01, 0x85, 0x00, 0x01, 0x00, 0x81, 
-	0x02, 0x49, 0x1b, 0x13, 0x0a, 0x8f, 0x00, 0x41, 
-	0x34, 0x17, 0x01, 0xc9, 0x00, 0x81, 0x00, 0xc1, 
-	0x02, 0x09, 0x00, 0x81, 0x01, 0x85, 0x02, 0x8d, 
-	0x01, 0x01, 0x0a, 0xcf, 0x02, 0x0b, 0x02, 0x09, 
-	0x01, 0xc7, 0x13, 0x11, 0x23, 0x93, 0x02, 0x4b, 
-	0x02, 0x07, 0x01, 0xc7, 0x01, 0xc9, 0x02, 0xcb, 
-	0x2b, 0xd5, 0x3c, 0x5b, 0x2b, 0xd5, 0x23, 0x95, 
-	0x12, 0xcf, 0x33, 0xd7, 0x54, 0x9f, 0x3c, 0x1b, 
-	0x3b, 0xd9, 0x01, 0x01, 0x00, 0x01, 0x00, 0x01, 
-	0x00, 0x01, 0x02, 0x8d, 0x34, 0x19, 0x00, 0x81, 
-	0x01, 0x83, 0x44, 0x19, 0x5c, 0xe3, 0x01, 0x85, 
-	0x13, 0x11, 0x01, 0xc9, 0x01, 0x85, 0x01, 0x03, 
-	0x01, 0x43, 0x01, 0x45, 0x01, 0x01, 0x00, 0x41, 
-	0x02, 0x09, 0x02, 0x4b, 0x00, 0x41, 0x02, 0x8b, 
-	0x13, 0x13, 0x01, 0x47, 0x01, 0x85, 0x02, 0x49, 
-	0x13, 0x13, 0x00, 0xc1, 0x01, 0x85, 0x1b, 0x13, 
-	0x23, 0x53, 0x01, 0x03, 0x01, 0x45, 0x02, 0x09, 
-	0x01, 0x01, 0x01, 0x01, 0x1b, 0x53, 0x65, 0x23, 
-	0x02, 0x4b, 0x02, 0x09, 0x02, 0x4b, 0x01, 0x43, 
-	0x01, 0xc5, 0x01, 0x43, 0x00, 0x81, 0x01, 0x01, 
-	0x01, 0xc7, 0x02, 0x09, 0x01, 0x45, 0x01, 0x43, 
-	0x00, 0xc1, 0x01, 0x01, 0x02, 0x07, 0x23, 0x93, 
-	0x00, 0x81, 0x00, 0xc1, 0x02, 0x09, 0x0a, 0xcf, 
-	0x02, 0x8b, 0x02, 0x4b, 0x02, 0x8b, 0x02, 0x07, 
-	0x00, 0x81, 0x01, 0xc7, 0x01, 0xc7, 0x01, 0x45, 
-	0x01, 0x83, 0x23, 0x93, 0x2b, 0xd7, 0x23, 0x95, 
-	0x23, 0x95, 0x00, 0x41, 0x0a, 0x8f, 0x02, 0x09, 
-	0x02, 0x4b, 0x01, 0x03, 0x00, 0x41, 0x00, 0xc1, 
-	0x01, 0x85, 0x01, 0x85, 0x01, 0x01, 0x34, 0x19, 
-	0x01, 0x43, 0x00, 0x41, 0x01, 0x83, 0x65, 0x21, 
-	0x02, 0x07, 0x01, 0xc7, 0x4c, 0xa1, 0x23, 0x55, 
-	0x3c, 0x59, 0x75, 0xe7, 0x13, 0x11, 0x01, 0x45, 
-	0x02, 0x8b, 0x01, 0x45, 0x01, 0x85, 0x01, 0x43, 
-	0x0a, 0xcf, 0x2c, 0x19, 0x1b, 0x53, 0x02, 0x4d, 
-	0x13, 0x0f, 0x23, 0x95, 0x01, 0xc7, 0x02, 0x4b, 
-	0x00, 0x41, 0x01, 0x85, 0x00, 0x81, 0x01, 0x03, 
-	0x01, 0x85, 0x01, 0xc9, 0x01, 0x01, 0x2b, 0x95, 
-	0x34, 0x59, 0x01, 0x83, 0x01, 0xc9, 0x02, 0x8d, 
-	0x3c, 0x59, 0x00, 0xc1, 0x00, 0x81, 0x01, 0x45, 
-	0x34, 0x19, 0x02, 0x8d, 0x00, 0x41, 0x01, 0x01, 
-	0x00, 0xc1, 0x01, 0xc9, 0x02, 0x09, 0x02, 0x09, 
-	0x1b, 0x13, 0x01, 0xc9, 0x02, 0x09, 0x01, 0xc7, 
-	0x01, 0x43, 0x02, 0x8d, 0x2b, 0xd5, 0x0a, 0xcf, 
-	0x01, 0x43, 0x01, 0xc7, 0x00, 0xc1, 0x01, 0x45, 
-	0x01, 0x45, 0x00, 0x81, 0x01, 0x83, 0x02, 0x09, 
-	0x12, 0xd1, 0x02, 0x09, 0x00, 0x01, 0x01, 0x43, 
-	0x02, 0x8d, 0x00, 0x41, 0x02, 0x07, 0x01, 0x43, 
-	0x34, 0x19, 0x01, 0xc7, 0x02, 0x09, 0x01, 0x85, 
-	0x01, 0xc7, 0x01, 0xc5, 0x1b, 0x53, 0x0a, 0xcf, 
-	0x02, 0x09, 0x01, 0x85, 0x02, 0x09, 0x02, 0x09, 
-	0x2b, 0xd3, 0x01, 0x87, 0x00, 0x01, 0x13, 0x0f, 
-	0x01, 0xc7, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
-	0x00, 0x41, 0x00, 0x81, 0x01, 0x85, 0x02, 0x49, 
-	0x00, 0x41, 0x01, 0x45, 0x00, 0xc1, 0x02, 0x8d, 
-	0x00, 0x81, 0x0a, 0x8d, 0x44, 0x9d, 0x1b, 0x53, 
-	0x00, 0x01, 0x23, 0x93, 0x01, 0x43, 0x01, 0xc7, 
-	0x02, 0x07, 0x44, 0x5d, 0x02, 0x4b, 0x4c, 0x9d, 
-	0x01, 0x01, 0x02, 0x07, 0x01, 0x45, 0x02, 0x07, 
-	0x4c, 0x9f, 0x00, 0x81, 0x0a, 0xcf, 0x3c, 0x59, 
-	0x01, 0x43, 0x01, 0x85, 0x01, 0xc7, 0x01, 0x41, 
-	0x02, 0x4b, 0x01, 0x01, 0x00, 0xc1, 0x01, 0x01, 
-	0x01, 0x03, 0x02, 0x8d, 0x2b, 0xd5, 0x1b, 0x51, 
-	0x12, 0xd1, 0x44, 0x5d, 0x01, 0x01, 0x13, 0x13, 
-	0x13, 0x11, 0x13, 0x51, 0x00, 0x81, 0x00, 0x01, 
-	0x1b, 0x53, 0x12, 0xd1, 0x01, 0xc5, 0x4c, 0x9d, 
-	0x44, 0x9d, 0x02, 0x4d, 0x01, 0xc7, 0x13, 0x11, 
-	0x00, 0x41, 0x01, 0x43, 0x9f, 0x33, 0x2b, 0xd7, 
-	0x01, 0x45, 0x01, 0x01, 0x01, 0x01, 0x00, 0x41, 
-	0x00, 0x41, 0x01, 0x41, 0x0b, 0x0f, 0x01, 0x41, 
-	0x02, 0x49, 0x1b, 0x53, 0x02, 0x09, 0x02, 0x0b, 
-	0x02, 0x09, 0x01, 0xc5, 0x01, 0xc7, 0x01, 0x43, 
-	0x02, 0x8b, 0x00, 0x01, 0x3c, 0x19, 0x65, 0x25, 
-	0x23, 0x57, 0x00, 0xc1, 0x02, 0x07, 0x9f, 0x33, 
-	0x54, 0xa1, 0x01, 0x85, 0x01, 0xc7, 0x01, 0x85, 
-	0x02, 0x09, 0x3c, 0x19, 0x02, 0x07, 0x02, 0x07, 
-	0x01, 0x43, 0x01, 0x43, 0x01, 0x45, 0x01, 0xc7, 
-	0x01, 0x85, 0x02, 0x4d, 0x01, 0x85, 0x00, 0xc1, 
-	0x01, 0x01, 0x00, 0x01, 0x01, 0x85, 0x13, 0x11, 
-	0x02, 0x8d, 0x01, 0x41, 0x1b, 0x93, 0x13, 0x11, 
-	0x02, 0x49, 0x54, 0x9f, 0x23, 0x53, 0x13, 0x13, 
-	0x01, 0xc7, 0x13, 0x11, 0x75, 0xa7, 0x23, 0x55, 
-	0x00, 0xc1, 0x02, 0x09, 0x02, 0x8b, 0x00, 0x81, 
-	0x01, 0x85, 0x23, 0x93, 0x1b, 0x53, 0x1b, 0x53, 
-	0x01, 0x01, 0x01, 0x01, 0x02, 0x09, 0x0b, 0x11, 
-	0x00, 0xc1, 0x00, 0x41, 0x00, 0x41, 0x00, 0x81, 
-	0x01, 0x41, 0x1b, 0x13, 0x33, 0xd9, 0x13, 0x0f, 
-	0x02, 0x0b, 0x01, 0xc7, 0x02, 0x8d, 0x2b, 0xd3, 
-	0x5d, 0x23, 0x34, 0x19, 0x02, 0x4b, 0x02, 0x8b, 
-	0x23, 0x93, 0x3c, 0x57, 0x6d, 0x67, 0x00, 0x01, 
-	0x01, 0x83, 0x01, 0x43, 0x1b, 0x53, 0x34, 0x1b, 
-	0x1b, 0x53, 0x1b, 0x53, 0x02, 0x0b, 0x01, 0xc9, 
-	0x01, 0x43, 0x01, 0xc7, 0x02, 0x4b, 0x01, 0x85, 
-	0x01, 0x03, 0x00, 0x81, 0x00, 0xc1, 0x13, 0x11, 
-	0x1b, 0x55, 0x02, 0x0b, 0x00, 0x01, 0x00, 0xc1, 
-	0x01, 0x43, 0x02, 0x4b, 0x5d, 0x21, 0x34, 0x19, 
-	0x54, 0xe3, 0x13, 0x0f, 0x1b, 0x53, 0x2b, 0xd7, 
-	0x86, 0x2b, 0x4c, 0x9b, 0x7e, 0x29, 0x0a, 0xd1, 
-	0x00, 0x41, 0x44, 0x9d, 0x01, 0x45, 0x0a, 0x8d, 
-	0x0a, 0xcf, 0x01, 0x87, 0x02, 0x4b, 0x02, 0x8d, 
-	0x01, 0xc7, 0x02, 0x4d, 0x01, 0x85, 0x01, 0x85, 
-	0x00, 0xc1, 0x01, 0x43, 0x23, 0x95, 0x13, 0x13, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0xc1, 0x00, 0xc1, 
-	0x01, 0xc7, 0x0a, 0xcf, 0x44, 0x9d, 0x01, 0x45, 
-	0x02, 0x8d, 0x2b, 0xd5, 0x3c, 0x5b, 0x01, 0xc7, 
-	0x01, 0x01, 0x4c, 0x9f, 0x54, 0x9f, 0x65, 0x23, 
-	0x3c, 0x5b, 0x01, 0x01, 0x01, 0x85, 0x1b, 0x13, 
-	0x00, 0xc1, 0x01, 0x43, 0x02, 0x8b, 0x02, 0x4b, 
-	0x00, 0x81, 0x00, 0x41, 0x01, 0x01, 0x02, 0x8d, 
-	0x02, 0x09, 0x01, 0x43, 0x01, 0x87, 0x02, 0x09, 
-	0x01, 0xc5, 0x12, 0xd1, 0x23, 0x55, 0x02, 0x0b, 
-	0x02, 0x4b, 0x02, 0x8d, 0x01, 0xc7, 0x02, 0x07, 
-	0x01, 0xc7, 0x02, 0x49, 0x2b, 0xd7, 0x44, 0x9d, 
-	0x02, 0x8d, 0x13, 0x51, 0x44, 0x9b, 0x3c, 0x57, 
-	0x54, 0xdf, 0x44, 0x5b, 0x54, 0xe1, 0x02, 0x4d, 
-	0x01, 0x85, 0x01, 0x87, 0x01, 0x85, 0x02, 0x07, 
-	0x00, 0xc1, 0x02, 0x09, 0x1b, 0x53, 0x2c, 0x17, 
-	0x0b, 0x0f, 0x6d, 0x67, 0x23, 0x95, 0x02, 0x0b, 
-	0x0a, 0xcf, 0x01, 0x87, 0x00, 0xc1, 0x00, 0xc1, 
-	0x00, 0x81, 0x02, 0xcd, 0x01, 0xc7, 0x02, 0x09, 
-	0x13, 0x11, 0x1b, 0x13, 0x0a, 0xcd, 0x6d, 0x65, 
-	0x44, 0x9b, 0x34, 0x15, 0x54, 0xdf, 0x54, 0xe1, 
-	0x6d, 0x65, 0x75, 0xe7, 0x2b, 0xd7, 0x01, 0xc7, 
-	0x02, 0x8b, 0x13, 0x11, 0x0a, 0x8f, 0x13, 0x51, 
-	0x01, 0x83, 0x01, 0x83, 0x02, 0x0b, 0x5c, 0xdf, 
-	0x02, 0x0b, 0x01, 0xcb, 0x00, 0x01, 0x02, 0x09, 
-	0x13, 0x13, 0x00, 0x41, 0x01, 0x43, 0x02, 0x4b, 
-	0x02, 0x4b, 0x01, 0x43, 0x01, 0xc7, 0x01, 0x43, 
-	0x12, 0xd1, 0x02, 0x0b, 0x01, 0x85, 0x2b, 0xd7, 
-	0x5d, 0x61, 0x6d, 0xa5, 0x65, 0x21, 0x5d, 0x21, 
-	0x54, 0xdd, 0x75, 0xa5, 0x02, 0x49, 0x3c, 0x5b, 
-	0x0a, 0x8f, 0x01, 0x45, 0x02, 0x09, 0x01, 0x03, 
-	0x5d, 0x21, 0x1b, 0x13, 0x33, 0xd7, 0x7e, 0x29, 
-	0x02, 0x49, 0x01, 0x41, 0x01, 0xc7, 0x34, 0x59, 
-	0x02, 0x49, 0x01, 0x01, 0x01, 0x87, 0x13, 0x11, 
-	0x01, 0x43, 0x01, 0x87, 0x01, 0xc7, 0x44, 0x5d, 
-	0x02, 0x4b, 0x01, 0x03, 0x01, 0xc7, 0x01, 0x01, 
-	0x00, 0xc3, 0x3c, 0x59, 0x6d, 0x65, 0x6d, 0x65, 
-	0x34, 0x15, 0x7d, 0xe7, 0x75, 0xe5, 0x02, 0x4d, 
-	0x01, 0xc7, 0x00, 0xc1, 0x01, 0x45, 0x02, 0x09, 
-	0x34, 0x5b, 0x5d, 0x63, 0x2c, 0x17, 0x1b, 0x53, 
-	0x3c, 0x5b, 0x2c, 0x15, 0x1b, 0x53, 0x01, 0xc7, 
-	0x3c, 0x59, 0x2b, 0xd5, 0x0b, 0x0f, 0x02, 0x4b, 
-	0x00, 0x81, 0x00, 0x81, 0x65, 0x23, 0x44, 0x9f, 
-	0x00, 0x01, 0x00, 0x81, 0x01, 0x85, 0x02, 0x8d, 
-	0x01, 0xc7, 0x01, 0x85, 0x1b, 0x51, 0x13, 0x0f, 
-	0x1b, 0x93, 0x7d, 0xa5, 0x9e, 0xf3, 0x0a, 0x8d, 
-	0x01, 0x03, 0x01, 0x87, 0x01, 0x85, 0x01, 0xc7, 
-	0x44, 0x9d, 0x01, 0x01, 0x01, 0x45, 0x01, 0x41, 
-	0x2b, 0xd7, 0x13, 0x4f, 0x4c, 0x9f, 0x1b, 0x93, 
-	0x01, 0xc5, 0x02, 0x4b, 0x1b, 0x53, 0x2b, 0xd7, 
-	0x1b, 0x93, 0x3c, 0x19, 0x4c, 0x9d, 0x34, 0x19, 
-	0x12, 0xcf, 0x01, 0x85, 0x02, 0xcd, 0x02, 0xcb, 
-	0x02, 0x8d, 0x0a, 0xcf, 0x23, 0xd5, 0x2c, 0x15, 
-	0x44, 0x9b, 0x5d, 0x23, 0x54, 0xe1, 0x4c, 0x9f, 
-	0x01, 0x45, 0x00, 0x41, 0x0a, 0x4d, 0x01, 0xc9, 
-	0x1b, 0x55, 0x02, 0x09, 0x01, 0x01, 0x01, 0x45, 
-	0x13, 0x53, 0x2b, 0xd7, 0x02, 0x4d, 0x24, 0x15, 
-	0x13, 0x91, 0x1b, 0x93, 0x0a, 0xcf, 0x02, 0x8b, 
-	0x00, 0xc1, 0x0a, 0x8f, 0x5d, 0x23, 0x3c, 0x5b, 
-	0x7e, 0x29, 0x5d, 0x21, 0x6d, 0x65, 0x65, 0x25, 
-	0x4c, 0x9d, 0x23, 0x95, 0x2b, 0xd5, 0x4c, 0x9d, 
-	0x12, 0xd1, 0x13, 0x51, 0x44, 0x9b, 0x44, 0x9d, 
-	0x4c, 0x9f, 0x02, 0x0b, 0x01, 0xc7, 0x0a, 0xcf, 
-	0x01, 0xc9, 0x02, 0xcd, 0x02, 0x49, 0x02, 0x49, 
-	0x13, 0x0f, 0x44, 0x5d, 0x2b, 0xd5, 0x0a, 0xcd, 
-	0x1b, 0x0f, 0x23, 0x93, 0x44, 0x9d, 0x13, 0x4f, 
-	0x64, 0xe5, 0x44, 0x9d, 0x34, 0x5b, 0x54, 0xe1, 
-	0x96, 0xb1, 0x86, 0x2b, 0x75, 0xa7, 0x54, 0xa1, 
-	0x7d, 0xeb, 0x3c, 0x5b, 0x02, 0x4b, 0x1b, 0x53, 
-	0x01, 0xc7, 0x01, 0x43, 0x02, 0x4b, 0x02, 0x49, 
-	0x34, 0x17, 0x6d, 0xa5, 0x54, 0xe1, 0x34, 0x59, 
-	0x01, 0xc5, 0x0b, 0x0f, 0x3c, 0x9b, 0x0a, 0xcf, 
-	0x01, 0xc7, 0x02, 0x4b, 0x44, 0x9d, 0x44, 0x9d, 
-	0x3c, 0x19, 0x0a, 0xcd, 0x02, 0xcd, 0x44, 0x9d, 
-	0x65, 0x65, 0x34, 0x19, 0x0b, 0x0d, 0x3c, 0x5b, 
-	0x0a, 0x8f, 0x01, 0x81, 0x01, 0x03, 0x00, 0x41, 
-	0x01, 0x41, 0x34, 0x59, 0x3c, 0x5b, 0x23, 0x93, 
-	0x13, 0x51, 0x0a, 0xcf, 0x13, 0x11, 0x02, 0x4d, 
-	0x00, 0xc1, 0x2b, 0xd7, 0x13, 0x0f, 0x0a, 0xcd, 
-	
-};
-
-Gfx supergoomb__3F485258_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__3F485258_c_rgba16[] = {
-	0x84, 0x21, 0x31, 0x8d, 0x6b, 0x5b, 0x52, 0x93, 
-	0x31, 0x8d, 0x29, 0x4b, 0x10, 0x85, 0x08, 0x83, 
-	0x08, 0x41, 0x00, 0x41, 0x08, 0x83, 0x00, 0x43, 
-	0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x08, 0x43, 
-	0x29, 0x4b, 0x21, 0x09, 0x29, 0x4b, 0x29, 0x4b, 
-	0x39, 0xcf, 0x29, 0x8b, 0x21, 0x09, 0x29, 0x8b, 
-	0x31, 0x8d, 0x31, 0xcd, 0x52, 0x93, 0x42, 0x11, 
-	0x63, 0x17, 0x42, 0x11, 0x39, 0xcd, 0x21, 0x09, 
-	0xf7, 0xbd, 0x94, 0xa5, 0x42, 0x51, 0x7b, 0xdf, 
-	0x94, 0xa5, 0x7b, 0xdf, 0x6b, 0x57, 0x3a, 0x13, 
-	0x4a, 0x95, 0x3a, 0x0f, 0x29, 0x49, 0x29, 0x4b, 
-	0x29, 0x4b, 0x21, 0x49, 0x29, 0x4b, 0x21, 0x4b, 
-	0x39, 0xd1, 0x52, 0x95, 0x94, 0x63, 0x29, 0x8b, 
-	0x31, 0x8b, 0x31, 0x8b, 0x21, 0x09, 0x8c, 0x63, 
-	0x31, 0x8d, 0x84, 0x1f, 0x7b, 0x9d, 0x6b, 0x59, 
-	0x39, 0xcf, 0x63, 0x19, 0x42, 0x11, 0x19, 0x07, 
-	0xd6, 0xb5, 0x42, 0x11, 0x73, 0x9d, 0x9c, 0xe7, 
-	0xb5, 0xa9, 0x21, 0x49, 0x3a, 0x0f, 0x4a, 0x95, 
-	0x42, 0x11, 0x4a, 0x95, 0x21, 0x07, 0x29, 0x47, 
-	0x29, 0x47, 0x19, 0x07, 0x31, 0xd1, 0x39, 0xcf, 
-	0x29, 0x8d, 0x52, 0xd5, 0x8c, 0x61, 0x21, 0x49, 
-	0x42, 0x51, 0x42, 0x0f, 0x31, 0x49, 0x6b, 0x9d, 
-	0x52, 0x95, 0x29, 0x4b, 0x42, 0x0f, 0x63, 0x19, 
-	0x4a, 0x53, 0x6b, 0x59, 0x4a, 0x53, 0x21, 0x09, 
-	0x7c, 0x21, 0x94, 0xa5, 0xb5, 0xab, 0x8c, 0x63, 
-	0x94, 0xa5, 0x21, 0x09, 0x29, 0x4b, 0x3a, 0x0f, 
-	0x42, 0x11, 0x52, 0x93, 0x5a, 0xd7, 0x31, 0x8d, 
-	0x4a, 0x53, 0x7b, 0xdd, 0x42, 0x11, 0x41, 0xcf, 
-	0x29, 0x4b, 0x39, 0xcf, 0x63, 0x5b, 0x4a, 0x95, 
-	0x83, 0xdf, 0x5a, 0xd5, 0x29, 0x09, 0x29, 0x8d, 
-	0x29, 0x4b, 0x4a, 0x53, 0x5a, 0xd5, 0x5a, 0xd7, 
-	0x5a, 0xd7, 0x7b, 0x9d, 0x7b, 0xdf, 0x18, 0xc7, 
-	0xa5, 0x6b, 0x53, 0x1b, 0x6b, 0x5d, 0x5a, 0xd7, 
-	0x94, 0x63, 0x8c, 0x61, 0x29, 0x8b, 0x39, 0xcf, 
-	0x31, 0xcf, 0x7b, 0xdb, 0x94, 0xa3, 0x4a, 0x53, 
-	0x31, 0x8d, 0x9c, 0xe7, 0x6b, 0x5b, 0x42, 0x11, 
-	0x6b, 0x5b, 0x6b, 0x5b, 0x7b, 0xdf, 0x84, 0x21, 
-	0x7b, 0xdf, 0x63, 0x19, 0x42, 0x11, 0x21, 0x4b, 
-	0x29, 0x49, 0x42, 0x53, 0x21, 0x0b, 0x29, 0x4b, 
-	0x21, 0x4b, 0x52, 0x95, 0x6b, 0x5b, 0x21, 0x09, 
-	0xb5, 0xed, 0x31, 0xcf, 0x21, 0x4b, 0x29, 0x4b, 
-	0x29, 0xcf, 0x63, 0x5d, 0x9c, 0xe7, 0x4a, 0x95, 
-	0x29, 0x8d, 0x5a, 0xd5, 0x4a, 0x53, 0x9c, 0xe7, 
-	0x42, 0x11, 0x29, 0x8d, 0x42, 0x53, 0x73, 0x9d, 
-	0x7b, 0xdf, 0x31, 0xcf, 0x29, 0x8f, 0x94, 0xa5, 
-	0x63, 0x19, 0x73, 0x9d, 0x5a, 0xd7, 0x39, 0xcf, 
-	0x3a, 0x11, 0x18, 0xc7, 0x21, 0x09, 0x29, 0x4b, 
-	0x31, 0xcf, 0x42, 0x11, 0x21, 0x09, 0x18, 0xc7, 
-	0xa5, 0x6b, 0x3a, 0x11, 0x31, 0xcd, 0x31, 0x8d, 
-	0x3a, 0x11, 0x31, 0xcd, 0x31, 0xcf, 0x42, 0x53, 
-	0x3a, 0x13, 0x84, 0x1f, 0xad, 0x69, 0xa4, 0xe7, 
-	0x7b, 0xdf, 0x31, 0xcf, 0x31, 0x8f, 0x8c, 0x61, 
-	0x31, 0xcd, 0x39, 0xcd, 0x21, 0x4b, 0x4a, 0x95, 
-	0x84, 0x63, 0x52, 0x95, 0x5a, 0xd5, 0x18, 0xc9, 
-	0x42, 0x11, 0x21, 0x09, 0x39, 0xcd, 0x42, 0x11, 
-	0x18, 0xc7, 0x29, 0x8d, 0x29, 0x8b, 0x21, 0x09, 
-	0xdf, 0x37, 0x29, 0x8d, 0x31, 0x8b, 0x31, 0x89, 
-	0x52, 0xd3, 0x3a, 0x0f, 0x52, 0xd5, 0x3a, 0x11, 
-	0x31, 0xcf, 0x6b, 0x5b, 0x9c, 0xe7, 0x84, 0x21, 
-	0x5b, 0x17, 0x52, 0xd5, 0x52, 0x95, 0x63, 0x19, 
-	0x63, 0x19, 0x3a, 0x11, 0x31, 0x8b, 0x29, 0x8d, 
-	0x31, 0xcd, 0x7b, 0x9b, 0x42, 0x55, 0x29, 0x4d, 
-	0x52, 0x93, 0x3a, 0x11, 0x3a, 0x11, 0x52, 0x93, 
-	0x21, 0x09, 0x29, 0x8d, 0x21, 0x4b, 0x31, 0x8d, 
-	0xf7, 0xbd, 0x29, 0x8b, 0x42, 0x51, 0x63, 0x17, 
-	0x52, 0x93, 0x4a, 0x95, 0x63, 0x5b, 0x4a, 0x53, 
-	0x29, 0x49, 0x18, 0xc7, 0x29, 0x8d, 0x21, 0x07, 
-	0x5a, 0x93, 0x84, 0x1f, 0x73, 0x9b, 0x7b, 0xdf, 
-	0x9c, 0xe5, 0x7c, 0x1f, 0x4a, 0x95, 0x4a, 0x53, 
-	0x8c, 0x21, 0x4a, 0x53, 0x21, 0x4b, 0x31, 0xcf, 
-	0x29, 0x4b, 0x3a, 0x11, 0x29, 0x4b, 0x3a, 0x0f, 
-	0x21, 0x09, 0x21, 0x09, 0x19, 0x0b, 0x42, 0x11, 
-	0xce, 0xb5, 0x73, 0xdf, 0x42, 0x0f, 0x7b, 0xdf, 
-	0xc6, 0x31, 0x4a, 0x53, 0x8c, 0x61, 0x7c, 0x1f, 
-	0x94, 0xa5, 0x6b, 0x9b, 0x42, 0x11, 0x94, 0xa5, 
-	0x73, 0xdf, 0x83, 0xdd, 0x8c, 0x61, 0xa5, 0x29, 
-	0xa5, 0x29, 0xa5, 0x29, 0x29, 0x8d, 0x29, 0x8f, 
-	0x52, 0x97, 0x31, 0xcf, 0x31, 0x8d, 0x31, 0xcf, 
-	0x31, 0x8f, 0x3a, 0x11, 0x29, 0x4b, 0x4a, 0x53, 
-	0x18, 0xc5, 0x18, 0x83, 0x29, 0x4b, 0x29, 0x4b, 
-	0xf7, 0xbd, 0x7c, 0x21, 0x6b, 0x5b, 0x31, 0xcd, 
-	0x8c, 0x61, 0x52, 0x93, 0xa5, 0x29, 0xbd, 0xef, 
-	0x31, 0x8d, 0xb5, 0x6b, 0x84, 0x1f, 0x29, 0xd1, 
-	0x29, 0x8f, 0x52, 0x93, 0x63, 0x17, 0x6b, 0x5b, 
-	0xa5, 0x29, 0x63, 0x17, 0x31, 0x8d, 0x31, 0xcf, 
-	0x21, 0x4b, 0x39, 0xd1, 0x3a, 0x11, 0x39, 0xcf, 
-	0x42, 0x11, 0x4a, 0x53, 0x29, 0x4b, 0x29, 0x8b, 
-	0x18, 0xc5, 0x29, 0x49, 0x21, 0x09, 0x29, 0x4b, 
-	0xf7, 0xbd, 0xbd, 0xed, 0xce, 0x73, 0xb5, 0xad, 
-	0xad, 0x27, 0xc6, 0x31, 0x52, 0xd7, 0x31, 0x8d, 
-	0x39, 0xcd, 0x9c, 0xe5, 0x52, 0x93, 0x29, 0x8b, 
-	0x4a, 0x95, 0x29, 0x4b, 0x29, 0x4b, 0x42, 0x53, 
-	0x52, 0x95, 0x31, 0x8d, 0x39, 0xcd, 0x21, 0x07, 
-	0x29, 0x8d, 0x39, 0xcf, 0x3a, 0x11, 0x39, 0xcf, 
-	0x3a, 0x11, 0x42, 0x11, 0x21, 0x4b, 0x5b, 0x17, 
-	0x5b, 0x17, 0x19, 0x07, 0x19, 0x07, 0x21, 0x09, 
-	0xad, 0xf3, 0x5a, 0xd9, 0x21, 0x09, 0x5b, 0x1b, 
-	0x84, 0x21, 0x8c, 0x61, 0xa5, 0x29, 0x29, 0xcd, 
-	0x5a, 0xd7, 0x4a, 0x95, 0x7b, 0xdd, 0x39, 0xcf, 
-	0x42, 0x13, 0x6b, 0x5b, 0x73, 0xdf, 0x84, 0x21, 
-	0x7c, 0x21, 0x31, 0x8b, 0x31, 0xcd, 0x31, 0xcd, 
-	0x31, 0x8d, 0x21, 0x09, 0x31, 0x8d, 0x29, 0x4b, 
-	0x31, 0x8d, 0x29, 0x4b, 0x21, 0x0b, 0x31, 0xcf, 
-	0x5a, 0xd5, 0x94, 0x1b, 0x42, 0x51, 0x10, 0x85, 
-	0xad, 0xad, 0x3a, 0x13, 0x29, 0x49, 0x4a, 0x95, 
-	0x29, 0x4b, 0x31, 0x4b, 0x5b, 0x5d, 0x4a, 0x97, 
-	0x5b, 0x17, 0x4a, 0x51, 0xad, 0x69, 0x6b, 0x5b, 
-	0x21, 0x09, 0x3a, 0x0f, 0x42, 0x53, 0x6b, 0x5b, 
-	0x6b, 0x9d, 0x63, 0x19, 0x42, 0x51, 0x3a, 0x13, 
-	0x21, 0x4b, 0x19, 0x09, 0x29, 0x4b, 0x31, 0x8b, 
-	0x31, 0x8d, 0x21, 0x4b, 0x19, 0x09, 0x21, 0x09, 
-	0x31, 0x8d, 0x94, 0x63, 0x6b, 0x5b, 0x08, 0x43, 
-	0x84, 0x1f, 0x3a, 0x0f, 0x4a, 0x53, 0x52, 0xd9, 
-	0x42, 0x53, 0x4a, 0x97, 0x53, 0x1b, 0x31, 0xd1, 
-	0x84, 0x21, 0x84, 0x23, 0x6b, 0x5d, 0xad, 0xaf, 
-	0x5b, 0x19, 0x21, 0x4b, 0x29, 0x8b, 0x52, 0x95, 
-	0x52, 0x95, 0x39, 0xcd, 0x21, 0x09, 0x31, 0xcd, 
-	0x29, 0x8d, 0x31, 0xcf, 0x21, 0x09, 0x29, 0x4b, 
-	0x31, 0x8d, 0x21, 0x4b, 0x21, 0x09, 0x10, 0x87, 
-	0x21, 0x0b, 0x5a, 0xd7, 0x39, 0xcf, 0x00, 0x01, 
-	0x9c, 0xe5, 0x94, 0xa5, 0x6b, 0x59, 0x42, 0x0f, 
-	0x94, 0xe5, 0x7b, 0x99, 0x83, 0xdb, 0x7b, 0xe1, 
-	0x6b, 0x9d, 0x94, 0xa5, 0x63, 0x1b, 0x73, 0xdf, 
-	0x3a, 0x13, 0x39, 0xcf, 0x29, 0x8b, 0x42, 0x11, 
-	0x84, 0x21, 0x5b, 0x19, 0x42, 0x11, 0x31, 0x8b, 
-	0x42, 0x0f, 0x31, 0x8d, 0x21, 0x09, 0x29, 0x8b, 
-	0x29, 0x8b, 0x29, 0x4b, 0x42, 0x51, 0x52, 0x93, 
-	0x3a, 0x11, 0x08, 0x43, 0x31, 0x8d, 0x00, 0x01, 
-	0xf7, 0xbd, 0xd6, 0xb5, 0xce, 0x31, 0x84, 0x63, 
-	0xb5, 0xab, 0xa4, 0x9d, 0xac, 0xa1, 0xad, 0x6b, 
-	0x8c, 0x63, 0xa5, 0x29, 0x8c, 0x63, 0x8c, 0x65, 
-	0x31, 0xcd, 0x5b, 0x19, 0x42, 0x13, 0x31, 0x8d, 
-	0x3a, 0x11, 0xa5, 0x27, 0x7b, 0xdd, 0x39, 0xcf, 
-	0x39, 0xcf, 0x39, 0xcf, 0x31, 0x8d, 0x31, 0x8d, 
-	0x39, 0xcf, 0x29, 0x8b, 0x63, 0x17, 0x6b, 0x5b, 
-	0x52, 0x97, 0x29, 0x4b, 0x42, 0x53, 0x00, 0x01, 
-	0xbd, 0xef, 0x8c, 0x63, 0x73, 0x9b, 0x6b, 0x59, 
-	0x6b, 0x9d, 0xa4, 0xa5, 0xce, 0x73, 0x9c, 0xe7, 
-	0x7b, 0xdd, 0x7b, 0xdf, 0x52, 0xd7, 0x9c, 0xa5, 
-	0x7b, 0xdf, 0x84, 0x1f, 0x42, 0x11, 0x3a, 0x53, 
-	0x31, 0xcd, 0x73, 0xdd, 0x94, 0x61, 0x4a, 0x93, 
-	0x52, 0x95, 0x42, 0x51, 0x73, 0x9d, 0x42, 0x0f, 
-	0x63, 0x59, 0x6b, 0x9b, 0x63, 0x19, 0x5a, 0xd7, 
-	0x52, 0x95, 0x39, 0xcf, 0x4a, 0x53, 0x00, 0x01, 
-	0xad, 0xab, 0x52, 0xd7, 0x94, 0xa5, 0x94, 0xa5, 
-	0x94, 0xa5, 0x52, 0xd7, 0x94, 0xa5, 0x63, 0x17, 
-	0xce, 0x73, 0xad, 0x29, 0x94, 0xa5, 0x94, 0xa5, 
-	0xc6, 0x31, 0xb5, 0xab, 0x52, 0xd5, 0x84, 0xa5, 
-	0x3a, 0x13, 0x94, 0xa5, 0x31, 0xcd, 0x42, 0x51, 
-	0x8c, 0x63, 0x84, 0x21, 0x42, 0x0f, 0x52, 0x93, 
-	0x6b, 0x9b, 0x84, 0x61, 0x6b, 0x5b, 0x94, 0x63, 
-	0x6b, 0x5b, 0x52, 0x95, 0x42, 0x11, 0x00, 0x01, 
-	0xad, 0xad, 0x6b, 0x9d, 0x6b, 0x9b, 0x52, 0x95, 
-	0xad, 0x69, 0x73, 0xdf, 0x42, 0x0f, 0x52, 0x93, 
-	0xce, 0x73, 0xce, 0x73, 0xce, 0x71, 0x42, 0x53, 
-	0x52, 0xd7, 0xc6, 0x31, 0xbd, 0xef, 0xa5, 0x29, 
-	0x9c, 0xe9, 0x6b, 0xe1, 0x29, 0x8d, 0x42, 0x11, 
-	0x4a, 0x53, 0x5a, 0xd7, 0x84, 0x21, 0x63, 0x19, 
-	0x6b, 0x5b, 0x7b, 0xdf, 0x42, 0x51, 0x73, 0x9b, 
-	0x73, 0x9b, 0x63, 0x19, 0x31, 0xcf, 0x08, 0x43, 
-	0x95, 0x27, 0x63, 0x1b, 0x9c, 0xe7, 0x73, 0xdf, 
-	0x52, 0x95, 0x5a, 0xd7, 0x84, 0x21, 0x63, 0x19, 
-	0x6b, 0x5b, 0x5a, 0xd5, 0x8c, 0x63, 0x21, 0x49, 
-	0x39, 0xcf, 0x94, 0xa5, 0x6b, 0x9b, 0x6b, 0x57, 
-	0x63, 0x59, 0x42, 0x51, 0x4a, 0x93, 0x52, 0xd7, 
-	0x7c, 0x1f, 0x3a, 0x51, 0x94, 0xa5, 0xb5, 0xad, 
-	0xc6, 0x31, 0x63, 0x17, 0x4a, 0x53, 0x5b, 0x17, 
-	0x94, 0xa5, 0x42, 0x11, 0x31, 0x8d, 0x10, 0xc5, 
-	0xbd, 0xef, 0x94, 0xa5, 0xe7, 0x39, 0xde, 0xf7, 
-	0xad, 0x69, 0x3a, 0x51, 0x94, 0xa5, 0xb5, 0xad, 
-	0xc6, 0x31, 0x63, 0x17, 0x94, 0xa5, 0x42, 0x51, 
-	0x31, 0x8d, 0xc6, 0x31, 0x4a, 0x95, 0x52, 0xd5, 
-	0x5b, 0x19, 0x63, 0x17, 0x42, 0x53, 0x7b, 0xdf, 
-	0xde, 0xf7, 0xde, 0xf7, 0xad, 0x6b, 0xbd, 0xed, 
-	0x94, 0xa5, 0x73, 0x9d, 0x52, 0xd5, 0x5a, 0xd7, 
-	0x63, 0x17, 0x4a, 0x53, 0x6b, 0x5b, 0x21, 0x49, 
-	0xde, 0xf3, 0x53, 0x1b, 0xb5, 0xad, 0x94, 0xa5, 
-	0xde, 0xf7, 0xde, 0xf7, 0xad, 0x6b, 0xbd, 0xed, 
-	0x94, 0xa5, 0x94, 0xa5, 0x8c, 0xa5, 0x6b, 0x99, 
-	0x5a, 0xd5, 0xa4, 0xe7, 0xad, 0x29, 0x63, 0x5b, 
-	0x6b, 0x5b, 0x7c, 0x21, 0x73, 0x9d, 0x63, 0x5b, 
-	0x94, 0xa5, 0xde, 0xf7, 0x94, 0xa5, 0x5b, 0x19, 
-	0xad, 0x6b, 0x73, 0xdd, 0x63, 0x19, 0x8c, 0x63, 
-	0x63, 0x19, 0x84, 0x1f, 0x73, 0xdd, 0x10, 0x85, 
-	0xf7, 0xbd, 0x42, 0x51, 0x21, 0x4b, 0x39, 0xcf, 
-	0xc5, 0xef, 0xde, 0xf7, 0x94, 0xa5, 0x5b, 0x19, 
-	0xce, 0x73, 0xa5, 0x29, 0x94, 0xa5, 0xcd, 0xeb, 
-	0xa4, 0xe5, 0xbd, 0xef, 0x7c, 0x1f, 0x63, 0x5b, 
-	0x29, 0x8f, 0x5b, 0x19, 0x4a, 0x95, 0x5a, 0xd9, 
-	0x39, 0xcb, 0x7b, 0xdf, 0x52, 0xd9, 0x63, 0x5d, 
-	0x94, 0xa3, 0x5a, 0xd7, 0x63, 0x19, 0x6b, 0x9b, 
-	0x6b, 0x59, 0x6b, 0x5b, 0x52, 0xd5, 0x18, 0xc5, 
-	0xf7, 0xbd, 0x5b, 0x19, 0x73, 0xdd, 0x29, 0x4b, 
-	0x39, 0xcb, 0x9d, 0x29, 0x29, 0xd1, 0x63, 0x5d, 
-	0xa5, 0x27, 0xbd, 0xef, 0xd6, 0xb5, 0xd6, 0x71, 
-	0xce, 0x73, 0x94, 0xa5, 0x73, 0x9d, 0xa5, 0x69, 
-	0x19, 0x4b, 0x42, 0x11, 0x42, 0x53, 0x3a, 0x11, 
-	0x4a, 0x93, 0x3a, 0x0f, 0x4a, 0x95, 0x4a, 0x93, 
-	0x6b, 0x5b, 0x39, 0xcf, 0x52, 0xd7, 0x63, 0x19, 
-	0x94, 0xa3, 0x94, 0xa5, 0x42, 0x0f, 0x10, 0x85, 
-	0xc6, 0x31, 0x94, 0xa5, 0x9c, 0xe9, 0x73, 0xdf, 
-	0x73, 0xdd, 0x32, 0x11, 0x42, 0x97, 0x73, 0xdf, 
-	0xb5, 0x6b, 0x94, 0xa5, 0x94, 0x63, 0xce, 0x31, 
-	0x84, 0x21, 0x94, 0xa5, 0xbd, 0xad, 0xce, 0x73, 
-	0x84, 0x63, 0x3a, 0x11, 0x42, 0x53, 0x4a, 0x91, 
-	0x31, 0x8d, 0x6b, 0x9d, 0x52, 0x95, 0x63, 0x19, 
-	0x42, 0x53, 0x29, 0x8b, 0x39, 0xcf, 0x73, 0x9d, 
-	0x94, 0xa5, 0xad, 0x6b, 0x8c, 0x63, 0x21, 0x09, 
-	0xad, 0xad, 0x4a, 0x53, 0x5b, 0x19, 0x8c, 0x63, 
-	0x7b, 0xdd, 0x31, 0xcb, 0x42, 0x51, 0x5b, 0x19, 
-	0x84, 0x1f, 0xa4, 0xe7, 0x9c, 0xe5, 0xa5, 0x27, 
-	0xd6, 0xb5, 0xd6, 0xb5, 0xce, 0x73, 0xce, 0x73, 
-	0xce, 0x73, 0x63, 0x17, 0x42, 0x51, 0xb5, 0xad, 
-	0x5a, 0xd5, 0x19, 0x0b, 0x8c, 0xa5, 0x63, 0x1b, 
-	0x3a, 0x13, 0x31, 0xcf, 0x21, 0x49, 0x4a, 0x53, 
-	0x63, 0x19, 0x94, 0xa5, 0x8c, 0x61, 0x42, 0x11, 
-	0xef, 0x7d, 0x94, 0xa5, 0x4a, 0x53, 0x94, 0xa5, 
-	0xef, 0x7b, 0x63, 0x5b, 0x42, 0x0f, 0x84, 0x21, 
-	0xb5, 0xad, 0xad, 0x6b, 0x9c, 0xe7, 0x63, 0x19, 
-	0x63, 0x5d, 0x73, 0xe1, 0xc5, 0xab, 0xce, 0x71, 
-	0xce, 0x73, 0x84, 0x1f, 0x31, 0xcf, 0x4a, 0x95, 
-	0x42, 0x51, 0x31, 0x8b, 0x42, 0x11, 0x29, 0x89, 
-	0x31, 0x8d, 0x4a, 0x95, 0x84, 0x61, 0x29, 0x4b, 
-	0x52, 0xd7, 0x63, 0x59, 0x9c, 0xa5, 0x52, 0x95, 
-	0xf7, 0xbd, 0xe7, 0x39, 0x8c, 0x63, 0x29, 0x49, 
-	0xa5, 0x25, 0xef, 0x7b, 0x7b, 0x9b, 0x8c, 0xa3, 
-	0x9c, 0xe7, 0xd6, 0xb5, 0xde, 0xf7, 0x94, 0xa5, 
-	0x3a, 0x11, 0x42, 0x97, 0x73, 0xdf, 0x94, 0x63, 
-	0xce, 0x73, 0xb5, 0xad, 0x7b, 0xdd, 0x4a, 0x51, 
-	0x7b, 0xdf, 0x21, 0x49, 0x5a, 0xd7, 0x63, 0x59, 
-	0x31, 0x8b, 0x52, 0xd7, 0x8c, 0x61, 0x52, 0x95, 
-	0x42, 0x11, 0x3a, 0x11, 0x84, 0x21, 0x63, 0x17, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xef, 0x39, 0x84, 0x61, 
-	0x94, 0xa3, 0xde, 0xb7, 0xa5, 0x27, 0x8c, 0x5f, 
-	0x63, 0x5d, 0x94, 0xa5, 0x5b, 0x19, 0x5b, 0x5b, 
-	0x42, 0x53, 0x4a, 0x95, 0x63, 0x59, 0x94, 0xa3, 
-	0x6b, 0x5b, 0x84, 0x63, 0xce, 0x73, 0x94, 0xa3, 
-	0x42, 0x53, 0x63, 0x5b, 0x63, 0x59, 0x7c, 0x21, 
-	0x3a, 0x11, 0x31, 0xcd, 0x94, 0xa3, 0x7b, 0xdd, 
-	0x3a, 0x13, 0x73, 0x9d, 0x84, 0x21, 0x7b, 0x9d, 
-	0xf7, 0xbd, 0xce, 0x31, 0x5a, 0xd7, 0x5b, 0x1b, 
-	0xde, 0xf9, 0x8c, 0x65, 0x84, 0x1f, 0xc6, 0x2f, 
-	0x42, 0x57, 0x3a, 0x13, 0x3a, 0x11, 0x5b, 0x5b, 
-	0x4a, 0x55, 0x42, 0x51, 0x6b, 0x9d, 0xb5, 0xad, 
-	0x9c, 0xe7, 0x42, 0x95, 0xce, 0x73, 0x52, 0x93, 
-	0x63, 0x19, 0x73, 0x59, 0x42, 0x11, 0x63, 0x59, 
-	0x5a, 0xd7, 0x4a, 0x53, 0x84, 0x1f, 0x94, 0xa3, 
-	0x94, 0xa5, 0x52, 0xd7, 0x31, 0x8d, 0x7b, 0x9d, 
-	0xf7, 0xbd, 0xad, 0xed, 0xdf, 0x37, 0xa5, 0x69, 
-	0x8c, 0xa5, 0x95, 0x6b, 0xb6, 0x31, 0xf7, 0xbd, 
-	0xb5, 0xad, 0xb5, 0xad, 0xbe, 0x31, 0xbe, 0x33, 
-	0xbe, 0x31, 0xa5, 0x29, 0xc6, 0x73, 0xe7, 0x37, 
-	0xf7, 0xbd, 0xc6, 0x75, 0xa5, 0xab, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xf7, 0xbd, 0xad, 0xad, 0xce, 0xb5, 
-	0xdf, 0x39, 0xf7, 0xbd, 0xf7, 0xbd, 0xf7, 0xbd, 
-	0xf7, 0xbd, 0xef, 0xbd, 0xf7, 0xbd, 0x8c, 0x63, 
-	
-};
-
-Gfx supergoomb__10E99677_c_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 supergoomb__10E99677_c_rgba16[] = {
-	0xa6, 0xb5, 0xae, 0xf9, 0xa6, 0xb7, 0x95, 0xef, 
-	0x8d, 0x69, 0x95, 0xf1, 0x8d, 0xad, 0x8d, 0xad, 
-	0x8d, 0xad, 0x85, 0x6d, 0x8d, 0xaf, 0x8d, 0xaf, 
-	0x8d, 0xad, 0x96, 0x2f, 0xa6, 0xb7, 0x2a, 0xd7, 
-	0x6c, 0xa3, 0x4b, 0x9b, 0x9e, 0x31, 0x95, 0xef, 
-	0x96, 0x33, 0x96, 0x33, 0x96, 0x31, 0x9e, 0x33, 
-	0xa6, 0xb9, 0x7c, 0xe5, 0x43, 0x9b, 0x09, 0x8b, 
-	0x2a, 0x51, 0x9e, 0x2d, 0x95, 0xad, 0x8d, 0x6b, 
-	0xa6, 0xb5, 0xa6, 0xb7, 0xa6, 0xb7, 0x9e, 0x73, 
-	0x85, 0x25, 0x8d, 0xad, 0x85, 0x2b, 0x8d, 0x6d, 
-	0x85, 0x6d, 0x85, 0x6d, 0x85, 0x6d, 0x85, 0x6b, 
-	0x85, 0x6b, 0x95, 0xaf, 0xae, 0xf7, 0x09, 0xcf, 
-	0x32, 0xd5, 0x7c, 0xe7, 0x95, 0xef, 0x95, 0xad, 
-	0x95, 0xf1, 0x96, 0x33, 0x96, 0x33, 0x96, 0x31, 
-	0x95, 0xf1, 0xae, 0xb5, 0xcf, 0xbb, 0xae, 0xf5, 
-	0x3b, 0x15, 0x3b, 0x13, 0x95, 0xef, 0x95, 0xad, 
-	0xa6, 0xb5, 0xa6, 0xb7, 0xa6, 0xb5, 0xa6, 0xb7, 
-	0x8d, 0x6b, 0x64, 0x61, 0x8d, 0x6b, 0x8d, 0x6b, 
-	0x7d, 0x2b, 0x85, 0x6d, 0x85, 0x6d, 0x8d, 0x6d, 
-	0x85, 0x6d, 0x95, 0xaf, 0x9e, 0x75, 0x09, 0x8d, 
-	0x4b, 0x9b, 0x8d, 0xad, 0x95, 0xef, 0x8d, 0xad, 
-	0x95, 0xad, 0x95, 0xef, 0x95, 0xf1, 0x96, 0x33, 
-	0x95, 0xaf, 0x9e, 0x31, 0xae, 0xf7, 0xbf, 0x39, 
-	0xbf, 0x37, 0x6c, 0x5f, 0x6c, 0x5f, 0x7c, 0xe7, 
-	0xa6, 0x73, 0xa6, 0xb7, 0xa6, 0x75, 0x9e, 0x75, 
-	0xa6, 0xb7, 0x6c, 0xa5, 0x43, 0x17, 0x7d, 0x2b, 
-	0x85, 0x6b, 0x7d, 0x29, 0x7d, 0x2b, 0x85, 0x6d, 
-	0x95, 0xef, 0x7d, 0x29, 0x64, 0xa5, 0x09, 0xcf, 
-	0x3b, 0x17, 0x8d, 0xad, 0x96, 0x31, 0x8d, 0xaf, 
-	0x8d, 0xad, 0x95, 0xad, 0x95, 0xef, 0x95, 0xf1, 
-	0x85, 0x69, 0x95, 0xeb, 0xa6, 0xb5, 0xa6, 0x75, 
-	0xa6, 0xb5, 0xc7, 0x77, 0x95, 0xa9, 0x54, 0x1f, 
-	0x7c, 0xe7, 0x9e, 0x75, 0x9e, 0x73, 0x9e, 0x73, 
-	0xa6, 0xb7, 0x9e, 0x75, 0x4b, 0x9d, 0x2a, 0x93, 
-	0x85, 0x6d, 0x8d, 0xaf, 0x85, 0x29, 0x85, 0x2b, 
-	0x7c, 0xe9, 0x6c, 0xa5, 0x2a, 0x95, 0x43, 0x9b, 
-	0x12, 0x0f, 0x8d, 0x6d, 0x95, 0xef, 0x8d, 0x6b, 
-	0x8d, 0xab, 0x8d, 0xad, 0x8d, 0xef, 0x85, 0x6d, 
-	0x7c, 0xe5, 0x9e, 0x2d, 0xa6, 0xb5, 0xa6, 0xb5, 
-	0xa6, 0x71, 0xa6, 0x71, 0xbf, 0x7b, 0x7c, 0xe5, 
-	0x4b, 0x57, 0x95, 0xad, 0x8d, 0x6d, 0x8d, 0xaf, 
-	0x8d, 0xad, 0x74, 0xe5, 0x74, 0xa3, 0x64, 0x5f, 
-	0x5b, 0xdb, 0x74, 0xe5, 0x85, 0x6b, 0x85, 0x2b, 
-	0x6c, 0xa5, 0x54, 0x21, 0x43, 0x9d, 0x8d, 0xad, 
-	0x01, 0x4b, 0x54, 0x1f, 0x96, 0x31, 0x85, 0x2b, 
-	0x85, 0x2b, 0x8d, 0x6b, 0x8d, 0xaf, 0x6c, 0xa3, 
-	0x85, 0x25, 0xa6, 0x71, 0xae, 0xb5, 0xa6, 0xb5, 
-	0xae, 0x6f, 0xae, 0x71, 0xae, 0xf7, 0xae, 0xb3, 
-	0x53, 0xd9, 0x95, 0xab, 0x95, 0xef, 0x8d, 0x65, 
-	0x53, 0x9b, 0x74, 0xa3, 0x9e, 0x29, 0x95, 0xa5, 
-	0x7c, 0xa3, 0x64, 0x1d, 0x6c, 0xa1, 0x6c, 0xa5, 
-	0x64, 0x63, 0x5c, 0x63, 0x95, 0xef, 0x96, 0x35, 
-	0x5c, 0x63, 0x64, 0x63, 0x7c, 0xe7, 0x7d, 0x29, 
-	0x85, 0x2b, 0x7d, 0x29, 0x53, 0x9b, 0x74, 0xa3, 
-	0x8d, 0x69, 0x9e, 0x71, 0xa6, 0xb3, 0xa6, 0xb5, 
-	0xae, 0xb3, 0xa6, 0x71, 0xae, 0xb3, 0xae, 0xf7, 
-	0x43, 0x15, 0x95, 0xeb, 0xae, 0xfb, 0x8d, 0x6b, 
-	0x85, 0x27, 0xa6, 0xb5, 0x95, 0xed, 0x9d, 0xe9, 
-	0x9e, 0x2d, 0x9e, 0x2f, 0x95, 0xef, 0x6c, 0xa5, 
-	0x4b, 0x9b, 0x6c, 0xa3, 0x95, 0xf1, 0x96, 0x33, 
-	0x74, 0xe7, 0x95, 0xa9, 0x85, 0x69, 0x85, 0x29, 
-	0x7c, 0xe5, 0x7c, 0xe5, 0x2a, 0x91, 0x7d, 0x25, 
-	0x8d, 0x69, 0x95, 0x69, 0x9e, 0x2f, 0xa6, 0x73, 
-	0xa6, 0x73, 0xa6, 0x6f, 0xa6, 0xb1, 0x96, 0x2f, 
-	0x6c, 0xa3, 0x74, 0xa5, 0x22, 0x0d, 0x64, 0x5d, 
-	0xae, 0xb5, 0x96, 0x31, 0x95, 0xf1, 0x95, 0xeb, 
-	0x95, 0xeb, 0xa6, 0x2f, 0xae, 0xb3, 0x96, 0x33, 
-	0x43, 0x17, 0x7d, 0x6b, 0x85, 0xaf, 0x85, 0x6d, 
-	0x7d, 0x27, 0x9e, 0x73, 0x8d, 0x69, 0x8d, 0x29, 
-	0x8d, 0x67, 0x95, 0xef, 0x43, 0x59, 0x43, 0x17, 
-	0x9e, 0x2f, 0x8d, 0x67, 0x8d, 0x67, 0x95, 0xed, 
-	0x9e, 0x31, 0x96, 0x31, 0x95, 0xef, 0x74, 0xa3, 
-	0x95, 0xf1, 0x7c, 0xe7, 0x6c, 0x9f, 0xae, 0xb3, 
-	0x9e, 0x71, 0x9e, 0x31, 0x96, 0x31, 0x9e, 0x2d, 
-	0x9d, 0xa9, 0x9e, 0x2f, 0xa6, 0x6d, 0x74, 0xe7, 
-	0x64, 0x61, 0x6c, 0xa5, 0x74, 0xe7, 0x7c, 0xe9, 
-	0x95, 0xef, 0xa6, 0x75, 0x96, 0x33, 0x9e, 0x71, 
-	0x96, 0x31, 0xae, 0xfb, 0x95, 0xf1, 0x32, 0xd3, 
-	0x4b, 0x9b, 0x95, 0xed, 0x95, 0xa9, 0x8d, 0x69, 
-	0x95, 0xef, 0x95, 0xab, 0x7c, 0xe5, 0x74, 0xa5, 
-	0x96, 0x35, 0x8d, 0x6d, 0x95, 0xeb, 0xae, 0xaf, 
-	0xa6, 0x6f, 0xa6, 0x6f, 0x9e, 0x71, 0x95, 0xef, 
-	0x95, 0xeb, 0x95, 0x67, 0x8d, 0x69, 0x64, 0x61, 
-	0x8d, 0xad, 0x9e, 0x73, 0x95, 0xf1, 0x95, 0xef, 
-	0x9e, 0x75, 0x9e, 0x75, 0x9e, 0x73, 0x9e, 0x73, 
-	0xa6, 0xb9, 0xb7, 0x3d, 0x8d, 0xaf, 0x01, 0x49, 
-	0x11, 0xcb, 0x6c, 0xa1, 0x95, 0xab, 0x95, 0xab, 
-	0x7c, 0xe7, 0x7c, 0xe5, 0x7d, 0x27, 0x8d, 0x6d, 
-	0x95, 0xf3, 0x8d, 0x69, 0x95, 0xa9, 0xa6, 0x6b, 
-	0xa6, 0x6f, 0xa6, 0xb1, 0x9e, 0x31, 0x95, 0xad, 
-	0x85, 0x69, 0x6c, 0x5f, 0x64, 0x1d, 0xbf, 0x3b, 
-	0xbf, 0x7d, 0xb6, 0xf9, 0xb7, 0x39, 0x95, 0xef, 
-	0x8d, 0x6b, 0x9e, 0x77, 0x9e, 0x73, 0xa6, 0xb7, 
-	0xaf, 0x3d, 0x85, 0x29, 0x22, 0x11, 0x3b, 0x17, 
-	0xae, 0xb5, 0x9e, 0x73, 0x85, 0x27, 0x74, 0xa5, 
-	0x6c, 0xa3, 0x64, 0x61, 0x7c, 0xe7, 0x95, 0xf1, 
-	0x74, 0xa5, 0x6c, 0xa3, 0x85, 0x29, 0xae, 0x6f, 
-	0xa6, 0x71, 0x95, 0xed, 0x8d, 0x69, 0x7c, 0xe5, 
-	0x7c, 0xe5, 0x53, 0xdb, 0x95, 0x69, 0xbf, 0x7b, 
-	0xa6, 0xb7, 0xa6, 0xb7, 0xa6, 0xb7, 0xae, 0xf7, 
-	0x7c, 0xe7, 0x6c, 0xa3, 0x8d, 0x6b, 0xae, 0xf9, 
-	0x74, 0xa3, 0x5c, 0x1b, 0x74, 0xa3, 0xc7, 0xbd, 
-	0xb7, 0x39, 0xa6, 0xb7, 0x96, 0x33, 0x85, 0x69, 
-	0x7d, 0x27, 0x7c, 0xe7, 0x6c, 0xa3, 0x6c, 0xa3, 
-	0x11, 0xcd, 0x09, 0x4b, 0x53, 0xdf, 0xb6, 0xf5, 
-	0x95, 0x65, 0x85, 0x25, 0x64, 0x61, 0x6c, 0x61, 
-	0x6c, 0xa3, 0x64, 0x61, 0xae, 0xb3, 0xae, 0xaf, 
-	0xa6, 0x71, 0xae, 0xb3, 0xae, 0xb7, 0xae, 0xb7, 
-	0x85, 0x69, 0x64, 0x5f, 0x53, 0xdb, 0x32, 0xd3, 
-	0x4b, 0x55, 0x95, 0xab, 0x96, 0x2d, 0x95, 0xab, 
-	0xb7, 0x3d, 0xa6, 0xb7, 0x9e, 0x77, 0x9e, 0x31, 
-	0x95, 0xf1, 0x95, 0xf1, 0x96, 0x31, 0x85, 0x29, 
-	0x53, 0x9b, 0x6c, 0xa3, 0x5c, 0x1f, 0x5b, 0xdf, 
-	0x74, 0xa5, 0x64, 0x61, 0x4b, 0x9d, 0x64, 0x63, 
-	0x6c, 0xa3, 0x74, 0xa5, 0xa6, 0xb7, 0xa6, 0x71, 
-	0xa6, 0x6f, 0xa6, 0x71, 0xae, 0x71, 0x9e, 0x71, 
-	0x7c, 0xe5, 0x85, 0x27, 0x96, 0x31, 0xae, 0xb5, 
-	0xae, 0xf9, 0x9e, 0x33, 0xa6, 0xb7, 0x7c, 0xe5, 
-	0x85, 0x6b, 0x9e, 0x77, 0x96, 0x33, 0x9e, 0x75, 
-	0x9e, 0x77, 0x9e, 0x75, 0x9e, 0x75, 0x7c, 0xe7, 
-	0xa6, 0xb9, 0x95, 0xef, 0x7c, 0xe5, 0x74, 0xa5, 
-	0x8d, 0x6b, 0x95, 0xed, 0x85, 0x27, 0x43, 0x59, 
-	0x4b, 0x9b, 0x95, 0xad, 0x9e, 0xb7, 0x96, 0x33, 
-	0xa6, 0x2f, 0x9e, 0x2f, 0x95, 0xef, 0x8d, 0x6b, 
-	0x8d, 0x6b, 0x95, 0xad, 0x9e, 0x31, 0xa6, 0x75, 
-	0x96, 0x2f, 0x8d, 0x6b, 0x95, 0xf1, 0x96, 0x31, 
-	0x5c, 0x1b, 0x8d, 0xad, 0x96, 0x33, 0x96, 0x33, 
-	0x96, 0x33, 0x96, 0x33, 0x85, 0x27, 0x85, 0x69, 
-	0x9e, 0x73, 0x8d, 0xab, 0x85, 0x27, 0x95, 0xef, 
-	0x95, 0xf1, 0x95, 0xf1, 0x95, 0xef, 0x95, 0xf1, 
-	0x9e, 0xb7, 0x5c, 0x21, 0x64, 0x61, 0x74, 0xa5, 
-	0x74, 0xa7, 0x7d, 0x29, 0x8d, 0x6b, 0x8d, 0xad, 
-	0x8d, 0xad, 0x96, 0x31, 0x9e, 0x75, 0x8d, 0xad, 
-	0x5c, 0x1f, 0x95, 0xed, 0x9e, 0x31, 0x9e, 0x73, 
-	0x96, 0x31, 0x95, 0xef, 0x95, 0xef, 0x9e, 0x33, 
-	0x9e, 0x75, 0x9e, 0x73, 0x95, 0xef, 0x9e, 0x71, 
-	0x9e, 0x73, 0x85, 0x6b, 0x6c, 0xa1, 0xa6, 0x73, 
-	0x95, 0xf1, 0x95, 0xef, 0x95, 0xef, 0x95, 0xef, 
-	0x96, 0x35, 0x85, 0x69, 0x74, 0xe5, 0x7d, 0x29, 
-	0x8d, 0x6b, 0x8d, 0xad, 0x95, 0xaf, 0x95, 0xef, 
-	0x8d, 0x6d, 0x8d, 0xad, 0x95, 0xef, 0x74, 0xe5, 
-	0x95, 0xab, 0xcf, 0xbd, 0xbf, 0x39, 0x95, 0xed, 
-	0x8d, 0xab, 0x95, 0xad, 0x8d, 0x69, 0x8d, 0x6b, 
-	0x8d, 0xad, 0x8d, 0xad, 0x8d, 0xad, 0x95, 0xef, 
-	0x95, 0xed, 0x64, 0xa3, 0x01, 0x49, 0x11, 0xcf, 
-	0x3b, 0x19, 0x96, 0x33, 0x96, 0x31, 0x95, 0xef, 
-	0x95, 0xf1, 0x8d, 0x69, 0x8d, 0x6b, 0x95, 0xaf, 
-	0x95, 0xf1, 0x9e, 0x33, 0xa6, 0x75, 0xae, 0xb5, 
-	0x95, 0xef, 0x85, 0x69, 0x74, 0xe5, 0x64, 0x5f, 
-	0x8d, 0xab, 0xb7, 0x37, 0xb6, 0xf7, 0xae, 0xb5, 
-	0x8d, 0x67, 0x8d, 0x6b, 0x8d, 0x6b, 0x85, 0x69, 
-	0x85, 0x29, 0x8d, 0x6b, 0x8d, 0xab, 0x85, 0x25, 
-	0x9e, 0x2f, 0x5c, 0x1f, 0x74, 0xa3, 0x64, 0x61, 
-	0x53, 0xdd, 0x5c, 0x61, 0x85, 0x29, 0x95, 0xef, 
-	0x9e, 0x75, 0x95, 0xab, 0x95, 0xab, 0x96, 0x33, 
-	0x9e, 0x33, 0xa6, 0x75, 0xae, 0xb7, 0xa6, 0xb7, 
-	0x9e, 0x75, 0x8d, 0xad, 0x7c, 0xe5, 0x74, 0xa3, 
-	0x8d, 0x6b, 0xa6, 0xb3, 0x96, 0x31, 0x9e, 0x75, 
-	0x95, 0xef, 0x85, 0x25, 0x8d, 0xad, 0x85, 0x6b, 
-	0x85, 0x2b, 0x8d, 0x6d, 0x53, 0xdb, 0x85, 0x27, 
-	0xb7, 0x39, 0xbf, 0x39, 0xb6, 0xf7, 0x85, 0x29, 
-	0x95, 0xef, 0x6c, 0xa3, 0x6c, 0xa5, 0x74, 0xa5, 
-	0x6c, 0xa5, 0x64, 0x61, 0x4b, 0x9d, 0x7c, 0xa5, 
-	0xa6, 0x73, 0xa6, 0xb5, 0xa6, 0xb7, 0x9e, 0x75, 
-	0x95, 0xaf, 0x8d, 0xad, 0x74, 0xa5, 0x74, 0xe5, 
-	0x95, 0xab, 0x8d, 0x6b, 0x7d, 0x27, 0x8d, 0xad, 
-	0x96, 0x33, 0x85, 0x25, 0x8d, 0xab, 0x8d, 0xaf, 
-	0x8d, 0xad, 0x74, 0xa3, 0x8d, 0x69, 0xae, 0xf7, 
-	0xae, 0xb7, 0xb6, 0xf7, 0x9e, 0x31, 0x95, 0xef, 
-	0x9e, 0x31, 0xae, 0xf7, 0x9e, 0x73, 0x95, 0xed, 
-	0x96, 0x31, 0x95, 0xef, 0x5c, 0x21, 0x3b, 0x17, 
-	0x6c, 0xa5, 0x9e, 0x35, 0x96, 0x33, 0x96, 0x33, 
-	0x8d, 0x6b, 0x74, 0xa5, 0x85, 0x69, 0x64, 0x5f, 
-	0x8d, 0xad, 0x7d, 0x27, 0x74, 0xe7, 0x74, 0xe7, 
-	0x95, 0xf1, 0x8d, 0xab, 0x95, 0xab, 0x95, 0xad, 
-	0x85, 0x25, 0x95, 0xed, 0xae, 0xb7, 0xae, 0xb5, 
-	0xae, 0xb7, 0x9e, 0x71, 0x95, 0xed, 0x96, 0x2f, 
-	0xa6, 0xb5, 0xae, 0xb5, 0xa6, 0xb5, 0x9e, 0x75, 
-	0x9e, 0x73, 0x96, 0x31, 0x96, 0x33, 0x32, 0xd5, 
-	0x1a, 0x0f, 0x95, 0xef, 0x7c, 0xe7, 0x5c, 0x1f, 
-	0x4b, 0x9b, 0x64, 0x61, 0x85, 0x6b, 0x7c, 0xe5, 
-	0x95, 0xef, 0x85, 0x29, 0x85, 0x29, 0x8d, 0xab, 
-	0x9e, 0x75, 0x95, 0xef, 0x43, 0x13, 0x6c, 0xa3, 
-	0xa6, 0x75, 0xa6, 0xb5, 0xa6, 0xb5, 0xae, 0xb5, 
-	0xb7, 0x39, 0x85, 0x25, 0x8d, 0xab, 0xae, 0xf7, 
-	0xa6, 0xb7, 0xa6, 0x75, 0x9e, 0x75, 0x96, 0x33, 
-	0x96, 0x31, 0x95, 0xed, 0xa6, 0xb5, 0x54, 0x21, 
-	0x09, 0x49, 0x32, 0x93, 0x5c, 0x1f, 0x8d, 0x6b, 
-	0xa6, 0x73, 0x7c, 0xe7, 0x6c, 0xa3, 0x8d, 0x69, 
-	0x9e, 0x31, 0x8d, 0xad, 0x8d, 0xad, 0x95, 0xef, 
-	0xa6, 0xb7, 0x6c, 0xa5, 0x22, 0x4f, 0xb6, 0xf9, 
-	0xae, 0xb5, 0xa6, 0x73, 0xa6, 0xb3, 0xae, 0xb5, 
-	0x9e, 0x31, 0x84, 0xe5, 0xa6, 0xb7, 0xa6, 0x77, 
-	0x9e, 0x75, 0x9e, 0x73, 0x96, 0x33, 0x96, 0x31, 
-	0x95, 0xef, 0x8d, 0xab, 0xa6, 0x73, 0x33, 0x19, 
-	0x5c, 0x61, 0xa6, 0xb7, 0x9e, 0x77, 0x9e, 0x33, 
-	0xb6, 0xf5, 0xbf, 0x39, 0x5b, 0xdb, 0x9e, 0x2f, 
-	0x96, 0x2f, 0x95, 0xad, 0x8d, 0xaf, 0x8d, 0xaf, 
-	0x95, 0xef, 0x6c, 0xa3, 0xae, 0xf7, 0xa6, 0xb5, 
-	0xa6, 0x73, 0xa6, 0x73, 0xa6, 0xb3, 0xae, 0xf9, 
-	0x5b, 0xd9, 0x74, 0xa3, 0x9e, 0x75, 0x96, 0x31, 
-	0x96, 0x33, 0x95, 0xf1, 0x95, 0xaf, 0x8d, 0xad, 
-	0x8d, 0x6b, 0x95, 0xad, 0x54, 0x23, 0x6c, 0xa5, 
-	0x8d, 0x6b, 0xa6, 0xb7, 0x8d, 0xef, 0x9e, 0x31, 
-	0xa6, 0x6f, 0xae, 0xb3, 0x85, 0x27, 0x9e, 0x2f, 
-	0x8d, 0xad, 0x8d, 0x6b, 0x8d, 0xad, 0x95, 0xaf, 
-	0x85, 0x29, 0xa6, 0x73, 0xa6, 0xb5, 0x9e, 0x31, 
-	0x9e, 0x73, 0xae, 0xb7, 0xb6, 0xf9, 0x9e, 0x71, 
-	0x5b, 0xd9, 0x84, 0xe5, 0x95, 0xef, 0x8d, 0xad, 
-	0x8d, 0xad, 0x95, 0xad, 0x8d, 0xad, 0x7c, 0xe7, 
-	0x74, 0xa5, 0x64, 0x65, 0x2a, 0xd7, 0x43, 0x5b, 
-	0x7c, 0xe5, 0x9e, 0x77, 0x96, 0x31, 0x9e, 0x73, 
-	0xa6, 0xb1, 0xae, 0xf3, 0x5c, 0x5f, 0x9e, 0x2f, 
-	0x8d, 0x6b, 0x8d, 0x6b, 0x9e, 0x31, 0x85, 0x69, 
-	0x96, 0x2f, 0xa6, 0x75, 0x9e, 0x31, 0x9e, 0x75, 
-	0x9e, 0x73, 0x96, 0x31, 0x74, 0xa5, 0x2a, 0x91, 
-	0x3b, 0x19, 0x64, 0xa1, 0x85, 0x27, 0x8d, 0xad, 
-	0x95, 0xed, 0x6c, 0xa5, 0x53, 0xdd, 0x6c, 0xa5, 
-	0x9e, 0x33, 0xa6, 0x75, 0xb7, 0x3b, 0x74, 0xa7, 
-	0x5b, 0xdd, 0x9e, 0x75, 0x96, 0x33, 0x9e, 0x71, 
-	0xa6, 0x71, 0xae, 0xb3, 0x7c, 0xe5, 0x53, 0xdd, 
-	0xa6, 0x71, 0x9e, 0x31, 0x5c, 0x1f, 0x6c, 0xa1, 
-	0xb7, 0x3b, 0x96, 0x31, 0xa6, 0xb7, 0x9e, 0x2f, 
-	0x8d, 0x25, 0x53, 0xdb, 0x22, 0x4f, 0x32, 0xd7, 
-	0x22, 0x51, 0x74, 0xa5, 0x74, 0xe5, 0x33, 0x17, 
-	0x01, 0x09, 0x4b, 0x9b, 0x85, 0x6b, 0xa6, 0xb7, 
-	0x9e, 0x33, 0x96, 0x33, 0x9e, 0x73, 0xb7, 0x3b, 
-	0x7c, 0xe9, 0x53, 0xdb, 0x95, 0xef, 0x95, 0xef, 
-	0xa6, 0x6f, 0x9e, 0x6f, 0x85, 0x27, 0x01, 0x09, 
-	0x32, 0xd3, 0x4b, 0x9b, 0x3b, 0x17, 0x64, 0x61, 
-	0x8d, 0x69, 0x95, 0xab, 0x74, 0xa3, 0x3b, 0x17, 
-	0x9e, 0x75, 0xae, 0xf7, 0x7c, 0xe7, 0x2a, 0x51, 
-	0x53, 0x99, 0x85, 0x27, 0x8d, 0x69, 0x64, 0x5f, 
-	0x3b, 0x17, 0x95, 0xef, 0x96, 0x33, 0x95, 0xaf, 
-	0x95, 0xef, 0x95, 0xf1, 0x95, 0xef, 0x95, 0xef, 
-	0xb7, 0x3b, 0x3b, 0x5d, 0x53, 0xdb, 0x8d, 0xad, 
-	0x9e, 0x2f, 0x95, 0xeb, 0x33, 0x17, 0x54, 0x21, 
-	0x7d, 0x29, 0x7d, 0x29, 0x64, 0x61, 0x53, 0xdd, 
-	0x6c, 0xa5, 0x74, 0xa5, 0x32, 0x91, 0x33, 0x17, 
-	0xa6, 0xb7, 0xa6, 0xb7, 0xc7, 0xbd, 0x85, 0x6b, 
-	0x95, 0xa9, 0xa6, 0x75, 0x85, 0x6b, 0x6c, 0xa3, 
-	0x96, 0x2f, 0x96, 0x73, 0x8d, 0xaf, 0x8d, 0xaf, 
-	0x95, 0xef, 0x95, 0xef, 0x95, 0xef, 0x8d, 0xaf, 
-	0x95, 0xef, 0x9e, 0xb7, 0x1a, 0x11, 0x74, 0xa5, 
-	0x9e, 0x31, 0x7c, 0xa5, 0x95, 0xef, 0xc7, 0xbd, 
-	0xb7, 0x3b, 0xb7, 0x3b, 0xa6, 0xb7, 0x85, 0x29, 
-	0x64, 0xa3, 0x7c, 0xe7, 0x4b, 0x99, 0x11, 0xcf, 
-	0x96, 0x2d, 0x95, 0xad, 0xae, 0xfb, 0x96, 0x33, 
-	0x9e, 0x2d, 0xa6, 0xb7, 0x9e, 0x33, 0x85, 0x27, 
-	0x96, 0x31, 0x96, 0x33, 0x95, 0xf1, 0x8d, 0xaf, 
-	0x8d, 0xaf, 0x8d, 0xaf, 0x8d, 0xad, 0x8d, 0xad, 
-	0x8d, 0x6d, 0xae, 0xb7, 0x6c, 0xe9, 0x09, 0xcd, 
-	0x95, 0xab, 0x6c, 0xa1, 0x9e, 0x31, 0x96, 0x33, 
-	0x9e, 0x75, 0x9e, 0x75, 0xa6, 0x77, 0xb7, 0x3d, 
-	0x96, 0x31, 0x74, 0xa5, 0x3b, 0x17, 0x01, 0x09, 
-	0x7c, 0xe5, 0x95, 0xed, 0x8d, 0xaf, 0x96, 0x33, 
-	
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_0[40] = {
-	{{ {-191, 40, 165}, 0, {-16, 1008}, {118, 0, 48, 255} }},
-	{{ {-191, 27, 165}, 0, {-16, 18}, {109, 48, 45, 255} }},
-	{{ {-191, 27, 85}, 0, {6084, 18}, {127, 0, 0, 255} }},
-	{{ {-191, 40, 85}, 0, {6084, 1008}, {127, 0, 0, 255} }},
-	{{ {58, 27, 281}, 0, {-10450, 18}, {183, 0, 152, 255} }},
-	{{ {7, 27, 308}, 0, {974, 18}, {147, 0, 190, 255} }},
-	{{ {7, 33, 308}, 0, {974, 1008}, {147, 0, 190, 255} }},
-	{{ {58, 33, 281}, 0, {-10450, 1008}, {183, 0, 152, 255} }},
-	{{ {84, 27, 257}, 0, {-6434, 18}, {140, 0, 205, 255} }},
-	{{ {58, 27, 281}, 0, {792, 18}, {183, 0, 152, 255} }},
-	{{ {58, 33, 281}, 0, {792, 1008}, {183, 0, 152, 255} }},
-	{{ {84, 33, 257}, 0, {-6434, 1008}, {140, 0, 205, 255} }},
-	{{ {84, 33, 237}, 0, {-16, 1008}, {129, 1, 0, 255} }},
-	{{ {84, 27, 237}, 0, {-16, 18}, {129, 0, 0, 255} }},
-	{{ {84, 33, 257}, 0, {3784, 1008}, {140, 0, 205, 255} }},
-	{{ {84, 27, 257}, 0, {3784, 18}, {140, 0, 205, 255} }},
-	{{ {126, 84, -33}, 0, {974, 1008}, {190, 0, 147, 255} }},
-	{{ {290, 94, -132}, 0, {-23552, 1008}, {164, 0, 168, 255} }},
-	{{ {126, 77, -33}, 0, {974, 18}, {190, 0, 147, 255} }},
-	{{ {290, 87, -132}, 0, {-23552, 18}, {165, 0, 167, 255} }},
-	{{ {-403, 40, 218}, 0, {-11288, 1008}, {105, 53, 47, 255} }},
-	{{ {-403, 27, 218}, 0, {-11290, 18}, {52, 52, 104, 255} }},
-	{{ {-244, 40, 217}, 0, {974, 1008}, {49, 0, 117, 255} }},
-	{{ {-244, 27, 217}, 0, {972, 18}, {45, 48, 109, 255} }},
-	{{ {-191, 27, 165}, 0, {6084, 18}, {109, 48, 45, 255} }},
-	{{ {-191, 40, 165}, 0, {6084, 1008}, {118, 0, 48, 255} }},
-	{{ {-244, 27, 217}, 0, {302, 12}, {45, 48, 109, 255} }},
-	{{ {-244, 40, 217}, 0, {302, 1032}, {49, 0, 117, 255} }},
-	{{ {384, 94, -303}, 0, {-18580, 1008}, {144, 0, 195, 255} }},
-	{{ {290, 87, -132}, 0, {11874, 18}, {165, 0, 167, 255} }},
-	{{ {290, 94, -132}, 0, {11896, 1008}, {164, 0, 168, 255} }},
-	{{ {384, 87, -303}, 0, {-18604, 18}, {144, 0, 195, 255} }},
-	{{ {34, 27, 203}, 0, {19464, 18}, {188, 0, 107, 255} }},
-	{{ {34, 34, 203}, 0, {19464, 1008}, {188, 0, 107, 255} }},
-	{{ {-111, 33, 111}, 0, {-8222, 1008}, {188, 0, 107, 255} }},
-	{{ {-111, 27, 111}, 0, {-8222, 18}, {188, 0, 107, 255} }},
-	{{ {7, 33, 376}, 0, {974, 1008}, {129, 0, 0, 255} }},
-	{{ {7, 33, 308}, 0, {-12208, 1008}, {147, 0, 190, 255} }},
-	{{ {7, 28, 376}, 0, {974, 18}, {146, 64, 248, 255} }},
-	{{ {7, 27, 308}, 0, {-12208, 18}, {147, 0, 190, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_0[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 13, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_0 + 32, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_1[8] = {
-	{{ {-150, 74, -243}, 0, {156, 1008}, {142, 0, 57, 255} }},
-	{{ {-150, 42, -243}, 0, {156, 58}, {142, 0, 57, 255} }},
-	{{ {-84, 74, -113}, 0, {22640, 1008}, {142, 0, 57, 255} }},
-	{{ {-84, 42, -113}, 0, {22640, 58}, {142, 0, 57, 255} }},
-	{{ {-195, 42, -331}, 0, {-11288, 58}, {142, 0, 57, 255} }},
-	{{ {-159, 42, -261}, 0, {974, 58}, {142, 0, 57, 255} }},
-	{{ {-195, 74, -331}, 0, {-11288, 1008}, {142, 0, 57, 255} }},
-	{{ {-159, 74, -261}, 0, {974, 1008}, {142, 0, 57, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_1[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_1 + 0, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_2[54] = {
-	{{ {60, 203, -276}, 0, {224, 964}, {183, 165, 206, 255} }},
-	{{ {65, 198, -278}, 0, {-16, 692}, {137, 219, 233, 255} }},
-	{{ {65, 185, -278}, 0, {-16, 18}, {155, 73, 229, 255} }},
-	{{ {51, 203, -271}, 0, {770, 964}, {249, 165, 168, 255} }},
-	{{ {47, 198, -268}, 0, {1042, 692}, {39, 219, 141, 255} }},
-	{{ {47, 185, -268}, 0, {1042, 18}, {26, 73, 155, 255} }},
-	{{ {65, 198, -278}, 0, {156, -50}, {137, 219, 233, 255} }},
-	{{ {60, 203, -276}, 0, {428, -48}, {183, 165, 206, 255} }},
-	{{ {54, 198, -297}, 0, {156, 1038}, {144, 227, 203, 255} }},
-	{{ {50, 203, -294}, 0, {428, 1008}, {180, 186, 182, 255} }},
-	{{ {51, 203, -271}, 0, {974, -48}, {249, 165, 168, 255} }},
-	{{ {41, 203, -289}, 0, {974, 1008}, {230, 187, 152, 255} }},
-	{{ {47, 198, -268}, 0, {1246, -50}, {39, 219, 141, 255} }},
-	{{ {36, 198, -286}, 0, {1246, 1038}, {9, 227, 133, 255} }},
-	{{ {47, 198, -268}, 0, {1588, 1030}, {39, 219, 141, 255} }},
-	{{ {47, 185, -268}, 0, {1588, 18}, {26, 73, 155, 255} }},
-	{{ {36, 198, -286}, 0, {-16, 1008}, {9, 227, 133, 255} }},
-	{{ {36, 185, -286}, 0, {-16, 18}, {232, 38, 137, 255} }},
-	{{ {65, 185, -278}, 0, {1588, 18}, {155, 73, 229, 255} }},
-	{{ {65, 198, -278}, 0, {1588, 1030}, {137, 219, 233, 255} }},
-	{{ {54, 185, -297}, 0, {-16, 18}, {165, 38, 176, 255} }},
-	{{ {54, 198, -297}, 0, {-16, 1008}, {144, 227, 203, 255} }},
-	{{ {65, 185, -278}, 0, {-16, 1008}, {155, 73, 229, 255} }},
-	{{ {54, 185, -297}, 0, {-16, -48}, {165, 38, 176, 255} }},
-	{{ {36, 185, -286}, 0, {1042, -48}, {232, 38, 137, 255} }},
-	{{ {47, 185, -268}, 0, {1042, 1008}, {26, 73, 155, 255} }},
-	{{ {-10, 125, -262}, 0, {3732, -166}, {27, 73, 155, 255} }},
-	{{ {8, 125, -272}, 0, {2642, -162}, {156, 73, 229, 255} }},
-	{{ {-21, 125, -280}, 0, {3732, -1256}, {232, 36, 137, 255} }},
-	{{ {-2, 125, -291}, 0, {2642, -1254}, {165, 37, 175, 255} }},
-	{{ {8, 138, -273}, 0, {2838, 1130}, {137, 218, 233, 255} }},
-	{{ {3, 144, -270}, 0, {3120, 1134}, {184, 164, 205, 255} }},
-	{{ {-2, 138, -291}, 0, {2846, 2222}, {144, 227, 203, 255} }},
-	{{ {-7, 144, -288}, 0, {3120, 2224}, {180, 186, 182, 255} }},
-	{{ {-6, 144, -265}, 0, {3664, 1136}, {249, 165, 168, 255} }},
-	{{ {-16, 144, -283}, 0, {3664, 2226}, {230, 186, 153, 255} }},
-	{{ {-10, 138, -262}, 0, {3938, 1134}, {39, 218, 141, 255} }},
-	{{ {-21, 138, -280}, 0, {3938, 2226}, {9, 227, 133, 255} }},
-	{{ {-10, 125, -262}, 0, {-222, -4578}, {27, 73, 155, 255} }},
-	{{ {-21, 125, -280}, 0, {-1858, -4578}, {232, 36, 137, 255} }},
-	{{ {-21, 138, -280}, 0, {-1858, -3556}, {9, 227, 133, 255} }},
-	{{ {-10, 138, -262}, 0, {-222, -3556}, {39, 218, 141, 255} }},
-	{{ {3, 144, -270}, 0, {2916, -2092}, {184, 164, 205, 255} }},
-	{{ {8, 138, -273}, 0, {2634, -2364}, {137, 218, 233, 255} }},
-	{{ {8, 125, -272}, 0, {2642, -3046}, {156, 73, 229, 255} }},
-	{{ {-6, 144, -265}, 0, {3460, -2092}, {249, 165, 168, 255} }},
-	{{ {-10, 138, -262}, 0, {3732, -2364}, {39, 218, 141, 255} }},
-	{{ {-6, 144, -265}, 0, {3460, -2092}, {249, 165, 168, 255} }},
-	{{ {8, 125, -272}, 0, {2642, -3046}, {156, 73, 229, 255} }},
-	{{ {-10, 125, -262}, 0, {3732, -3046}, {27, 73, 155, 255} }},
-	{{ {8, 125, -272}, 0, {-216, -4578}, {156, 73, 229, 255} }},
-	{{ {-2, 138, -291}, 0, {-1852, -3556}, {144, 227, 203, 255} }},
-	{{ {-2, 125, -291}, 0, {-1852, -4578}, {165, 37, 175, 255} }},
-	{{ {8, 138, -273}, 0, {-216, -3556}, {137, 218, 233, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_2[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_2 + 0, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 4, 2, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_2 + 14, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_2 + 30, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_2 + 46, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 5, 4, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_3[4] = {
-	{{ {59, 22, 241}, 0, {-16, 2032}, {129, 0, 0, 255} }},
-	{{ {59, 2, 241}, 0, {-16, 20}, {129, 0, 0, 255} }},
-	{{ {59, 2, 246}, 0, {974, 20}, {129, 0, 0, 255} }},
-	{{ {59, 22, 246}, 0, {974, 2032}, {129, 0, 0, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_3[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_3 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_4[12] = {
-	{{ {283, 92, -327}, 0, {974, 18}, {242, 123, 27, 255} }},
-	{{ {125, 114, -371}, 0, {492, 6396}, {12, 126, 241, 255} }},
-	{{ {245, 92, -301}, 0, {-442, 1046}, {21, 125, 4, 255} }},
-	{{ {125, 114, -384}, 0, {974, 6568}, {13, 123, 30, 255} }},
-	{{ {283, 85, -137}, 0, {974, 18}, {227, 123, 247, 255} }},
-	{{ {245, 92, -301}, 0, {-484, 6380}, {21, 125, 4, 255} }},
-	{{ {245, 84, -163}, 0, {-482, 1008}, {7, 126, 15, 255} }},
-	{{ {283, 92, -327}, 0, {974, 7370}, {242, 123, 27, 255} }},
-	{{ {245, 84, -163}, 0, {-1766, 5514}, {7, 126, 15, 255} }},
-	{{ {124, 73, -41}, 0, {2264, 18}, {239, 118, 212, 255} }},
-	{{ {283, 85, -137}, 0, {-528, 6770}, {227, 123, 247, 255} }},
-	{{ {115, 69, -87}, 0, {1108, 18}, {226, 123, 6, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_4[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_4 + 0, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 5, 4, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 9, 8, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_5[8] = {
-	{{ {59, 27, 241}, 0, {-16, 1008}, {129, 0, 0, 255} }},
-	{{ {59, 22, 241}, 0, {-16, 18}, {129, 0, 0, 255} }},
-	{{ {59, 22, 246}, 0, {974, 18}, {129, 0, 0, 255} }},
-	{{ {59, 27, 246}, 0, {974, 1008}, {129, 0, 0, 255} }},
-	{{ {59, 2, 246}, 0, {974, -8156}, {129, 0, 0, 255} }},
-	{{ {59, 2, 241}, 0, {-16, -8156}, {129, 0, 0, 255} }},
-	{{ {59, -3, 241}, 0, {-16, -9178}, {129, 0, 0, 255} }},
-	{{ {59, -3, 246}, 0, {974, -9178}, {129, 0, 0, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_5[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_5 + 0, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_6[139] = {
-	{{ {-12, 40, -150}, 0, {-64, 702}, {181, 95, 37, 255} }},
-	{{ {-85, 40, -113}, 0, {974, -492}, {192, 17, 109, 255} }},
-	{{ {74, 58, -73}, 0, {974, 2708}, {218, 121, 2, 255} }},
-	{{ {95, 58, -104}, 0, {16, 2896}, {198, 105, 43, 255} }},
-	{{ {-12, 40, -150}, 0, {-16, 18}, {181, 95, 37, 255} }},
-	{{ {74, 58, -73}, 0, {1012, 2636}, {218, 121, 2, 255} }},
-	{{ {124, 73, -41}, 0, {720, -192}, {239, 118, 212, 255} }},
-	{{ {125, 77, -34}, 0, {974, -272}, {206, 116, 10, 255} }},
-	{{ {283, 85, -137}, 0, {724, 7030}, {227, 123, 247, 255} }},
-	{{ {289, 87, -134}, 0, {974, 7172}, {241, 126, 252, 255} }},
-	{{ {125, 114, -371}, 0, {172, -110}, {12, 126, 241, 255} }},
-	{{ {-51, 121, -271}, 0, {218, 7748}, {250, 126, 246, 255} }},
-	{{ {125, 116, -364}, 0, {-16, 18}, {10, 82, 159, 255} }},
-	{{ {-43, 124, -268}, 0, {-16, 7510}, {181, 99, 227, 255} }},
-	{{ {125, 114, -384}, 0, {754, 138}, {13, 123, 30, 255} }},
-	{{ {-51, 121, -271}, 0, {188, 8240}, {250, 126, 246, 255} }},
-	{{ {125, 114, -371}, 0, {306, 382}, {12, 126, 241, 255} }},
-	{{ {-69, 121, -276}, 0, {714, 8736}, {26, 124, 0, 255} }},
-	{{ {125, 116, -390}, 0, {974, 18}, {248, 126, 11, 255} }},
-	{{ {-78, 124, -279}, 0, {974, 8986}, {164, 82, 226, 255} }},
-	{{ {125, 77, -34}, 0, {974, 1550}, {206, 116, 10, 255} }},
-	{{ {124, 73, -41}, 0, {876, 1422}, {239, 118, 212, 255} }},
-	{{ {74, 58, -73}, 0, {974, 32}, {218, 121, 2, 255} }},
-	{{ {115, 69, -87}, 0, {162, 634}, {226, 123, 6, 255} }},
-	{{ {95, 58, -104}, 0, {-30, -22}, {198, 105, 43, 255} }},
-	{{ {-6, 129, -198}, 0, {-62, 3092}, {160, 43, 71, 255} }},
-	{{ {-43, 124, -268}, 0, {-16, 18}, {181, 99, 227, 255} }},
-	{{ {-51, 121, -271}, 0, {200, -242}, {250, 126, 246, 255} }},
-	{{ {-12, 126, -195}, 0, {188, 3084}, {28, 85, 90, 255} }},
-	{{ {-69, 121, -276}, 0, {706, -758}, {26, 124, 0, 255} }},
-	{{ {-69, 121, -276}, 0, {706, -758}, {26, 124, 0, 255} }},
-	{{ {-25, 127, -188}, 0, {734, 3078}, {58, 85, 75, 255} }},
-	{{ {-12, 126, -195}, 0, {188, 3084}, {28, 85, 90, 255} }},
-	{{ {-78, 124, -279}, 0, {966, -1010}, {164, 82, 226, 255} }},
-	{{ {-30, 129, -185}, 0, {1006, 3082}, {236, 90, 88, 255} }},
-	{{ {-24, 130, -173}, 0, {1000, 2270}, {169, 85, 218, 255} }},
-	{{ {-13, 131, -150}, 0, {1002, 3292}, {179, 99, 21, 255} }},
-	{{ {-6, 129, -153}, 0, {726, 3266}, {13, 123, 226, 255} }},
-	{{ {-18, 127, -176}, 0, {726, 2264}, {226, 80, 162, 255} }},
-	{{ {6, 129, -161}, 0, {178, 3220}, {240, 126, 5, 255} }},
-	{{ {-5, 127, -183}, 0, {188, 2266}, {199, 79, 175, 255} }},
-	{{ {0, 130, -186}, 0, {-76, 2270}, {141, 44, 33, 255} }},
-	{{ {12, 131, -165}, 0, {-90, 3204}, {190, 81, 72, 255} }},
-	{{ {200, 203, -189}, 0, {212, -130}, {19, 124, 22, 255} }},
-	{{ {194, 208, -272}, 0, {-16, 3626}, {9, 127, 255, 255} }},
-	{{ {194, 209, -193}, 0, {-16, 18}, {62, 104, 39, 255} }},
-	{{ {200, 203, -189}, 0, {212, -130}, {19, 124, 22, 255} }},
-	{{ {211, 203, -183}, 0, {732, -430}, {226, 123, 246, 255} }},
-	{{ {194, 208, -272}, 0, {-16, 3626}, {9, 127, 255, 255} }},
-	{{ {217, 206, -285}, 0, {994, 4226}, {90, 74, 205, 255} }},
-	{{ {217, 206, -179}, 0, {994, -582}, {75, 92, 45, 255} }},
-	{{ {125, 139, -126}, 0, {-16, 256}, {229, 50, 114, 255} }},
-	{{ {125, 136, -120}, 0, {216, 104}, {170, 93, 13, 255} }},
-	{{ {217, 146, -179}, 0, {-16, 5128}, {79, 84, 54, 255} }},
-	{{ {222, 144, -176}, 0, {216, 5280}, {9, 126, 16, 255} }},
-	{{ {125, 136, -107}, 0, {742, -198}, {160, 81, 237, 255} }},
-	{{ {234, 144, -169}, 0, {742, 5584}, {225, 123, 247, 255} }},
-	{{ {125, 139, -100}, 0, {1004, -350}, {163, 85, 15, 255} }},
-	{{ {240, 147, -166}, 0, {1006, 5736}, {65, 105, 224, 255} }},
-	{{ {125, 176, -364}, 0, {974, 6140}, {205, 115, 239, 255} }},
-	{{ {125, 173, -358}, 0, {710, 5988}, {15, 122, 31, 255} }},
-	{{ {240, 154, -298}, 0, {974, 18}, {49, 102, 58, 255} }},
-	{{ {240, 154, -298}, 0, {974, 18}, {49, 102, 58, 255} }},
-	{{ {125, 173, -358}, 0, {710, 5988}, {15, 122, 31, 255} }},
-	{{ {234, 151, -295}, 0, {712, 170}, {237, 122, 28, 255} }},
-	{{ {125, 173, -344}, 0, {182, 5686}, {18, 125, 240, 255} }},
-	{{ {222, 151, -288}, 0, {188, 472}, {23, 125, 8, 255} }},
-	{{ {125, 176, -338}, 0, {-80, 5536}, {13, 81, 159, 255} }},
-	{{ {217, 154, -285}, 0, {-72, 622}, {89, 85, 224, 255} }},
-	{{ {217, 146, -179}, 0, {-76, 626}, {79, 84, 54, 255} }},
-	{{ {222, 144, -176}, 0, {184, 474}, {9, 126, 16, 255} }},
-	{{ {217, 154, -285}, 0, {-78, 5498}, {89, 85, 224, 255} }},
-	{{ {222, 151, -288}, 0, {184, 5650}, {23, 125, 8, 255} }},
-	{{ {234, 144, -169}, 0, {710, 170}, {225, 123, 247, 255} }},
-	{{ {234, 151, -295}, 0, {710, 5954}, {237, 122, 28, 255} }},
-	{{ {240, 147, -166}, 0, {974, 18}, {65, 105, 224, 255} }},
-	{{ {240, 154, -298}, 0, {974, 6106}, {49, 102, 58, 255} }},
-	{{ {11, 184, -298}, 0, {1006, 5498}, {232, 97, 178, 255} }},
-	{{ {17, 181, -295}, 0, {742, 5346}, {34, 122, 9, 255} }},
-	{{ {125, 176, -364}, 0, {1004, -588}, {205, 115, 239, 255} }},
-	{{ {125, 173, -358}, 0, {742, -436}, {15, 122, 31, 255} }},
-	{{ {28, 181, -288}, 0, {216, 5042}, {247, 126, 240, 255} }},
-	{{ {125, 173, -344}, 0, {216, -132}, {18, 125, 240, 255} }},
-	{{ {34, 183, -285}, 0, {-16, 4890}, {177, 84, 202, 255} }},
-	{{ {125, 176, -338}, 0, {-16, 18}, {13, 81, 159, 255} }},
-	{{ {34, 183, -285}, 0, {-16, 18}, {177, 84, 202, 255} }},
-	{{ {28, 181, -288}, 0, {216, -132}, {247, 126, 240, 255} }},
-	{{ {34, 191, -179}, 0, {-16, 4890}, {179, 88, 50, 255} }},
-	{{ {28, 188, -176}, 0, {216, 5042}, {239, 126, 255, 255} }},
-	{{ {17, 181, -295}, 0, {742, -436}, {34, 122, 9, 255} }},
-	{{ {17, 188, -169}, 0, {742, 5346}, {22, 123, 232, 255} }},
-	{{ {11, 184, -298}, 0, {1004, -588}, {232, 97, 178, 255} }},
-	{{ {12, 191, -165}, 0, {1006, 5498}, {200, 92, 68, 255} }},
-	{{ {125, 198, -153}, 0, {-174, 5200}, {2, 82, 97, 255} }},
-	{{ {34, 191, -179}, 0, {54, 814}, {179, 88, 50, 255} }},
-	{{ {125, 196, -146}, 0, {112, 5300}, {247, 125, 18, 255} }},
-	{{ {28, 188, -176}, 0, {284, 614}, {239, 126, 255, 255} }},
-	{{ {17, 188, -169}, 0, {744, 216}, {22, 123, 232, 255} }},
-	{{ {125, 196, -133}, 0, {686, 5498}, {243, 123, 226, 255} }},
-	{{ {12, 191, -165}, 0, {974, 18}, {200, 92, 68, 255} }},
-	{{ {125, 198, -126}, 0, {974, 5598}, {4, 93, 86, 255} }},
-	{{ {290, 94, -331}, 0, {974, -1002}, {255, 127, 11, 255} }},
-	{{ {125, 114, -384}, 0, {710, 6176}, {13, 123, 30, 255} }},
-	{{ {283, 92, -327}, 0, {712, -850}, {242, 123, 27, 255} }},
-	{{ {125, 116, -390}, 0, {974, 6328}, {248, 126, 11, 255} }},
-	{{ {125, 198, -153}, 0, {-16, 448}, {2, 82, 97, 255} }},
-	{{ {125, 196, -146}, 0, {216, 298}, {247, 125, 18, 255} }},
-	{{ {194, 209, -193}, 0, {-16, 4106}, {54, 53, 102, 255} }},
-	{{ {200, 203, -189}, 0, {216, 4258}, {19, 124, 22, 255} }},
-	{{ {125, 196, -146}, 0, {216, 298}, {247, 125, 18, 255} }},
-	{{ {125, 196, -133}, 0, {742, -4}, {243, 123, 226, 255} }},
-	{{ {200, 203, -189}, 0, {216, 4258}, {19, 124, 22, 255} }},
-	{{ {211, 203, -183}, 0, {742, 4562}, {226, 123, 246, 255} }},
-	{{ {125, 198, -126}, 0, {1006, -156}, {4, 93, 86, 255} }},
-	{{ {217, 206, -179}, 0, {1006, 4714}, {75, 92, 45, 255} }},
-	{{ {245, 92, -301}, 0, {206, 6038}, {21, 125, 4, 255} }},
-	{{ {240, 94, -298}, 0, {-16, 5892}, {87, 86, 221, 255} }},
-	{{ {245, 84, -163}, 0, {206, -126}, {7, 126, 15, 255} }},
-	{{ {240, 87, -166}, 0, {-16, 18}, {78, 83, 56, 255} }},
-	{{ {125, 114, -371}, 0, {182, 5874}, {12, 126, 241, 255} }},
-	{{ {125, 116, -364}, 0, {-80, 5722}, {10, 82, 159, 255} }},
-	{{ {245, 92, -301}, 0, {188, -548}, {21, 125, 4, 255} }},
-	{{ {240, 94, -298}, 0, {-74, -396}, {87, 86, 221, 255} }},
-	{{ {283, 92, -327}, 0, {714, 6332}, {242, 123, 27, 255} }},
-	{{ {289, 87, -134}, 0, {970, -568}, {241, 126, 252, 255} }},
-	{{ {290, 94, -331}, 0, {970, 6478}, {255, 127, 11, 255} }},
-	{{ {283, 85, -137}, 0, {714, -420}, {227, 123, 247, 255} }},
-	{{ {240, 87, -166}, 0, {974, 18}, {78, 83, 56, 255} }},
-	{{ {114, 70, -93}, 0, {976, 5674}, {220, 109, 55, 255} }},
-	{{ {245, 84, -163}, 0, {812, -96}, {7, 126, 15, 255} }},
-	{{ {115, 69, -87}, 0, {812, 5768}, {226, 123, 6, 255} }},
-	{{ {12, 131, -165}, 0, {2, 190}, {190, 81, 72, 255} }},
-	{{ {6, 129, -161}, 0, {240, -10}, {240, 126, 5, 255} }},
-	{{ {99, 137, -135}, 0, {-74, 4242}, {240, 39, 120, 255} }},
-	{{ {99, 135, -129}, 0, {182, 4330}, {91, 88, 12, 255} }},
-	{{ {-6, 129, -153}, 0, {726, -400}, {13, 123, 226, 255} }},
-	{{ {99, 135, -116}, 0, {706, 4518}, {97, 79, 236, 255} }},
-	{{ {-13, 131, -150}, 0, {974, -590}, {179, 99, 21, 255} }},
-	{{ {99, 138, -110}, 0, {974, 4616}, {76, 91, 47, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_6[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_6 + 0, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_6 + 14, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_6 + 30, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 5, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 11, 9, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_6 + 46, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_6 + 62, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_6 + 77, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(12, 14, 13, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_6 + 93, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(2, 4, 5, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 9, 8, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_6 + 109, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_6 + 123, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_7[43] = {
-	{{ {240, 147, -166}, 0, {4662, 1466}, {65, 105, 224, 255} }},
-	{{ {125, 139, -100}, 0, {974, -662}, {163, 85, 15, 255} }},
-	{{ {181, 146, -126}, 0, {2762, 188}, {15, 126, 7, 255} }},
-	{{ {11, 184, -298}, 0, {1368, 626}, {232, 97, 178, 255} }},
-	{{ {-43, 184, -268}, 0, {-348, -356}, {155, 71, 226, 255} }},
-	{{ {12, 191, -165}, 0, {1396, -3684}, {200, 92, 68, 255} }},
-	{{ {111, 70, -131}, 0, {524, 344}, {182, 82, 64, 255} }},
-	{{ {99, 70, -135}, 0, {122, 484}, {61, 72, 86, 255} }},
-	{{ {114, 70, -93}, 0, {606, -874}, {220, 109, 55, 255} }},
-	{{ {99, 70, -110}, 0, {122, -334}, {242, 93, 86, 255} }},
-	{{ {115, 69, -87}, 0, {644, -1082}, {226, 123, 6, 255} }},
-	{{ {95, 58, -104}, 0, {2, -510}, {198, 105, 43, 255} }},
-	{{ {-12, 40, -150}, 0, {-3468, 946}, {181, 95, 37, 255} }},
-	{{ {181, 146, -126}, 0, {6850, -4920}, {15, 126, 7, 255} }},
-	{{ {125, 139, -100}, 0, {5062, -5772}, {163, 85, 15, 255} }},
-	{{ {181, 146, -116}, 0, {6850, -5260}, {33, 119, 227, 255} }},
-	{{ {181, 146, -116}, 0, {6850, -5260}, {33, 119, 227, 255} }},
-	{{ {125, 139, -100}, 0, {5062, -5772}, {163, 85, 15, 255} }},
-	{{ {139, 139, -77}, 0, {5488, -6510}, {227, 69, 103, 255} }},
-	{{ {191, 146, -116}, 0, {7192, -5260}, {224, 122, 244, 255} }},
-	{{ {253, 147, -143}, 0, {9172, -4382}, {100, 74, 27, 255} }},
-	{{ {240, 147, -166}, 0, {8750, -3642}, {65, 105, 224, 255} }},
-	{{ {191, 146, -126}, 0, {7192, -4920}, {217, 115, 39, 255} }},
-	{{ {181, 146, -126}, 0, {6850, -4920}, {15, 126, 7, 255} }},
-	{{ {194, 208, -272}, 0, {7274, -236}, {9, 127, 255, 255} }},
-	{{ {217, 206, -285}, 0, {8012, 188}, {90, 74, 205, 255} }},
-	{{ {125, 208, -338}, 0, {5062, 1892}, {0, 127, 255, 255} }},
-	{{ {194, 209, -193}, 0, {7274, -2790}, {62, 104, 39, 255} }},
-	{{ {125, 209, -153}, 0, {5062, -4068}, {12, 80, 98, 255} }},
-	{{ {34, 208, -179}, 0, {2112, -3216}, {174, 76, 61, 255} }},
-	{{ {34, 208, -285}, 0, {2112, 188}, {169, 77, 206, 255} }},
-	{{ {125, 176, -391}, 0, {5062, 3594}, {206, 75, 166, 255} }},
-	{{ {125, 176, -364}, 0, {5062, 2744}, {205, 115, 239, 255} }},
-	{{ {262, 154, -311}, 0, {9488, 1008}, {109, 65, 1, 255} }},
-	{{ {240, 154, -298}, 0, {8750, 614}, {49, 102, 58, 255} }},
-	{{ {35, 138, -124}, 0, {2162, -4984}, {1, 125, 233, 255} }},
-	{{ {-13, 131, -150}, 0, {618, -4162}, {179, 99, 21, 255} }},
-	{{ {-21, 132, -125}, 0, {332, -4964}, {152, 18, 71, 255} }},
-	{{ {99, 138, -110}, 0, {4210, -5444}, {76, 91, 47, 255} }},
-	{{ {45, 138, -121}, 0, {2482, -5098}, {0, 127, 0, 255} }},
-	{{ {90, 138, -85}, 0, {3924, -6246}, {34, 26, 120, 255} }},
-	{{ {42, 138, -111}, 0, {2368, -5420}, {0, 127, 0, 255} }},
-	{{ {32, 138, -114}, 0, {2048, -5304}, {242, 125, 19, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_7[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_7 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(11, 9, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_7 + 16, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(14, 13, 10, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_7 + 31, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 4, 7, 0),
-	gsSP1Triangle(7, 4, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(6, 9, 11, 0),
-	gsSP1Triangle(11, 4, 6, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_8[28] = {
-	{{ {7, 25, 283}, 0, {-1408, 972}, {198, 221, 148, 255} }},
-	{{ {7, -12, 283}, 0, {-1408, 18}, {198, 107, 220, 255} }},
-	{{ {7, 25, 310}, 0, {-728, 972}, {145, 217, 49, 255} }},
-	{{ {7, -12, 310}, 0, {-728, 18}, {166, 90, 0, 255} }},
-	{{ {-178, -13, 19}, 0, {434, 18}, {63, 90, 63, 255} }},
-	{{ {-178, 27, 19}, 0, {434, 686}, {0, 73, 104, 255} }},
-	{{ {-191, -13, 33}, 0, {-16, 18}, {91, 80, 37, 255} }},
-	{{ {-191, 27, 33}, 0, {-46, 672}, {70, 102, 28, 255} }},
-	{{ {-80, -2, 310}, 0, {-16, 830}, {91, 189, 57, 255} }},
-	{{ {-80, -12, 310}, 0, {-46, 14}, {90, 90, 0, 255} }},
-	{{ {-80, -12, 284}, 0, {1996, 18}, {90, 90, 0, 255} }},
-	{{ {-80, -2, 283}, 0, {1996, 836}, {91, 188, 199, 255} }},
-	{{ {-112, -13, 85}, 0, {-16, 86}, {199, 93, 191, 255} }},
-	{{ {-125, -13, 99}, 0, {434, 86}, {202, 115, 0, 255} }},
-	{{ {-125, 27, 99}, 0, {434, 1008}, {152, 73, 0, 255} }},
-	{{ {-112, 27, 85}, 0, {-16, 1008}, {198, 86, 183, 255} }},
-	{{ {-201, -13, -239}, 0, {-3292, 10390}, {17, 115, 205, 255} }},
-	{{ {-154, -13, -145}, 0, {-2378, 8560}, {98, 74, 32, 255} }},
-	{{ {-124, -13, -160}, 0, {-1808, 8846}, {223, 74, 98, 255} }},
-	{{ {-171, -13, -254}, 0, {-2720, 10674}, {205, 115, 239, 255} }},
-	{{ {7, -12, 283}, 0, {718, 274}, {198, 107, 220, 255} }},
-	{{ {-80, -12, 284}, 0, {-966, 272}, {90, 90, 0, 255} }},
-	{{ {-80, -12, 310}, 0, {-966, -236}, {90, 90, 0, 255} }},
-	{{ {7, -12, 310}, 0, {718, -236}, {166, 90, 0, 255} }},
-	{{ {-178, -13, 19}, 0, {-2856, 5384}, {63, 90, 63, 255} }},
-	{{ {-191, -13, 33}, 0, {-3112, 5128}, {91, 80, 37, 255} }},
-	{{ {-125, -13, 99}, 0, {-1834, 3850}, {202, 115, 0, 255} }},
-	{{ {-112, -13, 85}, 0, {-1580, 4106}, {199, 93, 191, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_8[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_8 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_8 + 16, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9[321] = {
-	{{ {-21, 132, -125}, 0, {1230, 1008}, {152, 18, 71, 255} }},
-	{{ {-13, 131, -150}, 0, {-16, 1008}, {179, 99, 21, 255} }},
-	{{ {-13, 118, -150}, 0, {-16, 402}, {174, 162, 21, 255} }},
-	{{ {90, 138, -85}, 0, {-558, 1008}, {34, 26, 120, 255} }},
-	{{ {99, 124, -110}, 0, {718, 402}, {56, 165, 69, 255} }},
-	{{ {99, 138, -110}, 0, {718, 1008}, {76, 91, 47, 255} }},
-	{{ {-196, 13, -331}, 0, {974, 358}, {204, 65, 96, 255} }},
-	{{ {-196, 39, -331}, 0, {974, 1008}, {165, 60, 65, 255} }},
-	{{ {-403, 39, -364}, 0, {-4436, 1008}, {18, 119, 41, 255} }},
-	{{ {-85, 40, -113}, 0, {-16, 1008}, {192, 17, 109, 255} }},
-	{{ {-85, -13, -112}, 0, {-16, 18}, {199, 102, 50, 255} }},
-	{{ {74, 58, -73}, 0, {3134, 1384}, {218, 121, 2, 255} }},
-	{{ {-178, 40, 19}, 0, {-1066, 1352}, {0, 75, 103, 255} }},
-	{{ {-178, -13, 19}, 0, {-1068, 18}, {63, 90, 63, 255} }},
-	{{ {-125, -13, -33}, 0, {1386, 18}, {69, 104, 23, 255} }},
-	{{ {-125, 37, -34}, 0, {1386, 1312}, {95, 81, 23, 255} }},
-	{{ {-178, 40, 19}, 0, {-1070, 1408}, {0, 75, 103, 255} }},
-	{{ {-125, -13, -33}, 0, {1386, 18}, {69, 104, 23, 255} }},
-	{{ {-80, -12, 336}, 0, {-2088, 10}, {12, 126, 14, 255} }},
-	{{ {-80, -12, 310}, 0, {-46, 14}, {90, 90, 0, 255} }},
-	{{ {-80, 1, 310}, 0, {-16, 1034}, {15, 110, 62, 255} }},
-	{{ {-80, 1, 283}, 0, {1998, 1008}, {16, 109, 193, 255} }},
-	{{ {-80, -12, 284}, 0, {1996, 18}, {90, 90, 0, 255} }},
-	{{ {-80, -12, 257}, 0, {4040, 24}, {11, 126, 241, 255} }},
-	{{ {-178, 40, 19}, 0, {974, 1008}, {0, 75, 103, 255} }},
-	{{ {-193, 27, 5}, 0, {-612, 18}, {220, 52, 110, 255} }},
-	{{ {-178, 27, 19}, 0, {974, 18}, {0, 73, 104, 255} }},
-	{{ {-200, 37, -2}, 0, {-1374, 784}, {219, 52, 110, 255} }},
-	{{ {-200, 40, -2}, 0, {-1374, 1008}, {0, 115, 54, 255} }},
-	{{ {-200, 27, -2}, 0, {-1372, 18}, {166, 0, 90, 255} }},
-	{{ {-200, 40, -2}, 0, {974, 1008}, {0, 115, 54, 255} }},
-	{{ {-214, 40, 12}, 0, {-558, 1008}, {42, 82, 88, 255} }},
-	{{ {-200, 37, -2}, 0, {974, 784}, {219, 52, 110, 255} }},
-	{{ {-214, 37, 12}, 0, {-558, 784}, {7, 36, 122, 255} }},
-	{{ {-403, -13, 218}, 0, {-3112, 18}, {64, 76, 79, 255} }},
-	{{ {-244, -13, 218}, 0, {974, 18}, {27, 103, 69, 255} }},
-	{{ {-403, 27, 218}, 0, {-3112, 1008}, {52, 52, 104, 255} }},
-	{{ {-244, 27, 217}, 0, {974, 1008}, {45, 48, 109, 255} }},
-	{{ {7, 28, 376}, 0, {974, 1008}, {146, 64, 248, 255} }},
-	{{ {7, -12, 376}, 0, {974, 18}, {178, 88, 209, 255} }},
-	{{ {7, 28, 402}, 0, {1656, 1008}, {212, 93, 182, 255} }},
-	{{ {7, 28, 310}, 0, {-728, 1008}, {207, 113, 31, 255} }},
-	{{ {7, 25, 310}, 0, {-728, 972}, {145, 217, 49, 255} }},
-	{{ {7, -12, 310}, 0, {-728, 18}, {166, 90, 0, 255} }},
-	{{ {-403, 27, 33}, 0, {974, 18}, {77, 74, 69, 255} }},
-	{{ {-403, 40, 33}, 0, {974, 1008}, {80, 68, 72, 255} }},
-	{{ {-403, 27, 218}, 0, {-13332, 18}, {52, 52, 104, 255} }},
-	{{ {-403, 40, 218}, 0, {-13332, 1008}, {105, 53, 47, 255} }},
-	{{ {-403, 40, 33}, 0, {-16, 1008}, {80, 68, 72, 255} }},
-	{{ {-214, 37, 12}, 0, {16304, 784}, {7, 36, 122, 255} }},
-	{{ {-214, 40, 12}, 0, {16304, 1008}, {42, 82, 88, 255} }},
-	{{ {-403, 27, 33}, 0, {-16, 18}, {77, 74, 69, 255} }},
-	{{ {-214, 27, 12}, 0, {16304, 18}, {223, 79, 94, 255} }},
-	{{ {125, 139, -100}, 0, {164, 1124}, {163, 85, 15, 255} }},
-	{{ {125, 136, -107}, 0, {-16, 1008}, {160, 81, 237, 255} }},
-	{{ {114, 70, -93}, 0, {378, -1120}, {220, 109, 55, 255} }},
-	{{ {125, 136, -120}, 0, {-472, 1008}, {170, 93, 13, 255} }},
-	{{ {111, 70, -131}, 0, {-842, -1134}, {182, 82, 64, 255} }},
-	{{ {125, 139, -126}, 0, {-684, 1124}, {229, 50, 114, 255} }},
-	{{ {125, 108, -100}, 0, {164, 148}, {35, 222, 117, 255} }},
-	{{ {139, 116, -77}, 0, {904, 456}, {233, 192, 107, 255} }},
-	{{ {125, 139, -100}, 0, {164, 1124}, {163, 85, 15, 255} }},
-	{{ {139, 139, -77}, 0, {902, 1196}, {227, 69, 103, 255} }},
-	{{ {253, 123, -143}, 0, {5082, 1080}, {108, 197, 32, 255} }},
-	{{ {139, 116, -77}, 0, {-32, 1080}, {233, 192, 107, 255} }},
-	{{ {240, 116, -166}, 0, {5070, 18}, {98, 188, 45, 255} }},
-	{{ {125, 108, -100}, 0, {-16, 18}, {35, 222, 117, 255} }},
-	{{ {125, 176, -364}, 0, {974, 1008}, {205, 115, 239, 255} }},
-	{{ {125, 176, -391}, 0, {52, 1008}, {206, 75, 166, 255} }},
-	{{ {125, 168, -364}, 0, {974, 464}, {196, 159, 199, 255} }},
-	{{ {125, 168, -391}, 0, {52, 752}, {200, 191, 162, 255} }},
-	{{ {240, 147, -166}, 0, {974, 1008}, {65, 105, 224, 255} }},
-	{{ {253, 147, -143}, 0, {-1068, 1008}, {100, 74, 27, 255} }},
-	{{ {240, 116, -166}, 0, {974, 274}, {98, 188, 45, 255} }},
-	{{ {253, 123, -143}, 0, {-16, 656}, {108, 197, 32, 255} }},
-	{{ {-30, 129, -185}, 0, {-16, 2466}, {236, 90, 88, 255} }},
-	{{ {-30, 40, -185}, 0, {-16, -1002}, {157, 56, 57, 255} }},
-	{{ {-25, 127, -188}, 0, {220, 2360}, {58, 85, 75, 255} }},
-	{{ {-12, 126, -195}, 0, {756, 2354}, {28, 85, 90, 255} }},
-	{{ {-6, 129, -198}, 0, {1022, 2452}, {160, 43, 71, 255} }},
-	{{ {125, 168, -391}, 0, {-288, 7090}, {200, 191, 162, 255} }},
-	{{ {240, 146, -298}, 0, {974, 2062}, {73, 154, 236, 255} }},
-	{{ {125, 168, -364}, 0, {622, 7208}, {196, 159, 199, 255} }},
-	{{ {262, 146, -311}, 0, {120, 2062}, {103, 181, 255, 255} }},
-	{{ {262, 154, -311}, 0, {974, 306}, {109, 65, 1, 255} }},
-	{{ {240, 154, -298}, 0, {-16, 308}, {49, 102, 58, 255} }},
-	{{ {262, 146, -311}, 0, {974, 18}, {103, 181, 255, 255} }},
-	{{ {240, 146, -298}, 0, {-16, 18}, {73, 154, 236, 255} }},
-	{{ {-5, 127, -183}, 0, {222, 942}, {199, 79, 175, 255} }},
-	{{ {0, 130, -186}, 0, {-16, 1008}, {141, 44, 33, 255} }},
-	{{ {-24, 40, -173}, 0, {1064, -2436}, {151, 55, 45, 255} }},
-	{{ {-18, 127, -176}, 0, {762, 952}, {226, 80, 162, 255} }},
-	{{ {-5, 127, -183}, 0, {222, 942}, {199, 79, 175, 255} }},
-	{{ {-24, 40, -173}, 0, {1064, -2436}, {151, 55, 45, 255} }},
-	{{ {-24, 130, -173}, 0, {1030, 1058}, {169, 85, 218, 255} }},
-	{{ {99, 70, -135}, 0, {870, 18}, {61, 72, 86, 255} }},
-	{{ {99, 137, -135}, 0, {870, 1762}, {240, 39, 120, 255} }},
-	{{ {99, 135, -129}, 0, {708, 1696}, {91, 88, 12, 255} }},
-	{{ {99, 135, -116}, 0, {380, 1700}, {97, 79, 236, 255} }},
-	{{ {99, 70, -110}, 0, {-16, 18}, {242, 93, 86, 255} }},
-	{{ {99, 138, -110}, 0, {216, 1770}, {76, 91, 47, 255} }},
-	{{ {90, 138, -85}, 0, {5224, 2362}, {34, 26, 120, 255} }},
-	{{ {-21, 132, -125}, 0, {7296, 2478}, {152, 18, 71, 255} }},
-	{{ {-13, 118, -150}, 0, {7568, 2734}, {174, 162, 21, 255} }},
-	{{ {99, 124, -110}, 0, {5154, 2618}, {56, 165, 69, 255} }},
-	{{ {99, 70, -110}, 0, {5154, 3664}, {242, 93, 86, 255} }},
-	{{ {99, 138, -110}, 0, {5154, 2362}, {76, 91, 47, 255} }},
-	{{ {-12, 40, -150}, 0, {7568, 4252}, {181, 95, 37, 255} }},
-	{{ {-13, 131, -150}, 0, {7568, 2478}, {179, 99, 21, 255} }},
-	{{ {-24, 40, -173}, 0, {8052, 4252}, {151, 55, 45, 255} }},
-	{{ {-24, 130, -173}, 0, {8052, 2504}, {169, 85, 218, 255} }},
-	{{ {0, 130, -186}, 0, {8110, 2508}, {141, 44, 33, 255} }},
-	{{ {-30, 40, -185}, 0, {8290, 4252}, {157, 56, 57, 255} }},
-	{{ {-6, 129, -198}, 0, {8394, 2524}, {160, 43, 71, 255} }},
-	{{ {12, 191, -165}, 0, {7574, 1328}, {200, 92, 68, 255} }},
-	{{ {12, 131, -165}, 0, {7574, 2478}, {190, 81, 72, 255} }},
-	{{ {99, 137, -135}, 0, {5306, 2368}, {240, 39, 120, 255} }},
-	{{ {125, 198, -126}, 0, {4524, 1184}, {4, 93, 86, 255} }},
-	{{ {125, 139, -126}, 0, {4524, 2336}, {229, 50, 114, 255} }},
-	{{ {99, 70, -135}, 0, {5306, 3664}, {61, 72, 86, 255} }},
-	{{ {111, 70, -131}, 0, {4926, 3664}, {182, 82, 64, 255} }},
-	{{ {125, 198, -126}, 0, {4524, 1184}, {4, 93, 86, 255} }},
-	{{ {125, 139, -126}, 0, {4524, 2336}, {229, 50, 114, 255} }},
-	{{ {217, 146, -179}, 0, {1472, 2192}, {79, 84, 54, 255} }},
-	{{ {217, 206, -179}, 0, {1472, 1008}, {75, 92, 45, 255} }},
-	{{ {12, 191, -165}, 0, {7574, 1328}, {200, 92, 68, 255} }},
-	{{ {-43, 184, -268}, 0, {9770, 1464}, {155, 71, 226, 255} }},
-	{{ {-43, 124, -268}, 0, {9770, 2622}, {181, 99, 227, 255} }},
-	{{ {-6, 129, -198}, 0, {8394, 2524}, {160, 43, 71, 255} }},
-	{{ {125, 176, -364}, 0, {1240, -612}, {205, 115, 239, 255} }},
-	{{ {125, 116, -364}, 0, {1292, 740}, {10, 82, 159, 255} }},
-	{{ {11, 184, -298}, 0, {-1768, -674}, {232, 97, 178, 255} }},
-	{{ {-2, 138, -291}, 0, {-2074, 368}, {144, 227, 203, 255} }},
-	{{ {-2, 125, -291}, 0, {-2062, 668}, {165, 37, 175, 255} }},
-	{{ {-43, 124, -268}, 0, {-3112, 740}, {181, 99, 227, 255} }},
-	{{ {-21, 125, -280}, 0, {-2542, 688}, {232, 36, 137, 255} }},
-	{{ {-21, 138, -280}, 0, {-2554, 386}, {9, 227, 133, 255} }},
-	{{ {-43, 124, -268}, 0, {-3112, 740}, {181, 99, 227, 255} }},
-	{{ {-16, 144, -283}, 0, {-2438, 262}, {230, 186, 153, 255} }},
-	{{ {-21, 138, -280}, 0, {-2554, 386}, {9, 227, 133, 255} }},
-	{{ {11, 184, -298}, 0, {-1768, -674}, {232, 97, 178, 255} }},
-	{{ {-43, 184, -268}, 0, {-3164, -620}, {155, 71, 226, 255} }},
-	{{ {-7, 144, -288}, 0, {-2198, 252}, {180, 186, 182, 255} }},
-	{{ {-2, 138, -291}, 0, {-2074, 368}, {144, 227, 203, 255} }},
-	{{ {240, 146, -298}, 0, {16826, 2192}, {73, 154, 236, 255} }},
-	{{ {240, 94, -298}, 0, {16826, 3198}, {87, 86, 221, 255} }},
-	{{ {125, 116, -364}, 0, {13770, 2766}, {10, 82, 159, 255} }},
-	{{ {125, 168, -364}, 0, {13770, 1760}, {196, 159, 199, 255} }},
-	{{ {240, 154, -298}, 0, {16826, 2048}, {49, 102, 58, 255} }},
-	{{ {240, 147, -166}, 0, {19870, 2190}, {65, 105, 224, 255} }},
-	{{ {240, 87, -166}, 0, {19870, 3342}, {78, 83, 56, 255} }},
-	{{ {139, 139, -77}, 0, {4284, 2336}, {227, 69, 103, 255} }},
-	{{ {139, 116, -77}, 0, {4284, 2786}, {233, 192, 107, 255} }},
-	{{ {253, 147, -143}, 0, {1726, 2190}, {100, 74, 27, 255} }},
-	{{ {253, 123, -143}, 0, {1726, 2642}, {108, 197, 32, 255} }},
-	{{ {125, 176, -391}, 0, {13766, 1616}, {206, 75, 166, 255} }},
-	{{ {262, 146, -311}, 0, {16824, 2192}, {103, 181, 255, 255} }},
-	{{ {125, 168, -391}, 0, {13766, 1760}, {200, 191, 162, 255} }},
-	{{ {262, 154, -311}, 0, {16824, 2048}, {109, 65, 1, 255} }},
-	{{ {240, 116, -166}, 0, {1474, 2786}, {98, 188, 45, 255} }},
-	{{ {114, 70, -93}, 0, {4772, 3664}, {220, 109, 55, 255} }},
-	{{ {240, 87, -166}, 0, {1474, 3342}, {78, 83, 56, 255} }},
-	{{ {125, 108, -100}, 0, {4530, 2930}, {35, 222, 117, 255} }},
-	{{ {125, 139, -100}, 0, {4530, 2336}, {163, 85, 15, 255} }},
-	{{ {217, 206, -179}, 0, {19868, 1008}, {75, 92, 45, 255} }},
-	{{ {217, 146, -179}, 0, {19868, 2192}, {79, 84, 54, 255} }},
-	{{ {217, 206, -285}, 0, {16828, 1008}, {90, 74, 205, 255} }},
-	{{ {217, 206, -285}, 0, {16828, 1008}, {90, 74, 205, 255} }},
-	{{ {217, 146, -179}, 0, {19868, 2192}, {79, 84, 54, 255} }},
-	{{ {217, 154, -285}, 0, {16828, 2048}, {89, 85, 224, 255} }},
-	{{ {125, 208, -338}, 0, {13776, 1008}, {0, 0, 129, 255} }},
-	{{ {125, 176, -338}, 0, {13776, 1616}, {13, 81, 159, 255} }},
-	{{ {54, 185, -297}, 0, {11336, 1446}, {165, 38, 176, 255} }},
-	{{ {34, 183, -285}, 0, {10696, 1472}, {177, 84, 202, 255} }},
-	{{ {36, 185, -286}, 0, {10762, 1446}, {232, 38, 137, 255} }},
-	{{ {34, 208, -285}, 0, {10696, 1008}, {169, 77, 206, 255} }},
-	{{ {34, 208, -179}, 0, {7604, 1008}, {174, 76, 61, 255} }},
-	{{ {34, 191, -179}, 0, {7604, 1328}, {179, 88, 50, 255} }},
-	{{ {125, 198, -153}, 0, {4516, 1184}, {2, 82, 97, 255} }},
-	{{ {125, 209, -153}, 0, {4516, 1008}, {12, 80, 98, 255} }},
-	{{ {194, 209, -193}, 0, {1468, 1008}, {62, 104, 39, 255} }},
-	{{ {194, 209, -193}, 0, {1468, 1008}, {54, 53, 102, 255} }},
-	{{ {36, 198, -286}, 0, {10762, 1192}, {9, 227, 133, 255} }},
-	{{ {41, 203, -289}, 0, {10896, 1088}, {230, 187, 152, 255} }},
-	{{ {36, 198, -286}, 0, {10762, 1192}, {9, 227, 133, 255} }},
-	{{ {34, 208, -285}, 0, {10696, 1008}, {169, 77, 206, 255} }},
-	{{ {50, 203, -294}, 0, {11184, 1088}, {180, 186, 182, 255} }},
-	{{ {125, 208, -338}, 0, {13776, 1008}, {0, 0, 129, 255} }},
-	{{ {54, 198, -297}, 0, {11336, 1192}, {144, 227, 203, 255} }},
-	{{ {54, 185, -297}, 0, {11336, 1446}, {165, 38, 176, 255} }},
-	{{ {-30, 40, -185}, 0, {8290, 4252}, {157, 56, 57, 255} }},
-	{{ {-30, 129, -185}, 0, {8290, 2518}, {236, 90, 88, 255} }},
-	{{ {-78, 39, -279}, 0, {9826, 4252}, {192, 107, 27, 255} }},
-	{{ {-78, 124, -279}, 0, {9826, 2622}, {164, 82, 226, 255} }},
-	{{ {125, 116, -390}, 0, {13766, 2766}, {248, 126, 11, 255} }},
-	{{ {-169, -13, -277}, 0, {382, -320}, {190, 93, 55, 255} }},
-	{{ {-160, -13, -260}, 0, {974, -320}, {157, 73, 224, 255} }},
-	{{ {-160, 39, -260}, 0, {974, 1008}, {174, 85, 48, 255} }},
-	{{ {-196, 13, -331}, 0, {-1068, 358}, {204, 65, 96, 255} }},
-	{{ {-196, 39, -331}, 0, {-1068, 1008}, {165, 60, 65, 255} }},
-	{{ {-196, 13, -331}, 0, {-1068, 358}, {204, 65, 96, 255} }},
-	{{ {-160, 39, -260}, 0, {974, 1008}, {174, 85, 48, 255} }},
-	{{ {-220, -13, -252}, 0, {974, 18}, {84, 93, 236, 255} }},
-	{{ {-246, 13, -305}, 0, {2426, 698}, {30, 123, 5, 255} }},
-	{{ {-211, -13, -234}, 0, {380, 18}, {33, 73, 157, 255} }},
-	{{ {-211, 27, -234}, 0, {380, 1050}, {15, 110, 194, 255} }},
-	{{ {-165, 26, -139}, 0, {974, 18}, {55, 112, 22, 255} }},
-	{{ {-130, -13, -68}, 0, {-1310, -1002}, {81, 95, 232, 255} }},
-	{{ {-165, -13, -139}, 0, {974, -1002}, {98, 74, 32, 255} }},
-	{{ {-130, 27, -68}, 0, {-1310, 18}, {98, 70, 214, 255} }},
-	{{ {-112, 40, -166}, 0, {-174, 1008}, {206, 70, 94, 255} }},
-	{{ {-112, -13, -166}, 0, {-174, 18}, {224, 74, 98, 255} }},
-	{{ {-85, -13, -112}, 0, {974, 18}, {199, 102, 50, 255} }},
-	{{ {-85, 40, -113}, 0, {974, 1008}, {192, 17, 109, 255} }},
-	{{ {-130, -13, -68}, 0, {974, 18}, {81, 95, 232, 255} }},
-	{{ {-130, 27, -68}, 0, {974, 1008}, {98, 70, 214, 255} }},
-	{{ {-125, -13, -33}, 0, {292, 18}, {69, 104, 23, 255} }},
-	{{ {-125, 37, -34}, 0, {292, 1312}, {95, 81, 23, 255} }},
-	{{ {7, 27, 283}, 0, {1144, 1008}, {224, 98, 182, 255} }},
-	{{ {60, 27, 257}, 0, {-378, 1008}, {198, 107, 220, 255} }},
-	{{ {7, 25, 283}, 0, {1144, 972}, {198, 221, 148, 255} }},
-	{{ {7, -12, 283}, 0, {1144, 18}, {198, 107, 220, 255} }},
-	{{ {60, -12, 257}, 0, {-378, 18}, {170, 77, 203, 255} }},
-	{{ {60, -12, 257}, 0, {1740, 784}, {170, 77, 203, 255} }},
-	{{ {41, -12, 257}, 0, {1382, 784}, {0, 127, 0, 255} }},
-	{{ {7, -12, 283}, 0, {718, 274}, {198, 107, 220, 255} }},
-	{{ {-80, -12, 284}, 0, {-966, 272}, {90, 90, 0, 255} }},
-	{{ {41, -12, 231}, 0, {1382, 1296}, {0, 127, 0, 255} }},
-	{{ {-80, -12, 257}, 0, {-966, 784}, {11, 126, 241, 255} }},
-	{{ {-244, -13, 218}, 0, {-4134, 1552}, {27, 103, 69, 255} }},
-	{{ {-191, -13, 165}, 0, {-3112, 2574}, {70, 102, 28, 255} }},
-	{{ {-244, -13, 218}, 0, {-4134, 1552}, {27, 103, 69, 255} }},
-	{{ {41, -12, 231}, 0, {1382, 1296}, {0, 127, 0, 255} }},
-	{{ {33, -12, 204}, 0, {1230, 1806}, {198, 87, 72, 255} }},
-	{{ {60, -12, 231}, 0, {1740, 1296}, {165, 80, 37, 255} }},
-	{{ {-112, -13, 112}, 0, {-1580, 3596}, {202, 93, 67, 255} }},
-	{{ {-125, -13, 99}, 0, {-1834, 3850}, {202, 115, 0, 255} }},
-	{{ {-191, -13, 33}, 0, {-3112, 5128}, {91, 80, 37, 255} }},
-	{{ {-80, -12, 310}, 0, {-966, -236}, {90, 90, 0, 255} }},
-	{{ {-52, -12, 336}, 0, {-430, -746}, {0, 127, 0, 255} }},
-	{{ {7, -12, 310}, 0, {718, -236}, {166, 90, 0, 255} }},
-	{{ {-20, -12, 336}, 0, {208, -746}, {0, 127, 0, 255} }},
-	{{ {-191, 27, 165}, 0, {-1068, 700}, {109, 48, 45, 255} }},
-	{{ {-191, -13, 165}, 0, {-1068, 18}, {70, 102, 28, 255} }},
-	{{ {-191, 27, 33}, 0, {3018, 700}, {70, 102, 28, 255} }},
-	{{ {-191, -13, 33}, 0, {3018, 18}, {91, 80, 37, 255} }},
-	{{ {-191, 27, 165}, 0, {1996, 700}, {109, 48, 45, 255} }},
-	{{ {-244, 27, 217}, 0, {68, 700}, {45, 48, 109, 255} }},
-	{{ {-244, -13, 218}, 0, {68, 18}, {27, 103, 69, 255} }},
-	{{ {-191, -13, 165}, 0, {1996, 18}, {70, 102, 28, 255} }},
-	{{ {-125, -13, 99}, 0, {-4886, 18}, {202, 115, 0, 255} }},
-	{{ {-112, -13, 112}, 0, {-4410, 18}, {202, 93, 67, 255} }},
-	{{ {-125, 27, 99}, 0, {-4886, 1008}, {152, 73, 0, 255} }},
-	{{ {-112, 27, 112}, 0, {-4410, 1008}, {198, 87, 72, 255} }},
-	{{ {33, 27, 204}, 0, {24, 1008}, {202, 93, 67, 255} }},
-	{{ {33, -12, 204}, 0, {24, 18}, {198, 87, 72, 255} }},
-	{{ {60, 27, 230}, 0, {974, 1008}, {186, 102, 28, 255} }},
-	{{ {60, -12, 231}, 0, {974, 18}, {165, 80, 37, 255} }},
-	{{ {60, -12, 257}, 0, {634, 18}, {170, 77, 203, 255} }},
-	{{ {60, 27, 257}, 0, {634, 1008}, {198, 107, 220, 255} }},
-	{{ {60, -12, 231}, 0, {-16, 18}, {165, 80, 37, 255} }},
-	{{ {60, 27, 230}, 0, {-16, 1008}, {186, 102, 28, 255} }},
-	{{ {-72, -13, -33}, 0, {-812, 6406}, {228, 124, 0, 255} }},
-	{{ {-178, -13, 19}, 0, {-2856, 5384}, {63, 90, 63, 255} }},
-	{{ {-112, -13, 85}, 0, {-1580, 4106}, {199, 93, 191, 255} }},
-	{{ {-125, -13, -33}, 0, {-1834, 6406}, {69, 104, 23, 255} }},
-	{{ {-85, -13, -112}, 0, {-1060, 7934}, {199, 102, 50, 255} }},
-	{{ {-130, -13, -68}, 0, {-1916, 7078}, {81, 95, 232, 255} }},
-	{{ {-165, -13, -139}, 0, {-2602, 8450}, {98, 74, 32, 255} }},
-	{{ {-112, -13, -166}, 0, {-1580, 8960}, {224, 74, 98, 255} }},
-	{{ {-246, 13, -305}, 0, {-4200, 11648}, {30, 123, 5, 255} }},
-	{{ {-169, -13, -277}, 0, {-2702, 11182}, {190, 93, 55, 255} }},
-	{{ {-196, 13, -331}, 0, {-3192, 12154}, {204, 65, 96, 255} }},
-	{{ {-220, -13, -252}, 0, {-3698, 10682}, {84, 93, 236, 255} }},
-	{{ {-171, -13, -254}, 0, {-2720, 10674}, {205, 115, 239, 255} }},
-	{{ {-201, -13, -239}, 0, {-3292, 10390}, {17, 115, 205, 255} }},
-	{{ {-211, -13, -234}, 0, {-3486, 10292}, {33, 73, 157, 255} }},
-	{{ {-160, -13, -260}, 0, {-2500, 10784}, {157, 73, 224, 255} }},
-	{{ {112, 146, 69}, 0, {974, 1550}, {138, 46, 0, 255} }},
-	{{ {152, 146, 1}, 0, {208, 2878}, {197, 46, 153, 255} }},
-	{{ {132, 120, 69}, 0, {590, 1550}, {171, 161, 0, 255} }},
-	{{ {162, 120, 18}, 0, {16, 2546}, {214, 161, 183, 255} }},
-	{{ {221, 120, 18}, 0, {-1132, 2546}, {42, 161, 182, 255} }},
-	{{ {231, 146, 1}, 0, {-1324, 2878}, {59, 46, 153, 255} }},
-	{{ {271, 146, 69}, 0, {-2090, 1552}, {118, 46, 0, 255} }},
-	{{ {251, 120, 69}, 0, {-1706, 1552}, {85, 161, 0, 255} }},
-	{{ {231, 146, 138}, 0, {-1324, 224}, {59, 46, 103, 255} }},
-	{{ {221, 120, 121}, 0, {-1132, 556}, {42, 161, 74, 255} }},
-	{{ {152, 146, 138}, 0, {208, 224}, {197, 46, 103, 255} }},
-	{{ {162, 120, 121}, 0, {16, 556}, {214, 161, 74, 255} }},
-	{{ {192, 93, 69}, 0, {-556, 1552}, {0, 129, 0, 255} }},
-	{{ {-83, 40, -114}, 0, {974, -492}, {110, 64, 249, 255} }},
-	{{ {-82, 34, -122}, 0, {888, -396}, {26, 109, 197, 255} }},
-	{{ {-149, 39, -243}, 0, {-898, -490}, {37, 113, 211, 255} }},
-	{{ {-83, 40, -114}, 0, {974, -492}, {110, 64, 249, 255} }},
-	{{ {-12, 40, -150}, 0, {974, 1008}, {181, 95, 37, 255} }},
-	{{ {-82, 34, -122}, 0, {888, -396}, {26, 109, 197, 255} }},
-	{{ {-20, 34, -153}, 0, {888, 944}, {192, 109, 243, 255} }},
-	{{ {-24, 40, -173}, 0, {634, 1008}, {151, 55, 45, 255} }},
-	{{ {-30, 40, -185}, 0, {462, 1008}, {157, 56, 57, 255} }},
-	{{ {-79, 34, -271}, 0, {-812, 944}, {229, 109, 59, 255} }},
-	{{ {-78, 39, -279}, 0, {-898, 1008}, {192, 107, 27, 255} }},
-	{{ {-85, 29, -261}, 0, {-728, 752}, {248, 117, 50, 255} }},
-	{{ {-96, 24, -248}, 0, {-642, 466}, {3, 121, 38, 255} }},
-	{{ {-113, 24, -239}, 0, {-642, 82}, {29, 121, 25, 255} }},
-	{{ {-129, 29, -238}, 0, {-728, -204}, {46, 116, 22, 255} }},
-	{{ {-141, 34, -240}, 0, {-812, -396}, {63, 110, 13, 255} }},
-	{{ {-149, 39, -243}, 0, {-898, -490}, {37, 113, 211, 255} }},
-	{{ {-76, 29, -132}, 0, {804, -204}, {8, 116, 205, 255} }},
-	{{ {-65, 24, -145}, 0, {718, 82}, {253, 121, 217, 255} }},
-	{{ {-48, 24, -154}, 0, {718, 466}, {227, 121, 230, 255} }},
-	{{ {-65, 24, -145}, 0, {718, 82}, {253, 121, 217, 255} }},
-	{{ {-82, 34, -122}, 0, {888, -396}, {26, 109, 197, 255} }},
-	{{ {-32, 29, -155}, 0, {804, 752}, {210, 116, 234, 255} }},
-	{{ {-20, 34, -153}, 0, {888, 944}, {192, 109, 243, 255} }},
-	{{ {-79, 34, -271}, 0, {-812, 944}, {229, 109, 59, 255} }},
-	{{ {-85, 29, -261}, 0, {-728, 752}, {248, 117, 50, 255} }},
-	{{ {-96, 24, -248}, 0, {-642, 466}, {3, 121, 38, 255} }},
-	{{ {-113, 24, -239}, 0, {-642, 82}, {29, 121, 25, 255} }},
-	{{ {-129, 29, -238}, 0, {-728, -204}, {46, 116, 22, 255} }},
-	{{ {-76, 29, -132}, 0, {804, -204}, {8, 116, 205, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_9[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 0, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 15, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 10, 9, 0),
-	gsSP1Triangle(13, 12, 9, 0),
-	gsSP1Triangle(14, 10, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 30, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 9, 8, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(13, 9, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 44, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 2, 1, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 5, 4, 0),
-	gsSP1Triangle(8, 5, 7, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 59, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 75, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 6, 5, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 91, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 4, 7, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 105, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(8, 6, 9, 0),
-	gsSP1Triangle(9, 6, 10, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(13, 11, 14, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 121, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 9, 12, 0),
-	gsSP1Triangle(12, 9, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 137, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(5, 1, 3, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(11, 12, 8, 0),
-	gsSP1Triangle(12, 13, 8, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 151, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 5, 4, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 9, 8, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 167, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(8, 6, 9, 0),
-	gsSP1Triangle(9, 6, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 9, 11, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(14, 13, 11, 0),
-	gsSP1Triangle(15, 7, 8, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 183, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 199, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 8, 7, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 214, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(7, 5, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 230, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(5, 0, 3, 0),
-	gsSP1Triangle(6, 0, 5, 0),
-	gsSP1Triangle(7, 0, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 246, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 7, 5, 0),
-	gsSP1Triangle(9, 8, 5, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(11, 10, 9, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 262, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(6, 4, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 9, 8, 0),
-	gsSP1Triangle(12, 9, 11, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 13, 11, 0),
-	gsSP1Triangle(15, 9, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 278, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(5, 4, 1, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(8, 9, 7, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 11, 9, 0),
-	gsSP1Triangle(10, 0, 11, 0),
-	gsSP1Triangle(0, 2, 11, 0),
-	gsSP1Triangle(11, 2, 12, 0),
-	gsSP1Triangle(2, 3, 12, 0),
-	gsSP1Triangle(3, 4, 12, 0),
-	gsSP1Triangle(4, 7, 12, 0),
-	gsSP1Triangle(7, 9, 12, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 294, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(11, 10, 7, 0),
-	gsSP1Triangle(12, 11, 7, 0),
-	gsSP1Triangle(13, 12, 7, 0),
-	gsSP1Triangle(13, 2, 12, 0),
-	gsSP1Triangle(12, 2, 11, 0),
-	gsSP1Triangle(2, 14, 11, 0),
-	gsSP1Triangle(15, 14, 2, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_9 + 310, 11, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 3, 5, 0),
-	gsSP1Triangle(0, 3, 6, 0),
-	gsSP1Triangle(7, 0, 6, 0),
-	gsSP1Triangle(1, 0, 7, 0),
-	gsSP1Triangle(8, 1, 7, 0),
-	gsSP1Triangle(9, 1, 8, 0),
-	gsSP1Triangle(10, 1, 9, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_10[72] = {
-	{{ {78, 30, 349}, 0, {4040, 1008}, {99, 78, 17, 255} }},
-	{{ {71, 30, 357}, 0, {-16, 1008}, {34, 78, 95, 255} }},
-	{{ {78, 28, 349}, 0, {4040, 18}, {125, 0, 22, 255} }},
-	{{ {71, 28, 357}, 0, {-16, 18}, {43, 0, 120, 255} }},
-	{{ {57, 30, 345}, 0, {3528, 1008}, {157, 77, 239, 255} }},
-	{{ {64, 30, 337}, 0, {-370, 1008}, {221, 77, 161, 255} }},
-	{{ {57, 28, 345}, 0, {3528, 18}, {131, 0, 234, 255} }},
-	{{ {64, 28, 337}, 0, {-370, 18}, {212, 0, 137, 255} }},
-	{{ {64, 30, 337}, 0, {4040, 1008}, {221, 77, 161, 255} }},
-	{{ {75, 30, 339}, 0, {-230, 1008}, {65, 77, 179, 255} }},
-	{{ {64, 28, 337}, 0, {4040, 18}, {212, 0, 137, 255} }},
-	{{ {75, 28, 339}, 0, {-230, 18}, {81, 0, 159, 255} }},
-	{{ {78, 30, 349}, 0, {-16, 1008}, {99, 78, 17, 255} }},
-	{{ {78, 28, 349}, 0, {-16, 18}, {125, 0, 22, 255} }},
-	{{ {75, 28, 339}, 0, {4040, 18}, {81, 0, 159, 255} }},
-	{{ {75, 30, 339}, 0, {4040, 1008}, {65, 77, 179, 255} }},
-	{{ {-356, 42, -270}, 0, {3528, 1008}, {156, 77, 239, 255} }},
-	{{ {-350, 42, -278}, 0, {-370, 1008}, {221, 77, 161, 255} }},
-	{{ {-356, 39, -270}, 0, {3528, 18}, {131, 0, 235, 255} }},
-	{{ {-350, 39, -278}, 0, {-370, 18}, {212, 0, 137, 255} }},
-	{{ {71, 30, 357}, 0, {4040, 1008}, {34, 78, 95, 255} }},
-	{{ {61, 30, 355}, 0, {-16, 1008}, {191, 78, 77, 255} }},
-	{{ {71, 28, 357}, 0, {4040, 18}, {43, 0, 120, 255} }},
-	{{ {61, 28, 355}, 0, {-16, 18}, {175, 0, 97, 255} }},
-	{{ {61, 30, 355}, 0, {4040, 1008}, {191, 78, 77, 255} }},
-	{{ {57, 30, 345}, 0, {-16, 1008}, {157, 77, 239, 255} }},
-	{{ {61, 28, 355}, 0, {4040, 18}, {175, 0, 97, 255} }},
-	{{ {57, 28, 345}, 0, {-16, 18}, {131, 0, 234, 255} }},
-	{{ {-353, 42, -260}, 0, {-16, 1008}, {191, 78, 77, 255} }},
-	{{ {-353, 39, -260}, 0, {-16, 18}, {175, 0, 97, 255} }},
-	{{ {-342, 39, -258}, 0, {4040, 18}, {43, 0, 120, 255} }},
-	{{ {-342, 42, -258}, 0, {4040, 1008}, {34, 78, 95, 255} }},
-	{{ {-339, 42, -276}, 0, {-230, 1008}, {65, 77, 179, 255} }},
-	{{ {-339, 39, -276}, 0, {-230, 18}, {81, 0, 159, 255} }},
-	{{ {-350, 39, -278}, 0, {4040, 18}, {212, 0, 137, 255} }},
-	{{ {-350, 42, -278}, 0, {4040, 1008}, {221, 77, 161, 255} }},
-	{{ {-339, 42, -276}, 0, {4040, 1008}, {65, 77, 179, 255} }},
-	{{ {-335, 42, -266}, 0, {-16, 1008}, {99, 78, 17, 255} }},
-	{{ {-339, 39, -276}, 0, {4040, 18}, {81, 0, 159, 255} }},
-	{{ {-335, 39, -266}, 0, {-16, 18}, {125, 0, 22, 255} }},
-	{{ {-335, 42, -266}, 0, {4040, 1008}, {99, 78, 17, 255} }},
-	{{ {-342, 42, -258}, 0, {-16, 1008}, {34, 78, 95, 255} }},
-	{{ {-335, 39, -266}, 0, {4040, 18}, {125, 0, 22, 255} }},
-	{{ {-342, 39, -258}, 0, {-16, 18}, {43, 0, 120, 255} }},
-	{{ {-367, 42, -175}, 0, {-230, 1008}, {65, 77, 179, 255} }},
-	{{ {-367, 39, -175}, 0, {-230, 18}, {82, 0, 159, 255} }},
-	{{ {-378, 39, -177}, 0, {4040, 18}, {212, 0, 137, 255} }},
-	{{ {-378, 42, -177}, 0, {4040, 1008}, {221, 77, 161, 255} }},
-	{{ {-353, 42, -260}, 0, {4040, 1008}, {191, 78, 77, 255} }},
-	{{ {-356, 42, -270}, 0, {-16, 1008}, {156, 77, 239, 255} }},
-	{{ {-353, 39, -260}, 0, {4040, 18}, {175, 0, 97, 255} }},
-	{{ {-356, 39, -270}, 0, {-16, 18}, {131, 0, 235, 255} }},
-	{{ {-384, 42, -169}, 0, {3528, 1008}, {157, 77, 239, 255} }},
-	{{ {-378, 42, -177}, 0, {-370, 1008}, {221, 77, 161, 255} }},
-	{{ {-384, 39, -169}, 0, {3528, 18}, {131, 0, 235, 255} }},
-	{{ {-378, 39, -177}, 0, {-370, 18}, {212, 0, 137, 255} }},
-	{{ {-381, 42, -159}, 0, {4040, 1008}, {191, 78, 77, 255} }},
-	{{ {-384, 42, -169}, 0, {-16, 1008}, {157, 77, 239, 255} }},
-	{{ {-381, 39, -159}, 0, {4040, 18}, {175, 0, 97, 255} }},
-	{{ {-384, 39, -169}, 0, {-16, 18}, {131, 0, 235, 255} }},
-	{{ {-363, 42, -165}, 0, {-16, 1008}, {99, 78, 17, 255} }},
-	{{ {-363, 39, -165}, 0, {-16, 18}, {125, 0, 22, 255} }},
-	{{ {-367, 39, -175}, 0, {4040, 18}, {82, 0, 159, 255} }},
-	{{ {-367, 42, -175}, 0, {4040, 1008}, {65, 77, 179, 255} }},
-	{{ {-363, 42, -165}, 0, {4040, 1008}, {99, 78, 17, 255} }},
-	{{ {-370, 42, -157}, 0, {-16, 1008}, {34, 78, 95, 255} }},
-	{{ {-363, 39, -165}, 0, {4040, 18}, {125, 0, 22, 255} }},
-	{{ {-370, 39, -157}, 0, {-16, 18}, {43, 0, 120, 255} }},
-	{{ {-381, 42, -159}, 0, {-16, 1008}, {191, 78, 77, 255} }},
-	{{ {-381, 39, -159}, 0, {-16, 18}, {175, 0, 97, 255} }},
-	{{ {-370, 39, -157}, 0, {4040, 18}, {43, 0, 120, 255} }},
-	{{ {-370, 42, -157}, 0, {4040, 1008}, {34, 78, 95, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_10[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_10 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_10 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_10 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_10 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_10 + 64, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_11[20] = {
-	{{ {78, 30, 349}, 0, {5062, 1008}, {99, 78, 17, 255} }},
-	{{ {75, 30, 339}, 0, {3018, 4616}, {65, 77, 179, 255} }},
-	{{ {64, 30, 337}, 0, {-1068, 4616}, {221, 77, 161, 255} }},
-	{{ {71, 30, 357}, 0, {3018, -2498}, {34, 78, 95, 255} }},
-	{{ {61, 30, 355}, 0, {-1068, -2498}, {191, 78, 77, 255} }},
-	{{ {57, 30, 345}, 0, {-3112, 1008}, {157, 77, 239, 255} }},
-	{{ {-335, 42, -266}, 0, {5062, 1008}, {99, 78, 17, 255} }},
-	{{ {-339, 42, -276}, 0, {3018, 4616}, {65, 77, 179, 255} }},
-	{{ {-350, 42, -278}, 0, {-1068, 4616}, {221, 77, 161, 255} }},
-	{{ {-342, 42, -258}, 0, {3018, -2498}, {34, 78, 95, 255} }},
-	{{ {-353, 42, -260}, 0, {-1068, -2498}, {191, 78, 77, 255} }},
-	{{ {-356, 42, -270}, 0, {-3112, 1008}, {156, 77, 239, 255} }},
-	{{ {-384, 42, -169}, 0, {-3112, 1008}, {157, 77, 239, 255} }},
-	{{ {-381, 42, -159}, 0, {-1068, -2498}, {191, 78, 77, 255} }},
-	{{ {-378, 42, -177}, 0, {-1068, 4616}, {221, 77, 161, 255} }},
-	{{ {-370, 42, -157}, 0, {3018, -2498}, {34, 78, 95, 255} }},
-	{{ {-370, 42, -157}, 0, {3018, -2498}, {34, 78, 95, 255} }},
-	{{ {-363, 42, -165}, 0, {5062, 1008}, {99, 78, 17, 255} }},
-	{{ {-378, 42, -177}, 0, {-1068, 4616}, {221, 77, 161, 255} }},
-	{{ {-367, 42, -175}, 0, {3018, 4616}, {65, 77, 179, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_11[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_11 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 4, 2, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 6, 8, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 10, 8, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_11 + 16, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_12[62] = {
-	{{ {250, 41, 249}, 0, {4552, 1008}, {182, 73, 182, 255} }},
-	{{ {250, 67, 249}, 0, {4552, 18}, {218, 115, 218, 255} }},
-	{{ {250, 67, 238}, 0, {3530, 18}, {218, 115, 38, 255} }},
-	{{ {250, 41, 238}, 0, {3530, 1008}, {183, 73, 73, 255} }},
-	{{ {239, 67, 238}, 0, {2508, 18}, {38, 115, 38, 255} }},
-	{{ {239, 41, 238}, 0, {2506, 1008}, {73, 74, 73, 255} }},
-	{{ {239, 67, 249}, 0, {1486, 18}, {38, 115, 218, 255} }},
-	{{ {239, 41, 249}, 0, {1486, 1008}, {73, 73, 182, 255} }},
-	{{ {250, 67, 249}, 0, {462, 18}, {218, 115, 218, 255} }},
-	{{ {250, 41, 249}, 0, {464, 1008}, {182, 73, 182, 255} }},
-	{{ {239, 41, 249}, 0, {770, 222}, {73, 73, 182, 255} }},
-	{{ {250, 41, 249}, 0, {770, 1008}, {182, 73, 182, 255} }},
-	{{ {250, 41, 238}, 0, {-16, 1008}, {183, 73, 73, 255} }},
-	{{ {239, 41, 238}, 0, {-16, 222}, {73, 74, 73, 255} }},
-	{{ {258, 67, 257}, 0, {974, 1008}, {54, 102, 54, 255} }},
-	{{ {231, 67, 257}, 0, {-16, 1008}, {202, 102, 54, 255} }},
-	{{ {271, 41, 270}, 0, {1486, -100}, {29, 121, 27, 255} }},
-	{{ {218, 41, 270}, 0, {-558, -100}, {228, 119, 34, 255} }},
-	{{ {258, 67, 257}, 0, {-42, 1008}, {54, 102, 54, 255} }},
-	{{ {271, 41, 270}, 0, {-552, -100}, {29, 121, 27, 255} }},
-	{{ {271, 41, 217}, 0, {1490, -100}, {30, 121, 232, 255} }},
-	{{ {258, 67, 230}, 0, {980, 1008}, {54, 102, 202, 255} }},
-	{{ {-197, 37, 0}, 0, {974, 918}, {63, 91, 63, 255} }},
-	{{ {-200, 37, -2}, 0, {974, 1142}, {219, 52, 110, 255} }},
-	{{ {-214, 37, 12}, 0, {-940, 1140}, {7, 36, 122, 255} }},
-	{{ {-211, 37, 14}, 0, {-940, 918}, {0, 74, 103, 255} }},
-	{{ {-197, 33, 0}, 0, {974, 692}, {63, 91, 63, 255} }},
-	{{ {-211, 33, 14}, 0, {-940, 692}, {202, 38, 109, 255} }},
-	{{ {-195, 33, 3}, 0, {974, 468}, {63, 90, 63, 255} }},
-	{{ {-209, 33, 16}, 0, {-940, 468}, {0, 74, 103, 255} }},
-	{{ {-195, 33, 3}, 0, {974, 468}, {63, 90, 63, 255} }},
-	{{ {-209, 33, 16}, 0, {-940, 468}, {0, 74, 103, 255} }},
-	{{ {-195, 30, 3}, 0, {974, 242}, {63, 90, 63, 255} }},
-	{{ {-209, 30, 16}, 0, {-940, 242}, {202, 38, 109, 255} }},
-	{{ {-193, 30, 5}, 0, {974, 18}, {63, 90, 63, 255} }},
-	{{ {-207, 30, 19}, 0, {-940, 18}, {0, 74, 103, 255} }},
-	{{ {-193, 27, 5}, 0, {974, -206}, {220, 52, 110, 255} }},
-	{{ {-207, 27, 19}, 0, {-940, -206}, {0, 115, 54, 255} }},
-	{{ {231, 67, 230}, 0, {-16, 1008}, {202, 102, 202, 255} }},
-	{{ {218, 41, 217}, 0, {-556, -100}, {227, 121, 229, 255} }},
-	{{ {218, 41, 270}, 0, {1484, -100}, {228, 119, 34, 255} }},
-	{{ {231, 67, 257}, 0, {974, 1008}, {202, 102, 54, 255} }},
-	{{ {258, 67, 230}, 0, {-16, 1008}, {54, 102, 202, 255} }},
-	{{ {271, 41, 217}, 0, {-558, -100}, {30, 121, 232, 255} }},
-	{{ {218, 41, 217}, 0, {1486, -100}, {227, 121, 229, 255} }},
-	{{ {231, 67, 230}, 0, {974, 1008}, {202, 102, 202, 255} }},
-	{{ {-209, 33, 16}, 0, {656, 728}, {0, 74, 103, 255} }},
-	{{ {-211, 33, 14}, 0, {302, 728}, {202, 38, 109, 255} }},
-	{{ {-209, 30, 16}, 0, {656, 372}, {202, 38, 109, 255} }},
-	{{ {-214, 27, 12}, 0, {-16, 18}, {223, 79, 94, 255} }},
-	{{ {-214, 37, 12}, 0, {-16, 1082}, {7, 36, 122, 255} }},
-	{{ {-211, 37, 14}, 0, {302, 1082}, {0, 74, 103, 255} }},
-	{{ {-207, 27, 19}, 0, {1008, 18}, {0, 115, 54, 255} }},
-	{{ {-207, 30, 19}, 0, {1008, 372}, {0, 74, 103, 255} }},
-	{{ {258, 67, 257}, 0, {974, 18}, {54, 102, 54, 255} }},
-	{{ {250, 67, 249}, 0, {668, 324}, {218, 115, 218, 255} }},
-	{{ {231, 67, 257}, 0, {-16, 18}, {202, 102, 54, 255} }},
-	{{ {250, 67, 238}, 0, {668, 734}, {218, 115, 38, 255} }},
-	{{ {258, 67, 230}, 0, {974, 1008}, {54, 102, 202, 255} }},
-	{{ {239, 67, 238}, 0, {258, 734}, {38, 115, 38, 255} }},
-	{{ {231, 67, 230}, 0, {-16, 1008}, {202, 102, 202, 255} }},
-	{{ {239, 67, 249}, 0, {258, 324}, {38, 115, 218, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_12[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_12 + 0, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 2, 4, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(5, 4, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_12 + 14, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(8, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_12 + 30, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 2, 3, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_12 + 46, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(5, 4, 1, 0),
-	gsSP1Triangle(6, 2, 3, 0),
-	gsSP1Triangle(7, 2, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 9, 8, 0),
-	gsSP1Triangle(12, 11, 8, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(15, 13, 14, 0),
-	gsSP1Triangle(10, 15, 14, 0),
-	gsSP1Triangle(9, 15, 10, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_13[46] = {
-	{{ {20, 27, 15}, 0, {974, 18}, {55, 98, 59, 255} }},
-	{{ {20, 67, 15}, 0, {974, 1550}, {189, 103, 32, 255} }},
-	{{ {-112, 27, 85}, 0, {-4816, 18}, {198, 86, 183, 255} }},
-	{{ {64, 67, 43}, 0, {-118, 1008}, {244, 91, 88, 255} }},
-	{{ {64, 27, 43}, 0, {334, -422}, {178, 97, 230, 255} }},
-	{{ {54, 27, 171}, 0, {5062, 1008}, {1, 127, 1, 255} }},
-	{{ {30, 60, 0}, 0, {-16, 692}, {22, 183, 102, 255} }},
-	{{ {74, 60, 28}, 0, {974, 692}, {155, 183, 22, 255} }},
-	{{ {20, 60, 15}, 0, {-16, 1008}, {22, 183, 102, 255} }},
-	{{ {64, 60, 43}, 0, {974, 1008}, {155, 182, 22, 255} }},
-	{{ {64, 67, 43}, 0, {974, 1168}, {244, 91, 88, 255} }},
-	{{ {20, 67, 15}, 0, {-16, 1168}, {189, 103, 32, 255} }},
-	{{ {30, 60, 0}, 0, {974, 784}, {22, 183, 102, 255} }},
-	{{ {20, 60, 15}, 0, {626, 784}, {22, 183, 102, 255} }},
-	{{ {20, 27, 15}, 0, {626, 18}, {55, 98, 59, 255} }},
-	{{ {30, 27, 0}, 0, {974, 18}, {22, 74, 101, 255} }},
-	{{ {64, 67, 43}, 0, {1916, -340}, {244, 91, 88, 255} }},
-	{{ {54, 27, 171}, 0, {1612, -1640}, {1, 127, 1, 255} }},
-	{{ {152, 21, -34}, 0, {2762, 402}, {49, 98, 64, 255} }},
-	{{ {127, 77, -32}, 0, {2512, 776}, {31, 109, 57, 255} }},
-	{{ {68, 93, 2}, 0, {1958, 74}, {240, 124, 232, 255} }},
-	{{ {20, 67, 15}, 0, {1486, -66}, {189, 103, 32, 255} }},
-	{{ {74, 27, 28}, 0, {974, 274}, {154, 73, 22, 255} }},
-	{{ {74, 60, 28}, 0, {974, 1008}, {155, 183, 22, 255} }},
-	{{ {30, 60, 0}, 0, {-16, 1008}, {22, 183, 102, 255} }},
-	{{ {30, 27, 0}, 0, {-16, 274}, {22, 74, 101, 255} }},
-	{{ {-112, -13, 85}, 0, {2376, -156}, {199, 93, 191, 255} }},
-	{{ {28, 27, -2}, 0, {-16, 2062}, {185, 85, 194, 255} }},
-	{{ {-72, -13, -33}, 0, {-16, -120}, {228, 124, 0, 255} }},
-	{{ {127, 77, -32}, 0, {-1174, 3940}, {31, 109, 57, 255} }},
-	{{ {74, 58, -73}, 0, {-1632, 2676}, {218, 121, 2, 255} }},
-	{{ {-85, -13, -112}, 0, {-1428, -774}, {199, 102, 50, 255} }},
-	{{ {74, 27, 28}, 0, {626, 274}, {154, 73, 22, 255} }},
-	{{ {64, 27, 43}, 0, {974, 274}, {178, 97, 230, 255} }},
-	{{ {64, 60, 43}, 0, {974, 1008}, {155, 182, 22, 255} }},
-	{{ {74, 60, 28}, 0, {626, 1008}, {155, 183, 22, 255} }},
-	{{ {45, 138, -121}, 0, {972, 1008}, {0, 127, 0, 255} }},
-	{{ {35, 138, -124}, 0, {-16, 1008}, {1, 125, 233, 255} }},
-	{{ {32, 138, -114}, 0, {-16, 18}, {242, 125, 19, 255} }},
-	{{ {42, 138, -111}, 0, {972, 18}, {0, 127, 0, 255} }},
-	{{ {127, 77, -32}, 0, {-4692, 96}, {31, 109, 57, 255} }},
-	{{ {28, 60, -2}, 0, {-896, 1008}, {203, 55, 154, 255} }},
-	{{ {20, 67, 15}, 0, {-438, 1520}, {189, 103, 32, 255} }},
-	{{ {28, 27, -2}, 0, {-382, -128}, {185, 85, 194, 255} }},
-	{{ {-112, -13, 85}, 0, {6084, 1008}, {199, 93, 191, 255} }},
-	{{ {-112, 27, 85}, 0, {5466, 2444}, {198, 86, 183, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_13[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_13 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_13 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(3, 4, 0, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(0, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 6, 8, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_13 + 32, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 8, 11, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(13, 9, 12, 0),
-	gsSP1Triangle(10, 9, 13, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_14[44] = {
-	{{ {-160, -13, -260}, 0, {-16, 18}, {157, 73, 224, 255} }},
-	{{ {-171, -13, -254}, 0, {936, 18}, {205, 115, 239, 255} }},
-	{{ {-160, 39, -260}, 0, {-16, 4106}, {174, 85, 48, 255} }},
-	{{ {-171, 6, -254}, 0, {936, 1552}, {141, 237, 205, 255} }},
-	{{ {-177, 20, -251}, 0, {1446, 2574}, {176, 198, 176, 255} }},
-	{{ {-195, 20, -242}, 0, {2980, 2574}, {240, 198, 144, 255} }},
-	{{ {-211, 27, -234}, 0, {4354, 3118}, {15, 110, 194, 255} }},
-	{{ {-201, 6, -239}, 0, {3490, 1552}, {28, 237, 134, 255} }},
-	{{ {-201, -13, -239}, 0, {3490, 18}, {17, 115, 205, 255} }},
-	{{ {-211, -13, -234}, 0, {4354, 52}, {33, 73, 157, 255} }},
-	{{ {-165, 26, -139}, 0, {974, -3690}, {55, 112, 22, 255} }},
-	{{ {-160, 39, -260}, 0, {-8166, 1008}, {174, 85, 48, 255} }},
-	{{ {-211, 27, -234}, 0, {-8222, -3556}, {15, 110, 194, 255} }},
-	{{ {-112, 40, -166}, 0, {974, 1008}, {206, 70, 94, 255} }},
-	{{ {-112, -13, -166}, 0, {974, 18}, {224, 74, 98, 255} }},
-	{{ {-112, 40, -166}, 0, {974, 4106}, {206, 70, 94, 255} }},
-	{{ {-124, -13, -160}, 0, {-16, 18}, {223, 74, 98, 255} }},
-	{{ {-124, 7, -160}, 0, {-16, 1550}, {228, 238, 123, 255} }},
-	{{ {-130, 20, -157}, 0, {-558, 2572}, {16, 199, 112, 255} }},
-	{{ {-148, 20, -148}, 0, {-2090, 2572}, {80, 199, 80, 255} }},
-	{{ {-165, 26, -139}, 0, {-3594, 2880}, {55, 112, 22, 255} }},
-	{{ {-154, 7, -145}, 0, {-2600, 1550}, {115, 238, 51, 255} }},
-	{{ {-165, -13, -139}, 0, {-3594, 18}, {98, 74, 32, 255} }},
-	{{ {-154, -13, -145}, 0, {-2600, 18}, {98, 74, 32, 255} }},
-	{{ {-171, 6, -254}, 0, {-16, 1008}, {141, 237, 205, 255} }},
-	{{ {-171, -13, -254}, 0, {-16, -490}, {205, 115, 239, 255} }},
-	{{ {-124, 7, -160}, 0, {4550, 1008}, {228, 238, 123, 255} }},
-	{{ {-124, -13, -160}, 0, {4550, -492}, {223, 74, 98, 255} }},
-	{{ {-201, 6, -239}, 0, {4552, 1008}, {28, 237, 134, 255} }},
-	{{ {-154, 7, -145}, 0, {-16, 1008}, {115, 238, 51, 255} }},
-	{{ {-154, -13, -145}, 0, {-16, -490}, {98, 74, 32, 255} }},
-	{{ {-201, -13, -239}, 0, {4550, -490}, {17, 115, 205, 255} }},
-	{{ {-201, 6, -239}, 0, {3528, 18}, {28, 237, 134, 255} }},
-	{{ {-195, 20, -242}, 0, {3530, 1160}, {240, 198, 144, 255} }},
-	{{ {-154, 7, -145}, 0, {-1068, 18}, {115, 238, 51, 255} }},
-	{{ {-148, 20, -148}, 0, {-1068, 1160}, {80, 199, 80, 255} }},
-	{{ {-171, 6, -254}, 0, {-16, 18}, {141, 237, 205, 255} }},
-	{{ {-124, 7, -160}, 0, {4550, 18}, {228, 238, 123, 255} }},
-	{{ {-130, 20, -157}, 0, {4550, 1160}, {16, 199, 112, 255} }},
-	{{ {-177, 20, -251}, 0, {-16, 1160}, {176, 198, 176, 255} }},
-	{{ {-195, 20, -242}, 0, {974, 1008}, {240, 198, 144, 255} }},
-	{{ {-177, 20, -251}, 0, {-556, 1008}, {176, 198, 176, 255} }},
-	{{ {-148, 20, -148}, 0, {974, -8156}, {80, 199, 80, 255} }},
-	{{ {-130, 20, -157}, 0, {-558, -8156}, {16, 199, 112, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_14[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_14 + 0, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(4, 5, 2, 0),
-	gsSP1Triangle(5, 6, 2, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 11, 10, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_14 + 14, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(4, 1, 5, 0),
-	gsSP1Triangle(1, 6, 5, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_14 + 28, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_15[93] = {
-	{{ {259, 35, -34}, 0, {-1016, 8540}, {34, 115, 42, 255} }},
-	{{ {267, 27, -28}, 0, {-1002, 8646}, {52, 96, 65, 255} }},
-	{{ {268, 30, -54}, 0, {-1262, 8578}, {47, 117, 243, 255} }},
-	{{ {267, 27, -28}, 0, {2686, 666}, {52, 96, 65, 255} }},
-	{{ {259, 35, -34}, 0, {2544, 798}, {34, 115, 42, 255} }},
-	{{ {241, 24, -22}, 0, {2190, 558}, {234, 102, 72, 255} }},
-	{{ {233, 35, -44}, 0, {2022, 974}, {213, 117, 25, 255} }},
-	{{ {243, 37, -55}, 0, {2220, 1204}, {249, 125, 236, 255} }},
-	{{ {268, 30, -54}, 0, {2716, 1172}, {47, 117, 243, 255} }},
-	{{ {248, 32, -71}, 0, {2328, 1502}, {7, 120, 215, 255} }},
-	{{ {230, 30, -66}, 0, {1974, 1402}, {212, 115, 224, 255} }},
-	{{ {217, 26, -42}, 0, {1722, 954}, {195, 109, 25, 255} }},
-	{{ {-283, 28, -275}, 0, {566, 1008}, {83, 92, 28, 255} }},
-	{{ {-295, 42, -290}, 0, {430, 620}, {66, 107, 235, 255} }},
-	{{ {-301, 33, -271}, 0, {974, 700}, {21, 106, 67, 255} }},
-	{{ {-284, 24, -292}, 0, {156, 870}, {94, 67, 202, 255} }},
-	{{ {-284, 24, -292}, 0, {156, 870}, {94, 67, 202, 255} }},
-	{{ {-303, 42, -295}, 0, {354, 370}, {26, 87, 167, 255} }},
-	{{ {-295, 42, -290}, 0, {430, 620}, {66, 107, 235, 255} }},
-	{{ {-302, 26, -304}, 0, {-16, 358}, {45, 63, 155, 255} }},
-	{{ {-318, 30, -305}, 0, {156, 18}, {224, 89, 171, 255} }},
-	{{ {-308, 45, -291}, 0, {550, 290}, {233, 124, 245, 255} }},
-	{{ {-321, 36, -278}, 0, {974, 18}, {207, 114, 29, 255} }},
-	{{ {-301, 33, -271}, 0, {974, 700}, {21, 106, 67, 255} }},
-	{{ {-315, 55, -189}, 0, {208, 530}, {222, 119, 229, 255} }},
-	{{ {-343, 39, -192}, 0, {-68, 682}, {237, 125, 249, 255} }},
-	{{ {-337, 39, -146}, 0, {128, 250}, {240, 126, 10, 255} }},
-	{{ {-291, 39, -225}, 0, {442, 1002}, {9, 122, 222, 255} }},
-	{{ {-269, 55, -189}, 0, {650, 530}, {33, 120, 232, 255} }},
-	{{ {-297, 55, -181}, 0, {378, 452}, {38, 115, 38, 255} }},
-	{{ {-297, 55, -171}, 0, {378, 350}, {38, 115, 218, 255} }},
-	{{ {-292, 55, -150}, 0, {428, 146}, {255, 122, 35, 255} }},
-	{{ {-292, 55, -150}, 0, {428, 146}, {255, 122, 35, 255} }},
-	{{ {-337, 39, -146}, 0, {128, 250}, {240, 126, 10, 255} }},
-	{{ {-291, 40, -119}, 0, {442, -18}, {2, 125, 20, 255} }},
-	{{ {-244, 40, -146}, 0, {888, 236}, {30, 122, 19, 255} }},
-	{{ {-269, 55, -189}, 0, {650, 530}, {33, 120, 232, 255} }},
-	{{ {-244, 39, -199}, 0, {888, 746}, {42, 118, 236, 255} }},
-	{{ {-291, 39, -225}, 0, {442, 1002}, {9, 122, 222, 255} }},
-	{{ {-287, 55, -171}, 0, {480, 350}, {218, 115, 218, 255} }},
-	{{ {-287, 55, -181}, 0, {480, 452}, {218, 115, 38, 255} }},
-	{{ {-297, 55, -181}, 0, {378, 452}, {38, 115, 38, 255} }},
-	{{ {-297, 55, -171}, 0, {378, 350}, {38, 115, 218, 255} }},
-	{{ {-176, 39, -8}, 0, {846, 274}, {22, 104, 69, 255} }},
-	{{ {-164, 39, -16}, 0, {974, 528}, {61, 103, 44, 255} }},
-	{{ {-178, 49, -22}, 0, {682, 486}, {27, 119, 36, 255} }},
-	{{ {-158, 38, -28}, 0, {974, 784}, {67, 108, 1, 255} }},
-	{{ {-178, 49, -37}, 0, {540, 758}, {32, 118, 221, 255} }},
-	{{ {-158, 38, -28}, 0, {974, 784}, {67, 108, 1, 255} }},
-	{{ {-161, 38, -37}, 0, {846, 912}, {67, 103, 224, 255} }},
-	{{ {-178, 49, -37}, 0, {540, 758}, {32, 118, 221, 255} }},
-	{{ {-169, 38, -49}, 0, {590, 1008}, {46, 103, 198, 255} }},
-	{{ {-190, 49, -40}, 0, {312, 696}, {241, 118, 210, 255} }},
-	{{ {-181, 38, -55}, 0, {336, 1008}, {13, 105, 186, 255} }},
-	{{ {-199, 39, -49}, 0, {80, 784}, {221, 97, 181, 255} }},
-	{{ {-211, 39, -41}, 0, {-16, 528}, {191, 105, 227, 255} }},
-	{{ {-198, 49, -23}, 0, {330, 332}, {204, 110, 38, 255} }},
-	{{ {-205, 40, -23}, 0, {208, 274}, {162, 70, 50, 255} }},
-	{{ {-191, 40, -8}, 0, {590, 146}, {238, 102, 74, 255} }},
-	{{ {-176, 39, -8}, 0, {846, 274}, {22, 104, 69, 255} }},
-	{{ {-178, 49, -22}, 0, {682, 486}, {27, 119, 36, 255} }},
-	{{ {-152, 0, 331}, 0, {-40, -246}, {24, 118, 40, 255} }},
-	{{ {-154, -5, 338}, 0, {-24, -782}, {21, 95, 82, 255} }},
-	{{ {-142, -3, 328}, 0, {514, -532}, {51, 111, 34, 255} }},
-	{{ {-152, 0, 331}, 0, {-40, -246}, {24, 118, 40, 255} }},
-	{{ {-157, 0, 332}, 0, {-378, -340}, {236, 120, 37, 255} }},
-	{{ {-154, -5, 338}, 0, {-24, -782}, {21, 95, 82, 255} }},
-	{{ {-155, 0, 327}, 0, {-232, 86}, {239, 125, 243, 255} }},
-	{{ {-148, -2, 313}, 0, {516, 492}, {5, 126, 238, 255} }},
-	{{ {-142, -3, 321}, 0, {676, 66}, {30, 123, 253, 255} }},
-	{{ {-142, -3, 328}, 0, {514, -532}, {51, 111, 34, 255} }},
-	{{ {-156, -3, 312}, 0, {-182, 670}, {237, 124, 235, 255} }},
-	{{ {-164, -4, 319}, 0, {-628, 306}, {214, 119, 243, 255} }},
-	{{ {-166, -7, 341}, 0, {-416, -638}, {229, 112, 53, 255} }},
-	{{ {-169, -6, 337}, 0, {-700, -402}, {209, 115, 25, 255} }},
-	{{ {-169, -5, 330}, 0, {-770, -86}, {204, 116, 1, 255} }},
-	{{ {203, 26, 70}, 0, {1400, -1358}, {167, 45, 79, 255} }},
-	{{ {215, 27, 79}, 0, {1652, -1392}, {234, 47, 116, 255} }},
-	{{ {216, 56, 67}, 0, {1830, -1184}, {228, 107, 62, 255} }},
-	{{ {244, 27, 71}, 0, {2320, -1224}, {62, 70, 86, 255} }},
-	{{ {216, 56, 67}, 0, {1830, -1184}, {228, 107, 62, 255} }},
-	{{ {244, 27, 71}, 0, {2320, -1224}, {62, 70, 86, 255} }},
-	{{ {260, 27, 54}, 0, {2480, -988}, {74, 85, 58, 255} }},
-	{{ {269, 27, 42}, 0, {2642, -752}, {81, 98, 8, 255} }},
-	{{ {238, 52, 41}, 0, {2250, -678}, {61, 111, 246, 255} }},
-	{{ {265, 26, 28}, 0, {2694, -374}, {73, 96, 217, 255} }},
-	{{ {249, 25, 5}, 0, {2242, 70}, {30, 99, 182, 255} }},
-	{{ {223, 56, 39}, 0, {1968, -646}, {234, 119, 216, 255} }},
-	{{ {229, 24, 7}, 0, {1846, -4}, {231, 85, 165, 255} }},
-	{{ {199, 24, 22}, 0, {1414, -332}, {190, 86, 189, 255} }},
-	{{ {189, 25, 40}, 0, {1234, -694}, {170, 93, 245, 255} }},
-	{{ {193, 25, 55}, 0, {1308, -1088}, {161, 80, 25, 255} }},
-	{{ {203, 26, 70}, 0, {1400, -1358}, {167, 45, 79, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_15[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_15 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(6, 4, 7, 0),
-	gsSP1Triangle(8, 7, 4, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(7, 10, 6, 0),
-	gsSP1Triangle(11, 6, 10, 0),
-	gsSP1Triangle(6, 11, 5, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 12, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_15 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(1, 4, 5, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(2, 5, 7, 0),
-	gsSP1Triangle(5, 2, 1, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 8, 11, 0),
-	gsSP1Triangle(8, 12, 11, 0),
-	gsSP1Triangle(8, 13, 12, 0),
-	gsSP1Triangle(14, 13, 8, 0),
-	gsSP1Triangle(15, 14, 8, 0),
-	gsSP1Triangle(10, 15, 8, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_15 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(0, 3, 4, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 7, 0, 0),
-	gsSP1Triangle(8, 7, 4, 0),
-	gsSP1Triangle(9, 8, 4, 0),
-	gsSP1Triangle(7, 10, 0, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_15 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 4, 2, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(4, 7, 8, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(8, 11, 12, 0),
-	gsSP1Triangle(8, 12, 4, 0),
-	gsSP1Triangle(12, 2, 4, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_15 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 0, 3, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(0, 5, 4, 0),
-	gsSP1Triangle(6, 5, 0, 0),
-	gsSP1Triangle(3, 4, 7, 0),
-	gsSP1Triangle(3, 7, 8, 0),
-	gsSP1Triangle(1, 9, 2, 0),
-	gsSP1Triangle(1, 10, 9, 0),
-	gsSP1Triangle(1, 11, 10, 0),
-	gsSP1Triangle(8, 11, 1, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_15 + 80, 13, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(0, 3, 4, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(9, 10, 7, 0),
-	gsSP1Triangle(7, 10, 11, 0),
-	gsSP1Triangle(11, 0, 7, 0),
-	gsSP1Triangle(12, 0, 11, 0),
-	gsSP1Triangle(4, 7, 0, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_16[3] = {
-	{{ {-155, 0, 327}, 0, {-232, 86}, {239, 125, 243, 255} }},
-	{{ {-164, -4, 319}, 0, {-628, 306}, {214, 119, 243, 255} }},
-	{{ {-157, 0, 332}, 0, {-378, -340}, {236, 120, 37, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_16[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_16 + 0, 3, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17[224] = {
-	{{ {-152, 6, 52}, 0, {956, 18}, {0, 20, 131, 255} }},
-	{{ {-152, 24, 59}, 0, {454, 2068}, {0, 127, 0, 255} }},
-	{{ {-145, 6, 59}, 0, {-16, 18}, {125, 20, 0, 255} }},
-	{{ {-152, 6, 66}, 0, {974, 18}, {0, 20, 125, 255} }},
-	{{ {-152, 24, 59}, 0, {472, 2068}, {0, 127, 0, 255} }},
-	{{ {-158, 6, 59}, 0, {-30, 18}, {131, 20, 0, 255} }},
-	{{ {-158, 6, 59}, 0, {956, 18}, {131, 20, 0, 255} }},
-	{{ {-152, 6, 52}, 0, {-16, 18}, {0, 20, 131, 255} }},
-	{{ {-145, 6, 59}, 0, {956, 18}, {125, 20, 0, 255} }},
-	{{ {-152, 6, 66}, 0, {-16, 18}, {0, 20, 125, 255} }},
-	{{ {-160, 76, -260}, 0, {-16, 426}, {176, 90, 40, 255} }},
-	{{ {-158, 76, -261}, 0, {-16, 18}, {80, 90, 215, 255} }},
-	{{ {-196, 76, -331}, 0, {12216, 426}, {157, 73, 224, 255} }},
-	{{ {-193, 76, -332}, 0, {12216, 18}, {32, 73, 157, 255} }},
-	{{ {-160, 74, -260}, 0, {-16, 426}, {176, 166, 40, 255} }},
-	{{ {-196, 74, -331}, 0, {12216, 426}, {158, 182, 224, 255} }},
-	{{ {-193, 74, -332}, 0, {12216, 18}, {32, 182, 158, 255} }},
-	{{ {-158, 74, -261}, 0, {-16, 18}, {80, 166, 216, 255} }},
-	{{ {-158, 76, -261}, 0, {-16, 426}, {80, 90, 215, 255} }},
-	{{ {-193, 76, -332}, 0, {12216, 426}, {32, 73, 157, 255} }},
-	{{ {-160, 76, -260}, 0, {974, 18}, {176, 90, 40, 255} }},
-	{{ {-196, 76, -331}, 0, {-11288, 18}, {157, 73, 224, 255} }},
-	{{ {-160, 74, -260}, 0, {974, -388}, {176, 166, 40, 255} }},
-	{{ {-196, 74, -331}, 0, {-11288, -388}, {158, 182, 224, 255} }},
-	{{ {-160, 42, -260}, 0, {-16, 426}, {224, 74, 98, 255} }},
-	{{ {-158, 42, -261}, 0, {-16, 18}, {98, 74, 32, 255} }},
-	{{ {-196, 42, -331}, 0, {12216, 426}, {157, 73, 224, 255} }},
-	{{ {-193, 42, -332}, 0, {12216, 18}, {32, 73, 157, 255} }},
-	{{ {-196, 42, -331}, 0, {-11288, 18}, {157, 73, 224, 255} }},
-	{{ {-196, 39, -331}, 0, {-11288, -388}, {165, 60, 65, 255} }},
-	{{ {-160, 39, -260}, 0, {974, -388}, {174, 85, 48, 255} }},
-	{{ {-160, 42, -260}, 0, {974, 18}, {224, 74, 98, 255} }},
-	{{ {-193, 42, -332}, 0, {12216, 426}, {32, 73, 157, 255} }},
-	{{ {-158, 42, -261}, 0, {-16, 426}, {98, 74, 32, 255} }},
-	{{ {-193, 39, -332}, 0, {12216, 18}, {15, 126, 247, 255} }},
-	{{ {-158, 39, -261}, 0, {-16, 18}, {51, 115, 16, 255} }},
-	{{ {-85, 77, -113}, 0, {22436, 18}, {224, 74, 98, 255} }},
-	{{ {-151, 76, -242}, 0, {-16, 18}, {176, 90, 40, 255} }},
-	{{ {-85, 74, -113}, 0, {22436, -388}, {224, 183, 99, 255} }},
-	{{ {-151, 74, -242}, 0, {-16, -388}, {176, 166, 41, 255} }},
-	{{ {-196, 42, -331}, 0, {974, -12244}, {157, 73, 224, 255} }},
-	{{ {-193, 42, -332}, 0, {-16, -12244}, {32, 73, 157, 255} }},
-	{{ {-196, 39, -331}, 0, {974, -13266}, {165, 60, 65, 255} }},
-	{{ {-193, 39, -332}, 0, {-16, -13266}, {15, 126, 247, 255} }},
-	{{ {-158, 42, -261}, 0, {360, 1008}, {98, 74, 32, 255} }},
-	{{ {-160, 42, -260}, 0, {-16, 1008}, {224, 74, 98, 255} }},
-	{{ {-158, 39, -261}, 0, {360, 632}, {51, 115, 16, 255} }},
-	{{ {-160, 39, -260}, 0, {-16, 632}, {174, 85, 48, 255} }},
-	{{ {-83, 74, -114}, 0, {974, 18}, {99, 183, 32, 255} }},
-	{{ {-85, 74, -113}, 0, {566, 18}, {224, 183, 99, 255} }},
-	{{ {-149, 74, -243}, 0, {974, 22502}, {80, 166, 216, 255} }},
-	{{ {-151, 74, -242}, 0, {566, 22502}, {176, 166, 41, 255} }},
-	{{ {-151, 42, -242}, 0, {-16, 18}, {157, 73, 224, 255} }},
-	{{ {-151, 39, -242}, 0, {-16, -388}, {157, 73, 224, 255} }},
-	{{ {-85, 40, -113}, 0, {22436, -388}, {192, 17, 109, 255} }},
-	{{ {-85, 42, -113}, 0, {22436, 18}, {224, 74, 98, 255} }},
-	{{ {-83, 77, -114}, 0, {974, 18}, {98, 74, 32, 255} }},
-	{{ {-149, 76, -243}, 0, {974, 22502}, {80, 90, 215, 255} }},
-	{{ {-151, 76, -242}, 0, {566, 22502}, {176, 90, 40, 255} }},
-	{{ {-85, 77, -113}, 0, {566, 18}, {224, 74, 98, 255} }},
-	{{ {-149, 76, -243}, 0, {974, 426}, {80, 90, 215, 255} }},
-	{{ {-83, 77, -114}, 0, {-21508, 426}, {98, 74, 32, 255} }},
-	{{ {-149, 74, -243}, 0, {974, 18}, {80, 166, 216, 255} }},
-	{{ {-83, 74, -114}, 0, {-21508, 18}, {99, 183, 32, 255} }},
-	{{ {-85, 42, -113}, 0, {-16, 1008}, {224, 74, 98, 255} }},
-	{{ {-85, 40, -113}, 0, {-16, 632}, {192, 17, 109, 255} }},
-	{{ {-83, 40, -114}, 0, {360, 632}, {110, 64, 249, 255} }},
-	{{ {-83, 42, -114}, 0, {360, 1008}, {98, 74, 32, 255} }},
-	{{ {-151, 42, -242}, 0, {360, 1008}, {157, 73, 224, 255} }},
-	{{ {-149, 42, -243}, 0, {-16, 1008}, {32, 73, 157, 255} }},
-	{{ {-151, 39, -242}, 0, {360, 632}, {157, 73, 224, 255} }},
-	{{ {-149, 39, -243}, 0, {-16, 632}, {37, 113, 211, 255} }},
-	{{ {-83, 42, -114}, 0, {-21508, 426}, {98, 74, 32, 255} }},
-	{{ {-83, 40, -114}, 0, {-21508, 18}, {110, 64, 249, 255} }},
-	{{ {-149, 39, -243}, 0, {974, 18}, {37, 113, 211, 255} }},
-	{{ {-149, 42, -243}, 0, {974, 426}, {32, 73, 157, 255} }},
-	{{ {-83, 42, -114}, 0, {974, 18}, {98, 74, 32, 255} }},
-	{{ {-149, 42, -243}, 0, {974, 22502}, {32, 73, 157, 255} }},
-	{{ {-151, 42, -242}, 0, {566, 22502}, {157, 73, 224, 255} }},
-	{{ {-85, 42, -113}, 0, {566, 18}, {224, 74, 98, 255} }},
-	{{ {-160, 74, -260}, 0, {-16, 632}, {176, 166, 40, 255} }},
-	{{ {-151, 74, -242}, 0, {3018, 632}, {176, 166, 41, 255} }},
-	{{ {-151, 76, -242}, 0, {3018, 1008}, {176, 90, 40, 255} }},
-	{{ {-160, 76, -260}, 0, {-16, 1008}, {176, 90, 40, 255} }},
-	{{ {-83, 77, -114}, 0, {360, 1008}, {98, 74, 32, 255} }},
-	{{ {-85, 77, -113}, 0, {-16, 1008}, {224, 74, 98, 255} }},
-	{{ {-83, 74, -114}, 0, {360, 632}, {99, 183, 32, 255} }},
-	{{ {-85, 74, -113}, 0, {-16, 632}, {224, 183, 99, 255} }},
-	{{ {-193, 76, -332}, 0, {-16, 1008}, {32, 73, 157, 255} }},
-	{{ {-193, 74, -332}, 0, {-16, 18}, {32, 182, 158, 255} }},
-	{{ {-196, 74, -331}, 0, {974, 18}, {158, 182, 224, 255} }},
-	{{ {-196, 76, -331}, 0, {974, 1008}, {157, 73, 224, 255} }},
-	{{ {-332, -32, 290}, 0, {974, -1514}, {73, 74, 73, 255} }},
-	{{ {-332, -6, 290}, 0, {974, 1008}, {38, 115, 38, 255} }},
-	{{ {-332, -6, 300}, 0, {-16, 1008}, {38, 115, 218, 255} }},
-	{{ {-332, -32, 300}, 0, {-16, -1514}, {73, 73, 182, 255} }},
-	{{ {-158, 76, -261}, 0, {-16, 1008}, {80, 90, 215, 255} }},
-	{{ {-160, 76, -260}, 0, {-16, 632}, {176, 90, 40, 255} }},
-	{{ {-149, 76, -243}, 0, {3018, 1008}, {80, 90, 215, 255} }},
-	{{ {-151, 76, -242}, 0, {3018, 632}, {176, 90, 40, 255} }},
-	{{ {-158, 74, -261}, 0, {3018, 632}, {80, 166, 216, 255} }},
-	{{ {-158, 76, -261}, 0, {3018, 1008}, {80, 90, 215, 255} }},
-	{{ {-149, 74, -243}, 0, {-16, 632}, {80, 166, 216, 255} }},
-	{{ {-149, 76, -243}, 0, {-16, 1008}, {80, 90, 215, 255} }},
-	{{ {-160, 74, -260}, 0, {3018, 18}, {176, 166, 40, 255} }},
-	{{ {-158, 74, -261}, 0, {3018, 426}, {80, 166, 216, 255} }},
-	{{ {-151, 74, -242}, 0, {-16, 18}, {176, 166, 41, 255} }},
-	{{ {-149, 74, -243}, 0, {-16, 426}, {80, 166, 216, 255} }},
-	{{ {-332, -32, 300}, 0, {974, -1512}, {73, 73, 182, 255} }},
-	{{ {-332, -6, 300}, 0, {974, 1008}, {38, 115, 218, 255} }},
-	{{ {-321, -6, 300}, 0, {-16, 1008}, {218, 115, 218, 255} }},
-	{{ {-321, -32, 300}, 0, {-16, -1512}, {182, 73, 182, 255} }},
-	{{ {-321, -32, 290}, 0, {974, -1514}, {183, 73, 73, 255} }},
-	{{ {-321, -6, 290}, 0, {974, 1008}, {218, 115, 38, 255} }},
-	{{ {-332, -6, 290}, 0, {-16, 1008}, {38, 115, 38, 255} }},
-	{{ {-332, -32, 290}, 0, {-16, -1514}, {73, 74, 73, 255} }},
-	{{ {-321, -32, 300}, 0, {974, -1512}, {182, 73, 182, 255} }},
-	{{ {-321, -6, 300}, 0, {974, 1008}, {218, 115, 218, 255} }},
-	{{ {-321, -6, 290}, 0, {-16, 1008}, {218, 115, 38, 255} }},
-	{{ {-321, -32, 290}, 0, {-16, -1512}, {183, 73, 73, 255} }},
-	{{ {-297, 29, -181}, 0, {974, -1514}, {73, 74, 73, 255} }},
-	{{ {-297, 55, -181}, 0, {974, 1008}, {38, 115, 38, 255} }},
-	{{ {-297, 55, -171}, 0, {-16, 1008}, {38, 115, 218, 255} }},
-	{{ {-297, 29, -171}, 0, {-16, -1514}, {73, 73, 182, 255} }},
-	{{ {-321, -32, 300}, 0, {974, 1008}, {182, 73, 182, 255} }},
-	{{ {-321, -32, 290}, 0, {-16, 1008}, {183, 73, 73, 255} }},
-	{{ {-332, -32, 300}, 0, {974, 18}, {73, 73, 182, 255} }},
-	{{ {-332, -32, 290}, 0, {-16, 18}, {73, 74, 73, 255} }},
-	{{ {-297, 29, -181}, 0, {-16, 18}, {73, 74, 73, 255} }},
-	{{ {-297, 29, -171}, 0, {974, 18}, {73, 73, 182, 255} }},
-	{{ {-287, 29, -181}, 0, {-16, 1008}, {183, 73, 73, 255} }},
-	{{ {-287, 29, -171}, 0, {974, 1008}, {182, 73, 182, 255} }},
-	{{ {-287, 29, -181}, 0, {974, -1514}, {183, 73, 73, 255} }},
-	{{ {-287, 55, -181}, 0, {974, 1008}, {218, 115, 38, 255} }},
-	{{ {-297, 55, -181}, 0, {-16, 1008}, {38, 115, 38, 255} }},
-	{{ {-297, 29, -181}, 0, {-16, -1514}, {73, 74, 73, 255} }},
-	{{ {-287, 29, -171}, 0, {-16, -1512}, {182, 73, 182, 255} }},
-	{{ {-297, 29, -171}, 0, {974, -1512}, {73, 73, 182, 255} }},
-	{{ {-287, 55, -171}, 0, {-16, 1008}, {218, 115, 218, 255} }},
-	{{ {-297, 55, -171}, 0, {974, 1008}, {38, 115, 218, 255} }},
-	{{ {-287, 29, -171}, 0, {974, -1512}, {182, 73, 182, 255} }},
-	{{ {-287, 55, -171}, 0, {974, 1008}, {218, 115, 218, 255} }},
-	{{ {-287, 55, -181}, 0, {-16, 1008}, {218, 115, 38, 255} }},
-	{{ {-287, 29, -181}, 0, {-16, -1512}, {183, 73, 73, 255} }},
-	{{ {-145, 6, 59}, 0, {-30, 984}, {125, 20, 0, 255} }},
-	{{ {-145, -13, 59}, 0, {-30, -1002}, {127, 0, 0, 255} }},
-	{{ {-152, -13, 52}, 0, {974, -1002}, {0, 0, 129, 255} }},
-	{{ {-152, 6, 52}, 0, {974, 984}, {0, 20, 131, 255} }},
-	{{ {-158, 6, 59}, 0, {956, 1008}, {131, 20, 0, 255} }},
-	{{ {-152, 6, 52}, 0, {-16, 1008}, {0, 20, 131, 255} }},
-	{{ {-158, -13, 59}, 0, {956, -946}, {129, 0, 0, 255} }},
-	{{ {-152, -13, 52}, 0, {-16, -946}, {0, 0, 129, 255} }},
-	{{ {-158, 6, 59}, 0, {-16, 1008}, {131, 20, 0, 255} }},
-	{{ {-158, -13, 59}, 0, {-16, -946}, {129, 0, 0, 255} }},
-	{{ {-152, -13, 66}, 0, {956, -946}, {0, 0, 127, 255} }},
-	{{ {-152, 6, 66}, 0, {956, 1008}, {0, 20, 125, 255} }},
-	{{ {-152, 6, 66}, 0, {-30, 984}, {0, 20, 125, 255} }},
-	{{ {-152, -13, 66}, 0, {-30, -1002}, {0, 0, 127, 255} }},
-	{{ {-145, -13, 59}, 0, {974, -1002}, {127, 0, 0, 255} }},
-	{{ {-145, 6, 59}, 0, {974, 984}, {125, 20, 0, 255} }},
-	{{ {41, -12, 257}, 0, {974, 18}, {0, 127, 0, 255} }},
-	{{ {60, -12, 231}, 0, {-16, 1008}, {165, 80, 37, 255} }},
-	{{ {41, -12, 231}, 0, {-16, 18}, {0, 127, 0, 255} }},
-	{{ {60, -12, 257}, 0, {974, 1008}, {170, 77, 203, 255} }},
-	{{ {289, 68, -364}, 0, {974, -1514}, {73, 74, 73, 255} }},
-	{{ {289, 94, -364}, 0, {974, 1008}, {46, 108, 48, 255} }},
-	{{ {289, 94, -353}, 0, {-16, 1008}, {47, 112, 218, 255} }},
-	{{ {289, 68, -353}, 0, {-16, -1514}, {73, 73, 182, 255} }},
-	{{ {289, 68, -364}, 0, {-16, -1514}, {73, 74, 73, 255} }},
-	{{ {300, 68, -364}, 0, {974, -1514}, {183, 73, 73, 255} }},
-	{{ {289, 94, -364}, 0, {-16, 1008}, {46, 108, 48, 255} }},
-	{{ {300, 94, -364}, 0, {974, 1008}, {218, 115, 38, 255} }},
-	{{ {289, 68, -353}, 0, {-16, 18}, {73, 73, 182, 255} }},
-	{{ {300, 68, -353}, 0, {974, 18}, {182, 73, 182, 255} }},
-	{{ {289, 68, -364}, 0, {-16, 1008}, {73, 74, 73, 255} }},
-	{{ {300, 68, -364}, 0, {974, 1008}, {183, 73, 73, 255} }},
-	{{ {181, 119, -126}, 0, {-16, -1002}, {73, 74, 73, 255} }},
-	{{ {181, 146, -126}, 0, {-16, 1276}, {15, 126, 7, 255} }},
-	{{ {181, 146, -116}, 0, {974, 1276}, {33, 119, 227, 255} }},
-	{{ {181, 119, -116}, 0, {974, -1002}, {73, 73, 182, 255} }},
-	{{ {300, 68, -353}, 0, {-16, -1514}, {182, 73, 182, 255} }},
-	{{ {289, 68, -353}, 0, {974, -1514}, {73, 73, 182, 255} }},
-	{{ {300, 94, -353}, 0, {-16, 1008}, {221, 117, 220, 255} }},
-	{{ {289, 94, -353}, 0, {974, 1008}, {47, 112, 218, 255} }},
-	{{ {300, 68, -364}, 0, {-16, -1514}, {183, 73, 73, 255} }},
-	{{ {300, 68, -353}, 0, {974, -1514}, {182, 73, 182, 255} }},
-	{{ {300, 94, -364}, 0, {-16, 1008}, {218, 115, 38, 255} }},
-	{{ {300, 94, -353}, 0, {974, 1008}, {221, 117, 220, 255} }},
-	{{ {181, 119, -116}, 0, {-16, 18}, {73, 73, 182, 255} }},
-	{{ {191, 119, -116}, 0, {974, 18}, {182, 73, 182, 255} }},
-	{{ {191, 119, -126}, 0, {974, 1008}, {183, 73, 73, 255} }},
-	{{ {181, 119, -126}, 0, {-16, 1008}, {73, 74, 73, 255} }},
-	{{ {181, 119, -126}, 0, {974, -1238}, {73, 74, 73, 255} }},
-	{{ {191, 119, -126}, 0, {-16, -1238}, {183, 73, 73, 255} }},
-	{{ {181, 146, -126}, 0, {974, 1008}, {15, 126, 7, 255} }},
-	{{ {191, 146, -126}, 0, {-16, 1008}, {217, 115, 39, 255} }},
-	{{ {191, 119, -116}, 0, {-16, -1238}, {182, 73, 182, 255} }},
-	{{ {181, 119, -116}, 0, {974, -1238}, {73, 73, 182, 255} }},
-	{{ {191, 146, -116}, 0, {-16, 1008}, {224, 122, 244, 255} }},
-	{{ {181, 146, -116}, 0, {974, 1008}, {33, 119, 227, 255} }},
-	{{ {191, 119, -126}, 0, {-16, -1002}, {183, 73, 73, 255} }},
-	{{ {191, 119, -116}, 0, {974, -1002}, {182, 73, 182, 255} }},
-	{{ {191, 146, -126}, 0, {-16, 1276}, {217, 115, 39, 255} }},
-	{{ {191, 146, -116}, 0, {974, 1276}, {224, 122, 244, 255} }},
-	{{ {197, 120, 64}, 0, {974, -1514}, {183, 73, 73, 255} }},
-	{{ {197, 146, 64}, 0, {974, 1008}, {218, 115, 38, 255} }},
-	{{ {186, 146, 64}, 0, {-16, 1008}, {38, 115, 38, 255} }},
-	{{ {186, 120, 64}, 0, {-16, -1512}, {73, 74, 73, 255} }},
-	{{ {186, 120, 74}, 0, {974, 1008}, {73, 73, 182, 255} }},
-	{{ {197, 120, 74}, 0, {-16, 1008}, {182, 73, 182, 255} }},
-	{{ {197, 120, 64}, 0, {-16, 18}, {183, 73, 73, 255} }},
-	{{ {186, 120, 64}, 0, {974, 18}, {73, 74, 73, 255} }},
-	{{ {197, 120, 74}, 0, {974, -1514}, {182, 73, 182, 255} }},
-	{{ {197, 146, 74}, 0, {974, 1008}, {218, 115, 218, 255} }},
-	{{ {197, 146, 64}, 0, {-16, 1008}, {218, 115, 38, 255} }},
-	{{ {197, 120, 64}, 0, {-16, -1512}, {183, 73, 73, 255} }},
-	{{ {197, 120, 74}, 0, {-16, -1512}, {182, 73, 182, 255} }},
-	{{ {186, 120, 74}, 0, {974, -1514}, {73, 73, 182, 255} }},
-	{{ {197, 146, 74}, 0, {-16, 1008}, {218, 115, 218, 255} }},
-	{{ {186, 146, 74}, 0, {974, 1008}, {38, 115, 218, 255} }},
-	{{ {186, 120, 74}, 0, {-16, -1512}, {73, 73, 182, 255} }},
-	{{ {186, 120, 64}, 0, {974, -1514}, {73, 74, 73, 255} }},
-	{{ {186, 146, 74}, 0, {-16, 1008}, {38, 115, 218, 255} }},
-	{{ {186, 146, 64}, 0, {974, 1008}, {38, 115, 38, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_17[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 0, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 1, 7, 0),
-	gsSP1Triangle(8, 1, 9, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 14, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(5, 4, 2, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 28, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 44, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 60, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 76, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 92, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 108, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 124, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 140, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 156, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 5, 4, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 172, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 188, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 204, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_17 + 220, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_18[27] = {
-	{{ {-321, -6, 300}, 0, {948, -1954}, {218, 115, 218, 255} }},
-	{{ {-332, -6, 300}, 0, {130, -1954}, {38, 115, 218, 255} }},
-	{{ {-334, -6, 329}, 0, {-16, -4132}, {246, 122, 34, 255} }},
-	{{ {-355, -6, 306}, 0, {-1656, -2408}, {231, 124, 11, 255} }},
-	{{ {-355, -6, 284}, 0, {-1656, -682}, {231, 124, 245, 255} }},
-	{{ {-332, -6, 290}, 0, {130, -1136}, {38, 115, 38, 255} }},
-	{{ {-334, -6, 262}, 0, {-16, 1008}, {246, 122, 222, 255} }},
-	{{ {-321, -6, 290}, 0, {948, -1136}, {218, 115, 38, 255} }},
-	{{ {-319, -6, 262}, 0, {1128, 1008}, {10, 122, 222, 255} }},
-	{{ {-298, -6, 284}, 0, {2736, -682}, {25, 124, 245, 255} }},
-	{{ {-298, -6, 306}, 0, {2736, -2408}, {25, 124, 11, 255} }},
-	{{ {-319, -6, 329}, 0, {1128, -4132}, {10, 122, 34, 255} }},
-	{{ {-310, -12, 340}, 0, {1818, -4994}, {8, 125, 19, 255} }},
-	{{ {-343, -12, 340}, 0, {-736, -4994}, {247, 125, 19, 255} }},
-	{{ {-373, -13, 310}, 0, {-3036, -2694}, {240, 126, 5, 255} }},
-	{{ {-373, -13, 280}, 0, {-3036, -396}, {240, 126, 250, 255} }},
-	{{ {-334, -6, 262}, 0, {-16, 1008}, {246, 122, 222, 255} }},
-	{{ {-343, -13, 251}, 0, {-736, 1902}, {247, 125, 237, 255} }},
-	{{ {-373, -13, 280}, 0, {-3036, -396}, {240, 126, 250, 255} }},
-	{{ {-319, -6, 262}, 0, {1128, 1008}, {10, 122, 222, 255} }},
-	{{ {-310, -13, 251}, 0, {1818, 1902}, {8, 125, 237, 255} }},
-	{{ {-280, -12, 280}, 0, {4116, -396}, {15, 126, 250, 255} }},
-	{{ {-298, -6, 284}, 0, {2736, -682}, {25, 124, 245, 255} }},
-	{{ {-298, -6, 306}, 0, {2736, -2408}, {25, 124, 11, 255} }},
-	{{ {-280, -12, 310}, 0, {4116, -2694}, {15, 126, 5, 255} }},
-	{{ {-319, -6, 329}, 0, {1128, -4132}, {10, 122, 34, 255} }},
-	{{ {-310, -12, 340}, 0, {1818, -4994}, {8, 125, 19, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_18[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_18 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(1, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(9, 8, 7, 0),
-	gsSP1Triangle(10, 9, 7, 0),
-	gsSP1Triangle(0, 10, 7, 0),
-	gsSP1Triangle(10, 0, 11, 0),
-	gsSP1Triangle(11, 0, 2, 0),
-	gsSP1Triangle(11, 2, 12, 0),
-	gsSP1Triangle(2, 13, 12, 0),
-	gsSP1Triangle(2, 14, 13, 0),
-	gsSP1Triangle(3, 14, 2, 0),
-	gsSP1Triangle(3, 4, 14, 0),
-	gsSP1Triangle(4, 15, 14, 0),
-	gsSP1Triangle(4, 6, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_18 + 16, 11, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(6, 5, 3, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(7, 8, 5, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_19[32] = {
-	{{ {138, 140, -91}, 0, {-16, -976}, {88, 74, 203, 255} }},
-	{{ {136, 140, -83}, 0, {954, -976}, {52, 75, 89, 255} }},
-	{{ {138, 139, -91}, 0, {-16, 20}, {90, 184, 203, 255} }},
-	{{ {136, 139, -83}, 0, {954, 20}, {54, 184, 90, 255} }},
-	{{ {136, 140, -83}, 0, {464, 2072}, {52, 75, 89, 255} }},
-	{{ {91, 139, -94}, 0, {202, 12}, {166, 72, 53, 255} }},
-	{{ {136, 139, -83}, 0, {212, 2072}, {54, 184, 90, 255} }},
-	{{ {91, 138, -94}, 0, {-16, 12}, {168, 182, 53, 255} }},
-	{{ {91, 139, -94}, 0, {1120, 60}, {166, 72, 53, 255} }},
-	{{ {93, 139, -101}, 0, {118, 60}, {202, 72, 166, 255} }},
-	{{ {91, 138, -94}, 0, {1120, 1064}, {168, 182, 53, 255} }},
-	{{ {93, 138, -101}, 0, {118, 1064}, {204, 181, 167, 255} }},
-	{{ {93, 139, -101}, 0, {-16, 4}, {202, 72, 166, 255} }},
-	{{ {91, 139, -94}, 0, {954, -8}, {166, 72, 53, 255} }},
-	{{ {138, 140, -91}, 0, {-16, 2032}, {88, 74, 203, 255} }},
-	{{ {136, 140, -83}, 0, {954, 2052}, {52, 75, 89, 255} }},
-	{{ {138, 140, -91}, 0, {464, 2084}, {88, 74, 203, 255} }},
-	{{ {138, 139, -91}, 0, {212, 2084}, {90, 184, 203, 255} }},
-	{{ {93, 138, -101}, 0, {-16, 20}, {204, 181, 167, 255} }},
-	{{ {93, 139, -101}, 0, {202, 20}, {202, 72, 166, 255} }},
-	{{ {93, 138, -101}, 0, {-16, 0}, {204, 181, 167, 255} }},
-	{{ {138, 139, -91}, 0, {-16, 2032}, {90, 184, 203, 255} }},
-	{{ {136, 139, -83}, 0, {954, 2052}, {54, 184, 90, 255} }},
-	{{ {91, 138, -94}, 0, {954, -8}, {168, 182, 53, 255} }},
-	{{ {7, 25, 310}, 0, {6026, 20}, {145, 217, 49, 255} }},
-	{{ {-80, -2, 310}, 0, {-1020, 20}, {91, 189, 57, 255} }},
-	{{ {7, 25, 283}, 0, {6024, 2032}, {198, 221, 148, 255} }},
-	{{ {7, 28, 310}, 0, {6084, 20}, {207, 113, 31, 255} }},
-	{{ {-80, 1, 310}, 0, {-962, 20}, {15, 110, 62, 255} }},
-	{{ {7, 27, 283}, 0, {6084, 2032}, {224, 98, 182, 255} }},
-	{{ {-80, 1, 283}, 0, {-962, 2032}, {16, 109, 193, 255} }},
-	{{ {-80, -2, 283}, 0, {-1022, 2060}, {91, 188, 199, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_19[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_19 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_19 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(7, 4, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 11, 9, 0),
-	gsSP1Triangle(11, 12, 9, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(14, 13, 10, 0),
-	gsSP1Triangle(15, 14, 10, 0),
-	gsSP1Triangle(10, 9, 15, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_20[40] = {
-	{{ {86, 27, 257}, 0, {974, 1008}, {249, 127, 252, 255} }},
-	{{ {60, 27, 257}, 0, {-16, 18}, {198, 107, 220, 255} }},
-	{{ {60, 28, 283}, 0, {974, -1002}, {255, 127, 0, 255} }},
-	{{ {-112, 27, 112}, 0, {1004, 786}, {198, 87, 72, 255} }},
-	{{ {-112, 27, 85}, 0, {-28, -244}, {198, 86, 183, 255} }},
-	{{ {-125, 27, 99}, 0, {1004, -244}, {152, 73, 0, 255} }},
-	{{ {60, 27, 257}, 0, {-42, 2570}, {198, 107, 220, 255} }},
-	{{ {7, 27, 283}, 0, {-42, 30}, {224, 98, 182, 255} }},
-	{{ {7, 28, 310}, 0, {974, -476}, {207, 113, 31, 255} }},
-	{{ {60, 28, 283}, 0, {974, 2062}, {255, 127, 0, 255} }},
-	{{ {-80, 1, 283}, 0, {-16, 2264}, {16, 109, 193, 255} }},
-	{{ {-112, 1, 310}, 0, {974, 1008}, {0, 126, 19, 255} }},
-	{{ {-80, 1, 310}, 0, {974, 2264}, {15, 110, 62, 255} }},
-	{{ {-112, 1, 283}, 0, {-16, 1008}, {0, 125, 234, 255} }},
-	{{ {-165, -3, 283}, 0, {-16, -1008}, {242, 126, 255, 255} }},
-	{{ {-165, -3, 310}, 0, {974, -1008}, {241, 126, 5, 255} }},
-	{{ {-218, -12, 310}, 0, {974, -3072}, {247, 127, 1, 255} }},
-	{{ {-165, -3, 310}, 0, {974, -1008}, {241, 126, 5, 255} }},
-	{{ {-165, -3, 283}, 0, {-16, -1008}, {242, 126, 255, 255} }},
-	{{ {-218, -12, 284}, 0, {-16, -3072}, {244, 126, 2, 255} }},
-	{{ {-280, -12, 280}, 0, {-70, -1164}, {15, 126, 250, 255} }},
-	{{ {-280, -12, 310}, 0, {974, -1164}, {15, 126, 5, 255} }},
-	{{ {-218, -12, 284}, 0, {44, 1008}, {244, 126, 2, 255} }},
-	{{ {-218, -12, 310}, 0, {974, 1008}, {247, 127, 1, 255} }},
-	{{ {60, 27, 257}, 0, {974, 1008}, {198, 107, 220, 255} }},
-	{{ {86, 27, 257}, 0, {-16, 1008}, {249, 127, 252, 255} }},
-	{{ {60, 27, 230}, 0, {974, 18}, {186, 102, 28, 255} }},
-	{{ {86, 27, 230}, 0, {-16, 18}, {251, 127, 254, 255} }},
-	{{ {33, 27, 204}, 0, {1014, 8902}, {202, 93, 67, 255} }},
-	{{ {-112, 27, 85}, 0, {-16, -1016}, {198, 86, 183, 255} }},
-	{{ {-112, 27, 112}, 0, {1014, -308}, {198, 87, 72, 255} }},
-	{{ {33, 27, 178}, 0, {-16, 8194}, {0, 127, 0, 255} }},
-	{{ {60, 27, 230}, 0, {984, 2052}, {186, 102, 28, 255} }},
-	{{ {86, 27, 230}, 0, {-16, 3084}, {251, 127, 254, 255} }},
-	{{ {33, 27, 204}, 0, {984, -12}, {202, 93, 67, 255} }},
-	{{ {33, 27, 178}, 0, {-16, -1044}, {0, 127, 0, 255} }},
-	{{ {-178, 27, 19}, 0, {974, 18}, {0, 73, 104, 255} }},
-	{{ {-193, 27, 5}, 0, {974, 1008}, {220, 52, 110, 255} }},
-	{{ {-191, 27, 33}, 0, {-16, 18}, {70, 102, 28, 255} }},
-	{{ {-207, 27, 19}, 0, {-108, 1042}, {0, 115, 54, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_20[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_20 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 6, 8, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 11, 10, 0),
-	gsSP1Triangle(14, 11, 13, 0),
-	gsSP1Triangle(15, 11, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_20 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(15, 13, 12, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_20 + 32, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21[201] = {
-	{{ {389, 119, -417}, 0, {-1068, 4786}, {206, 90, 74, 255} }},
-	{{ {363, 94, -391}, 0, {-2032, 3710}, {232, 116, 46, 255} }},
-	{{ {384, 87, -305}, 0, {-1068, 1008}, {170, 94, 3, 255} }},
-	{{ {-455, 54, 429}, 0, {-5044, 1844}, {68, 97, 211, 255} }},
-	{{ {-403, -13, 218}, 0, {974, 18}, {64, 76, 79, 255} }},
-	{{ {-403, 40, 218}, 0, {974, 1478}, {105, 53, 47, 255} }},
-	{{ {390, 120, 217}, 0, {27886, 7512}, {136, 41, 1, 255} }},
-	{{ {390, 83, 58}, 0, {27886, 12622}, {144, 60, 246, 255} }},
-	{{ {363, 27, 6}, 0, {27034, 14326}, {187, 107, 0, 255} }},
-	{{ {364, 28, 372}, 0, {27044, 2514}, {211, 119, 250, 255} }},
-	{{ {271, 41, 217}, 0, {24054, 7512}, {30, 121, 232, 255} }},
-	{{ {218, 41, 217}, 0, {22350, 7512}, {227, 121, 229, 255} }},
-	{{ {165, 27, 125}, 0, {20648, 10494}, {249, 127, 249, 255} }},
-	{{ {152, 21, -34}, 0, {20222, 15604}, {49, 98, 64, 255} }},
-	{{ {249, 34, -91}, 0, {23356, 17438}, {41, 97, 72, 255} }},
-	{{ {291, 34, -131}, 0, {24722, 18740}, {70, 92, 53, 255} }},
-	{{ {363, 27, 6}, 0, {27034, 14326}, {187, 107, 0, 255} }},
-	{{ {330, 34, -201}, 0, {25952, 20980}, {41, 103, 63, 255} }},
-	{{ {291, 34, -131}, 0, {24722, 18740}, {70, 92, 53, 255} }},
-	{{ {384, 87, -300}, 0, {27904, 24528}, {164, 88, 8, 255} }},
-	{{ {165, 27, 125}, 0, {20648, 10494}, {249, 127, 249, 255} }},
-	{{ {152, 21, -34}, 0, {20222, 15604}, {49, 98, 64, 255} }},
-	{{ {86, 27, 230}, 0, {18092, 7086}, {251, 127, 254, 255} }},
-	{{ {54, 27, 171}, 0, {17076, 9016}, {1, 127, 1, 255} }},
-	{{ {33, 27, 178}, 0, {16390, 8790}, {0, 127, 0, 255} }},
-	{{ {-112, 27, 85}, 0, {11704, 11770}, {198, 86, 183, 255} }},
-	{{ {20, 27, 15}, 0, {15964, 14042}, {55, 98, 59, 255} }},
-	{{ {64, 27, 43}, 0, {17400, 13128}, {178, 97, 230, 255} }},
-	{{ {30, 27, 0}, 0, {16276, 14532}, {22, 74, 101, 255} }},
-	{{ {74, 27, 28}, 0, {17712, 13618}, {154, 73, 22, 255} }},
-	{{ {218, 41, 217}, 0, {22350, 7512}, {227, 121, 229, 255} }},
-	{{ {218, 41, 270}, 0, {22350, 5810}, {228, 119, 34, 255} }},
-	{{ {86, 27, 257}, 0, {18092, 6236}, {249, 127, 252, 255} }},
-	{{ {218, 41, 270}, 0, {22350, 5810}, {228, 119, 34, 255} }},
-	{{ {86, 27, 230}, 0, {18092, 7086}, {251, 127, 254, 255} }},
-	{{ {60, 28, 283}, 0, {17240, 5384}, {255, 127, 0, 255} }},
-	{{ {364, 28, 372}, 0, {27044, 2514}, {211, 119, 250, 255} }},
-	{{ {7, 28, 310}, 0, {15538, 4532}, {207, 113, 31, 255} }},
-	{{ {7, 28, 376}, 0, {15538, 2402}, {146, 64, 248, 255} }},
-	{{ {165, 94, 428}, 0, {20648, 700}, {254, 89, 165, 255} }},
-	{{ {7, 28, 402}, 0, {15538, 1550}, {212, 93, 182, 255} }},
-	{{ {-191, 21, 429}, 0, {9150, 700}, {0, 106, 186, 255} }},
-	{{ {-191, -12, 376}, 0, {9150, 2402}, {254, 122, 222, 255} }},
-	{{ {7, -12, 376}, 0, {15538, 2402}, {178, 88, 209, 255} }},
-	{{ {-52, -12, 336}, 0, {13622, 3680}, {0, 127, 0, 255} }},
-	{{ {-20, -12, 336}, 0, {14686, 3680}, {0, 127, 0, 255} }},
-	{{ {7, -12, 310}, 0, {15538, 4532}, {166, 90, 0, 255} }},
-	{{ {-80, -12, 336}, 0, {12726, 3680}, {12, 126, 14, 255} }},
-	{{ {-80, -12, 310}, 0, {12726, 4532}, {90, 90, 0, 255} }},
-	{{ {-80, -12, 336}, 0, {12726, 3680}, {12, 126, 14, 255} }},
-	{{ {-52, -12, 336}, 0, {13622, 3680}, {0, 127, 0, 255} }},
-	{{ {-80, 1, 310}, 0, {12726, 4532}, {15, 110, 62, 255} }},
-	{{ {-112, 1, 310}, 0, {11704, 4532}, {0, 126, 19, 255} }},
-	{{ {-196, 13, -331}, 0, {9016, 25182}, {204, 65, 96, 255} }},
-	{{ {-403, 39, -364}, 0, {2336, 26250}, {18, 119, 41, 255} }},
-	{{ {-246, 13, -305}, 0, {7386, 24366}, {30, 123, 5, 255} }},
-	{{ {-291, 39, -225}, 0, {5956, 21778}, {9, 122, 222, 255} }},
-	{{ {-343, 39, -192}, 0, {4252, 20714}, {237, 125, 249, 255} }},
-	{{ {-403, 40, 33}, 0, {2336, 13474}, {80, 68, 72, 255} }},
-	{{ {-337, 39, -146}, 0, {4466, 19224}, {240, 126, 10, 255} }},
-	{{ {-291, 40, -119}, 0, {5956, 18372}, {2, 125, 20, 255} }},
-	{{ {-214, 40, 12}, 0, {8432, 14142}, {42, 82, 88, 255} }},
-	{{ {-200, 40, -2}, 0, {8884, 14592}, {0, 115, 54, 255} }},
-	{{ {-178, 40, 19}, 0, {9576, 13900}, {0, 75, 103, 255} }},
-	{{ {-125, 37, -34}, 0, {11280, 15604}, {95, 81, 23, 255} }},
-	{{ {-291, 40, -119}, 0, {5956, 18372}, {2, 125, 20, 255} }},
-	{{ {-178, 40, 19}, 0, {9576, 13900}, {0, 75, 103, 255} }},
-	{{ {-130, 27, -68}, 0, {11144, 16724}, {98, 70, 214, 255} }},
-	{{ {-165, 26, -139}, 0, {10002, 19010}, {55, 112, 22, 255} }},
-	{{ {-244, 40, -146}, 0, {7446, 19224}, {30, 122, 19, 255} }},
-	{{ {-211, 27, -234}, 0, {8528, 22082}, {15, 110, 194, 255} }},
-	{{ {-244, 39, -199}, 0, {7446, 20926}, {42, 118, 236, 255} }},
-	{{ {-246, 13, -305}, 0, {7386, 24366}, {30, 123, 5, 255} }},
-	{{ {-291, 39, -225}, 0, {5956, 21778}, {9, 122, 222, 255} }},
-	{{ {363, 27, 6}, 0, {10332, -2732}, {187, 107, 0, 255} }},
-	{{ {390, 83, 58}, 0, {12128, -898}, {144, 60, 246, 255} }},
-	{{ {384, 87, -300}, 0, {574, -200}, {164, 88, 8, 255} }},
-	{{ {384, 94, -300}, 0, {586, 10}, {129, 1, 1, 255} }},
-	{{ {384, 95, -303}, 0, {508, 46}, {129, 10, 0, 255} }},
-	{{ {389, 127, -259}, 0, {1996, 1008}, {130, 17, 1, 255} }},
-	{{ {389, 127, -259}, 0, {1996, 1008}, {130, 17, 1, 255} }},
-	{{ {389, 119, -417}, 0, {-3118, 1008}, {206, 90, 74, 255} }},
-	{{ {384, 95, -303}, 0, {508, 46}, {129, 10, 0, 255} }},
-	{{ {384, 94, -305}, 0, {428, 18}, {129, 3, 253, 255} }},
-	{{ {384, 87, -305}, 0, {416, -190}, {170, 94, 3, 255} }},
-	{{ {384, 94, -300}, 0, {586, 10}, {129, 1, 1, 255} }},
-	{{ {384, 87, -300}, 0, {574, -200}, {164, 88, 8, 255} }},
-	{{ {384, 87, -300}, 0, {27904, 24528}, {164, 88, 8, 255} }},
-	{{ {384, 87, -305}, 0, {27836, 24564}, {170, 94, 3, 255} }},
-	{{ {291, 87, -131}, 0, {24722, 18740}, {69, 87, 62, 255} }},
-	{{ {289, 87, -134}, 0, {24660, 18818}, {241, 126, 252, 255} }},
-	{{ {290, 94, -331}, 0, {24680, 25184}, {255, 127, 11, 255} }},
-	{{ {300, 94, -353}, 0, {24990, 25908}, {221, 117, 220, 255} }},
-	{{ {363, 94, -391}, 0, {27034, 27100}, {232, 116, 46, 255} }},
-	{{ {300, 94, -364}, 0, {24990, 26250}, {218, 115, 38, 255} }},
-	{{ {289, 94, -364}, 0, {24650, 26250}, {46, 108, 48, 255} }},
-	{{ {289, 94, -364}, 0, {24650, 26250}, {46, 108, 48, 255} }},
-	{{ {363, 94, -391}, 0, {27034, 27100}, {232, 116, 46, 255} }},
-	{{ {125, 116, -417}, 0, {19370, 27952}, {253, 83, 96, 255} }},
-	{{ {389, 119, -417}, 0, {27886, 27952}, {206, 90, 74, 255} }},
-	{{ {289, 94, -353}, 0, {24650, 25908}, {47, 112, 218, 255} }},
-	{{ {290, 94, -331}, 0, {24680, 25184}, {255, 127, 11, 255} }},
-	{{ {125, 116, -390}, 0, {19370, 27100}, {248, 126, 11, 255} }},
-	{{ {-78, 39, -279}, 0, {12814, 23522}, {192, 107, 27, 255} }},
-	{{ {-193, 39, -332}, 0, {9092, 25222}, {15, 126, 247, 255} }},
-	{{ {-7, 158, -417}, 0, {15112, 27952}, {7, 56, 114, 255} }},
-	{{ {-245, 79, -417}, 0, {7446, 27952}, {244, 103, 73, 255} }},
-	{{ {-196, 39, -331}, 0, {9016, 25182}, {165, 60, 65, 255} }},
-	{{ {-403, 39, -364}, 0, {2336, 26250}, {18, 119, 41, 255} }},
-	{{ {-350, 118, -417}, 0, {4040, 27952}, {3, 69, 107, 255} }},
-	{{ {-456, 65, -416}, 0, {634, 27952}, {5, 114, 56, 255} }},
-	{{ {-403, 40, 218}, 0, {2336, 7512}, {105, 53, 47, 255} }},
-	{{ {-456, 65, -416}, 0, {634, 27952}, {5, 114, 56, 255} }},
-	{{ {-456, 92, 6}, 0, {634, 14326}, {96, 83, 253, 255} }},
-	{{ {-403, 40, 218}, 0, {2336, 7512}, {105, 53, 47, 255} }},
-	{{ {-455, 54, 429}, 0, {634, 700}, {68, 97, 211, 255} }},
-	{{ {-78, 39, -279}, 0, {12814, 23522}, {192, 107, 27, 255} }},
-	{{ {-193, 39, -332}, 0, {9092, 25222}, {15, 126, 247, 255} }},
-	{{ {-158, 39, -261}, 0, {10244, 22940}, {51, 115, 16, 255} }},
-	{{ {-149, 39, -243}, 0, {10532, 22370}, {37, 113, 211, 255} }},
-	{{ {-160, 39, -260}, 0, {10168, 22902}, {174, 85, 48, 255} }},
-	{{ {-151, 39, -242}, 0, {10456, 22332}, {157, 73, 224, 255} }},
-	{{ {290, 94, -331}, 0, {24680, 25184}, {255, 127, 11, 255} }},
-	{{ {300, 94, -353}, 0, {24990, 25908}, {221, 117, 220, 255} }},
-	{{ {289, 94, -353}, 0, {24650, 25908}, {47, 112, 218, 255} }},
-	{{ {291, 34, -131}, 0, {3396, -3216}, {70, 92, 53, 255} }},
-	{{ {330, 34, -201}, 0, {5206, -4496}, {41, 103, 63, 255} }},
-	{{ {384, 87, -300}, 0, {9188, -5314}, {164, 88, 8, 255} }},
-	{{ {291, 87, -131}, 0, {4538, -2024}, {69, 87, 62, 255} }},
-	{{ {291, 34, -131}, 0, {3396, -3216}, {70, 92, 53, 255} }},
-	{{ {384, 87, -300}, 0, {9188, -5314}, {164, 88, 8, 255} }},
-	{{ {249, 34, -91}, 0, {1996, -2024}, {41, 97, 72, 255} }},
-	{{ {127, 77, -32}, 0, {-168, 2018}, {31, 109, 57, 255} }},
-	{{ {152, 21, -34}, 0, {-910, 186}, {49, 98, 64, 255} }},
-	{{ {165, 94, 428}, 0, {20648, 700}, {254, 89, 165, 255} }},
-	{{ {390, 41, 428}, 0, {27886, 700}, {233, 124, 238, 255} }},
-	{{ {364, 28, 372}, 0, {27044, 2514}, {211, 119, 250, 255} }},
-	{{ {390, 120, 217}, 0, {27886, 7512}, {136, 41, 1, 255} }},
-	{{ {-191, 21, 429}, 0, {9150, 700}, {0, 106, 186, 255} }},
-	{{ {-191, -12, 376}, 0, {9150, 2402}, {254, 122, 222, 255} }},
-	{{ {-455, 54, 429}, 0, {634, 700}, {68, 97, 211, 255} }},
-	{{ {-402, -12, 376}, 0, {2336, 2402}, {43, 111, 212, 255} }},
-	{{ {-310, -12, 340}, 0, {5318, 3574}, {8, 125, 19, 255} }},
-	{{ {-218, -12, 310}, 0, {8298, 4532}, {247, 127, 1, 255} }},
-	{{ {-218, -12, 310}, 0, {8298, 4532}, {247, 127, 1, 255} }},
-	{{ {-191, -12, 376}, 0, {9150, 2402}, {254, 122, 222, 255} }},
-	{{ {-165, -3, 310}, 0, {10002, 4532}, {241, 126, 5, 255} }},
-	{{ {-112, 1, 310}, 0, {11704, 4532}, {0, 126, 19, 255} }},
-	{{ {-310, -12, 340}, 0, {5318, 3574}, {8, 125, 19, 255} }},
-	{{ {-280, -12, 310}, 0, {6276, 4532}, {15, 126, 5, 255} }},
-	{{ {271, 41, 270}, 0, {24054, 5810}, {29, 121, 27, 255} }},
-	{{ {218, 41, 270}, 0, {22350, 5810}, {228, 119, 34, 255} }},
-	{{ {364, 28, 372}, 0, {27044, 2514}, {211, 119, 250, 255} }},
-	{{ {271, 41, 217}, 0, {24054, 7512}, {30, 121, 232, 255} }},
-	{{ {-402, -12, 376}, 0, {2336, 2402}, {43, 111, 212, 255} }},
-	{{ {-403, -13, 218}, 0, {2336, 7512}, {64, 76, 79, 255} }},
-	{{ {-455, 54, 429}, 0, {634, 700}, {68, 97, 211, 255} }},
-	{{ {-373, -13, 280}, 0, {3294, 5490}, {240, 126, 250, 255} }},
-	{{ {-373, -13, 310}, 0, {3294, 4532}, {240, 126, 5, 255} }},
-	{{ {-343, -12, 340}, 0, {4252, 3574}, {247, 125, 19, 255} }},
-	{{ {-343, -13, 251}, 0, {4252, 6448}, {247, 125, 237, 255} }},
-	{{ {-403, -13, 218}, 0, {2336, 7512}, {64, 76, 79, 255} }},
-	{{ {-373, -13, 280}, 0, {3294, 5490}, {240, 126, 250, 255} }},
-	{{ {-310, -13, 251}, 0, {5318, 6448}, {8, 125, 237, 255} }},
-	{{ {-244, -13, 218}, 0, {7446, 7512}, {27, 103, 69, 255} }},
-	{{ {-218, -12, 284}, 0, {8298, 5384}, {244, 126, 2, 255} }},
-	{{ {-280, -12, 280}, 0, {6276, 5490}, {15, 126, 250, 255} }},
-	{{ {-165, -3, 283}, 0, {10002, 5384}, {242, 126, 255, 255} }},
-	{{ {-112, 1, 283}, 0, {11704, 5384}, {0, 125, 234, 255} }},
-	{{ {-80, -12, 257}, 0, {12726, 6234}, {11, 126, 241, 255} }},
-	{{ {-80, 1, 283}, 0, {12726, 5384}, {16, 109, 193, 255} }},
-	{{ {-7, 158, -417}, 0, {-3686, 1214}, {7, 56, 114, 255} }},
-	{{ {125, 116, -417}, 0, {-16, 18}, {253, 83, 96, 255} }},
-	{{ {191, 178, -417}, 0, {1792, 1710}, {0, 0, 127, 255} }},
-	{{ {389, 119, -417}, 0, {7252, 18}, {206, 90, 74, 255} }},
-	{{ {-207, 27, 19}, 0, {8656, 13916}, {0, 115, 54, 255} }},
-	{{ {-214, 27, 12}, 0, {8432, 14142}, {223, 79, 94, 255} }},
-	{{ {-403, 27, 33}, 0, {2336, 13474}, {77, 74, 69, 255} }},
-	{{ {-191, 27, 33}, 0, {9150, 13474}, {70, 102, 28, 255} }},
-	{{ {-191, 27, 165}, 0, {9150, 9216}, {109, 48, 45, 255} }},
-	{{ {-244, 27, 217}, 0, {7446, 7512}, {45, 48, 109, 255} }},
-	{{ {-403, 27, 218}, 0, {2336, 7512}, {52, 52, 104, 255} }},
-	{{ {291, 87, -131}, 0, {24722, 18740}, {69, 87, 62, 255} }},
-	{{ {289, 87, -134}, 0, {24660, 18818}, {241, 126, 252, 255} }},
-	{{ {125, 77, -34}, 0, {19350, 15624}, {206, 116, 10, 255} }},
-	{{ {127, 77, -32}, 0, {19410, 15546}, {31, 109, 57, 255} }},
-	{{ {74, 58, -73}, 0, {17718, 16880}, {218, 121, 2, 255} }},
-	{{ {197, 146, 64}, 0, {1206, -1538}, {218, 115, 38, 255} }},
-	{{ {197, 146, 74}, 0, {1560, -1334}, {218, 115, 218, 255} }},
-	{{ {271, 146, 69}, 0, {-16, 1008}, {118, 46, 0, 255} }},
-	{{ {231, 146, 138}, 0, {3018, 1008}, {59, 46, 103, 255} }},
-	{{ {197, 146, 74}, 0, {1560, -1334}, {218, 115, 218, 255} }},
-	{{ {186, 146, 74}, 0, {1764, -1688}, {38, 115, 218, 255} }},
-	{{ {231, 146, 138}, 0, {3018, 1008}, {59, 46, 103, 255} }},
-	{{ {152, 146, 138}, 0, {4550, -1614}, {197, 46, 103, 255} }},
-	{{ {112, 146, 69}, 0, {3018, -4268}, {138, 46, 0, 255} }},
-	{{ {186, 146, 64}, 0, {1410, -1892}, {38, 115, 38, 255} }},
-	{{ {152, 146, 1}, 0, {-16, -4268}, {197, 46, 153, 255} }},
-	{{ {197, 146, 64}, 0, {1206, -1538}, {218, 115, 38, 255} }},
-	{{ {231, 146, 1}, 0, {-1580, -1614}, {59, 46, 153, 255} }},
-	{{ {271, 146, 69}, 0, {-16, 1008}, {118, 46, 0, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_21[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(10, 8, 11, 0),
-	gsSP1Triangle(8, 12, 11, 0),
-	gsSP1Triangle(8, 13, 12, 0),
-	gsSP1Triangle(8, 14, 13, 0),
-	gsSP1Triangle(15, 14, 8, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(11, 10, 7, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 4, 6, 0),
-	gsSP1Triangle(15, 14, 6, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 7, 6, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 13, 11, 0),
-	gsSP1Triangle(10, 12, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(8, 6, 9, 0),
-	gsSP1Triangle(10, 9, 6, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(13, 12, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(4, 1, 3, 0),
-	gsSP1Triangle(5, 1, 4, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(13, 11, 14, 0),
-	gsSP1Triangle(11, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 80, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(3, 1, 4, 0),
-	gsSP1Triangle(2, 3, 4, 0),
-	gsSP1Triangle(5, 2, 4, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(8, 11, 10, 0),
-	gsSP1Triangle(8, 12, 11, 0),
-	gsSP1Triangle(12, 8, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(15, 14, 13, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 96, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(4, 0, 2, 0),
-	gsSP1Triangle(5, 4, 2, 0),
-	gsSP1Triangle(2, 6, 5, 0),
-	gsSP1Triangle(6, 2, 7, 0),
-	gsSP1Triangle(8, 7, 2, 0),
-	gsSP1Triangle(2, 9, 8, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 8, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(10, 13, 12, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 112, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(9, 7, 8, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 128, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 3, 4, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 12, 11, 0),
-	gsSP1Triangle(14, 13, 11, 0),
-	gsSP1Triangle(11, 15, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 144, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(4, 0, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(11, 10, 13, 0),
-	gsSP1Triangle(14, 13, 10, 0),
-	gsSP1Triangle(14, 10, 15, 0),
-	gsSP1Triangle(15, 10, 4, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 160, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(5, 7, 4, 0),
-	gsSP1Triangle(8, 4, 7, 0),
-	gsSP1Triangle(8, 9, 4, 0),
-	gsSP1Triangle(10, 9, 8, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 175, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(4, 2, 5, 0),
-	gsSP1Triangle(6, 5, 2, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 7, 9, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_21 + 191, 10, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(5, 4, 1, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(7, 6, 5, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_22[3] = {
-	{{ {-191, -12, 376}, 0, {9150, 2402}, {254, 122, 222, 255} }},
-	{{ {-80, -12, 336}, 0, {12726, 3680}, {12, 126, 14, 255} }},
-	{{ {-112, 1, 310}, 0, {11704, 4532}, {0, 126, 19, 255} }},
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1_tri_22[] = {
-	gsSPVertex(supergoomb_bobomb_battlefeild_mesh_layer_1_vtx_22 + 0, 3, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSPEndDisplayList(),
-};
-
-
-Gfx mat_supergoomb_Material_071_574B138E_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_071_574B138E_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__574B138E_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_070_41A41EE3_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_070_41A41EE3_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__41A41EE3_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_030_1FAAE88D_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_030_1FAAE88D_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__1FAAE88D_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_029_359289F2_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_029_359289F2_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__359289F2_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 252),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_028_6E3A21B_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_028_6E3A21B_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__6E3A21B_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_027_6B1A233B_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_027_6B1A233B_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__6B1A233B_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_026_6B2D96F_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_026_6B2D96F_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__6B2D96F_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_025_12436720_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_025_12436720_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__12436720_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_024_1FAAE88D_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_024_1FAAE88D_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__1FAAE88D_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_023_1FAAE88D_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_023_1FAAE88D_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__1FAAE88D_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_020_275F399C_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_020_275F399C_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__275F399C_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_019_4020CDFE_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_019_4020CDFE_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__4020CDFE_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_018_1B46C8C_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_018_1B46C8C_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__1B46C8C_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_017_6C631877_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_017_6C631877_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__6C631877_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_010_3D49A9D5_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_010_3D49A9D5_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__3D49A9D5_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_010_C1DF883_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_010_C1DF883_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb_C1DF883_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_010_C1DF883_c_bmp_001_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_010_C1DF883_c_bmp_001_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb_C1DF883_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_010_3F485258_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_010_3F485258_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__3F485258_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_010_10E99677_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_010_10E99677_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__10E99677_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_010_359289F2_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_010_359289F2_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__359289F2_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 252),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_010_6B2D96F_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_010_6B2D96F_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__6B2D96F_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_010_12436720_c_bmp_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_010_12436720_c_bmp_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__12436720_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_supergoomb_Material_010_12436720_c_bmp_001_f3d[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(supergoomb_Material_010_12436720_c_bmp_001_f3d_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, supergoomb__12436720_c_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx supergoomb_bobomb_battlefeild_mesh_layer_1[] = {
-	gsSPDisplayList(mat_supergoomb_Material_071_574B138E_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_supergoomb_Material_070_41A41EE3_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_supergoomb_Material_030_1FAAE88D_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_supergoomb_Material_029_359289F2_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_supergoomb_Material_028_6E3A21B_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_4),
-	gsSPDisplayList(mat_supergoomb_Material_027_6B1A233B_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_5),
-	gsSPDisplayList(mat_supergoomb_Material_026_6B2D96F_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_6),
-	gsSPDisplayList(mat_supergoomb_Material_025_12436720_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_7),
-	gsSPDisplayList(mat_supergoomb_Material_024_1FAAE88D_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_8),
-	gsSPDisplayList(mat_supergoomb_Material_023_1FAAE88D_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_9),
-	gsSPDisplayList(mat_supergoomb_Material_020_275F399C_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_10),
-	gsSPDisplayList(mat_supergoomb_Material_019_4020CDFE_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_11),
-	gsSPDisplayList(mat_supergoomb_Material_018_1B46C8C_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_12),
-	gsSPDisplayList(mat_supergoomb_Material_017_6C631877_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_13),
-	gsSPDisplayList(mat_supergoomb_Material_010_3D49A9D5_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_14),
-	gsSPDisplayList(mat_supergoomb_Material_010_C1DF883_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_15),
-	gsSPDisplayList(mat_supergoomb_Material_010_C1DF883_c_bmp_001_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_16),
-	gsSPDisplayList(mat_supergoomb_Material_010_3F485258_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_17),
-	gsSPDisplayList(mat_supergoomb_Material_010_10E99677_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_18),
-	gsSPDisplayList(mat_supergoomb_Material_010_359289F2_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_19),
-	gsSPDisplayList(mat_supergoomb_Material_010_6B2D96F_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_20),
-	gsSPDisplayList(mat_supergoomb_Material_010_12436720_c_bmp_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_21),
-	gsSPDisplayList(mat_supergoomb_Material_010_12436720_c_bmp_001_f3d),
-	gsSPDisplayList(supergoomb_bobomb_battlefeild_mesh_layer_1_tri_22),
-	gsSPEndDisplayList(),
-};
-
-Gfx supergoomb_material_revert_render_settings[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_LIGHTING),
-	gsSPClearGeometryMode(G_TEXTURE_GEN),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 0),
-	gsDPSetEnvColor(255, 255, 255, 255),
-	gsDPSetAlphaCompare(G_AC_NONE),
-	gsSPEndDisplayList(),
-};
-
diff --git a/data/behavior_data.c b/data/behavior_data.c
index a64876ba..946a3808 100644
--- a/data/behavior_data.c
+++ b/data/behavior_data.c
@@ -731,7 +731,6 @@ const BehaviorScript bhvChuckya[] = {
     SPAWN_OBJ(/*Model*/ MODEL_NONE, /*Behavior*/ bhvChuckyaAnchorMario),
     SET_INT(oNumLootCoins, 5),
     SET_INT(oIntangibleTimer, 0),
-    SET_FLOAT(oDrawingDistance, 20000),
     SET_HOME(),
     BEGIN_LOOP(),
         CALL_NATIVE(bhv_chuckya_loop),
@@ -4797,7 +4796,6 @@ const BehaviorScript bhvBreakableBoxSmall[] = {
     DROP_TO_FLOOR(),
     SET_HOME(),
     CALL_NATIVE(bhv_breakable_box_small_init),
-    SET_FLOAT(oDrawingDistance, 20000),
     BEGIN_LOOP(),
         SET_INT(oIntangibleTimer, 0),
         CALL_NATIVE(bhv_breakable_box_small_loop),
@@ -5118,7 +5116,6 @@ const BehaviorScript bhvGoomba[] = {
     LOAD_ANIMATIONS(oAnimations, goomba_seg8_anims_0801DA4C),
     SET_HOME(),
     SET_OBJ_PHYSICS(/*Wall hitbox radius*/ 40, /*Gravity*/ -400, /*Bounciness*/ -50, /*Drag strength*/ 1000, /*Friction*/ 1000, /*Buoyancy*/ 0, /*Unused*/ 0, 0),
-    SET_FLOAT(oDrawingDistance, 20000),
     CALL_NATIVE(bhv_goomba_init),
     BEGIN_LOOP(),
         CALL_NATIVE(bhv_goomba_update),
@@ -5250,9 +5247,10 @@ const BehaviorScript bhvWigglerBody[] = {
 const BehaviorScript bhvEnemyLakitu[] = {
     BEGIN(OBJ_LIST_PUSHABLE),
     OR_INT(oFlags, (OBJ_FLAG_COMPUTE_ANGLE_TO_MARIO | OBJ_FLAG_COMPUTE_DIST_TO_MARIO | OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE)),
+    LOAD_ANIMATIONS(oAnimations, lakitu_enemy_seg5_anims_050144D4),
+    ANIMATE(ENEMY_LAKITU_ANIM_SPAWN),
     SET_HOME(),
     SET_OBJ_PHYSICS(/*Wall hitbox radius*/ 40, /*Gravity*/ 0, /*Bounciness*/ -50, /*Drag strength*/ 0, /*Friction*/ 0, /*Buoyancy*/ 200, /*Unused*/ 0, 0),
-    CALL_NATIVE(bhv_lakitu_adopt_red_coin),
     BEGIN_LOOP(),
         CALL_NATIVE(bhv_enemy_lakitu_update),
     END_LOOP(),
@@ -6090,31 +6088,3 @@ const BehaviorScript bhvIntroScene[] = {
 };
 
 
-
-const BehaviorScript bhvTrollWaterLevel[] = {
-    BEGIN(OBJ_LIST_GENACTOR),
-    OR_INT(oFlags, (OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE)),
-    SET_FLOAT(oDrawingDistance, 30000),
-    CALL_NATIVE(bhv_troll_water_level_init),
-    BEGIN_LOOP(),
-        CALL_NATIVE(bhv_troll_water_level_loop),
-    END_LOOP(),
-};
-
-const BehaviorScript bhvSpongeCircle[] = {
-    BEGIN(OBJ_LIST_GENACTOR),
-    OR_INT(oFlags, (OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE)),
-    CALL_NATIVE(bhv_sponge_circle_init),
-    BEGIN_LOOP(),
-        CALL_NATIVE(bhv_sponge_circle_loop),
-    END_LOOP(),
-};
-
-const BehaviorScript bhvEndlessStairsMusicController[] = {
-    BEGIN(OBJ_LIST_GENACTOR),
-    OR_INT(oFlags, (OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE)),
-    CALL_NATIVE(bhv_endless_stairs_music_controller_init),
-    BEGIN_LOOP(),
-        CALL_NATIVE(bhv_endless_stairs_music_controller_loop),
-    END_LOOP(),
-};
diff --git a/include/behavior_data.h b/include/behavior_data.h
index af26bc93..9702f974 100644
--- a/include/behavior_data.h
+++ b/include/behavior_data.h
@@ -542,7 +542,3 @@ extern const BehaviorScript bhvIntroScene[];
 extern const BehaviorScript bhvUnusedFakeStar[];
 
 #endif // BEHAVIOR_DATA_H
-
-extern const BehaviorScript bhvTrollWaterLevel[];
-extern const BehaviorScript bhvSpongeCircle[];
-extern const BehaviorScript bhvEndlessStairsMusicController[];
\ No newline at end of file
diff --git a/include/config/config_cutscenes.h b/include/config/config_cutscenes.h
index d3d388ab..e39dcb7c 100644
--- a/include/config/config_cutscenes.h
+++ b/include/config/config_cutscenes.h
@@ -7,7 +7,7 @@
 // -- CUTSCENE SKIPS --
 
 // Skips the peach letter cutscene.
-//#define PEACH_SKIP
+#define PEACH_SKIP
 
 // Skips the title/splash screen (Super Mario 64 logo).
 // #define SKIP_TITLE_SCREEN
diff --git a/include/config/config_debug.h b/include/config/config_debug.h
index 63dd1056..fc5ac8e9 100644
--- a/include/config/config_debug.h
+++ b/include/config/config_debug.h
@@ -8,7 +8,7 @@
 // #define DEBUG_ALL
 
 // Disables all debug options (except PUPPYPRINT).
-//#define DISABLE_ALL
+#define DISABLE_ALL
 
 // Enables a comprehensive standalone profiler. Automatically enabled by PUPPYPRINT_DEBUG.
 // If not using PUPPYPRINT_DEBUG, press L to toggle the profiler.
@@ -18,7 +18,7 @@
 // Uncomment this define and set a test level in order to boot straight into said level.
 // This allows you to quickly test the level you're working on.
 // If you want the game to boot normally, just comment out the define again.
- #define TEST_LEVEL LEVEL_CASTLE_GROUNDS
+// #define TEST_LEVEL LEVEL_BOB
 
 // Enables debug level select. Hold L while the game boots to turn it on.
 #define DEBUG_LEVEL_SELECT
@@ -27,7 +27,7 @@
 #define ENABLE_DEBUG_FREE_MOVE
 
 // Enables a custom, enhanced performance profiler. (Enables PUPPYPRINT by default in config_safeguards).
-#define PUPPYPRINT_DEBUG 1
+// #define PUPPYPRINT_DEBUG 1
 
 // Uses cycles instead of microseconds in Puppyprint debug output.
 // #define PUPPYPRINT_DEBUG_CYCLES
@@ -41,7 +41,7 @@
 // #define VISUAL_DEBUG
 
 // Opens all courses and doors. Used for debugging purposes to unlock all content.
-//#define UNLOCK_ALL
+#define UNLOCK_ALL
 
 // Same as above, but also reads all save file flags as complete.
 // This will not overwrite existing save file data unless you save over it.
diff --git a/include/config/config_game.h b/include/config/config_game.h
index 08f7ce12..5c9456eb 100644
--- a/include/config/config_game.h
+++ b/include/config/config_game.h
@@ -42,7 +42,7 @@
 // #define GLOBAL_STAR_IDS
 
 // Number of possible unique model ID's (keep it higher than 256).
-#define MODEL_ID_COUNT 512
+#define MODEL_ID_COUNT 256
 
 // Number of supported areas per level.
 #define AREA_COUNT 8
diff --git a/include/config/config_world.h b/include/config/config_world.h
index 433c6e93..173a75da 100644
--- a/include/config/config_world.h
+++ b/include/config/config_world.h
@@ -10,7 +10,7 @@
  *
  * Uncomment this out to specifically set it, otherwise world scale will be based off of your extended bounds mode.
  */
- //#define WORLD_SCALE 3
+// #define WORLD_SCALE 1
 
 
 /**
@@ -36,7 +36,7 @@
  */
 
 // Set this to the extended bounds mode you want, then do "make clean".
-#define EXTENDED_BOUNDS_MODE 3
+#define EXTENDED_BOUNDS_MODE 1
 
 // Don't touch the stuff past this point unless you know what you're doing!
 
diff --git a/include/geo_commands.h b/include/geo_commands.h
index 9f2f252a..3735719d 100644
--- a/include/geo_commands.h
+++ b/include/geo_commands.h
@@ -55,7 +55,7 @@ enum GeoLayoutCommands {
     /*0x1B*/ GEO_CMD_COPY_VIEW,
     /*0x1C*/ GEO_CMD_NODE_HELD_OBJ,
     /*0x1D*/ GEO_CMD_NODE_SCALE,
-    /*0x1E*/ GEO_CMD_NODE_SCALE_BETTER,
+    /*0x1E*/ GEO_CMD_NOP_1E,
     /*0x1F*/ GEO_CMD_NOP_1F,
     /*0x20*/ GEO_CMD_NODE_CULLING_RADIUS,
     /*0x21*/ GEO_CMD_BONE,
@@ -438,11 +438,6 @@ enum GeoLayoutCommands {
 #define GEO_SCALE(layer, scale) \
     CMD_BBH(GEO_CMD_NODE_SCALE, layer, 0x0000), \
     CMD_W(scale)
-#define GEO_SCALE_BETTER(layer, scaleX, scaleY, scaleZ) \
-    CMD_BBH(GEO_CMD_NODE_SCALE_BETTER, layer, 0x0000), \
-    CMD_W(scaleX),\
-    CMD_W(scaleY),\
-    CMD_W(scaleZ)
 #define GEO_SCALE_WITH_DL(layer, scale, displayList) \
     CMD_BBH(GEO_CMD_NODE_SCALE, (layer | 0x80), 0x0000), \
     CMD_W(scale), \
diff --git a/include/model_ids.h b/include/model_ids.h
index b7337da4..81e92c6a 100644
--- a/include/model_ids.h
+++ b/include/model_ids.h
@@ -421,7 +421,7 @@
 // group 16
 #define MODEL_CHILL_BULLY                 0x64        // chilly_chief_geo
 #define MODEL_BIG_CHILL_BULLY             0x65        // chilly_chief_big_geo
-
+#define MODEL_MONEYBAG                    0x66        // moneybag_geo
 
 // group 17
 #define MODEL_SWOOP                       0x64        // swoop_geo
@@ -548,17 +548,6 @@
 #ifdef IA8_30FPS_COINS
 #define MODEL_SILVER_COIN                 0xE2        // silver_coin_geo
 #define MODEL_SILVER_COIN_NO_SHADOW       0xE3        // silver_coin_no_shadow_geo
-
-
-
-#define MODEL_MARIO_RAGDOLL                 0x100
-#define MODEL_MONEYBAG                    0x101        // moneybag_geo
-
-#define MODEL_TROLL_WATER_LEVEL                 0x120
-#define MODEL_SPONGE_CIRCLE                 0x121
-#define MODEL_CAPPY                 0x122
-
-
 #endif
 
 // Menu Models (overwrites Level Geometry IDs)
diff --git a/include/object_fields.h b/include/object_fields.h
index f33e85e4..2ee01bcd 100644
--- a/include/object_fields.h
+++ b/include/object_fields.h
@@ -707,7 +707,6 @@
 #define /*0x0F8*/ oEnemyLakituBlinkTimer           OBJECT_FIELD_S32(0x1C)
 #define /*0x0FC*/ oEnemyLakituSpinyCooldown        OBJECT_FIELD_S32(0x1D)
 #define /*0x100*/ oEnemyLakituFaceForwardCountdown OBJECT_FIELD_S32(0x1E)
-#define /*0x100*/ oLakituRedCoin OBJECT_FIELD_OBJ(0x1F)
 
 /* Intro Cutscene Lakitu */
 #define /*0x0F8*/ oIntroLakituSplineSegmentProgress OBJECT_FIELD_F32(0x1C)
@@ -1255,7 +1254,6 @@
 #define /*0x0FC*/ oYoshiChosenHome OBJECT_FIELD_S32(0x1D)
 #define /*0x100*/ oYoshiTargetYaw  OBJECT_FIELD_S32(0x1E)
 
-#define /*0x0F8*/ oCappyObj   OBJECT_FIELD_OBJ(0x1F)
 
 /*Custom general defines:
 
diff --git a/include/sm64.h b/include/sm64.h
index 9d0efa6f..af7b7232 100644
--- a/include/sm64.h
+++ b/include/sm64.h
@@ -357,7 +357,7 @@ enum MarioActionFlags {
 #define ACT_UNUSED_06C                 0x0000006C // (0x06C)
 #define ACT_UNUSED_06D                 0x0000006D // (0x06D)
 #define ACT_UNUSED_06E                 0x0000006E // (0x06E)
-#define ACT_RAGDOLL                 0x0000006F // (0x06F)
+#define ACT_UNUSED_06F                 0x0000006F // (0x06F)
 #define ACT_JUMP_LAND                  0x04000470 // (0x070 | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
 #define ACT_FREEFALL_LAND              0x04000471 // (0x071 | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
 #define ACT_DOUBLE_JUMP_LAND           0x04000472 // (0x072 | ACT_FLAG_MOVING | ACT_FLAG_ALLOW_FIRST_PERSON)
diff --git a/include/sounds.h b/include/sounds.h
index 7181cae3..9cf91f13 100644
--- a/include/sounds.h
+++ b/include/sounds.h
@@ -361,8 +361,6 @@ enum SoundBank {
 #define SOUND_GENERAL_GRAND_STAR_JUMP            /* 0x30740080 */ SOUND_ARG_LOAD(SOUND_BANK_GENERAL,  0x74, 0x00, SOUND_DISCRETE) // unverified
 #define SOUND_GENERAL_BOAT_ROCK                  /* 0x30750080 */ SOUND_ARG_LOAD(SOUND_BANK_GENERAL,  0x75, 0x00, SOUND_DISCRETE) // unverified
 #define SOUND_GENERAL_VANISH_SFX                 /* 0x30762080 */ SOUND_ARG_LOAD(SOUND_BANK_GENERAL,  0x76, 0x20, SOUND_DISCRETE) // unverified
-#define SOUND_RAGDOLL                /* 0x045F8080 */ SOUND_ARG_LOAD(SOUND_BANK_GENERAL,   0x77, 0x80, SOUND_NO_PRIORITY_LOSS | SOUND_DISCRETE)
-#define SOUND_SPONGE                /* 0x045F8080 */ SOUND_ARG_LOAD(SOUND_BANK_GENERAL,   0x78, 0x80, SOUND_NO_PRIORITY_LOSS | SOUND_DISCRETE)
 
 /* Environment Sound Effects */
 #define SOUND_ENV_WATERFALL1                     /* 0x40000000 */ SOUND_ARG_LOAD(SOUND_BANK_ENV,      0x00, 0x00, 0) // unverified
diff --git a/levels/castle_grounds/area_1/collision.inc.c b/levels/castle_grounds/area_1/collision.inc.c
deleted file mode 100644
index 01d21473..00000000
--- a/levels/castle_grounds/area_1/collision.inc.c
+++ /dev/null
@@ -1,1233 +0,0 @@
-const Collision castle_grounds_area_1_collision[] = {
-	COL_INIT(),
-	COL_VERTEX_INIT(605),
-	COL_VERTEX(-1970, 706, 8980),
-	COL_VERTEX(-1970, 706, 10975),
-	COL_VERTEX(-1970, 2130, 10975),
-	COL_VERTEX(-1970, 2130, 8980),
-	COL_VERTEX(-1970, 1966, 8980),
-	COL_VERTEX(-546, 706, 8980),
-	COL_VERTEX(-1258, 706, 8980),
-	COL_VERTEX(-1258, 813, 8980),
-	COL_VERTEX(-958, 1153, 8980),
-	COL_VERTEX(-1258, 1865, 8980),
-	COL_VERTEX(-546, 1938, 8980),
-	COL_VERTEX(-1024, 1287, 8980),
-	COL_VERTEX(-1258, 1293, 8980),
-	COL_VERTEX(-546, 706, 10975),
-	COL_VERTEX(-546, 2130, 8980),
-	COL_VERTEX(-546, 2130, 10975),
-	COL_VERTEX(-1258, 900, 10975),
-	COL_VERTEX(-1258, 2798, 10975),
-	COL_VERTEX(-1258, 2798, 8980),
-	COL_VERTEX(-1701, 1242, 8980),
-	COL_VERTEX(-1582, 944, 8980),
-	COL_VERTEX(-1810, 1274, 9381),
-	COL_VERTEX(-1659, 896, 9381),
-	COL_VERTEX(-951, 1331, 9381),
-	COL_VERTEX(-1247, 1339, 9381),
-	COL_VERTEX(-1610, 750, 9041),
-	COL_VERTEX(-1610, 1401, 9041),
-	COL_VERTEX(-959, 1401, 9041),
-	COL_VERTEX(-959, 750, 9041),
-	COL_VERTEX(-1247, 731, 9381),
-	COL_VERTEX(-868, 1161, 9381),
-	COL_VERTEX(-730, 2120, 8974),
-	COL_VERTEX(-730, 2046, 8974),
-	COL_VERTEX(-794, 2106, 8974),
-	COL_VERTEX(-829, 2029, 8974),
-	COL_VERTEX(-877, 2095, 8974),
-	COL_VERTEX(-956, 2010, 8974),
-	COL_VERTEX(-912, 2173, 8974),
-	COL_VERTEX(-866, 2120, 8974),
-	COL_VERTEX(-801, 2196, 8974),
-	COL_VERTEX(-1250, 1985, 8977),
-	COL_VERTEX(-1210, 2046, 8977),
-	COL_VERTEX(-1157, 2046, 8977),
-	COL_VERTEX(-1184, 1985, 8977),
-	COL_VERTEX(-1091, 2231, 8977),
-	COL_VERTEX(-1046, 2105, 8977),
-	COL_VERTEX(-1076, 2105, 8977),
-	COL_VERTEX(-1094, 2147, 8977),
-	COL_VERTEX(-1139, 2107, 8977),
-	COL_VERTEX(-1170, 2108, 8977),
-	COL_VERTEX(-1025, 2045, 8977),
-	COL_VERTEX(-1068, 2045, 8977),
-	COL_VERTEX(-1046, 1985, 8977),
-	COL_VERTEX(-1004, 1985, 8977),
-	COL_VERTEX(-1292, 2000, 8926),
-	COL_VERTEX(-1346, 2000, 8926),
-	COL_VERTEX(-1353, 2036, 8926),
-	COL_VERTEX(-1360, 2072, 8926),
-	COL_VERTEX(-1366, 2105, 8926),
-	COL_VERTEX(-1349, 2124, 8926),
-	COL_VERTEX(-1332, 2144, 8926),
-	COL_VERTEX(-1299, 2182, 8926),
-	COL_VERTEX(-1432, 2000, 8926),
-	COL_VERTEX(-1389, 2000, 8926),
-	COL_VERTEX(-1373, 2205, 8926),
-	COL_VERTEX(-1363, 2165, 8926),
-	COL_VERTEX(-1441, 2098, 8926),
-	COL_VERTEX(-1428, 2168, 8926),
-	COL_VERTEX(-1415, 2137, 8926),
-	COL_VERTEX(-1534, 2190, 8954),
-	COL_VERTEX(-1509, 2190, 8954),
-	COL_VERTEX(-1509, 2028, 8954),
-	COL_VERTEX(-1534, 2028, 8954),
-	COL_VERTEX(-1669, 2166, 8954),
-	COL_VERTEX(-1680, 2165, 8954),
-	COL_VERTEX(-1689, 2213, 8954),
-	COL_VERTEX(-1669, 2215, 8954),
-	COL_VERTEX(-1691, 2161, 8954),
-	COL_VERTEX(-1709, 2207, 8954),
-	COL_VERTEX(-1700, 2156, 8954),
-	COL_VERTEX(-1728, 2197, 8954),
-	COL_VERTEX(-1709, 2149, 8954),
-	COL_VERTEX(-1744, 2183, 8954),
-	COL_VERTEX(-1716, 2140, 8954),
-	COL_VERTEX(-1757, 2167, 8954),
-	COL_VERTEX(-1722, 2130, 8954),
-	COL_VERTEX(-1767, 2149, 8954),
-	COL_VERTEX(-1725, 2120, 8954),
-	COL_VERTEX(-1773, 2129, 8954),
-	COL_VERTEX(-1726, 2108, 8954),
-	COL_VERTEX(-1775, 2108, 8954),
-	COL_VERTEX(-1725, 2097, 8954),
-	COL_VERTEX(-1773, 2088, 8954),
-	COL_VERTEX(-1722, 2086, 8954),
-	COL_VERTEX(-1767, 2068, 8954),
-	COL_VERTEX(-1716, 2076, 8954),
-	COL_VERTEX(-1757, 2049, 8954),
-	COL_VERTEX(-1709, 2068, 8954),
-	COL_VERTEX(-1744, 2033, 8954),
-	COL_VERTEX(-1700, 2061, 8954),
-	COL_VERTEX(-1728, 2020, 8954),
-	COL_VERTEX(-1691, 2055, 8954),
-	COL_VERTEX(-1709, 2010, 8954),
-	COL_VERTEX(-1680, 2052, 8954),
-	COL_VERTEX(-1689, 2004, 8954),
-	COL_VERTEX(-1669, 2051, 8954),
-	COL_VERTEX(-1669, 2002, 8954),
-	COL_VERTEX(-1657, 2052, 8954),
-	COL_VERTEX(-1648, 2004, 8954),
-	COL_VERTEX(-1647, 2055, 8954),
-	COL_VERTEX(-1628, 2010, 8954),
-	COL_VERTEX(-1637, 2061, 8954),
-	COL_VERTEX(-1609, 2020, 8954),
-	COL_VERTEX(-1628, 2068, 8954),
-	COL_VERTEX(-1593, 2033, 8954),
-	COL_VERTEX(-1621, 2076, 8954),
-	COL_VERTEX(-1580, 2049, 8954),
-	COL_VERTEX(-1615, 2086, 8954),
-	COL_VERTEX(-1570, 2068, 8954),
-	COL_VERTEX(-1612, 2097, 8954),
-	COL_VERTEX(-1564, 2088, 8954),
-	COL_VERTEX(-1611, 2108, 8954),
-	COL_VERTEX(-1562, 2108, 8954),
-	COL_VERTEX(-1612, 2120, 8954),
-	COL_VERTEX(-1564, 2129, 8954),
-	COL_VERTEX(-1615, 2130, 8954),
-	COL_VERTEX(-1570, 2149, 8954),
-	COL_VERTEX(-1621, 2140, 8954),
-	COL_VERTEX(-1580, 2167, 8954),
-	COL_VERTEX(-1628, 2149, 8954),
-	COL_VERTEX(-1593, 2183, 8954),
-	COL_VERTEX(-1637, 2156, 8954),
-	COL_VERTEX(-1609, 2197, 8954),
-	COL_VERTEX(-1647, 2161, 8954),
-	COL_VERTEX(-1628, 2207, 8954),
-	COL_VERTEX(-1657, 2165, 8954),
-	COL_VERTEX(-1648, 2213, 8954),
-	COL_VERTEX(-761, 2133, 8980),
-	COL_VERTEX(-1254, 2083, 8980),
-	COL_VERTEX(-761, 2037, 8980),
-	COL_VERTEX(-1258, 2502, 8980),
-	COL_VERTEX(-1754, 2153, 8980),
-	COL_VERTEX(-1754, 2037, 8980),
-	COL_VERTEX(-1328, 1604, 9247),
-	COL_VERTEX(-1328, 1674, 9247),
-	COL_VERTEX(-1328, 1674, 8713),
-	COL_VERTEX(-1328, 1604, 8713),
-	COL_VERTEX(-1227, 1674, 8713),
-	COL_VERTEX(-1227, 1604, 8713),
-	COL_VERTEX(-1227, 1674, 9247),
-	COL_VERTEX(-1227, 1604, 9247),
-	COL_VERTEX(-1294, 1519, 8713),
-	COL_VERTEX(-1306, 1529, 8749),
-	COL_VERTEX(-1264, 1529, 8735),
-	COL_VERTEX(-1243, 1558, 8751),
-	COL_VERTEX(-1234, 1552, 8713),
-	COL_VERTEX(-1332, 1529, 8713),
-	COL_VERTEX(-1306, 1529, 8678),
-	COL_VERTEX(-1264, 1529, 8692),
-	COL_VERTEX(-1227, 1590, 8735),
-	COL_VERTEX(-1314, 1558, 8774),
-	COL_VERTEX(-1294, 1590, 8784),
-	COL_VERTEX(-1276, 1552, 8771),
-	COL_VERTEX(-1358, 1558, 8713),
-	COL_VERTEX(-1362, 1590, 8735),
-	COL_VERTEX(-1343, 1552, 8749),
-	COL_VERTEX(-1314, 1558, 8653),
-	COL_VERTEX(-1336, 1590, 8656),
-	COL_VERTEX(-1343, 1552, 8678),
-	COL_VERTEX(-1243, 1558, 8676),
-	COL_VERTEX(-1253, 1590, 8656),
-	COL_VERTEX(-1276, 1552, 8656),
-	COL_VERTEX(-1253, 1590, 8771),
-	COL_VERTEX(-1336, 1590, 8771),
-	COL_VERTEX(-1362, 1590, 8692),
-	COL_VERTEX(-1294, 1590, 8643),
-	COL_VERTEX(-1227, 1590, 8692),
-	COL_VERTEX(-1275, 1621, 8774),
-	COL_VERTEX(-1283, 1650, 8749),
-	COL_VERTEX(-1246, 1627, 8749),
-	COL_VERTEX(-1346, 1621, 8751),
-	COL_VERTEX(-1325, 1650, 8735),
-	COL_VERTEX(-1313, 1627, 8771),
-	COL_VERTEX(-1346, 1621, 8676),
-	COL_VERTEX(-1325, 1650, 8692),
-	COL_VERTEX(-1355, 1627, 8713),
-	COL_VERTEX(-1275, 1621, 8653),
-	COL_VERTEX(-1283, 1650, 8678),
-	COL_VERTEX(-1313, 1627, 8656),
-	COL_VERTEX(-1231, 1621, 8713),
-	COL_VERTEX(-1257, 1650, 8713),
-	COL_VERTEX(-1246, 1627, 8678),
-	COL_VERTEX(-1294, 1661, 8713),
-	COL_VERTEX(-100, -100, 100),
-	COL_VERTEX(-100, 100, 100),
-	COL_VERTEX(-100, 100, -100),
-	COL_VERTEX(-100, -100, -100),
-	COL_VERTEX(100, 100, -100),
-	COL_VERTEX(100, -100, -100),
-	COL_VERTEX(100, 100, 100),
-	COL_VERTEX(100, -100, 100),
-	COL_VERTEX(4837, 210, 10213),
-	COL_VERTEX(4837, 410, 10213),
-	COL_VERTEX(4837, 410, 10013),
-	COL_VERTEX(4837, 210, 10013),
-	COL_VERTEX(5037, 410, 10013),
-	COL_VERTEX(5037, 210, 10013),
-	COL_VERTEX(5037, 410, 10213),
-	COL_VERTEX(5037, 210, 10213),
-	COL_VERTEX(4818, 497, 10590),
-	COL_VERTEX(4818, 697, 10590),
-	COL_VERTEX(4818, 697, 10390),
-	COL_VERTEX(4818, 497, 10390),
-	COL_VERTEX(5018, 697, 10390),
-	COL_VERTEX(5018, 497, 10390),
-	COL_VERTEX(5018, 697, 10590),
-	COL_VERTEX(5018, 497, 10590),
-	COL_VERTEX(5282, 576, 11083),
-	COL_VERTEX(5282, 776, 11083),
-	COL_VERTEX(5282, 776, 10883),
-	COL_VERTEX(5282, 576, 10883),
-	COL_VERTEX(5482, 776, 10883),
-	COL_VERTEX(5482, 576, 10883),
-	COL_VERTEX(5482, 776, 11083),
-	COL_VERTEX(5482, 576, 11083),
-	COL_VERTEX(5061, 688, 12156),
-	COL_VERTEX(5061, 888, 12156),
-	COL_VERTEX(5061, 888, 11956),
-	COL_VERTEX(5061, 688, 11956),
-	COL_VERTEX(5261, 888, 11956),
-	COL_VERTEX(5261, 688, 11956),
-	COL_VERTEX(5261, 888, 12156),
-	COL_VERTEX(5261, 688, 12156),
-	COL_VERTEX(4943, 382, 11610),
-	COL_VERTEX(4943, 582, 11610),
-	COL_VERTEX(4943, 582, 11410),
-	COL_VERTEX(4943, 382, 11410),
-	COL_VERTEX(5143, 582, 11410),
-	COL_VERTEX(5143, 382, 11410),
-	COL_VERTEX(5143, 582, 11610),
-	COL_VERTEX(5143, 382, 11610),
-	COL_VERTEX(4117, 694, 12469),
-	COL_VERTEX(4117, 894, 12469),
-	COL_VERTEX(4117, 894, 12269),
-	COL_VERTEX(4117, 694, 12269),
-	COL_VERTEX(4317, 894, 12269),
-	COL_VERTEX(4317, 694, 12269),
-	COL_VERTEX(4317, 894, 12469),
-	COL_VERTEX(4317, 694, 12469),
-	COL_VERTEX(3263, 897, 12307),
-	COL_VERTEX(3263, 1097, 12307),
-	COL_VERTEX(3263, 1097, 12107),
-	COL_VERTEX(3263, 897, 12107),
-	COL_VERTEX(3463, 1097, 12107),
-	COL_VERTEX(3463, 897, 12107),
-	COL_VERTEX(3463, 1097, 12307),
-	COL_VERTEX(3463, 897, 12307),
-	COL_VERTEX(5043, 740, 11410),
-	COL_VERTEX(5043, 540, 11410),
-	COL_VERTEX(5043, 540, 11610),
-	COL_VERTEX(5043, 740, 11610),
-	COL_VERTEX(5021, 740, 11410),
-	COL_VERTEX(5021, 540, 11410),
-	COL_VERTEX(5021, 540, 11610),
-	COL_VERTEX(5021, 740, 11610),
-	COL_VERTEX(4994, 740, 11410),
-	COL_VERTEX(4994, 540, 11410),
-	COL_VERTEX(4994, 540, 11610),
-	COL_VERTEX(4994, 740, 11610),
-	COL_VERTEX(4962, 740, 11410),
-	COL_VERTEX(4962, 540, 11410),
-	COL_VERTEX(4962, 540, 11610),
-	COL_VERTEX(4962, 740, 11610),
-	COL_VERTEX(5066, 740, 11410),
-	COL_VERTEX(5066, 540, 11410),
-	COL_VERTEX(5066, 540, 11610),
-	COL_VERTEX(5066, 740, 11610),
-	COL_VERTEX(5084, 740, 11410),
-	COL_VERTEX(5084, 540, 11410),
-	COL_VERTEX(5084, 540, 11610),
-	COL_VERTEX(5084, 740, 11610),
-	COL_VERTEX(5105, 740, 11410),
-	COL_VERTEX(5105, 540, 11410),
-	COL_VERTEX(5105, 540, 11610),
-	COL_VERTEX(5105, 740, 11610),
-	COL_VERTEX(5129, 740, 11410),
-	COL_VERTEX(5129, 540, 11410),
-	COL_VERTEX(5129, 540, 11610),
-	COL_VERTEX(5129, 740, 11610),
-	COL_VERTEX(4850, 601, 10144),
-	COL_VERTEX(4850, 401, 10144),
-	COL_VERTEX(5043, 401, 10090),
-	COL_VERTEX(5043, 601, 10090),
-	COL_VERTEX(4856, 601, 10165),
-	COL_VERTEX(4856, 401, 10165),
-	COL_VERTEX(5049, 401, 10111),
-	COL_VERTEX(5049, 601, 10111),
-	COL_VERTEX(4864, 601, 10191),
-	COL_VERTEX(4864, 401, 10191),
-	COL_VERTEX(5056, 401, 10137),
-	COL_VERTEX(5056, 601, 10137),
-	COL_VERTEX(4872, 601, 10222),
-	COL_VERTEX(4872, 401, 10222),
-	COL_VERTEX(5065, 401, 10168),
-	COL_VERTEX(5065, 601, 10168),
-	COL_VERTEX(4844, 601, 10121),
-	COL_VERTEX(4844, 401, 10121),
-	COL_VERTEX(5037, 401, 10067),
-	COL_VERTEX(5037, 601, 10067),
-	COL_VERTEX(4839, 601, 10104),
-	COL_VERTEX(4839, 401, 10104),
-	COL_VERTEX(5032, 401, 10051),
-	COL_VERTEX(5032, 601, 10051),
-	COL_VERTEX(4834, 601, 10084),
-	COL_VERTEX(4834, 401, 10084),
-	COL_VERTEX(5026, 401, 10030),
-	COL_VERTEX(5026, 601, 10030),
-	COL_VERTEX(4827, 601, 10061),
-	COL_VERTEX(4827, 401, 10061),
-	COL_VERTEX(5020, 401, 10007),
-	COL_VERTEX(5020, 601, 10007),
-	COL_VERTEX(4826, 1010, 11900),
-	COL_VERTEX(4826, 810, 11900),
-	COL_VERTEX(4713, 810, 12065),
-	COL_VERTEX(4713, 1010, 12065),
-	COL_VERTEX(4808, 1010, 11887),
-	COL_VERTEX(4808, 810, 11887),
-	COL_VERTEX(4694, 810, 12052),
-	COL_VERTEX(4694, 1010, 12052),
-	COL_VERTEX(4785, 1010, 11872),
-	COL_VERTEX(4785, 810, 11872),
-	COL_VERTEX(4672, 810, 12037),
-	COL_VERTEX(4672, 1010, 12037),
-	COL_VERTEX(4759, 1010, 11854),
-	COL_VERTEX(4759, 810, 11854),
-	COL_VERTEX(4646, 810, 12018),
-	COL_VERTEX(4646, 1010, 12018),
-	COL_VERTEX(4845, 1010, 11913),
-	COL_VERTEX(4845, 810, 11913),
-	COL_VERTEX(4732, 810, 12078),
-	COL_VERTEX(4732, 1010, 12078),
-	COL_VERTEX(4859, 1010, 11923),
-	COL_VERTEX(4859, 810, 11923),
-	COL_VERTEX(4746, 810, 12088),
-	COL_VERTEX(4746, 1010, 12088),
-	COL_VERTEX(4877, 1010, 11935),
-	COL_VERTEX(4877, 810, 11935),
-	COL_VERTEX(4764, 810, 12100),
-	COL_VERTEX(4764, 1010, 12100),
-	COL_VERTEX(4897, 1010, 11948),
-	COL_VERTEX(4897, 810, 11948),
-	COL_VERTEX(4784, 810, 12113),
-	COL_VERTEX(4784, 1010, 12113),
-	COL_VERTEX(2674, 922, 12107),
-	COL_VERTEX(3457, 922, 12107),
-	COL_VERTEX(3457, 922, 11907),
-	COL_VERTEX(2674, 922, 11907),
-	COL_VERTEX(2675, 1134, 12107),
-	COL_VERTEX(2488, 1134, 12107),
-	COL_VERTEX(2488, 1134, 11907),
-	COL_VERTEX(2675, 1134, 11907),
-	COL_VERTEX(2488, 922, 12107),
-	COL_VERTEX(2488, 922, 11907),
-	COL_VERTEX(3251, 1133, 11902),
-	COL_VERTEX(3251, 933, 11902),
-	COL_VERTEX(3251, 933, 12102),
-	COL_VERTEX(3251, 1133, 12102),
-	COL_VERTEX(3198, 1133, 11902),
-	COL_VERTEX(3198, 933, 11902),
-	COL_VERTEX(3198, 933, 12102),
-	COL_VERTEX(3198, 1133, 12102),
-	COL_VERTEX(3135, 1133, 11902),
-	COL_VERTEX(3135, 933, 11902),
-	COL_VERTEX(3135, 933, 12102),
-	COL_VERTEX(3135, 1133, 12102),
-	COL_VERTEX(3060, 1133, 11902),
-	COL_VERTEX(3060, 933, 11902),
-	COL_VERTEX(3060, 933, 12102),
-	COL_VERTEX(3060, 1133, 12102),
-	COL_VERTEX(3305, 1133, 11902),
-	COL_VERTEX(3305, 933, 11902),
-	COL_VERTEX(3305, 933, 12102),
-	COL_VERTEX(3305, 1133, 12102),
-	COL_VERTEX(3346, 1133, 11902),
-	COL_VERTEX(3346, 933, 11902),
-	COL_VERTEX(3346, 933, 12102),
-	COL_VERTEX(3346, 1133, 12102),
-	COL_VERTEX(3396, 1133, 11902),
-	COL_VERTEX(3396, 933, 11902),
-	COL_VERTEX(3396, 933, 12102),
-	COL_VERTEX(3396, 1133, 12102),
-	COL_VERTEX(3451, 1133, 11902),
-	COL_VERTEX(3451, 933, 11902),
-	COL_VERTEX(3451, 933, 12102),
-	COL_VERTEX(3451, 1133, 12102),
-	COL_VERTEX(2811, 1133, 11902),
-	COL_VERTEX(2811, 933, 11902),
-	COL_VERTEX(2811, 933, 12102),
-	COL_VERTEX(2811, 1133, 12102),
-	COL_VERTEX(2758, 1133, 11902),
-	COL_VERTEX(2758, 933, 11902),
-	COL_VERTEX(2758, 933, 12102),
-	COL_VERTEX(2758, 1133, 12102),
-	COL_VERTEX(2695, 1133, 11902),
-	COL_VERTEX(2695, 933, 11902),
-	COL_VERTEX(2695, 933, 12102),
-	COL_VERTEX(2695, 1133, 12102),
-	COL_VERTEX(2620, 1133, 11902),
-	COL_VERTEX(2620, 933, 11902),
-	COL_VERTEX(2620, 933, 12102),
-	COL_VERTEX(2620, 1133, 12102),
-	COL_VERTEX(2865, 1133, 11902),
-	COL_VERTEX(2865, 933, 11902),
-	COL_VERTEX(2865, 933, 12102),
-	COL_VERTEX(2865, 1133, 12102),
-	COL_VERTEX(2906, 1133, 11902),
-	COL_VERTEX(2906, 933, 11902),
-	COL_VERTEX(2906, 933, 12102),
-	COL_VERTEX(2906, 1133, 12102),
-	COL_VERTEX(2956, 1133, 11902),
-	COL_VERTEX(2956, 933, 11902),
-	COL_VERTEX(2956, 933, 12102),
-	COL_VERTEX(2956, 1133, 12102),
-	COL_VERTEX(3011, 1133, 11902),
-	COL_VERTEX(3011, 933, 11902),
-	COL_VERTEX(3011, 933, 12102),
-	COL_VERTEX(3011, 1133, 12102),
-	COL_VERTEX(2473, 1133, 12131),
-	COL_VERTEX(2473, 933, 12131),
-	COL_VERTEX(2673, 933, 12131),
-	COL_VERTEX(2673, 1133, 12131),
-	COL_VERTEX(2473, 1133, 12184),
-	COL_VERTEX(2473, 933, 12184),
-	COL_VERTEX(2673, 933, 12184),
-	COL_VERTEX(2673, 1133, 12184),
-	COL_VERTEX(2473, 1133, 12247),
-	COL_VERTEX(2473, 933, 12247),
-	COL_VERTEX(2673, 933, 12247),
-	COL_VERTEX(2673, 1133, 12247),
-	COL_VERTEX(2473, 1133, 12322),
-	COL_VERTEX(2473, 933, 12322),
-	COL_VERTEX(2673, 933, 12322),
-	COL_VERTEX(2673, 1133, 12322),
-	COL_VERTEX(2473, 1133, 12077),
-	COL_VERTEX(2473, 933, 12077),
-	COL_VERTEX(2673, 933, 12077),
-	COL_VERTEX(2673, 1133, 12077),
-	COL_VERTEX(2473, 1133, 12036),
-	COL_VERTEX(2473, 933, 12036),
-	COL_VERTEX(2673, 933, 12036),
-	COL_VERTEX(2673, 1133, 12036),
-	COL_VERTEX(2473, 1133, 11986),
-	COL_VERTEX(2473, 933, 11986),
-	COL_VERTEX(2673, 933, 11986),
-	COL_VERTEX(2673, 1133, 11986),
-	COL_VERTEX(2473, 1133, 11931),
-	COL_VERTEX(2473, 933, 11931),
-	COL_VERTEX(2673, 933, 11931),
-	COL_VERTEX(2673, 1133, 11931),
-	COL_VERTEX(2473, 1133, 12589),
-	COL_VERTEX(2473, 933, 12589),
-	COL_VERTEX(2673, 933, 12589),
-	COL_VERTEX(2673, 1133, 12589),
-	COL_VERTEX(2473, 1133, 12641),
-	COL_VERTEX(2473, 933, 12641),
-	COL_VERTEX(2673, 933, 12641),
-	COL_VERTEX(2673, 1133, 12641),
-	COL_VERTEX(2473, 1133, 12705),
-	COL_VERTEX(2473, 933, 12705),
-	COL_VERTEX(2673, 933, 12705),
-	COL_VERTEX(2673, 1133, 12705),
-	COL_VERTEX(2473, 1133, 12780),
-	COL_VERTEX(2473, 933, 12780),
-	COL_VERTEX(2673, 933, 12780),
-	COL_VERTEX(2673, 1133, 12780),
-	COL_VERTEX(2473, 1133, 12535),
-	COL_VERTEX(2473, 933, 12535),
-	COL_VERTEX(2673, 933, 12535),
-	COL_VERTEX(2673, 1133, 12535),
-	COL_VERTEX(2473, 1133, 12494),
-	COL_VERTEX(2473, 933, 12494),
-	COL_VERTEX(2673, 933, 12494),
-	COL_VERTEX(2673, 1133, 12494),
-	COL_VERTEX(2473, 1133, 12444),
-	COL_VERTEX(2473, 933, 12444),
-	COL_VERTEX(2673, 933, 12444),
-	COL_VERTEX(2673, 1133, 12444),
-	COL_VERTEX(2473, 1133, 12389),
-	COL_VERTEX(2473, 933, 12389),
-	COL_VERTEX(2673, 933, 12389),
-	COL_VERTEX(2673, 1133, 12389),
-	COL_VERTEX(3457, 1134, 12107),
-	COL_VERTEX(3457, 1134, 11907),
-	COL_VERTEX(2675, 1134, 12806),
-	COL_VERTEX(2488, 1134, 12806),
-	COL_VERTEX(2488, 922, 12806),
-	COL_VERTEX(2674, 922, 12806),
-	COL_VERTEX(3632, 513, 11903),
-	COL_VERTEX(3632, 570, 11903),
-	COL_VERTEX(3632, 570, 11845),
-	COL_VERTEX(3632, 513, 11845),
-	COL_VERTEX(3690, 570, 11845),
-	COL_VERTEX(3690, 513, 11845),
-	COL_VERTEX(3690, 570, 11903),
-	COL_VERTEX(3690, 513, 11903),
-	COL_VERTEX(4250, -1311, 594),
-	COL_VERTEX(5814, -1311, 594),
-	COL_VERTEX(5814, -1311, -1752),
-	COL_VERTEX(4250, -1311, -1752),
-	COL_VERTEX(-8264, 212, 594),
-	COL_VERTEX(-6700, 212, 594),
-	COL_VERTEX(-6700, 212, -1752),
-	COL_VERTEX(-8264, 212, -1752),
-	COL_VERTEX(-5136, 212, 594),
-	COL_VERTEX(-5136, 212, -1752),
-	COL_VERTEX(-3572, 212, 594),
-	COL_VERTEX(-3572, 212, -1752),
-	COL_VERTEX(-2007, 212, 594),
-	COL_VERTEX(-2007, 212, -1752),
-	COL_VERTEX(-443, -1311, 594),
-	COL_VERTEX(-443, -1311, -1752),
-	COL_VERTEX(1121, -1311, 594),
-	COL_VERTEX(1121, -1311, -1752),
-	COL_VERTEX(2685, -1311, 594),
-	COL_VERTEX(2685, -1311, -1752),
-	COL_VERTEX(2946, -1652, 145),
-	COL_VERTEX(3989, -1652, 145),
-	COL_VERTEX(3989, -1652, -1681),
-	COL_VERTEX(2946, -1652, -1681),
-	COL_VERTEX(2685, 212, 12326),
-	COL_VERTEX(4250, 212, 12326),
-	COL_VERTEX(4250, 212, 9979),
-	COL_VERTEX(2685, 212, 9979),
-	COL_VERTEX(4250, 212, 7633),
-	COL_VERTEX(2685, 212, 7633),
-	COL_VERTEX(4250, 212, 5287),
-	COL_VERTEX(2685, 212, 5287),
-	COL_VERTEX(4250, -1311, 2940),
-	COL_VERTEX(2685, -1311, 2940),
-	COL_VERTEX(1121, 799, 12326),
-	COL_VERTEX(1121, 799, 9979),
-	COL_VERTEX(1121, 212, 7633),
-	COL_VERTEX(1121, 212, 5287),
-	COL_VERTEX(1121, 212, 2940),
-	COL_VERTEX(-443, 799, 12326),
-	COL_VERTEX(-443, 799, 9979),
-	COL_VERTEX(-443, 799, 7633),
-	COL_VERTEX(-443, 212, 5287),
-	COL_VERTEX(-443, 212, 2940),
-	COL_VERTEX(-2007, 799, 12326),
-	COL_VERTEX(-2007, 799, 9979),
-	COL_VERTEX(-2007, 799, 7633),
-	COL_VERTEX(-2007, 212, 5287),
-	COL_VERTEX(-2007, 212, 2940),
-	COL_VERTEX(-3572, 799, 12326),
-	COL_VERTEX(-3572, 799, 9979),
-	COL_VERTEX(-3572, 799, 7633),
-	COL_VERTEX(-3572, 212, 5287),
-	COL_VERTEX(-3572, 212, 2940),
-	COL_VERTEX(-5136, 212, 12326),
-	COL_VERTEX(-5136, 212, 9979),
-	COL_VERTEX(-5136, 212, 7633),
-	COL_VERTEX(-5136, 212, 5287),
-	COL_VERTEX(-5136, 212, 2940),
-	COL_VERTEX(-6700, 212, 12326),
-	COL_VERTEX(-6700, 212, 9979),
-	COL_VERTEX(-6700, 212, 7633),
-	COL_VERTEX(-6700, 212, 5287),
-	COL_VERTEX(-6700, 212, 2940),
-	COL_VERTEX(-8264, 212, 12326),
-	COL_VERTEX(-8264, 212, 9979),
-	COL_VERTEX(-8264, 212, 7633),
-	COL_VERTEX(-8264, 212, 5287),
-	COL_VERTEX(-8264, 212, 2940),
-	COL_VERTEX(5814, 212, 12326),
-	COL_VERTEX(5814, 212, 9979),
-	COL_VERTEX(5814, 212, 7633),
-	COL_VERTEX(5814, 212, 5287),
-	COL_VERTEX(5814, -1311, 2940),
-	COL_VERTEX(378, -343, -1875),
-	COL_VERTEX(378, -343, -2590),
-	COL_VERTEX(378, 371, -2590),
-	COL_VERTEX(378, 371, -1875),
-	COL_VERTEX(-4264, 387, -1345),
-	COL_VERTEX(-4264, 332, -1345),
-	COL_VERTEX(-4108, 332, -1345),
-	COL_VERTEX(-4157, 261, -1345),
-	COL_VERTEX(-4130, 261, -1345),
-	COL_VERTEX(-4064, 330, -1345),
-	COL_VERTEX(-4064, 398, -1345),
-	COL_VERTEX(-4164, 461, -1345),
-	COL_VERTEX(-4195, 461, -1345),
-	COL_VERTEX(-4117, 387, -1345),
-	COL_VERTEX(3467, -1528, -1752),
-	COL_VERTEX(-6192, 338, 11670),
-	COL_VERTEX(-5992, 338, 11670),
-	COL_VERTEX(-5992, 338, 11470),
-	COL_VERTEX(-6192, 338, 11470),
-	COL_VERTEX(-443, 799, 19064),
-	COL_VERTEX(1121, 799, 19064),
-	COL_VERTEX(-2007, 799, 19064),
-	COL_VERTEX(2977, -10763, -652),
-	COL_VERTEX(4020, -10763, -652),
-	COL_VERTEX(4020, -10763, -5907),
-	COL_VERTEX(2977, -10763, -5907),
-	COL_TRI_INIT(SURFACE_DEFAULT, 619),
-	COL_TRI(0, 1, 2),
-	COL_TRI(2, 3, 4),
-	COL_TRI(2, 4, 0),
-	COL_TRI(5, 6, 7),
-	COL_TRI(5, 7, 8),
-	COL_TRI(9, 10, 5),
-	COL_TRI(11, 12, 9),
-	COL_TRI(5, 8, 11),
-	COL_TRI(11, 9, 5),
-	COL_TRI(13, 5, 10),
-	COL_TRI(10, 14, 15),
-	COL_TRI(10, 15, 13),
-	COL_TRI(16, 17, 2),
-	COL_TRI(16, 2, 1),
-	COL_TRI(18, 3, 2),
-	COL_TRI(18, 2, 17),
-	COL_TRI(14, 18, 17),
-	COL_TRI(14, 17, 15),
-	COL_TRI(13, 15, 17),
-	COL_TRI(13, 17, 16),
-	COL_TRI(4, 9, 12),
-	COL_TRI(4, 12, 19),
-	COL_TRI(7, 6, 0),
-	COL_TRI(20, 7, 0),
-	COL_TRI(0, 4, 19),
-	COL_TRI(0, 19, 20),
-	COL_TRI(20, 19, 21),
-	COL_TRI(20, 21, 22),
-	COL_TRI(12, 11, 23),
-	COL_TRI(12, 23, 24),
-	COL_TRI(25, 26, 27),
-	COL_TRI(25, 27, 28),
-	COL_TRI(8, 7, 29),
-	COL_TRI(8, 29, 30),
-	COL_TRI(11, 8, 30),
-	COL_TRI(11, 30, 23),
-	COL_TRI(7, 20, 22),
-	COL_TRI(7, 22, 29),
-	COL_TRI(19, 12, 24),
-	COL_TRI(19, 24, 21),
-	COL_TRI(31, 32, 33),
-	COL_TRI(33, 34, 35),
-	COL_TRI(35, 36, 37),
-	COL_TRI(38, 39, 31),
-	COL_TRI(35, 37, 38),
-	COL_TRI(31, 33, 35),
-	COL_TRI(35, 38, 31),
-	COL_TRI(40, 41, 42),
-	COL_TRI(40, 42, 43),
-	COL_TRI(44, 45, 46),
-	COL_TRI(47, 48, 49),
-	COL_TRI(44, 46, 47),
-	COL_TRI(47, 49, 44),
-	COL_TRI(45, 50, 51),
-	COL_TRI(51, 42, 41),
-	COL_TRI(41, 49, 48),
-	COL_TRI(46, 45, 51),
-	COL_TRI(41, 48, 46),
-	COL_TRI(51, 41, 46),
-	COL_TRI(52, 51, 50),
-	COL_TRI(52, 50, 53),
-	COL_TRI(54, 55, 56),
-	COL_TRI(56, 57, 58),
-	COL_TRI(58, 59, 60),
-	COL_TRI(60, 61, 54),
-	COL_TRI(54, 56, 58),
-	COL_TRI(58, 60, 54),
-	COL_TRI(62, 57, 56),
-	COL_TRI(62, 56, 63),
-	COL_TRI(64, 61, 60),
-	COL_TRI(64, 60, 65),
-	COL_TRI(66, 67, 64),
-	COL_TRI(59, 58, 66),
-	COL_TRI(64, 65, 68),
-	COL_TRI(68, 59, 66),
-	COL_TRI(68, 66, 64),
-	COL_TRI(69, 70, 71),
-	COL_TRI(69, 71, 72),
-	COL_TRI(73, 74, 75),
-	COL_TRI(73, 75, 76),
-	COL_TRI(74, 77, 78),
-	COL_TRI(74, 78, 75),
-	COL_TRI(77, 79, 80),
-	COL_TRI(77, 80, 78),
-	COL_TRI(79, 81, 82),
-	COL_TRI(79, 82, 80),
-	COL_TRI(81, 83, 84),
-	COL_TRI(81, 84, 82),
-	COL_TRI(83, 85, 86),
-	COL_TRI(83, 86, 84),
-	COL_TRI(85, 87, 88),
-	COL_TRI(85, 88, 86),
-	COL_TRI(87, 89, 90),
-	COL_TRI(87, 90, 88),
-	COL_TRI(89, 91, 92),
-	COL_TRI(89, 92, 90),
-	COL_TRI(91, 93, 94),
-	COL_TRI(91, 94, 92),
-	COL_TRI(93, 95, 96),
-	COL_TRI(93, 96, 94),
-	COL_TRI(95, 97, 98),
-	COL_TRI(95, 98, 96),
-	COL_TRI(97, 99, 100),
-	COL_TRI(97, 100, 98),
-	COL_TRI(99, 101, 102),
-	COL_TRI(99, 102, 100),
-	COL_TRI(101, 103, 104),
-	COL_TRI(101, 104, 102),
-	COL_TRI(103, 105, 106),
-	COL_TRI(103, 106, 104),
-	COL_TRI(105, 107, 108),
-	COL_TRI(105, 108, 106),
-	COL_TRI(107, 109, 110),
-	COL_TRI(107, 110, 108),
-	COL_TRI(109, 111, 112),
-	COL_TRI(109, 112, 110),
-	COL_TRI(111, 113, 114),
-	COL_TRI(111, 114, 112),
-	COL_TRI(113, 115, 116),
-	COL_TRI(113, 116, 114),
-	COL_TRI(115, 117, 118),
-	COL_TRI(115, 118, 116),
-	COL_TRI(117, 119, 120),
-	COL_TRI(117, 120, 118),
-	COL_TRI(119, 121, 122),
-	COL_TRI(119, 122, 120),
-	COL_TRI(121, 123, 124),
-	COL_TRI(121, 124, 122),
-	COL_TRI(123, 125, 126),
-	COL_TRI(123, 126, 124),
-	COL_TRI(125, 127, 128),
-	COL_TRI(125, 128, 126),
-	COL_TRI(127, 129, 130),
-	COL_TRI(127, 130, 128),
-	COL_TRI(129, 131, 132),
-	COL_TRI(129, 132, 130),
-	COL_TRI(131, 133, 134),
-	COL_TRI(131, 134, 132),
-	COL_TRI(133, 135, 136),
-	COL_TRI(133, 136, 134),
-	COL_TRI(135, 73, 76),
-	COL_TRI(135, 76, 136),
-	COL_TRI(137, 138, 139),
-	COL_TRI(138, 140, 139),
-	COL_TRI(138, 141, 140),
-	COL_TRI(141, 142, 140),
-	COL_TRI(139, 140, 18),
-	COL_TRI(139, 18, 14),
-	COL_TRI(140, 142, 3),
-	COL_TRI(140, 3, 18),
-	COL_TRI(137, 139, 10),
-	COL_TRI(139, 14, 10),
-	COL_TRI(138, 137, 10),
-	COL_TRI(138, 10, 9),
-	COL_TRI(142, 141, 3),
-	COL_TRI(141, 4, 3),
-	COL_TRI(141, 138, 9),
-	COL_TRI(141, 9, 4),
-	COL_TRI(143, 144, 145),
-	COL_TRI(143, 145, 146),
-	COL_TRI(146, 145, 147),
-	COL_TRI(146, 147, 148),
-	COL_TRI(148, 147, 149),
-	COL_TRI(148, 149, 150),
-	COL_TRI(150, 149, 144),
-	COL_TRI(150, 144, 143),
-	COL_TRI(146, 148, 150),
-	COL_TRI(146, 150, 143),
-	COL_TRI(147, 145, 144),
-	COL_TRI(147, 144, 149),
-	COL_TRI(151, 152, 153),
-	COL_TRI(154, 155, 153),
-	COL_TRI(151, 156, 152),
-	COL_TRI(151, 157, 156),
-	COL_TRI(151, 158, 157),
-	COL_TRI(154, 159, 155),
-	COL_TRI(160, 161, 162),
-	COL_TRI(163, 164, 165),
-	COL_TRI(166, 167, 168),
-	COL_TRI(169, 170, 171),
-	COL_TRI(154, 172, 159),
-	COL_TRI(160, 173, 161),
-	COL_TRI(163, 174, 164),
-	COL_TRI(166, 175, 167),
-	COL_TRI(169, 176, 170),
-	COL_TRI(177, 178, 179),
-	COL_TRI(180, 181, 182),
-	COL_TRI(183, 184, 185),
-	COL_TRI(186, 187, 188),
-	COL_TRI(189, 190, 191),
-	COL_TRI(190, 192, 187),
-	COL_TRI(190, 187, 191),
-	COL_TRI(191, 187, 186),
-	COL_TRI(187, 192, 184),
-	COL_TRI(187, 184, 188),
-	COL_TRI(188, 184, 183),
-	COL_TRI(184, 192, 181),
-	COL_TRI(184, 181, 185),
-	COL_TRI(185, 181, 180),
-	COL_TRI(181, 192, 178),
-	COL_TRI(181, 178, 182),
-	COL_TRI(182, 178, 177),
-	COL_TRI(178, 192, 190),
-	COL_TRI(178, 190, 179),
-	COL_TRI(179, 190, 189),
-	COL_TRI(176, 189, 191),
-	COL_TRI(176, 191, 170),
-	COL_TRI(170, 191, 186),
-	COL_TRI(175, 186, 188),
-	COL_TRI(175, 188, 167),
-	COL_TRI(167, 188, 183),
-	COL_TRI(174, 183, 185),
-	COL_TRI(174, 185, 164),
-	COL_TRI(164, 185, 180),
-	COL_TRI(173, 180, 182),
-	COL_TRI(173, 182, 161),
-	COL_TRI(161, 182, 177),
-	COL_TRI(172, 177, 179),
-	COL_TRI(172, 179, 159),
-	COL_TRI(159, 179, 189),
-	COL_TRI(170, 186, 175),
-	COL_TRI(170, 175, 171),
-	COL_TRI(171, 175, 166),
-	COL_TRI(167, 183, 174),
-	COL_TRI(167, 174, 168),
-	COL_TRI(168, 174, 163),
-	COL_TRI(164, 180, 173),
-	COL_TRI(164, 173, 165),
-	COL_TRI(165, 173, 160),
-	COL_TRI(161, 177, 172),
-	COL_TRI(161, 172, 162),
-	COL_TRI(162, 172, 154),
-	COL_TRI(159, 189, 176),
-	COL_TRI(159, 176, 155),
-	COL_TRI(155, 176, 169),
-	COL_TRI(158, 169, 171),
-	COL_TRI(158, 171, 157),
-	COL_TRI(157, 171, 166),
-	COL_TRI(157, 166, 168),
-	COL_TRI(157, 168, 156),
-	COL_TRI(156, 168, 163),
-	COL_TRI(156, 163, 165),
-	COL_TRI(156, 165, 152),
-	COL_TRI(152, 165, 160),
-	COL_TRI(155, 169, 158),
-	COL_TRI(155, 158, 153),
-	COL_TRI(153, 158, 151),
-	COL_TRI(152, 160, 162),
-	COL_TRI(152, 162, 153),
-	COL_TRI(153, 162, 154),
-	COL_TRI(193, 194, 195),
-	COL_TRI(193, 195, 196),
-	COL_TRI(196, 195, 197),
-	COL_TRI(196, 197, 198),
-	COL_TRI(198, 197, 199),
-	COL_TRI(198, 199, 200),
-	COL_TRI(200, 199, 194),
-	COL_TRI(200, 194, 193),
-	COL_TRI(196, 198, 200),
-	COL_TRI(196, 200, 193),
-	COL_TRI(197, 195, 194),
-	COL_TRI(197, 194, 199),
-	COL_TRI(201, 202, 203),
-	COL_TRI(201, 203, 204),
-	COL_TRI(204, 203, 205),
-	COL_TRI(204, 205, 206),
-	COL_TRI(206, 205, 207),
-	COL_TRI(206, 207, 208),
-	COL_TRI(208, 207, 202),
-	COL_TRI(208, 202, 201),
-	COL_TRI(204, 206, 208),
-	COL_TRI(204, 208, 201),
-	COL_TRI(205, 203, 202),
-	COL_TRI(205, 202, 207),
-	COL_TRI(209, 210, 211),
-	COL_TRI(209, 211, 212),
-	COL_TRI(212, 211, 213),
-	COL_TRI(212, 213, 214),
-	COL_TRI(214, 213, 215),
-	COL_TRI(214, 215, 216),
-	COL_TRI(216, 215, 210),
-	COL_TRI(216, 210, 209),
-	COL_TRI(212, 214, 216),
-	COL_TRI(212, 216, 209),
-	COL_TRI(213, 211, 210),
-	COL_TRI(213, 210, 215),
-	COL_TRI(217, 218, 219),
-	COL_TRI(217, 219, 220),
-	COL_TRI(220, 219, 221),
-	COL_TRI(220, 221, 222),
-	COL_TRI(222, 221, 223),
-	COL_TRI(222, 223, 224),
-	COL_TRI(224, 223, 218),
-	COL_TRI(224, 218, 217),
-	COL_TRI(220, 222, 224),
-	COL_TRI(220, 224, 217),
-	COL_TRI(221, 219, 218),
-	COL_TRI(221, 218, 223),
-	COL_TRI(225, 226, 227),
-	COL_TRI(225, 227, 228),
-	COL_TRI(228, 227, 229),
-	COL_TRI(228, 229, 230),
-	COL_TRI(230, 229, 231),
-	COL_TRI(230, 231, 232),
-	COL_TRI(232, 231, 226),
-	COL_TRI(232, 226, 225),
-	COL_TRI(228, 230, 232),
-	COL_TRI(228, 232, 225),
-	COL_TRI(229, 227, 226),
-	COL_TRI(229, 226, 231),
-	COL_TRI(233, 234, 235),
-	COL_TRI(233, 235, 236),
-	COL_TRI(236, 235, 237),
-	COL_TRI(236, 237, 238),
-	COL_TRI(238, 237, 239),
-	COL_TRI(238, 239, 240),
-	COL_TRI(240, 239, 234),
-	COL_TRI(240, 234, 233),
-	COL_TRI(236, 238, 240),
-	COL_TRI(236, 240, 233),
-	COL_TRI(237, 235, 234),
-	COL_TRI(237, 234, 239),
-	COL_TRI(241, 242, 243),
-	COL_TRI(241, 243, 244),
-	COL_TRI(244, 243, 245),
-	COL_TRI(244, 245, 246),
-	COL_TRI(246, 245, 247),
-	COL_TRI(246, 247, 248),
-	COL_TRI(248, 247, 242),
-	COL_TRI(248, 242, 241),
-	COL_TRI(244, 246, 248),
-	COL_TRI(244, 248, 241),
-	COL_TRI(245, 243, 242),
-	COL_TRI(245, 242, 247),
-	COL_TRI(249, 250, 251),
-	COL_TRI(249, 251, 252),
-	COL_TRI(252, 251, 253),
-	COL_TRI(252, 253, 254),
-	COL_TRI(254, 253, 255),
-	COL_TRI(254, 255, 256),
-	COL_TRI(256, 255, 250),
-	COL_TRI(256, 250, 249),
-	COL_TRI(252, 254, 256),
-	COL_TRI(252, 256, 249),
-	COL_TRI(253, 251, 250),
-	COL_TRI(253, 250, 255),
-	COL_TRI(257, 258, 259),
-	COL_TRI(257, 259, 260),
-	COL_TRI(261, 262, 263),
-	COL_TRI(261, 263, 264),
-	COL_TRI(265, 266, 267),
-	COL_TRI(265, 267, 268),
-	COL_TRI(269, 270, 271),
-	COL_TRI(269, 271, 272),
-	COL_TRI(273, 274, 275),
-	COL_TRI(273, 275, 276),
-	COL_TRI(277, 278, 279),
-	COL_TRI(277, 279, 280),
-	COL_TRI(281, 282, 283),
-	COL_TRI(281, 283, 284),
-	COL_TRI(285, 286, 287),
-	COL_TRI(285, 287, 288),
-	COL_TRI(289, 290, 291),
-	COL_TRI(289, 291, 292),
-	COL_TRI(293, 294, 295),
-	COL_TRI(293, 295, 296),
-	COL_TRI(297, 298, 299),
-	COL_TRI(297, 299, 300),
-	COL_TRI(301, 302, 303),
-	COL_TRI(301, 303, 304),
-	COL_TRI(305, 306, 307),
-	COL_TRI(305, 307, 308),
-	COL_TRI(309, 310, 311),
-	COL_TRI(309, 311, 312),
-	COL_TRI(313, 314, 315),
-	COL_TRI(313, 315, 316),
-	COL_TRI(317, 318, 319),
-	COL_TRI(317, 319, 320),
-	COL_TRI(321, 322, 323),
-	COL_TRI(321, 323, 324),
-	COL_TRI(325, 326, 327),
-	COL_TRI(325, 327, 328),
-	COL_TRI(329, 330, 331),
-	COL_TRI(329, 331, 332),
-	COL_TRI(333, 334, 335),
-	COL_TRI(333, 335, 336),
-	COL_TRI(337, 338, 339),
-	COL_TRI(337, 339, 340),
-	COL_TRI(341, 342, 343),
-	COL_TRI(341, 343, 344),
-	COL_TRI(345, 346, 347),
-	COL_TRI(345, 347, 348),
-	COL_TRI(349, 350, 351),
-	COL_TRI(349, 351, 352),
-	COL_TRI(353, 354, 355),
-	COL_TRI(353, 355, 356),
-	COL_TRI(357, 358, 359),
-	COL_TRI(357, 359, 360),
-	COL_TRI(361, 362, 359),
-	COL_TRI(361, 359, 358),
-	COL_TRI(363, 364, 365),
-	COL_TRI(363, 365, 366),
-	COL_TRI(367, 368, 369),
-	COL_TRI(367, 369, 370),
-	COL_TRI(371, 372, 373),
-	COL_TRI(371, 373, 374),
-	COL_TRI(375, 376, 377),
-	COL_TRI(375, 377, 378),
-	COL_TRI(379, 380, 381),
-	COL_TRI(379, 381, 382),
-	COL_TRI(383, 384, 385),
-	COL_TRI(383, 385, 386),
-	COL_TRI(387, 388, 389),
-	COL_TRI(387, 389, 390),
-	COL_TRI(391, 392, 393),
-	COL_TRI(391, 393, 394),
-	COL_TRI(395, 396, 397),
-	COL_TRI(395, 397, 398),
-	COL_TRI(399, 400, 401),
-	COL_TRI(399, 401, 402),
-	COL_TRI(403, 404, 405),
-	COL_TRI(403, 405, 406),
-	COL_TRI(407, 408, 409),
-	COL_TRI(407, 409, 410),
-	COL_TRI(411, 412, 413),
-	COL_TRI(411, 413, 414),
-	COL_TRI(415, 416, 417),
-	COL_TRI(415, 417, 418),
-	COL_TRI(419, 420, 421),
-	COL_TRI(419, 421, 422),
-	COL_TRI(423, 424, 425),
-	COL_TRI(423, 425, 426),
-	COL_TRI(427, 428, 429),
-	COL_TRI(427, 429, 430),
-	COL_TRI(431, 432, 433),
-	COL_TRI(431, 433, 434),
-	COL_TRI(435, 436, 437),
-	COL_TRI(435, 437, 438),
-	COL_TRI(439, 440, 441),
-	COL_TRI(439, 441, 442),
-	COL_TRI(443, 444, 445),
-	COL_TRI(443, 445, 446),
-	COL_TRI(447, 448, 449),
-	COL_TRI(447, 449, 450),
-	COL_TRI(451, 452, 453),
-	COL_TRI(451, 453, 454),
-	COL_TRI(455, 456, 457),
-	COL_TRI(455, 457, 458),
-	COL_TRI(459, 460, 461),
-	COL_TRI(459, 461, 462),
-	COL_TRI(463, 464, 465),
-	COL_TRI(463, 465, 466),
-	COL_TRI(467, 468, 469),
-	COL_TRI(467, 469, 470),
-	COL_TRI(471, 472, 473),
-	COL_TRI(471, 473, 474),
-	COL_TRI(475, 476, 477),
-	COL_TRI(475, 477, 478),
-	COL_TRI(479, 480, 481),
-	COL_TRI(479, 481, 482),
-	COL_TRI(483, 484, 485),
-	COL_TRI(483, 485, 486),
-	COL_TRI(487, 488, 489),
-	COL_TRI(487, 489, 490),
-	COL_TRI(361, 353, 356),
-	COL_TRI(361, 356, 362),
-	COL_TRI(491, 357, 360),
-	COL_TRI(491, 360, 492),
-	COL_TRI(358, 357, 493),
-	COL_TRI(358, 493, 494),
-	COL_TRI(353, 361, 495),
-	COL_TRI(353, 495, 496),
-	COL_TRI(497, 498, 499),
-	COL_TRI(497, 499, 500),
-	COL_TRI(500, 499, 501),
-	COL_TRI(500, 501, 502),
-	COL_TRI(502, 501, 503),
-	COL_TRI(502, 503, 504),
-	COL_TRI(504, 503, 498),
-	COL_TRI(504, 498, 497),
-	COL_TRI(500, 502, 504),
-	COL_TRI(500, 504, 497),
-	COL_TRI(501, 499, 498),
-	COL_TRI(501, 498, 503),
-	COL_TRI(505, 506, 507),
-	COL_TRI(505, 507, 508),
-	COL_TRI(509, 510, 511),
-	COL_TRI(509, 511, 512),
-	COL_TRI(510, 513, 514),
-	COL_TRI(510, 514, 511),
-	COL_TRI(513, 515, 516),
-	COL_TRI(513, 516, 514),
-	COL_TRI(515, 517, 518),
-	COL_TRI(515, 518, 516),
-	COL_TRI(517, 519, 520),
-	COL_TRI(517, 520, 518),
-	COL_TRI(519, 521, 522),
-	COL_TRI(519, 522, 520),
-	COL_TRI(521, 523, 524),
-	COL_TRI(521, 524, 522),
-	COL_TRI(525, 526, 527),
-	COL_TRI(525, 527, 528),
-	COL_TRI(529, 530, 531),
-	COL_TRI(529, 531, 532),
-	COL_TRI(532, 531, 533),
-	COL_TRI(532, 533, 534),
-	COL_TRI(534, 533, 535),
-	COL_TRI(534, 535, 536),
-	COL_TRI(536, 535, 537),
-	COL_TRI(536, 537, 538),
-	COL_TRI(538, 537, 505),
-	COL_TRI(538, 505, 523),
-	COL_TRI(539, 529, 532),
-	COL_TRI(539, 532, 540),
-	COL_TRI(540, 532, 534),
-	COL_TRI(540, 534, 541),
-	COL_TRI(541, 534, 536),
-	COL_TRI(541, 536, 542),
-	COL_TRI(542, 536, 538),
-	COL_TRI(542, 538, 543),
-	COL_TRI(543, 538, 523),
-	COL_TRI(543, 523, 521),
-	COL_TRI(544, 539, 540),
-	COL_TRI(544, 540, 545),
-	COL_TRI(545, 540, 541),
-	COL_TRI(545, 541, 546),
-	COL_TRI(546, 541, 542),
-	COL_TRI(546, 542, 547),
-	COL_TRI(547, 542, 543),
-	COL_TRI(547, 543, 548),
-	COL_TRI(548, 543, 521),
-	COL_TRI(548, 521, 519),
-	COL_TRI(549, 544, 545),
-	COL_TRI(549, 545, 550),
-	COL_TRI(550, 545, 546),
-	COL_TRI(550, 546, 551),
-	COL_TRI(551, 546, 547),
-	COL_TRI(551, 547, 552),
-	COL_TRI(552, 547, 548),
-	COL_TRI(552, 548, 553),
-	COL_TRI(553, 548, 519),
-	COL_TRI(553, 519, 517),
-	COL_TRI(554, 549, 550),
-	COL_TRI(554, 550, 555),
-	COL_TRI(555, 550, 551),
-	COL_TRI(555, 551, 556),
-	COL_TRI(556, 551, 552),
-	COL_TRI(556, 552, 557),
-	COL_TRI(557, 552, 553),
-	COL_TRI(557, 553, 558),
-	COL_TRI(558, 553, 517),
-	COL_TRI(558, 517, 515),
-	COL_TRI(559, 554, 555),
-	COL_TRI(559, 555, 560),
-	COL_TRI(560, 555, 556),
-	COL_TRI(560, 556, 561),
-	COL_TRI(561, 556, 557),
-	COL_TRI(561, 557, 562),
-	COL_TRI(562, 557, 558),
-	COL_TRI(562, 558, 563),
-	COL_TRI(563, 558, 515),
-	COL_TRI(563, 515, 513),
-	COL_TRI(564, 559, 560),
-	COL_TRI(564, 560, 565),
-	COL_TRI(565, 560, 561),
-	COL_TRI(565, 561, 566),
-	COL_TRI(566, 561, 562),
-	COL_TRI(566, 562, 567),
-	COL_TRI(567, 562, 563),
-	COL_TRI(567, 563, 568),
-	COL_TRI(568, 563, 513),
-	COL_TRI(568, 513, 510),
-	COL_TRI(569, 564, 565),
-	COL_TRI(569, 565, 570),
-	COL_TRI(570, 565, 566),
-	COL_TRI(570, 566, 571),
-	COL_TRI(571, 566, 567),
-	COL_TRI(571, 567, 572),
-	COL_TRI(572, 567, 568),
-	COL_TRI(572, 568, 573),
-	COL_TRI(573, 568, 510),
-	COL_TRI(573, 510, 509),
-	COL_TRI(530, 574, 575),
-	COL_TRI(530, 575, 531),
-	COL_TRI(531, 575, 576),
-	COL_TRI(531, 576, 533),
-	COL_TRI(533, 576, 577),
-	COL_TRI(533, 577, 535),
-	COL_TRI(535, 577, 578),
-	COL_TRI(535, 578, 537),
-	COL_TRI(537, 578, 506),
-	COL_TRI(537, 506, 505),
-	COL_TRI(579, 580, 581),
-	COL_TRI(579, 581, 582),
-	COL_TRI(583, 584, 585),
-	COL_TRI(585, 586, 587),
-	COL_TRI(587, 588, 589),
-	COL_TRI(589, 590, 591),
-	COL_TRI(592, 583, 585),
-	COL_TRI(589, 591, 592),
-	COL_TRI(585, 587, 589),
-	COL_TRI(585, 589, 592),
-	COL_TRI(524, 528, 527),
-	COL_TRI(527, 508, 593),
-	COL_TRI(527, 593, 524),
-	COL_TRI(525, 528, 524),
-	COL_TRI(525, 524, 523),
-	COL_TRI(527, 526, 505),
-	COL_TRI(527, 505, 508),
-	COL_TRI(526, 525, 523),
-	COL_TRI(526, 523, 505),
-	COL_TRI(594, 595, 596),
-	COL_TRI(594, 596, 597),
-	COL_TRI(539, 544, 598),
-	COL_TRI(539, 598, 599),
-	COL_TRI(544, 549, 600),
-	COL_TRI(544, 600, 598),
-	COL_TRI(601, 602, 603),
-	COL_TRI(601, 603, 604),
-	COL_TRI_STOP(),
-	COL_WATER_BOX_INIT(1),
-	COL_WATER_BOX(0x00, 2849, -6015, 4169, -529, -1290),
-	COL_END()
-};
diff --git a/levels/castle_grounds/area_1/geo.inc.c b/levels/castle_grounds/area_1/geo.inc.c
deleted file mode 100644
index cb4439ab..00000000
--- a/levels/castle_grounds/area_1/geo.inc.c
+++ /dev/null
@@ -1,46 +0,0 @@
-#include "src/game/envfx_snow.h"
-
-const GeoLayout castle_grounds_area_1_geo[] = {
-	GEO_NODE_START(),
-	GEO_OPEN_NODE(),
-		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, -1258, 799, 9879, castle_grounds_dl_Cube_mesh_layer_1),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, castle_grounds_dl_Cube_001_mesh_layer_1),
-		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, 4937, 310, 10113, castle_grounds_dl_Cube_002_mesh_layer_1),
-		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, 4918, 597, 10490, castle_grounds_dl_Cube_003_mesh_layer_1),
-		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, 5382, 676, 10983, castle_grounds_dl_Cube_004_mesh_layer_1),
-		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, 5161, 788, 12056, castle_grounds_dl_Cube_005_mesh_layer_1),
-		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, 5043, 482, 11510, castle_grounds_dl_Cube_006_mesh_layer_1),
-		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, 4217, 794, 12369, castle_grounds_dl_Cube_007_mesh_layer_1),
-		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, 3363, 997, 12207, castle_grounds_dl_Cube_008_mesh_layer_1),
-		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, 3661, 541, 11874, castle_grounds_dl_Cube_010_mesh_layer_1),
-		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, -1225, 212, 5287, castle_grounds_dl_Plane_mesh_layer_1),
-		GEO_TRANSLATE_NODE_WITH_DL(LAYER_OPAQUE, -1225, 212, 5287, castle_grounds_dl_Plane_003_mesh_layer_1),
-	GEO_CLOSE_NODE(),
-	GEO_RETURN(),
-};
-const GeoLayout castle_grounds_area_1[] = {
-	GEO_NODE_SCREEN_AREA(10, SCREEN_WIDTH/2, SCREEN_HEIGHT/2, SCREEN_WIDTH/2, SCREEN_HEIGHT/2),
-	GEO_OPEN_NODE(),
-		GEO_ZBUFFER(0),
-		GEO_OPEN_NODE(),
-			GEO_NODE_ORTHO(100.0000),
-			GEO_OPEN_NODE(),
-				GEO_BACKGROUND(BACKGROUND_OCEAN_SKY, geo_skybox_main),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-		GEO_ZBUFFER(1),
-		GEO_OPEN_NODE(),
-			GEO_CAMERA_FRUSTUM_WITH_FUNC(45.0000, 100, 30000, geo_camera_fov),
-			GEO_OPEN_NODE(),
-				GEO_CAMERA(CAMERA_MODE_8_DIRECTIONS, 0, 0, 0, 0, -100, 0, geo_camera_main),
-				GEO_OPEN_NODE(),
-					GEO_BRANCH(1, castle_grounds_area_1_geo),
-					GEO_RENDER_OBJ(),
-					GEO_ASM(ENVFX_MODE_NONE, geo_envfx_main),
-				GEO_CLOSE_NODE(),
-			GEO_CLOSE_NODE(),
-		GEO_CLOSE_NODE(),
-		GEO_DISPLAY_LIST(LAYER_OPAQUE, castle_grounds_dl_material_revert_render_settings),
-	GEO_CLOSE_NODE(),
-	GEO_END(),
-};
diff --git a/levels/castle_grounds/area_1/macro.inc.c b/levels/castle_grounds/area_1/macro.inc.c
deleted file mode 100644
index c28274b4..00000000
--- a/levels/castle_grounds/area_1/macro.inc.c
+++ /dev/null
@@ -1,4 +0,0 @@
-const MacroObject castle_grounds_area_1_macro_objs[] = {
-	MACRO_OBJECT_END(),
-};
-
diff --git a/levels/castle_grounds/area_1/spline.inc.c b/levels/castle_grounds/area_1/spline.inc.c
deleted file mode 100644
index e69de29b..00000000
diff --git a/levels/castle_grounds/geo.c b/levels/castle_grounds/geo.c
index 9c98b44c..31f74204 100644
--- a/levels/castle_grounds/geo.c
+++ b/levels/castle_grounds/geo.c
@@ -18,8 +18,3 @@
 #include "levels/castle_grounds/areas/1/7/geo.inc.c"
 #include "levels/castle_grounds/areas/1/8/geo.inc.c"
 #include "levels/castle_grounds/areas/1/geo.inc.c"
-
-#include "levels/castle_grounds/geo.inc.c"
-
-#include "levels/castle_grounds/troll_water/geo.inc.c"
-#include "levels/castle_grounds/sponge_circle/geo.inc.c"
\ No newline at end of file
diff --git a/levels/castle_grounds/geo.inc.c b/levels/castle_grounds/geo.inc.c
deleted file mode 100644
index af9c4faf..00000000
--- a/levels/castle_grounds/geo.inc.c
+++ /dev/null
@@ -1 +0,0 @@
-#include "levels/castle_grounds/area_1/geo.inc.c"
diff --git a/levels/castle_grounds/header.h b/levels/castle_grounds/header.h
index 783b6be3..5e32ed94 100644
--- a/levels/castle_grounds/header.h
+++ b/levels/castle_grounds/header.h
@@ -41,11 +41,4 @@ extern const Gfx castle_grounds_dl_waterfall[];
 // script
 extern const LevelScript level_castle_grounds_entry[];
 
-
-#include "levels/castle_grounds/header.inc.h"
-
-#include "levels/castle_grounds/troll_water/geo_header.h"
-
-#include "levels/castle_grounds/sponge_circle/geo_header.h"
-
 #endif
diff --git a/levels/castle_grounds/header.inc.h b/levels/castle_grounds/header.inc.h
deleted file mode 100644
index af042030..00000000
--- a/levels/castle_grounds/header.inc.h
+++ /dev/null
@@ -1,94 +0,0 @@
-extern const GeoLayout castle_grounds_area_1_geo[];
-extern const GeoLayout castle_grounds_area_1[];
-extern const Collision castle_grounds_area_1_collision[];
-extern const MacroObject castle_grounds_area_1_macro_objs[];
-extern Lights1 castle_grounds_dl_f3dlite_material_007_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_006_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_008_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_005_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_009_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_010_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_001_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_014_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_004_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_002_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_011_lights;
-extern Lights1 castle_grounds_dl_f3dlite_material_013_lights;
-extern u8 castle_grounds_dl_dor_rgba16[];
-extern u8 castle_grounds_dl_RMGP01_ecdb432b_14_ci8[];
-extern u8 castle_grounds_dl_RMGP01_ecdb432b_14_pal_rgba16[];
-extern u8 castle_grounds_dl_cok_rgba16[];
-extern u8 castle_grounds_dl_doit_ci8[];
-extern u8 castle_grounds_dl_doit_pal_rgba16[];
-extern Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_0[44];
-extern Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_0[];
-extern Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_1[8];
-extern Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_1[];
-extern Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_2[32];
-extern Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_2[];
-extern Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_3[28];
-extern Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_3[];
-extern Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_4[140];
-extern Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_4[];
-extern Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_5[240];
-extern Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_5[];
-extern Vtx castle_grounds_dl_Cube_001_mesh_layer_1_vtx_0[24];
-extern Gfx castle_grounds_dl_Cube_001_mesh_layer_1_tri_0[];
-extern Vtx castle_grounds_dl_Cube_002_mesh_layer_1_vtx_0[24];
-extern Gfx castle_grounds_dl_Cube_002_mesh_layer_1_tri_0[];
-extern Vtx castle_grounds_dl_Cube_003_mesh_layer_1_vtx_0[24];
-extern Gfx castle_grounds_dl_Cube_003_mesh_layer_1_tri_0[];
-extern Vtx castle_grounds_dl_Cube_004_mesh_layer_1_vtx_0[24];
-extern Gfx castle_grounds_dl_Cube_004_mesh_layer_1_tri_0[];
-extern Vtx castle_grounds_dl_Cube_005_mesh_layer_1_vtx_0[24];
-extern Gfx castle_grounds_dl_Cube_005_mesh_layer_1_tri_0[];
-extern Vtx castle_grounds_dl_Cube_006_mesh_layer_1_vtx_0[24];
-extern Gfx castle_grounds_dl_Cube_006_mesh_layer_1_tri_0[];
-extern Vtx castle_grounds_dl_Cube_007_mesh_layer_1_vtx_0[24];
-extern Gfx castle_grounds_dl_Cube_007_mesh_layer_1_tri_0[];
-extern Vtx castle_grounds_dl_Cube_008_mesh_layer_1_vtx_0[24];
-extern Gfx castle_grounds_dl_Cube_008_mesh_layer_1_tri_0[];
-extern Vtx castle_grounds_dl_Cube_010_mesh_layer_1_vtx_0[24];
-extern Gfx castle_grounds_dl_Cube_010_mesh_layer_1_tri_0[];
-extern Vtx castle_grounds_dl_Plane_mesh_layer_1_vtx_0[177];
-extern Gfx castle_grounds_dl_Plane_mesh_layer_1_tri_0[];
-extern Vtx castle_grounds_dl_Plane_mesh_layer_1_vtx_1[4];
-extern Gfx castle_grounds_dl_Plane_mesh_layer_1_tri_1[];
-extern Vtx castle_grounds_dl_Plane_mesh_layer_1_vtx_2[10];
-extern Gfx castle_grounds_dl_Plane_mesh_layer_1_tri_2[];
-extern Vtx castle_grounds_dl_Plane_mesh_layer_1_vtx_3[4];
-extern Gfx castle_grounds_dl_Plane_mesh_layer_1_tri_3[];
-extern Vtx castle_grounds_dl_Plane_003_mesh_layer_1_vtx_0[36];
-extern Gfx castle_grounds_dl_Plane_003_mesh_layer_1_tri_0[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_007[];
-extern Gfx mat_revert_castle_grounds_dl_f3dlite_material_007[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_006[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_008[];
-extern Gfx mat_revert_castle_grounds_dl_f3dlite_material_008[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_005[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_009[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_010[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_001[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_014[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_004[];
-extern Gfx mat_revert_castle_grounds_dl_f3dlite_material_004[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_002[];
-extern Gfx mat_revert_castle_grounds_dl_f3dlite_material_002[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_011[];
-extern Gfx mat_revert_castle_grounds_dl_f3dlite_material_011[];
-extern Gfx mat_castle_grounds_dl_f3dlite_material_013[];
-extern Gfx castle_grounds_dl_Cube_mesh_layer_1[];
-extern Gfx castle_grounds_dl_Cube_001_mesh_layer_1[];
-extern Gfx castle_grounds_dl_Cube_002_mesh_layer_1[];
-extern Gfx castle_grounds_dl_Cube_003_mesh_layer_1[];
-extern Gfx castle_grounds_dl_Cube_004_mesh_layer_1[];
-extern Gfx castle_grounds_dl_Cube_005_mesh_layer_1[];
-extern Gfx castle_grounds_dl_Cube_006_mesh_layer_1[];
-extern Gfx castle_grounds_dl_Cube_007_mesh_layer_1[];
-extern Gfx castle_grounds_dl_Cube_008_mesh_layer_1[];
-extern Gfx castle_grounds_dl_Cube_010_mesh_layer_1[];
-extern Gfx castle_grounds_dl_Plane_mesh_layer_1[];
-extern Gfx castle_grounds_dl_Plane_003_mesh_layer_1[];
-extern Gfx castle_grounds_dl_material_revert_render_settings[];
diff --git a/levels/castle_grounds/leveldata.c b/levels/castle_grounds/leveldata.c
index 7fe883a8..1263f062 100644
--- a/levels/castle_grounds/leveldata.c
+++ b/levels/castle_grounds/leveldata.c
@@ -31,8 +31,3 @@
 #include "levels/castle_grounds/areas/1/7/collision.inc.c"
 #include "levels/castle_grounds/areas/1/8/collision.inc.c"
 #include "levels/castle_grounds/areas/1/movtext.inc.c"
-
-#include "levels/castle_grounds/leveldata.inc.c"
-
-#include "levels/castle_grounds/troll_water/model.inc.c"
-#include "levels/castle_grounds/sponge_circle/model.inc.c"
\ No newline at end of file
diff --git a/levels/castle_grounds/leveldata.inc.c b/levels/castle_grounds/leveldata.inc.c
deleted file mode 100644
index 13b22556..00000000
--- a/levels/castle_grounds/leveldata.inc.c
+++ /dev/null
@@ -1,4 +0,0 @@
-#include "levels/castle_grounds/area_1/collision.inc.c"
-#include "levels/castle_grounds/area_1/macro.inc.c"
-#include "levels/castle_grounds/area_1/spline.inc.c"
-#include "levels/castle_grounds/model.inc.c"
diff --git a/levels/castle_grounds/model.inc.c b/levels/castle_grounds/model.inc.c
deleted file mode 100644
index e6761d97..00000000
--- a/levels/castle_grounds/model.inc.c
+++ /dev/null
@@ -1,3469 +0,0 @@
-Lights1 castle_grounds_dl_f3dlite_material_007_lights = gdSPDefLights1(
-	0x7F, 0x5F, 0x1,
-	0xFF, 0xC0, 0x5, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_006_lights = gdSPDefLights1(
-	0x7F, 0xD, 0x15,
-	0xFF, 0x25, 0x35, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_008_lights = gdSPDefLights1(
-	0x6A, 0x59, 0x3A,
-	0xD6, 0xB6, 0x7B, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_005_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_009_lights = gdSPDefLights1(
-	0x39, 0x28, 0x1D,
-	0x79, 0x59, 0x44, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_010_lights = gdSPDefLights1(
-	0x7F, 0x7D, 0x63,
-	0xFF, 0xFB, 0xC9, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_001_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_014_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_004_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_002_lights = gdSPDefLights1(
-	0x7F, 0x0, 0x10,
-	0xFF, 0x0, 0x2B, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_011_lights = gdSPDefLights1(
-	0x7F, 0x7F, 0x7F,
-	0xFF, 0xFF, 0xFF, 0x28, 0x28, 0x28);
-
-Lights1 castle_grounds_dl_f3dlite_material_013_lights = gdSPDefLights1(
-	0x0, 0x0, 0x0,
-	0x0, 0x0, 0x0, 0x28, 0x28, 0x28);
-
-Gfx castle_grounds_dl_dor_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 castle_grounds_dl_dor_rgba16[] = {
-	0x6a, 0x49, 0x72, 0x8b, 0x7a, 0xcb, 0x62, 0x49, 
-	0x49, 0x87, 0x51, 0xc9, 0x5a, 0x09, 0x5a, 0x09, 
-	0x5a, 0x09, 0x5a, 0x49, 0x62, 0x49, 0x6a, 0x89, 
-	0x6a, 0x8b, 0x6a, 0x8b, 0x62, 0x49, 0x52, 0x47, 
-	0x41, 0xc5, 0x41, 0x85, 0x51, 0xc7, 0x62, 0x8b, 
-	0x7b, 0x0f, 0x8b, 0xd3, 0x7b, 0x0d, 0x7a, 0xcb, 
-	0x6a, 0x89, 0x6a, 0x49, 0x62, 0x49, 0x62, 0x49, 
-	0x52, 0x07, 0x49, 0xc7, 0x49, 0xc7, 0x49, 0xc7, 
-	0x72, 0x89, 0x7a, 0xcb, 0x62, 0x49, 0x51, 0xc7, 
-	0x51, 0xc7, 0x5a, 0x09, 0x5a, 0x09, 0x5a, 0x49, 
-	0x62, 0x49, 0x6a, 0x89, 0x6a, 0x8b, 0x5a, 0x89, 
-	0x42, 0xc7, 0x33, 0x07, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x07, 0x22, 0x85, 0x21, 0x85, 
-	0x29, 0x03, 0x39, 0x45, 0x5a, 0x07, 0x62, 0x49, 
-	0x6a, 0x89, 0x72, 0x8b, 0x72, 0x8b, 0x72, 0x8b, 
-	0x6a, 0x49, 0x5a, 0x07, 0x51, 0xc7, 0x51, 0xc7, 
-	0x7a, 0xcb, 0x6a, 0x89, 0x51, 0xc7, 0x49, 0xc7, 
-	0x52, 0x09, 0x5a, 0x09, 0x62, 0x49, 0x6a, 0x8b, 
-	0x72, 0x8b, 0x62, 0x89, 0x3b, 0x07, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x22, 0xc5, 0x21, 0x85, 0x28, 0xc3, 0x41, 0x45, 
-	0x52, 0x07, 0x5a, 0x07, 0x62, 0x49, 0x72, 0x89, 
-	0x72, 0xcb, 0x6a, 0x89, 0x5a, 0x07, 0x52, 0x09, 
-	0x72, 0x89, 0x52, 0x09, 0x49, 0xc7, 0x51, 0xc7, 
-	0x5a, 0x09, 0x62, 0x49, 0x72, 0x8b, 0x72, 0x8b, 
-	0x52, 0xc9, 0x2b, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x22, 0x85, 0x21, 0x45, 
-	0x31, 0x05, 0x49, 0x87, 0x5a, 0x07, 0x62, 0x49, 
-	0x6a, 0x49, 0x72, 0x89, 0x72, 0x89, 0x6a, 0x49, 
-	0x5a, 0x09, 0x49, 0xc7, 0x51, 0xc7, 0x52, 0x09, 
-	0x5a, 0x49, 0x6a, 0x89, 0x6a, 0x8b, 0x43, 0x09, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x22, 0xc7, 
-	0x29, 0x05, 0x29, 0x05, 0x49, 0x87, 0x5a, 0x09, 
-	0x5a, 0x07, 0x62, 0x49, 0x6a, 0x89, 0x72, 0xcb, 
-	0x49, 0xc7, 0x49, 0xc7, 0x52, 0x09, 0x5a, 0x49, 
-	0x6a, 0x89, 0x6a, 0x89, 0x42, 0xc7, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x05, 0x1b, 0x05, 0x1b, 0x05, 0x1b, 0x05, 
-	0x23, 0x07, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x22, 0x45, 0x29, 0x05, 0x29, 0x05, 0x49, 0xc7, 
-	0x5a, 0x09, 0x52, 0x07, 0x52, 0x07, 0x62, 0x49, 
-	0x49, 0x87, 0x52, 0x07, 0x5a, 0x09, 0x6a, 0x49, 
-	0x6a, 0x89, 0x4a, 0xc9, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x05, 0x1b, 0x05, 0x1a, 0xc5, 
-	0x1a, 0xc5, 0x1a, 0xc5, 0x1a, 0xc5, 0x1a, 0xc5, 
-	0x32, 0xc9, 0x2b, 0x09, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x05, 0x29, 0x05, 0x31, 0x05, 
-	0x5a, 0x07, 0x62, 0x47, 0x51, 0xc7, 0x49, 0xc7, 
-	0x49, 0xc7, 0x5a, 0x09, 0x6a, 0x89, 0x6a, 0x89, 
-	0x52, 0x89, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x1b, 0x05, 0x1a, 0xc5, 0x22, 0x85, 0x32, 0x47, 
-	0x32, 0x47, 0x32, 0x49, 0x3a, 0x09, 0x3a, 0x09, 
-	0x4a, 0x0b, 0x42, 0x8b, 0x22, 0xc5, 0x1b, 0x05, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x2a, 0x05, 0x29, 0x03, 
-	0x31, 0x43, 0x62, 0x47, 0x5a, 0x07, 0x49, 0xc7, 
-	0x51, 0xc7, 0x62, 0x49, 0x72, 0x8b, 0x52, 0x89, 
-	0x23, 0x47, 0x23, 0x47, 0x2b, 0x07, 0x32, 0xc9, 
-	0x32, 0x47, 0x41, 0xc9, 0x49, 0x8b, 0x49, 0x8b, 
-	0x5a, 0x0d, 0x51, 0xcb, 0x49, 0x8b, 0x49, 0x8b, 
-	0x51, 0xcd, 0x51, 0xcd, 0x3a, 0x09, 0x2a, 0x47, 
-	0x32, 0xc9, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x07, 0x29, 0x43, 
-	0x29, 0x03, 0x41, 0x85, 0x5a, 0x07, 0x51, 0xc7, 
-	0x5a, 0x07, 0x6a, 0x89, 0x6a, 0x89, 0x3a, 0xc7, 
-	0x23, 0x47, 0x1b, 0x05, 0x32, 0x89, 0x42, 0x4b, 
-	0x49, 0xcb, 0x49, 0x8b, 0x49, 0x8b, 0x51, 0xcb, 
-	0x5a, 0x0d, 0x51, 0xcd, 0x51, 0xcd, 0x5a, 0x0d, 
-	0x62, 0x0f, 0x51, 0xcd, 0x49, 0xcb, 0x51, 0xcb, 
-	0x52, 0x0b, 0x42, 0x8b, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x2a, 0x05, 
-	0x29, 0x03, 0x31, 0x43, 0x5a, 0x07, 0x62, 0x47, 
-	0x62, 0x49, 0x72, 0x89, 0x5a, 0x49, 0x2b, 0x47, 
-	0x2b, 0x07, 0x32, 0x89, 0x52, 0x0d, 0x59, 0xcd, 
-	0x51, 0xcd, 0x51, 0xcd, 0x5a, 0x0d, 0x6a, 0x51, 
-	0x6a, 0x51, 0x5a, 0x0f, 0x62, 0x4f, 0x6a, 0x51, 
-	0x6a, 0x51, 0x62, 0x4f, 0x5a, 0x0f, 0x62, 0x4f, 
-	0x62, 0x4f, 0x59, 0xcd, 0x3a, 0x49, 0x23, 0x49, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x22, 0xc5, 
-	0x29, 0x03, 0x29, 0x03, 0x51, 0xc5, 0x62, 0x47, 
-	0x6a, 0x89, 0x72, 0x89, 0x42, 0x87, 0x23, 0x07, 
-	0x32, 0xc9, 0x4a, 0x4b, 0x5a, 0x0d, 0x62, 0x0f, 
-	0x62, 0x0f, 0x5a, 0x0f, 0x6a, 0x4f, 0x72, 0x91, 
-	0x6a, 0x51, 0x5a, 0x0f, 0x6a, 0x4f, 0x6a, 0x51, 
-	0x6a, 0x51, 0x5a, 0x0f, 0x5a, 0x0f, 0x62, 0x51, 
-	0x6a, 0x51, 0x62, 0x0f, 0x5a, 0x0d, 0x3b, 0x0b, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x29, 0x83, 0x29, 0x03, 0x31, 0x43, 0x51, 0xc7, 
-	0x72, 0xcb, 0x62, 0x49, 0x33, 0x07, 0x2b, 0x07, 
-	0x3a, 0xc9, 0x5a, 0x8d, 0x62, 0x4f, 0x72, 0x91, 
-	0x62, 0x4f, 0x5a, 0x0f, 0x6a, 0x51, 0x72, 0x91, 
-	0x62, 0x4f, 0x5a, 0x0f, 0x6a, 0x4f, 0x6a, 0x91, 
-	0x62, 0x51, 0x5a, 0x0f, 0x5a, 0x0f, 0x62, 0x4f, 
-	0x6a, 0x51, 0x62, 0x4f, 0x62, 0x0f, 0x5a, 0x8f, 
-	0x33, 0x49, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 0x49, 0x85, 
-	0x6a, 0x89, 0x4a, 0x47, 0x2b, 0x47, 0x33, 0x09, 
-	0x4a, 0x8d, 0x62, 0x8f, 0x72, 0x91, 0x72, 0x91, 
-	0x5a, 0x0f, 0x5a, 0x0f, 0x6a, 0x51, 0x72, 0x91, 
-	0x5a, 0x0f, 0x5a, 0x0f, 0x6a, 0x51, 0x72, 0x91, 
-	0x6a, 0x51, 0x5a, 0x0f, 0x5a, 0x0f, 0x62, 0x0f, 
-	0x72, 0x91, 0x6a, 0x4f, 0x62, 0x0f, 0x62, 0x4f, 
-	0x43, 0x4b, 0x33, 0x49, 0x23, 0x47, 0x23, 0x47, 
-	0x22, 0xc7, 0x20, 0xc3, 0x20, 0xc3, 0x31, 0x03, 
-	0x5a, 0x09, 0x3a, 0x87, 0x23, 0x07, 0x3a, 0x89, 
-	0x62, 0x4f, 0x72, 0x91, 0x72, 0x91, 0x6a, 0x91, 
-	0x5a, 0x0f, 0x5a, 0x4f, 0x6a, 0x91, 0x6a, 0x51, 
-	0x5a, 0x0f, 0x5a, 0x0f, 0x6a, 0x51, 0x72, 0x91, 
-	0x6a, 0x51, 0x5a, 0x0f, 0x5a, 0x0f, 0x5a, 0x0f, 
-	0x72, 0x91, 0x72, 0x91, 0x6a, 0x51, 0x62, 0x4f, 
-	0x4a, 0xcd, 0x33, 0x89, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x07, 0x20, 0xc3, 0x20, 0xc3, 0x31, 0x03, 
-	0x5a, 0x07, 0x2a, 0xc7, 0x22, 0xc7, 0x4a, 0x4b, 
-	0x6a, 0x4f, 0x72, 0x91, 0x72, 0x91, 0x6a, 0x91, 
-	0x5a, 0x0f, 0x62, 0x4f, 0x72, 0x91, 0x72, 0x51, 
-	0x5a, 0x0f, 0x62, 0x0f, 0x6a, 0x4f, 0x72, 0x91, 
-	0x72, 0x91, 0x62, 0x4f, 0x5a, 0x0f, 0x5a, 0x0f, 
-	0x6a, 0x4f, 0x6a, 0x4f, 0x62, 0x4f, 0x5a, 0x0f, 
-	0x5a, 0x4f, 0x33, 0x8b, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x21, 0x43, 0x29, 0x01, 0x31, 0x43, 
-	0x5a, 0x07, 0x2a, 0xc7, 0x2a, 0x87, 0x49, 0xc9, 
-	0x62, 0x4f, 0x6a, 0x91, 0x72, 0x91, 0x6a, 0x51, 
-	0x5a, 0x0f, 0x62, 0x4f, 0x72, 0x91, 0x72, 0x91, 
-	0x62, 0x0f, 0x62, 0x4f, 0x62, 0x4f, 0x6a, 0x51, 
-	0x72, 0x91, 0x6a, 0x51, 0x5a, 0x0f, 0x5a, 0x0f, 
-	0x62, 0x4f, 0x62, 0x4f, 0x5a, 0x0f, 0x5a, 0x0f, 
-	0x5a, 0x4f, 0x33, 0x8b, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x29, 0xc3, 0x29, 0x03, 0x31, 0x03, 
-	0x5a, 0x49, 0x22, 0xc7, 0x3a, 0x49, 0x4a, 0x0b, 
-	0x62, 0x4f, 0x6a, 0x91, 0x72, 0x93, 0x6a, 0x51, 
-	0x5a, 0x0f, 0x62, 0x4f, 0x6a, 0x91, 0x6a, 0x91, 
-	0x62, 0x4f, 0x62, 0x4f, 0x62, 0x4f, 0x6a, 0x51, 
-	0x72, 0x91, 0x72, 0x91, 0x62, 0x4f, 0x5a, 0x0f, 
-	0x62, 0x4f, 0x62, 0x4f, 0x5a, 0x0f, 0x5a, 0x0f, 
-	0x62, 0x4f, 0x43, 0x8d, 0x23, 0x87, 0x23, 0x47, 
-	0x23, 0x47, 0x2a, 0x05, 0x31, 0x05, 0x31, 0x05, 
-	0x5a, 0x49, 0x2a, 0xc9, 0x4a, 0x0b, 0x6a, 0x51, 
-	0x6a, 0x91, 0x6a, 0x91, 0x72, 0x93, 0x6a, 0x51, 
-	0x5a, 0x0f, 0x62, 0x4f, 0x6a, 0x91, 0x72, 0x91, 
-	0x62, 0x51, 0x62, 0x4f, 0x62, 0x4f, 0x62, 0x4f, 
-	0x72, 0x91, 0x72, 0x91, 0x72, 0x91, 0x6a, 0x51, 
-	0x72, 0x91, 0x6a, 0x91, 0x6a, 0x51, 0x6a, 0x51, 
-	0x62, 0x4f, 0x4b, 0x8d, 0x23, 0x89, 0x23, 0x47, 
-	0x23, 0x47, 0x2a, 0x85, 0x31, 0x05, 0x31, 0x05, 
-	0x62, 0x89, 0x2a, 0xc9, 0x4a, 0x0b, 0x6a, 0x4f, 
-	0x72, 0x91, 0x72, 0x91, 0x7a, 0xd3, 0x6a, 0x51, 
-	0x5a, 0x0f, 0x5a, 0x4f, 0x6a, 0x91, 0x6a, 0x91, 
-	0x6a, 0x51, 0x62, 0x4f, 0x62, 0x4f, 0x5a, 0x0f, 
-	0x6a, 0x4f, 0x72, 0x91, 0x6a, 0x51, 0x72, 0x91, 
-	0x7a, 0xd3, 0x72, 0x93, 0x6a, 0x91, 0x62, 0x4f, 
-	0x62, 0x0d, 0x53, 0x4f, 0x2b, 0x89, 0x23, 0x47, 
-	0x23, 0x47, 0x2a, 0x85, 0x31, 0x05, 0x31, 0x05, 
-	0x52, 0xc7, 0x2a, 0xc9, 0x4a, 0x0b, 0x62, 0x4f, 
-	0x72, 0x51, 0x72, 0x91, 0x72, 0xd3, 0x62, 0x51, 
-	0x5a, 0x0f, 0x5a, 0x4f, 0x6a, 0x51, 0x6a, 0x91, 
-	0x6a, 0x91, 0x72, 0x91, 0x62, 0x4f, 0x5a, 0x0f, 
-	0x5a, 0x0f, 0x62, 0x4f, 0x62, 0x4f, 0x6a, 0x4f, 
-	0x6a, 0x91, 0x6a, 0x51, 0x5a, 0x4f, 0x5a, 0x0f, 
-	0x62, 0x0d, 0x53, 0x4f, 0x2b, 0x89, 0x23, 0x47, 
-	0x23, 0x47, 0x2a, 0x85, 0x31, 0x05, 0x31, 0x05, 
-	0x4a, 0x87, 0x32, 0xc9, 0x49, 0xcb, 0x62, 0x0f, 
-	0x6a, 0x51, 0x72, 0x93, 0x72, 0x93, 0x6a, 0x51, 
-	0x5a, 0x4f, 0x5a, 0x0f, 0x62, 0x4f, 0x72, 0x91, 
-	0x72, 0x91, 0x7a, 0xd3, 0x6a, 0x91, 0x5a, 0x0f, 
-	0x5a, 0x0f, 0x5a, 0x0f, 0x5a, 0x0f, 0x5a, 0x4f, 
-	0x6a, 0x51, 0x62, 0x4f, 0x5a, 0x0f, 0x5a, 0x0f, 
-	0x62, 0x0d, 0x53, 0x0f, 0x2b, 0x8b, 0x23, 0x47, 
-	0x23, 0x47, 0x2a, 0x85, 0x31, 0x05, 0x31, 0x05, 
-	0x4a, 0x87, 0x32, 0xcb, 0x49, 0xcb, 0x5a, 0x0f, 
-	0x6a, 0x51, 0x72, 0x93, 0x72, 0x93, 0x72, 0x91, 
-	0x62, 0x4f, 0x5a, 0x0f, 0x62, 0x4f, 0x6a, 0x51, 
-	0x72, 0x91, 0x7a, 0xd3, 0x72, 0x91, 0x6a, 0x51, 
-	0x62, 0x4f, 0x62, 0x4f, 0x5a, 0x0f, 0x62, 0x4f, 
-	0x6a, 0x51, 0x62, 0x4f, 0x5a, 0x0f, 0x62, 0x4f, 
-	0x6a, 0x4f, 0x63, 0x51, 0x33, 0x8b, 0x23, 0x47, 
-	0x23, 0x47, 0x2a, 0x85, 0x31, 0x05, 0x31, 0x05, 
-	0x4a, 0x87, 0x32, 0xc9, 0x49, 0xcb, 0x5a, 0x0d, 
-	0x6a, 0x4f, 0x72, 0x93, 0x72, 0x93, 0x72, 0x51, 
-	0x6a, 0x51, 0x62, 0x4f, 0x62, 0x4f, 0x62, 0x4f, 
-	0x72, 0x91, 0x7a, 0xd3, 0x72, 0x91, 0x6a, 0x91, 
-	0x72, 0x91, 0x6a, 0x91, 0x6a, 0x51, 0x6a, 0x91, 
-	0x72, 0x93, 0x72, 0x91, 0x6a, 0x51, 0x72, 0x91, 
-	0x6a, 0x91, 0x63, 0x11, 0x3b, 0xcb, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x85, 0x31, 0x05, 0x29, 0x05, 
-	0x52, 0x87, 0x32, 0xc9, 0x49, 0xcb, 0x51, 0xcd, 
-	0x62, 0x4f, 0x72, 0xd1, 0x6a, 0xd1, 0x6a, 0xd1, 
-	0x6a, 0xd1, 0x62, 0xd1, 0x5a, 0x8d, 0x5a, 0x4d, 
-	0x62, 0x91, 0x6a, 0x91, 0x6a, 0x91, 0x6a, 0x51, 
-	0x72, 0x51, 0x72, 0x51, 0x6a, 0x91, 0x72, 0x91, 
-	0x7a, 0xd3, 0x72, 0x91, 0x72, 0x91, 0x6a, 0x51, 
-	0x62, 0x51, 0x5a, 0xcf, 0x3b, 0x8b, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x52, 0x87, 0x42, 0xcb, 0x4a, 0x4b, 0x42, 0xcb, 
-	0x43, 0x8d, 0x3c, 0x0d, 0x4b, 0xcf, 0x4b, 0x8f, 
-	0x43, 0x8f, 0x43, 0x8f, 0x3b, 0xcd, 0x3c, 0x0d, 
-	0x3b, 0xcd, 0x3b, 0xcd, 0x4b, 0x4f, 0x5b, 0x0f, 
-	0x6a, 0x91, 0x72, 0x51, 0x6a, 0x91, 0x72, 0x91, 
-	0x72, 0x93, 0x6a, 0x51, 0x62, 0x4f, 0x5a, 0x0f, 
-	0x5a, 0x0f, 0x5a, 0xcf, 0x3b, 0x8b, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x52, 0x49, 0x43, 0x4d, 0x34, 0x0d, 0x34, 0x0d, 
-	0x33, 0xcb, 0x33, 0xcb, 0x2b, 0x8b, 0x23, 0x49, 
-	0x23, 0x49, 0x23, 0x49, 0x2b, 0x49, 0x2b, 0x89, 
-	0x2b, 0xc9, 0x2b, 0xcb, 0x34, 0x0b, 0x34, 0x0d, 
-	0x43, 0xcd, 0x53, 0x4f, 0x5a, 0x8f, 0x62, 0x0f, 
-	0x62, 0x51, 0x62, 0x4f, 0x5a, 0x0f, 0x5a, 0x0f, 
-	0x5a, 0x0f, 0x5a, 0xcf, 0x33, 0xcb, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0x83, 0x18, 0x83, 
-	0x42, 0x47, 0x2b, 0x49, 0x2b, 0x89, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x49, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x89, 
-	0x33, 0xcb, 0x34, 0x0d, 0x3c, 0x0d, 0x4b, 0x0d, 
-	0x62, 0x8f, 0x62, 0x4f, 0x5a, 0x0f, 0x62, 0x4f, 
-	0x62, 0x4f, 0x5b, 0x0f, 0x33, 0x89, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0x83, 0x18, 0x83, 
-	0x3a, 0x05, 0x23, 0x07, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x2b, 0x89, 0x2c, 0x0b, 
-	0x3b, 0xcd, 0x43, 0x4d, 0x5a, 0xcf, 0x62, 0x4f, 
-	0x62, 0x4f, 0x53, 0x0f, 0x2b, 0x89, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x42, 0x45, 0x1b, 0x05, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x33, 0x8b, 0x2b, 0x8b, 0x3b, 0xcd, 0x4b, 0x4f, 
-	0x52, 0x8d, 0x4b, 0x4d, 0x2b, 0x89, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x42, 0x45, 0x1b, 0x05, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x2b, 0x89, 
-	0x3b, 0xcd, 0x33, 0xcb, 0x23, 0x87, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x4a, 0x83, 0x1b, 0x05, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x2b, 0x49, 0x2b, 0xcb, 0x23, 0x87, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x52, 0xc5, 0x1b, 0x05, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x2b, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x52, 0xc7, 0x1a, 0xc5, 0x1a, 0xc5, 0x1a, 0xc5, 
-	0x1a, 0xc5, 0x1a, 0xc5, 0x1a, 0xc5, 0x1a, 0xc5, 
-	0x1a, 0xc5, 0x1a, 0xc5, 0x1a, 0xc5, 0x1b, 0x05, 
-	0x23, 0x07, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x89, 0x2b, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x28, 0xc3, 0x20, 0xc3, 
-	0x52, 0xc9, 0x1a, 0xc5, 0x22, 0x87, 0x32, 0x47, 
-	0x42, 0x8b, 0x4a, 0x8d, 0x42, 0x4b, 0x3a, 0x09, 
-	0x32, 0x47, 0x2a, 0x47, 0x22, 0x87, 0x1a, 0xc5, 
-	0x1a, 0xc5, 0x1a, 0xc5, 0x1a, 0xc5, 0x1b, 0x05, 
-	0x1b, 0x05, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x89, 0x2b, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x28, 0xc5, 0x28, 0xc3, 
-	0x53, 0x09, 0x1a, 0xc5, 0x32, 0x09, 0x49, 0x8b, 
-	0x49, 0xcb, 0x52, 0x0d, 0x51, 0xcb, 0x51, 0x8b, 
-	0x49, 0x8b, 0x49, 0x8b, 0x49, 0xcb, 0x42, 0x4b, 
-	0x32, 0x89, 0x2a, 0xc7, 0x1a, 0xc5, 0x1a, 0xc5, 
-	0x1a, 0xc5, 0x1a, 0xc5, 0x1b, 0x05, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x2b, 0x89, 0x2b, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x29, 0x05, 0x29, 0x03, 
-	0x5b, 0x09, 0x1a, 0xc5, 0x32, 0x49, 0x49, 0x8b, 
-	0x51, 0xcb, 0x5a, 0x0d, 0x62, 0x0f, 0x6a, 0x4f, 
-	0x5a, 0x0f, 0x51, 0xcd, 0x51, 0xcd, 0x62, 0x0f, 
-	0x6a, 0x8f, 0x52, 0x8d, 0x3a, 0x49, 0x2a, 0x87, 
-	0x22, 0xc5, 0x1a, 0xc5, 0x1a, 0xc5, 0x1a, 0xc5, 
-	0x1b, 0x05, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x2b, 0x89, 0x2b, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x29, 0x05, 0x29, 0x03, 
-	0x5b, 0x09, 0x1b, 0x05, 0x32, 0x89, 0x4a, 0x0b, 
-	0x5a, 0x0d, 0x62, 0x0d, 0x62, 0x4f, 0x72, 0x91, 
-	0x6a, 0x51, 0x5a, 0x0f, 0x5a, 0x0f, 0x6a, 0x91, 
-	0x72, 0xd3, 0x62, 0x8f, 0x5a, 0x0d, 0x51, 0xcd, 
-	0x49, 0xcb, 0x32, 0x49, 0x22, 0x87, 0x1a, 0x85, 
-	0x23, 0x07, 0x23, 0x07, 0x23, 0x05, 0x23, 0x47, 
-	0x2b, 0x89, 0x33, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x29, 0x05, 0x29, 0x03, 
-	0x5b, 0x09, 0x1b, 0x05, 0x32, 0x89, 0x62, 0x8f, 
-	0x7b, 0x17, 0xac, 0xe5, 0x83, 0xdd, 0x7b, 0x17, 
-	0x6a, 0x91, 0x5a, 0x4f, 0x5a, 0x0f, 0x6a, 0x51, 
-	0x7a, 0xd3, 0x72, 0x91, 0x6a, 0x51, 0x62, 0x4f, 
-	0x51, 0xcb, 0x49, 0x8b, 0x49, 0xcb, 0x41, 0xcb, 
-	0x3a, 0x49, 0x2a, 0xc9, 0x1a, 0xc5, 0x22, 0xc7, 
-	0x33, 0x4b, 0x33, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x29, 0x05, 0x29, 0x03, 
-	0x52, 0x49, 0x1b, 0x05, 0x2a, 0xc9, 0x6a, 0x91, 
-	0xb5, 0x27, 0xd6, 0xb5, 0x9c, 0xe7, 0x8c, 0x1f, 
-	0x72, 0x93, 0x62, 0x4f, 0x5a, 0x0f, 0x6a, 0x51, 
-	0x7a, 0xd3, 0x6a, 0x91, 0x72, 0x91, 0x72, 0x91, 
-	0x62, 0x4f, 0x5a, 0x0f, 0x5a, 0x0f, 0x5a, 0x0f, 
-	0x4a, 0x0b, 0x41, 0xcb, 0x39, 0xc9, 0x3a, 0x09, 
-	0x43, 0x4d, 0x2c, 0x0b, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x29, 0x05, 0x29, 0x03, 
-	0x49, 0xc7, 0x23, 0x05, 0x2a, 0x87, 0xad, 0x67, 
-	0xc6, 0x31, 0x7b, 0xdd, 0x52, 0x51, 0x5a, 0xd7, 
-	0x7b, 0x9d, 0x62, 0x4f, 0x5a, 0x0f, 0x6a, 0x51, 
-	0x7a, 0xd3, 0x6a, 0x91, 0x72, 0x91, 0x6a, 0x51, 
-	0x62, 0x4f, 0x62, 0x4f, 0x6a, 0x91, 0x6a, 0x91, 
-	0x5a, 0x0d, 0x51, 0xcd, 0x49, 0x8b, 0x51, 0xcb, 
-	0x43, 0x0d, 0x2c, 0x0b, 0x23, 0x49, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x28, 0xc5, 0x29, 0x03, 
-	0x49, 0xc7, 0x23, 0x05, 0x2a, 0x87, 0xbd, 0xeb, 
-	0xad, 0x6b, 0x6a, 0x93, 0x5a, 0x0f, 0x8c, 0x21, 
-	0x83, 0xdf, 0x62, 0x51, 0x5a, 0x0f, 0x6a, 0x51, 
-	0x7a, 0xd3, 0x6a, 0x91, 0x6a, 0x91, 0x62, 0x4f, 
-	0x5a, 0x0f, 0x62, 0x4f, 0x72, 0x93, 0x72, 0x93, 
-	0x62, 0x4f, 0x5a, 0x0f, 0x62, 0x0f, 0x62, 0x4f, 
-	0x43, 0x0d, 0x33, 0xcb, 0x23, 0x49, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x28, 0xc5, 0x28, 0xc5, 
-	0x52, 0x07, 0x23, 0x07, 0x2a, 0x87, 0xbd, 0xed, 
-	0xad, 0x6b, 0x6a, 0x93, 0x62, 0x4f, 0x8c, 0x61, 
-	0x83, 0xdf, 0x6a, 0x51, 0x5a, 0x0f, 0x6a, 0x51, 
-	0x7a, 0xd3, 0x6a, 0x51, 0x6a, 0x51, 0x5a, 0x4f, 
-	0x5a, 0x0f, 0x6a, 0x51, 0x72, 0x93, 0x72, 0x91, 
-	0x5a, 0x0f, 0x5a, 0x0f, 0x62, 0x4f, 0x6a, 0x4f, 
-	0x4b, 0x0d, 0x33, 0x8b, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x28, 0xc5, 0x28, 0xc5, 
-	0x5a, 0x49, 0x23, 0x07, 0x2a, 0x87, 0x9c, 0xe5, 
-	0x9c, 0xe7, 0x73, 0x17, 0x73, 0x59, 0x8c, 0x63, 
-	0x7b, 0xdd, 0x6a, 0x51, 0x5a, 0x0f, 0x6a, 0x51, 
-	0x7a, 0x93, 0x72, 0x51, 0x62, 0x51, 0x5a, 0x0f, 
-	0x62, 0x0f, 0x72, 0x51, 0x72, 0x91, 0x6a, 0x51, 
-	0x5a, 0x0f, 0x5a, 0x0f, 0x6a, 0x51, 0x62, 0x4f, 
-	0x4b, 0x0d, 0x33, 0x8b, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x28, 0xc5, 0x28, 0xc5, 
-	0x5a, 0x49, 0x23, 0x07, 0x2a, 0xc7, 0x5a, 0x0d, 
-	0x39, 0x8b, 0x5a, 0x95, 0x84, 0x21, 0x7b, 0x9d, 
-	0x72, 0xd3, 0x6a, 0x51, 0x5a, 0x0f, 0x6a, 0x51, 
-	0x7a, 0x93, 0x72, 0x51, 0x62, 0x4f, 0x5a, 0x0f, 
-	0x62, 0x4f, 0x72, 0x91, 0x72, 0x91, 0x6a, 0x51, 
-	0x5a, 0x0f, 0x5a, 0x0f, 0x6a, 0x51, 0x62, 0x0f, 
-	0x4b, 0x0d, 0x33, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x28, 0xc5, 0x28, 0xc5, 
-	0x5a, 0x49, 0x23, 0x07, 0x2a, 0xc7, 0x6a, 0x4f, 
-	0x72, 0x91, 0x52, 0x0d, 0x52, 0x0f, 0x62, 0x4f, 
-	0x72, 0x91, 0x6a, 0x51, 0x5a, 0x0f, 0x6a, 0x51, 
-	0x7a, 0x93, 0x6a, 0x91, 0x62, 0x4f, 0x5a, 0x0f, 
-	0x6a, 0x4f, 0x72, 0x91, 0x72, 0x91, 0x6a, 0x4f, 
-	0x5a, 0x0f, 0x62, 0x0f, 0x6a, 0x91, 0x62, 0x0f, 
-	0x4b, 0x0d, 0x34, 0x0b, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x28, 0xc3, 0x20, 0xc3, 
-	0x62, 0x49, 0x1a, 0xc5, 0x2a, 0x87, 0x6a, 0x4f, 
-	0x6a, 0x51, 0x62, 0x4f, 0x5a, 0x0f, 0x6a, 0x51, 
-	0x72, 0x91, 0x6a, 0x51, 0x5a, 0x0f, 0x6a, 0x51, 
-	0x7a, 0x93, 0x6a, 0x51, 0x5a, 0x0f, 0x62, 0x0f, 
-	0x6a, 0x51, 0x6a, 0x91, 0x6a, 0x91, 0x6a, 0x4f, 
-	0x5a, 0x0f, 0x62, 0x4f, 0x6a, 0x91, 0x62, 0x4f, 
-	0x52, 0xcd, 0x3b, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x62, 0x89, 0x1a, 0xc5, 0x32, 0xc7, 0x6a, 0x8f, 
-	0x6a, 0x51, 0x62, 0x4f, 0x62, 0x4f, 0x6a, 0x51, 
-	0x72, 0x91, 0x62, 0x4f, 0x5a, 0x0f, 0x6a, 0x51, 
-	0x7a, 0x93, 0x6a, 0x51, 0x5a, 0x0f, 0x62, 0x0f, 
-	0x6a, 0x51, 0x6a, 0x91, 0x6a, 0x91, 0x6a, 0x4f, 
-	0x5a, 0x0f, 0x62, 0x4f, 0x6a, 0x91, 0x62, 0x4f, 
-	0x52, 0xcd, 0x33, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x62, 0x89, 0x1a, 0xc5, 0x32, 0xc9, 0x6a, 0x8f, 
-	0x62, 0x51, 0x62, 0x4f, 0x6a, 0x4f, 0x6a, 0x91, 
-	0x6a, 0x91, 0x62, 0x4f, 0x5a, 0x0f, 0x6a, 0x91, 
-	0x72, 0x91, 0x6a, 0x51, 0x5a, 0x0f, 0x62, 0x0f, 
-	0x6a, 0x51, 0x6a, 0x91, 0x6a, 0x91, 0x6a, 0x4f, 
-	0x5a, 0x4f, 0x62, 0x4f, 0x72, 0x91, 0x62, 0x4f, 
-	0x4a, 0xcd, 0x33, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0x83, 0x18, 0xc3, 
-	0x62, 0x89, 0x1a, 0xc5, 0x32, 0xc9, 0x6a, 0x8f, 
-	0x62, 0x4f, 0x62, 0x4f, 0x6a, 0x4f, 0x6a, 0x91, 
-	0x6a, 0x91, 0x5a, 0x4f, 0x5a, 0x0f, 0x72, 0x93, 
-	0x72, 0x91, 0x6a, 0x4f, 0x5a, 0x4f, 0x62, 0x0f, 
-	0x6a, 0x51, 0x6a, 0x91, 0x72, 0x91, 0x6a, 0x4f, 
-	0x5a, 0x4f, 0x5a, 0x0f, 0x6a, 0x51, 0x6a, 0x51, 
-	0x52, 0x8f, 0x33, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0x83, 0x18, 0xc3, 
-	0x62, 0x49, 0x1a, 0xc5, 0x3a, 0x89, 0x6a, 0x8f, 
-	0x62, 0x4f, 0x62, 0x4f, 0x6a, 0x4f, 0x6a, 0x91, 
-	0x6a, 0x51, 0x5a, 0x0f, 0x5a, 0x4f, 0x72, 0x93, 
-	0x72, 0x91, 0x6a, 0x4f, 0x5a, 0x4f, 0x62, 0x0f, 
-	0x6a, 0x51, 0x72, 0x91, 0x72, 0x91, 0x6a, 0x4f, 
-	0x62, 0x4f, 0x5a, 0x0f, 0x6a, 0x51, 0x6a, 0x51, 
-	0x52, 0xcf, 0x33, 0xcb, 0x23, 0x49, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0x83, 0x18, 0xc3, 
-	0x62, 0x49, 0x1a, 0xc5, 0x3a, 0x8b, 0x5a, 0x0d, 
-	0x5a, 0x0f, 0x62, 0x0f, 0x6a, 0x4f, 0x72, 0x91, 
-	0x6a, 0x51, 0x5a, 0x0f, 0x5a, 0x4f, 0x7a, 0xd3, 
-	0x72, 0x91, 0x6a, 0x4f, 0x5a, 0x4f, 0x5a, 0x0f, 
-	0x6a, 0x4f, 0x72, 0x91, 0x72, 0x91, 0x72, 0x91, 
-	0x62, 0x0f, 0x62, 0x0f, 0x62, 0x4f, 0x6a, 0x51, 
-	0x53, 0x0f, 0x34, 0x0b, 0x23, 0x49, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x18, 0x83, 0x18, 0xc3, 
-	0x62, 0x89, 0x23, 0x05, 0x3a, 0x89, 0x52, 0x0d, 
-	0x5a, 0x0f, 0x62, 0x4f, 0x6a, 0x51, 0x6a, 0x91, 
-	0x62, 0x51, 0x5a, 0x0f, 0x62, 0x4f, 0x7a, 0xd3, 
-	0x72, 0x91, 0x6a, 0x91, 0x62, 0x0f, 0x5a, 0x0f, 
-	0x62, 0x4f, 0x72, 0x91, 0x72, 0x93, 0x72, 0x93, 
-	0x62, 0x4f, 0x62, 0x0f, 0x5a, 0x0f, 0x62, 0x4f, 
-	0x53, 0x4f, 0x33, 0xcb, 0x23, 0x49, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x18, 0xc3, 
-	0x62, 0x89, 0x23, 0x05, 0x32, 0x87, 0x51, 0xcd, 
-	0x5a, 0x0f, 0x62, 0x4f, 0x6a, 0x91, 0x6a, 0x91, 
-	0x62, 0x51, 0x5a, 0x0f, 0x62, 0x4f, 0x72, 0x93, 
-	0x72, 0x91, 0x72, 0x91, 0x62, 0x51, 0x5a, 0x0f, 
-	0x5a, 0x0f, 0x6a, 0x51, 0x7a, 0x93, 0x7a, 0xd3, 
-	0x6a, 0x51, 0x5a, 0x0f, 0x5a, 0x0f, 0x5a, 0x4f, 
-	0x4b, 0x8f, 0x3b, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x18, 0xc3, 
-	0x5a, 0x49, 0x23, 0x07, 0x22, 0x87, 0x52, 0x0b, 
-	0x5a, 0x0d, 0x62, 0x4f, 0x72, 0x91, 0x6a, 0x91, 
-	0x62, 0x51, 0x5a, 0x0f, 0x62, 0x4f, 0x72, 0x93, 
-	0x6a, 0x91, 0x6a, 0x91, 0x6a, 0x51, 0x5a, 0x4f, 
-	0x5a, 0x0f, 0x6a, 0x51, 0x7a, 0x93, 0x7a, 0xd3, 
-	0x72, 0x93, 0x62, 0x0f, 0x5a, 0x0f, 0x5a, 0x4f, 
-	0x43, 0xcd, 0x33, 0xcb, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0x83, 0x18, 0xc3, 
-	0x49, 0xc7, 0x23, 0x47, 0x22, 0xc7, 0x4a, 0x0b, 
-	0x51, 0xcd, 0x62, 0x0f, 0x6a, 0x91, 0x6a, 0x93, 
-	0x6a, 0x51, 0x5a, 0x0f, 0x62, 0x4f, 0x72, 0x91, 
-	0x6a, 0x51, 0x6a, 0x91, 0x6a, 0x4f, 0x62, 0x0f, 
-	0x5a, 0x0d, 0x62, 0x4f, 0x6a, 0xd1, 0x6b, 0x11, 
-	0x63, 0x51, 0x53, 0x8f, 0x4b, 0x8d, 0x43, 0xcd, 
-	0x3c, 0x4d, 0x2b, 0xc9, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x41, 0xc7, 0x23, 0x47, 0x23, 0x07, 0x42, 0x4b, 
-	0x51, 0xcb, 0x52, 0x0d, 0x62, 0x4f, 0x6a, 0x4f, 
-	0x62, 0x4d, 0x62, 0x0d, 0x5a, 0x0f, 0x5a, 0x8f, 
-	0x5a, 0xcf, 0x53, 0x0f, 0x4b, 0x4d, 0x43, 0x8d, 
-	0x43, 0x8d, 0x3b, 0x8d, 0x43, 0xcd, 0x3b, 0xcd, 
-	0x43, 0xcd, 0x43, 0xcd, 0x3b, 0xcb, 0x3b, 0xcb, 
-	0x3c, 0x4d, 0x2b, 0x89, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x49, 0xc7, 0x23, 0x47, 0x2b, 0x47, 0x42, 0x4b, 
-	0x4a, 0x0b, 0x4a, 0x4b, 0x52, 0xcf, 0x53, 0x0f, 
-	0x43, 0x4d, 0x3b, 0x8d, 0x3b, 0x8d, 0x33, 0xcb, 
-	0x2b, 0xcb, 0x2b, 0xc9, 0x33, 0x89, 0x33, 0x49, 
-	0x2b, 0x49, 0x2b, 0x49, 0x2b, 0x49, 0x2b, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x33, 0xcb, 
-	0x3c, 0x4d, 0x2b, 0x89, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x49, 0xc7, 0x23, 0x47, 0x23, 0x47, 0x2a, 0xc7, 
-	0x33, 0x8b, 0x33, 0xcd, 0x2b, 0xcb, 0x2b, 0x89, 
-	0x23, 0x89, 0x23, 0x89, 0x23, 0x87, 0x23, 0x47, 
-	0x23, 0x49, 0x23, 0x49, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x87, 0x34, 0x0b, 
-	0x3c, 0x0d, 0x23, 0x89, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x22, 0x45, 0x20, 0xc3, 0x20, 0xc3, 
-	0x49, 0xc7, 0x23, 0x47, 0x23, 0x47, 0x1a, 0xc5, 
-	0x23, 0x07, 0x2b, 0x49, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x2b, 0xc9, 0x3c, 0x4d, 
-	0x34, 0x0b, 0x23, 0x47, 0x2b, 0x47, 0x2b, 0x47, 
-	0x2b, 0x47, 0x2a, 0x05, 0x20, 0xc3, 0x28, 0xc3, 
-	0x4a, 0x07, 0x23, 0x47, 0x23, 0x47, 0x1a, 0xc5, 
-	0x1a, 0xc5, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 
-	0x23, 0x47, 0x23, 0x47, 0x23, 0x47, 0x2b, 0x47, 
-	0x2b, 0x47, 0x2b, 0x47, 0x33, 0x07, 0x43, 0x07, 
-	0x43, 0x07, 0x43, 0x07, 0x63, 0x09, 0x7b, 0x49, 
-	0x73, 0x49, 0x73, 0x07, 0x93, 0x09, 0xa3, 0x49, 
-	0x9b, 0x49, 0x9b, 0x09, 0xab, 0x49, 0xab, 0x49, 
-	0x4a, 0x07, 0x23, 0x47, 0x23, 0x47, 0x1a, 0xc5, 
-	0x22, 0xc5, 0x23, 0x05, 0x2b, 0x47, 0x33, 0x07, 
-	0x43, 0x07, 0x43, 0x07, 0x43, 0x07, 0x5a, 0xc7, 
-	0x6b, 0x07, 0x73, 0x09, 0x7b, 0x09, 0x93, 0x09, 
-	0xa3, 0x8b, 0xa3, 0x8b, 0xab, 0x89, 0xb3, 0x8b, 
-	0xc3, 0xcb, 0xc3, 0xcb, 0xbb, 0xcb, 0xc3, 0xcb, 
-	0xc3, 0xcb, 0xc3, 0xcb, 0xab, 0x49, 0xa3, 0x49, 
-	0xab, 0x49, 0xa3, 0x07, 0x92, 0xc7, 0xa3, 0x09, 
-	0x52, 0x07, 0x5a, 0x85, 0x62, 0x85, 0x62, 0x85, 
-	0x72, 0x45, 0x8a, 0x85, 0x92, 0xc5, 0x92, 0xc7, 
-	0xa3, 0x07, 0xb3, 0x47, 0xb3, 0x47, 0xab, 0x47, 
-	0xb3, 0x47, 0xb3, 0x49, 0xb3, 0x89, 0xab, 0x49, 
-	0xab, 0x49, 0xab, 0x89, 0xab, 0x8b, 0x93, 0x09, 
-	0xa3, 0x49, 0xab, 0x49, 0x9b, 0x09, 0x9b, 0x49, 
-	0xb3, 0x8b, 0xb3, 0x8b, 0xab, 0x8b, 0xb3, 0x8b, 
-	0xbb, 0xcb, 0xbb, 0xcb, 0xc3, 0xcb, 0xc4, 0x0b, 
-	0x82, 0x03, 0x8a, 0x43, 0x92, 0x45, 0x92, 0x45, 
-	0x8a, 0x45, 0x8a, 0x45, 0x92, 0x85, 0x92, 0x85, 
-	0x7a, 0x45, 0x82, 0x45, 0x8a, 0x45, 0x82, 0x45, 
-	0x82, 0x45, 0x92, 0xc5, 0x9a, 0xc7, 0x9a, 0xc7, 
-	0xa3, 0x07, 0xab, 0x07, 0xab, 0x47, 0xb3, 0x47, 
-	0xb3, 0x47, 0xb3, 0x47, 0xb3, 0x49, 0xbb, 0x89, 
-	0xbb, 0x89, 0xbb, 0x89, 0xbb, 0x89, 0xbb, 0xcb, 
-	0xc3, 0xcb, 0xc3, 0xcb, 0xbb, 0xcb, 0xb3, 0x8b, 
-	
-};
-
-Gfx castle_grounds_dl_RMGP01_ecdb432b_14_ci8_aligner[] = {gsSPEndDisplayList()};
-u8 castle_grounds_dl_RMGP01_ecdb432b_14_ci8[] = {
-	0x00, 0x00, 0x01, 0x02, 0x03, 0x03, 0x04, 0x04, 
-	0x05, 0x06, 0x06, 0x06, 0x05, 0x05, 0x05, 0x05, 
-	0x07, 0x08, 0x09, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 
-	0x0e, 0x0e, 0x0c, 0x0e, 0x0f, 0x0f, 0x0f, 0x0f, 
-	0x00, 0x01, 0x02, 0x0b, 0x03, 0x03, 0x10, 0x04, 
-	0x05, 0x06, 0x11, 0x11, 0x12, 0x05, 0x05, 0x05, 
-	0x13, 0x08, 0x08, 0x09, 0x0a, 0x0c, 0x0d, 0x0d, 
-	0x0e, 0x0c, 0x0e, 0x0c, 0x14, 0x0f, 0x0f, 0x0f, 
-	0x00, 0x0b, 0x02, 0x0b, 0x15, 0x15, 0x10, 0x03, 
-	0x11, 0x11, 0x11, 0x11, 0x05, 0x0b, 0x0b, 0x0b, 
-	0x08, 0x08, 0x13, 0x13, 0x0c, 0x0d, 0x0d, 0x0d, 
-	0x0c, 0x16, 0x17, 0x17, 0x18, 0x14, 0x0f, 0x0f, 
-	0x01, 0x0b, 0x0b, 0x00, 0x15, 0x15, 0x15, 0x15, 
-	0x06, 0x11, 0x11, 0x11, 0x05, 0x0b, 0x0a, 0x0a, 
-	0x09, 0x08, 0x13, 0x07, 0x0d, 0x0d, 0x0d, 0x0c, 
-	0x16, 0x17, 0x17, 0x17, 0x14, 0x14, 0x0f, 0x0f, 
-	0x03, 0x03, 0x04, 0x19, 0x1a, 0x1a, 0x1a, 0x1a, 
-	0x11, 0x1b, 0x1b, 0x11, 0x1c, 0x0a, 0x0a, 0x0a, 
-	0x03, 0x03, 0x01, 0x1d, 0x1d, 0x0e, 0x1d, 0x1d, 
-	0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x1e, 0x13, 0x13, 
-	0x03, 0x03, 0x1f, 0x19, 0x1a, 0x20, 0x1a, 0x1a, 
-	0x11, 0x11, 0x0d, 0x0d, 0x1c, 0x0a, 0x0a, 0x1c, 
-	0x1d, 0x0f, 0x0f, 0x1d, 0x21, 0x0e, 0x0f, 0x0f, 
-	0x22, 0x1e, 0x1e, 0x1e, 0x1e, 0x16, 0x13, 0x13, 
-	0x03, 0x03, 0x03, 0x03, 0x21, 0x21, 0x21, 0x16, 
-	0x0d, 0x0c, 0x0c, 0x0c, 0x1c, 0x0a, 0x0a, 0x1d, 
-	0x0f, 0x0f, 0x0f, 0x0f, 0x1d, 0x1d, 0x0f, 0x0f, 
-	0x22, 0x23, 0x23, 0x0d, 0x12, 0x12, 0x12, 0x12, 
-	0x1f, 0x1f, 0x03, 0x03, 0x21, 0x16, 0x16, 0x21, 
-	0x0c, 0x0c, 0x0c, 0x0d, 0x1d, 0x0a, 0x1c, 0x0f, 
-	0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 
-	0x1e, 0x23, 0x0d, 0x0d, 0x13, 0x13, 0x12, 0x12, 
-	0x08, 0x08, 0x08, 0x08, 0x12, 0x12, 0x12, 0x12, 
-	0x14, 0x14, 0x14, 0x24, 0x25, 0x0e, 0x0e, 0x0e, 
-	0x26, 0x26, 0x26, 0x26, 0x04, 0x00, 0x0f, 0x0f, 
-	0x24, 0x14, 0x1d, 0x0b, 0x03, 0x27, 0x27, 0x27, 
-	0x08, 0x08, 0x08, 0x08, 0x0b, 0x0b, 0x12, 0x12, 
-	0x14, 0x24, 0x24, 0x24, 0x25, 0x0e, 0x21, 0x21, 
-	0x21, 0x26, 0x28, 0x28, 0x04, 0x00, 0x0f, 0x0f, 
-	0x24, 0x1d, 0x0b, 0x0b, 0x03, 0x27, 0x27, 0x27, 
-	0x08, 0x08, 0x08, 0x08, 0x12, 0x12, 0x21, 0x12, 
-	0x14, 0x24, 0x14, 0x0d, 0x23, 0x0e, 0x0e, 0x21, 
-	0x21, 0x28, 0x28, 0x28, 0x04, 0x04, 0x00, 0x0f, 
-	0x14, 0x14, 0x1d, 0x0b, 0x0a, 0x03, 0x27, 0x27, 
-	0x08, 0x08, 0x08, 0x08, 0x12, 0x12, 0x21, 0x21, 
-	0x23, 0x14, 0x0d, 0x0d, 0x25, 0x23, 0x23, 0x21, 
-	0x21, 0x28, 0x28, 0x28, 0x04, 0x04, 0x00, 0x00, 
-	0x14, 0x14, 0x14, 0x1d, 0x0a, 0x03, 0x27, 0x27, 
-	0x1d, 0x13, 0x1d, 0x04, 0x29, 0x18, 0x18, 0x18, 
-	0x0c, 0x0c, 0x0d, 0x2a, 0x2a, 0x0d, 0x0d, 0x13, 
-	0x14, 0x2b, 0x2b, 0x2b, 0x1f, 0x1f, 0x04, 0x04, 
-	0x2c, 0x2c, 0x2c, 0x1c, 0x0a, 0x13, 0x13, 0x13, 
-	0x13, 0x1d, 0x19, 0x19, 0x2c, 0x26, 0x18, 0x18, 
-	0x21, 0x0d, 0x2a, 0x2a, 0x2a, 0x2a, 0x0d, 0x2d, 
-	0x0d, 0x0f, 0x2b, 0x0f, 0x0a, 0x1f, 0x04, 0x04, 
-	0x2e, 0x2e, 0x2e, 0x1c, 0x0a, 0x13, 0x13, 0x13, 
-	0x13, 0x04, 0x19, 0x19, 0x2c, 0x2c, 0x18, 0x18, 
-	0x21, 0x0d, 0x2a, 0x2a, 0x2a, 0x0d, 0x0d, 0x2d, 
-	0x14, 0x14, 0x0d, 0x0d, 0x0a, 0x1c, 0x1f, 0x04, 
-	0x2e, 0x2e, 0x2e, 0x2c, 0x0a, 0x0a, 0x13, 0x13, 
-	0x13, 0x1d, 0x19, 0x19, 0x2c, 0x2c, 0x29, 0x29, 
-	0x0c, 0x21, 0x0d, 0x0d, 0x2a, 0x0d, 0x2d, 0x2d, 
-	0x14, 0x14, 0x0d, 0x0d, 0x0a, 0x0a, 0x0a, 0x1f, 
-	0x2e, 0x2e, 0x2e, 0x2e, 0x0b, 0x0a, 0x0a, 0x0a, 
-	0x03, 0x03, 0x03, 0x27, 0x2f, 0x2f, 0x2f, 0x30, 
-	0x31, 0x0a, 0x0a, 0x31, 0x12, 0x12, 0x12, 0x12, 
-	0x12, 0x12, 0x03, 0x10, 0x0a, 0x09, 0x09, 0x09, 
-	0x29, 0x20, 0x1a, 0x1a, 0x16, 0x0a, 0x0a, 0x0a, 
-	0x03, 0x03, 0x03, 0x27, 0x2f, 0x2f, 0x0f, 0x32, 
-	0x03, 0x0a, 0x0a, 0x0a, 0x21, 0x21, 0x12, 0x12, 
-	0x12, 0x12, 0x12, 0x10, 0x09, 0x09, 0x09, 0x09, 
-	0x33, 0x20, 0x1a, 0x1a, 0x16, 0x0a, 0x0a, 0x0a, 
-	0x27, 0x34, 0x34, 0x35, 0x30, 0x0f, 0x30, 0x32, 
-	0x32, 0x0a, 0x0a, 0x0a, 0x21, 0x21, 0x21, 0x12, 
-	0x12, 0x12, 0x10, 0x36, 0x37, 0x09, 0x09, 0x0a, 
-	0x33, 0x20, 0x1a, 0x1a, 0x16, 0x0b, 0x0a, 0x0a, 
-	0x03, 0x34, 0x34, 0x35, 0x32, 0x32, 0x32, 0x32, 
-	0x31, 0x0a, 0x0a, 0x03, 0x21, 0x21, 0x21, 0x21, 
-	0x03, 0x12, 0x10, 0x36, 0x09, 0x09, 0x09, 0x0a, 
-	0x29, 0x20, 0x1a, 0x20, 0x0b, 0x29, 0x0a, 0x0a, 
-	0x0a, 0x0a, 0x31, 0x31, 0x35, 0x35, 0x35, 0x34, 
-	0x0b, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x0b, 
-	0x10, 0x00, 0x00, 0x00, 0x20, 0x20, 0x20, 0x0f, 
-	0x38, 0x38, 0x38, 0x22, 0x21, 0x0b, 0x09, 0x09, 
-	0x0a, 0x0a, 0x31, 0x31, 0x34, 0x34, 0x34, 0x34, 
-	0x12, 0x39, 0x39, 0x12, 0x39, 0x31, 0x31, 0x12, 
-	0x10, 0x00, 0x00, 0x00, 0x20, 0x0f, 0x3a, 0x3a, 
-	0x38, 0x38, 0x38, 0x38, 0x21, 0x09, 0x09, 0x09, 
-	0x3b, 0x3b, 0x3b, 0x3b, 0x0a, 0x0a, 0x0a, 0x0a, 
-	0x39, 0x3c, 0x39, 0x39, 0x39, 0x39, 0x39, 0x31, 
-	0x09, 0x00, 0x00, 0x00, 0x3a, 0x3a, 0x3a, 0x3a, 
-	0x38, 0x38, 0x38, 0x22, 0x3d, 0x09, 0x09, 0x09, 
-	0x3b, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x34, 
-	0x12, 0x39, 0x3c, 0x3c, 0x39, 0x31, 0x31, 0x0b, 
-	0x09, 0x09, 0x3e, 0x00, 0x38, 0x38, 0x38, 0x20, 
-	0x0e, 0x22, 0x22, 0x22, 0x21, 0x0b, 0x3d, 0x3d, 
-	0x0a, 0x0a, 0x09, 0x09, 0x37, 0x3e, 0x26, 0x3f, 
-	0x22, 0x23, 0x22, 0x23, 0x12, 0x12, 0x12, 0x0a, 
-	0x0a, 0x0a, 0x0b, 0x2d, 0x38, 0x38, 0x38, 0x0e, 
-	0x21, 0x0e, 0x0e, 0x22, 0x2f, 0x2f, 0x40, 0x21, 
-	0x0a, 0x09, 0x09, 0x36, 0x26, 0x3f, 0x3f, 0x3f, 
-	0x22, 0x12, 0x3d, 0x3d, 0x12, 0x12, 0x0b, 0x0a, 
-	0x0b, 0x13, 0x13, 0x2d, 0x38, 0x38, 0x22, 0x21, 
-	0x21, 0x21, 0x22, 0x41, 0x2f, 0x2f, 0x2f, 0x21, 
-	0x0a, 0x09, 0x36, 0x36, 0x26, 0x26, 0x26, 0x3f, 
-	0x22, 0x3d, 0x3d, 0x23, 0x05, 0x0b, 0x0a, 0x0a, 
-	0x13, 0x13, 0x13, 0x2d, 0x0e, 0x0e, 0x21, 0x21, 
-	0x21, 0x0e, 0x41, 0x41, 0x2f, 0x2f, 0x2f, 0x40, 
-	0x36, 0x36, 0x09, 0x09, 0x3e, 0x26, 0x26, 0x26, 
-	0x22, 0x3d, 0x12, 0x22, 0x05, 0x12, 0x0a, 0x0b, 
-	0x0b, 0x13, 0x13, 0x13, 0x0e, 0x21, 0x21, 0x21, 
-	0x0e, 0x22, 0x41, 0x41, 0x2f, 0x2f, 0x2f, 0x2f, 
-	0x33, 0x33, 0x33, 0x18, 0x30, 0x30, 0x30, 0x30, 
-	0x14, 0x14, 0x14, 0x05, 0x05, 0x05, 0x21, 0x33, 
-	0x09, 0x09, 0x03, 0x27, 0x0b, 0x0b, 0x0a, 0x0b, 
-	0x0e, 0x0e, 0x24, 0x24, 0x24, 0x42, 0x43, 0x43, 
-	0x1d, 0x18, 0x18, 0x33, 0x12, 0x30, 0x30, 0x30, 
-	0x14, 0x14, 0x14, 0x14, 0x05, 0x05, 0x12, 0x33, 
-	0x09, 0x09, 0x0a, 0x03, 0x0b, 0x0c, 0x0b, 0x0b, 
-	0x21, 0x0e, 0x14, 0x24, 0x24, 0x24, 0x42, 0x42, 
-	0x0f, 0x0f, 0x0f, 0x18, 0x33, 0x0b, 0x30, 0x30, 
-	0x14, 0x05, 0x06, 0x05, 0x05, 0x05, 0x21, 0x33, 
-	0x09, 0x09, 0x0a, 0x0a, 0x0b, 0x0b, 0x0b, 0x0c, 
-	0x21, 0x21, 0x21, 0x14, 0x24, 0x42, 0x24, 0x42, 
-	0x0f, 0x0f, 0x0f, 0x18, 0x33, 0x0b, 0x30, 0x30, 
-	0x14, 0x06, 0x06, 0x06, 0x05, 0x05, 0x05, 0x12, 
-	0x27, 0x09, 0x0a, 0x0a, 0x0a, 0x0b, 0x0b, 0x0d, 
-	0x0e, 0x0e, 0x21, 0x0e, 0x24, 0x24, 0x24, 0x24, 
-	
-};
-
-Gfx castle_grounds_dl_RMGP01_ecdb432b_14_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 castle_grounds_dl_RMGP01_ecdb432b_14_pal_rgba16[] = {
-	0x3c, 0x85, 0x2c, 0x45, 0x1b, 0xc3, 0x24, 0x05, 
-	0x3c, 0x45, 0x24, 0x83, 0x24, 0xc3, 0x1c, 0xc3, 
-	0x24, 0x45, 0x23, 0xc5, 0x23, 0xc3, 0x24, 0x03, 
-	0x1c, 0x41, 0x1c, 0x81, 0x24, 0x41, 0x34, 0x83, 
-	0x2c, 0x05, 0x24, 0xc1, 0x24, 0x43, 0x1c, 0x43, 
-	0x2c, 0x83, 0x44, 0x45, 0x2c, 0x41, 0x3c, 0x41, 
-	0x24, 0x01, 0x4c, 0x45, 0x44, 0x83, 0x25, 0x01, 
-	0x2c, 0x03, 0x2c, 0x43, 0x3c, 0x81, 0x34, 0x05, 
-	0x34, 0x43, 0x1c, 0x01, 0x2c, 0x81, 0x24, 0x81, 
-	0x34, 0xc3, 0x2c, 0xc1, 0x3c, 0x43, 0x24, 0x47, 
-	0x4c, 0x85, 0x2c, 0x01, 0x1c, 0xc1, 0x44, 0x85, 
-	0x44, 0x43, 0x1c, 0x83, 0x4c, 0x43, 0x44, 0x81, 
-	0x2c, 0x85, 0x1c, 0x45, 0x1c, 0x87, 0x1b, 0xc1, 
-	0x1c, 0x47, 0x1c, 0x89, 0x2b, 0xc7, 0x2b, 0xc5, 
-	0x34, 0xc1, 0x1c, 0x85, 0x34, 0x81, 0x1c, 0x05, 
-	0x1c, 0xc5, 0x1c, 0x03, 0x34, 0x45, 0x44, 0xc3, 
-	0x34, 0x41, 0x3c, 0xc1, 0x3c, 0x83, 0x44, 0x41, 
-	
-};
-
-Gfx castle_grounds_dl_cok_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 castle_grounds_dl_cok_rgba16[] = {
-	0x7c, 0x15, 0x63, 0x4d, 0x53, 0x0b, 0x6b, 0x91, 
-	0x6b, 0x91, 0x7c, 0x13, 0x7c, 0x13, 0x6b, 0x91, 
-	0x63, 0x4f, 0x73, 0xd3, 0x84, 0x95, 0x84, 0x55, 
-	0x84, 0x95, 0x7c, 0x53, 0x8c, 0x95, 0x94, 0xd7, 
-	0x7c, 0x53, 0x7c, 0x13, 0x7c, 0x13, 0x84, 0x55, 
-	0x6b, 0x91, 0x74, 0x13, 0x8c, 0x97, 0x84, 0x57, 
-	0x8c, 0x97, 0x7c, 0x13, 0x7c, 0x53, 0x7c, 0x53, 
-	0x8c, 0x95, 0x9c, 0xd9, 0x84, 0x55, 0x6b, 0x91, 
-	0x7c, 0x15, 0x7c, 0x13, 0x6b, 0xd1, 0x63, 0x8f, 
-	0x5b, 0x4d, 0x7c, 0x13, 0x6b, 0x91, 0x63, 0x4f, 
-	0x63, 0x4f, 0x6b, 0x91, 0x7c, 0x53, 0x84, 0x53, 
-	0x84, 0x93, 0x94, 0xd5, 0xb5, 0x5b, 0xb5, 0x9d, 
-	0xa5, 0x19, 0xa5, 0x1b, 0x9c, 0xd9, 0x9c, 0xd9, 
-	0x94, 0x97, 0xa5, 0x1b, 0xad, 0x5d, 0x94, 0x97, 
-	0x7c, 0x15, 0x74, 0x13, 0x7c, 0x11, 0x84, 0x51, 
-	0x84, 0x53, 0x9d, 0x17, 0x94, 0xd5, 0x73, 0xd1, 
-	0x6b, 0x91, 0x7c, 0x15, 0x7c, 0x57, 0x84, 0x15, 
-	0x6b, 0xd1, 0x7c, 0x13, 0x73, 0xd1, 0x6b, 0x91, 
-	0x6b, 0xd1, 0x73, 0xd1, 0x6b, 0xd1, 0x7c, 0x13, 
-	0x84, 0x53, 0x9c, 0xd7, 0xa4, 0xd7, 0xac, 0xd7, 
-	0xb5, 0x5b, 0xb5, 0x5d, 0xb5, 0x5d, 0xb5, 0x5b, 
-	0xad, 0x1b, 0xb5, 0x5b, 0xbd, 0x9b, 0xb5, 0x5b, 
-	0x7c, 0x13, 0x73, 0xd1, 0x74, 0x11, 0x7c, 0x53, 
-	0x7c, 0x11, 0x84, 0x53, 0x8c, 0x95, 0x7c, 0x11, 
-	0x5b, 0x0d, 0x73, 0xd3, 0x7c, 0x13, 0x7c, 0x13, 
-	0x73, 0xd1, 0x74, 0x11, 0x84, 0x55, 0x7c, 0x13, 
-	0x73, 0xd1, 0x7c, 0x15, 0x7c, 0x13, 0x6b, 0x8d, 
-	0x7c, 0x51, 0x9c, 0x95, 0x9c, 0x53, 0x93, 0xd1, 
-	0x9c, 0x53, 0x9c, 0x53, 0xa4, 0x93, 0xa4, 0x93, 
-	0x9c, 0x53, 0x9c, 0x53, 0xac, 0xd5, 0xb5, 0x19, 
-	0x9c, 0xd5, 0x74, 0x11, 0x7c, 0x11, 0x84, 0x51, 
-	0x84, 0x51, 0x84, 0x51, 0x84, 0x93, 0x7c, 0x51, 
-	0x5b, 0x0d, 0x6b, 0x91, 0x73, 0xd1, 0x6b, 0x8f, 
-	0x6b, 0xcf, 0x73, 0xcf, 0x84, 0x55, 0x7c, 0x53, 
-	0x6b, 0xd1, 0x74, 0x13, 0x7c, 0x15, 0x6b, 0x91, 
-	0x7c, 0x11, 0x8b, 0xd1, 0x8b, 0x8f, 0x83, 0x4d, 
-	0x9c, 0x11, 0x9c, 0x53, 0x9c, 0x53, 0x9c, 0x53, 
-	0x8b, 0xd1, 0x7b, 0x4d, 0x94, 0x11, 0xac, 0xd5, 
-	0xac, 0xd7, 0x7c, 0x11, 0x74, 0x11, 0x84, 0x53, 
-	0x84, 0x93, 0x7c, 0x13, 0x74, 0x11, 0x73, 0xd1, 
-	0x63, 0x0f, 0x6b, 0x91, 0x6b, 0x4f, 0x63, 0x4d, 
-	0x73, 0xcf, 0x73, 0xcf, 0x74, 0x11, 0x74, 0x11, 
-	0x73, 0xd1, 0x73, 0xd1, 0x6b, 0x91, 0x5b, 0x0f, 
-	0x7b, 0xd5, 0xbd, 0xa1, 0xb5, 0x5f, 0x83, 0x4f, 
-	0x9c, 0x53, 0xb4, 0xd7, 0xb4, 0xd7, 0xac, 0xd5, 
-	0x7b, 0x4d, 0x83, 0x93, 0xa4, 0x9b, 0x9c, 0x55, 
-	0x94, 0x55, 0x7c, 0x11, 0x73, 0xcf, 0x74, 0x11, 
-	0x84, 0x53, 0x8c, 0x97, 0x84, 0x53, 0x73, 0xd1, 
-	0x6b, 0x91, 0x73, 0xd3, 0x73, 0xd1, 0x6b, 0x8f, 
-	0x7c, 0x11, 0x6b, 0x8f, 0x63, 0x4b, 0x6b, 0x8f, 
-	0x7c, 0x11, 0x7c, 0x11, 0x73, 0xd3, 0x52, 0xcd, 
-	0xad, 0x21, 0xde, 0x29, 0xde, 0x6b, 0xac, 0xdb, 
-	0x9c, 0x55, 0xbd, 0x59, 0xc5, 0x59, 0xbd, 0x17, 
-	0x7b, 0x4f, 0xc5, 0xa5, 0xe6, 0xab, 0xd6, 0x29, 
-	0x83, 0xd5, 0x73, 0xd1, 0x73, 0xd1, 0x6b, 0x91, 
-	0x7c, 0x13, 0x94, 0x99, 0x94, 0xd9, 0x6b, 0xd1, 
-	0x6b, 0x91, 0x6b, 0xd1, 0x6b, 0x91, 0x6b, 0xcf, 
-	0x7c, 0x11, 0x6b, 0xcf, 0x6b, 0x8f, 0x84, 0x13, 
-	0x84, 0x93, 0x7c, 0x53, 0x6b, 0x91, 0x5a, 0xcf, 
-	0xbd, 0x65, 0x83, 0xd7, 0x8c, 0x19, 0xc5, 0xa5, 
-	0x9c, 0x55, 0xbd, 0x17, 0xbd, 0x59, 0xbd, 0x17, 
-	0x94, 0x15, 0xcd, 0xe7, 0x9c, 0x9d, 0xd6, 0x29, 
-	0xa4, 0xdd, 0x73, 0x91, 0x74, 0x13, 0x74, 0x13, 
-	0x7c, 0x15, 0x7c, 0x15, 0x8c, 0x99, 0x6b, 0x91, 
-	0x74, 0x13, 0x7c, 0x13, 0x74, 0x13, 0x7c, 0x13, 
-	0x7c, 0x11, 0x7c, 0x13, 0x7c, 0x11, 0x73, 0xcf, 
-	0x73, 0xcf, 0x73, 0xd1, 0x63, 0x4f, 0x52, 0x8f, 
-	0xad, 0x23, 0x4a, 0x0d, 0x5a, 0x4d, 0xcd, 0xe5, 
-	0x9c, 0x97, 0xb4, 0xd5, 0xb5, 0x17, 0xb5, 0x17, 
-	0xa4, 0x9b, 0xb5, 0x23, 0x39, 0x87, 0xa4, 0x9d, 
-	0xbd, 0x65, 0x6b, 0x53, 0x7c, 0x13, 0x6b, 0xd1, 
-	0x73, 0xd3, 0x6b, 0x93, 0x73, 0x93, 0x6b, 0x91, 
-	0x7c, 0x15, 0x84, 0x55, 0x74, 0x13, 0x6b, 0xd1, 
-	0x7c, 0x11, 0x9c, 0xd7, 0xad, 0x19, 0x73, 0xcf, 
-	0x6b, 0xcf, 0x6b, 0x91, 0x63, 0x4f, 0x52, 0x8f, 
-	0xa4, 0xe1, 0x7b, 0x97, 0x7b, 0x95, 0xbd, 0x61, 
-	0xa4, 0x97, 0xb4, 0xd5, 0xbd, 0x17, 0xb5, 0x17, 
-	0xa4, 0x99, 0xad, 0x21, 0x41, 0xc9, 0xa4, 0x9f, 
-	0xbd, 0x65, 0x63, 0x11, 0x7c, 0x13, 0x63, 0x8f, 
-	0x6b, 0x91, 0x6b, 0x91, 0x6b, 0x91, 0x63, 0x51, 
-	0x73, 0xd1, 0x73, 0xd3, 0x6b, 0x91, 0x74, 0x13, 
-	0x7c, 0x53, 0x94, 0x95, 0xa5, 0x17, 0x73, 0xcf, 
-	0x6b, 0xcf, 0x6b, 0xd1, 0x6b, 0x91, 0x4a, 0x4d, 
-	0x7b, 0xd9, 0x94, 0x1b, 0x8c, 0x17, 0x9c, 0x59, 
-	0xac, 0xd9, 0xb5, 0x17, 0xbd, 0x57, 0xb5, 0x17, 
-	0x9c, 0x57, 0x9c, 0x5b, 0x94, 0x5b, 0xc5, 0xa7, 
-	0xac, 0xe1, 0x62, 0xcf, 0x7c, 0x13, 0x73, 0xd1, 
-	0x6b, 0x91, 0x6b, 0x91, 0x6b, 0x91, 0x63, 0x4f, 
-	0x5b, 0x0d, 0x6b, 0x91, 0x6b, 0x8f, 0x7c, 0x13, 
-	0x6b, 0x8f, 0x6b, 0x8d, 0x63, 0x4d, 0x6b, 0x8d, 
-	0x6b, 0x4f, 0x73, 0xd1, 0x6b, 0x51, 0x39, 0xcb, 
-	0x5a, 0xd1, 0x62, 0xcf, 0x7b, 0x91, 0x9c, 0x97, 
-	0xa4, 0xd7, 0xb5, 0x17, 0xbd, 0x59, 0xbd, 0x17, 
-	0xa4, 0x97, 0x73, 0x51, 0x7b, 0x93, 0x83, 0xd7, 
-	0x7b, 0xd7, 0x62, 0xcf, 0x73, 0xd3, 0x6b, 0x8f, 
-	0x6b, 0x91, 0x63, 0x4d, 0x6b, 0x91, 0x6b, 0x51, 
-	0x5b, 0x0d, 0x6b, 0x91, 0x6b, 0x8f, 0x6b, 0x8f, 
-	0x5b, 0x0b, 0x63, 0x4d, 0x6b, 0x91, 0x6b, 0x8f, 
-	0x6b, 0xd1, 0x73, 0xd3, 0x63, 0x4f, 0x39, 0xc9, 
-	0x5a, 0x8f, 0x62, 0xcf, 0x8b, 0xd3, 0x9c, 0x97, 
-	0xa4, 0xd5, 0xb5, 0x17, 0xbd, 0x57, 0xb5, 0x17, 
-	0xac, 0xd7, 0x8b, 0xd1, 0x73, 0x0d, 0x73, 0x11, 
-	0x6b, 0x11, 0x63, 0x11, 0x7c, 0x15, 0x6b, 0x91, 
-	0x73, 0xd3, 0x6b, 0x8f, 0x6b, 0x91, 0x73, 0x93, 
-	0x73, 0xd3, 0x6b, 0x91, 0x6b, 0x8f, 0x63, 0x4f, 
-	0x63, 0x4f, 0x6b, 0x91, 0x7c, 0x15, 0x74, 0x13, 
-	0x7c, 0x13, 0x73, 0xd3, 0x63, 0x0f, 0x4a, 0x4b, 
-	0x62, 0xcf, 0x73, 0x51, 0x7b, 0x51, 0x9c, 0x55, 
-	0xa4, 0xd5, 0xb5, 0x17, 0xb5, 0x17, 0xac, 0xd5, 
-	0x9c, 0x53, 0x9c, 0x53, 0x7b, 0x4d, 0x73, 0x0d, 
-	0x6b, 0x0f, 0x73, 0x51, 0x84, 0x55, 0x8c, 0x97, 
-	0x8c, 0x95, 0x7c, 0x13, 0x6b, 0x8f, 0x6b, 0x8f, 
-	0x8c, 0x57, 0x84, 0x55, 0x84, 0x55, 0x7c, 0x15, 
-	0x73, 0xd3, 0x7c, 0x15, 0x94, 0x99, 0x94, 0xd9, 
-	0x8c, 0x97, 0x7c, 0x15, 0x63, 0x4f, 0x6b, 0x51, 
-	0x6b, 0x0f, 0x7b, 0x91, 0x62, 0x8b, 0x94, 0x13, 
-	0xa4, 0x95, 0xac, 0xd7, 0xb4, 0xd7, 0x9c, 0x53, 
-	0x7b, 0x4f, 0x9c, 0x55, 0x83, 0x8f, 0x83, 0x8f, 
-	0x7b, 0x91, 0x83, 0xd3, 0x84, 0x55, 0x8c, 0x95, 
-	0x8c, 0x95, 0x8c, 0x95, 0x7c, 0x51, 0x73, 0xcf, 
-	0x94, 0x57, 0x8c, 0x97, 0x84, 0x95, 0x7c, 0x53, 
-	0x7c, 0x53, 0x7c, 0x53, 0x84, 0x55, 0x7c, 0x13, 
-	0x74, 0x13, 0x84, 0x55, 0x6b, 0x4f, 0x73, 0x51, 
-	0x62, 0xcd, 0x73, 0x91, 0x73, 0x4f, 0x8c, 0x13, 
-	0x9c, 0x55, 0xa4, 0xd5, 0xa4, 0xd5, 0x9c, 0x53, 
-	0x8b, 0xd1, 0x9c, 0x57, 0x83, 0x8f, 0x83, 0x8f, 
-	0x94, 0x13, 0x94, 0x55, 0x84, 0x13, 0x7c, 0x53, 
-	0x84, 0x53, 0x94, 0xd5, 0x8c, 0xd5, 0x73, 0xd1, 
-	0x7c, 0x15, 0x8c, 0x55, 0x84, 0x55, 0x8c, 0xd5, 
-	0x8c, 0x95, 0x84, 0x53, 0x6b, 0x8f, 0x63, 0x4d, 
-	0x63, 0x4d, 0x73, 0xd1, 0x63, 0x0d, 0x6b, 0x0f, 
-	0x5a, 0x8b, 0x6b, 0x4f, 0x7b, 0x51, 0x8b, 0xd1, 
-	0x9c, 0x53, 0xa4, 0x53, 0x9c, 0x53, 0x94, 0x11, 
-	0x94, 0x11, 0x94, 0x55, 0x83, 0x8f, 0x7b, 0x4d, 
-	0x8b, 0xd1, 0x94, 0x55, 0x7c, 0x13, 0x7c, 0x53, 
-	0x7c, 0x51, 0x94, 0xd5, 0x8c, 0x93, 0x6b, 0x8d, 
-	0x7c, 0x13, 0x84, 0x53, 0x84, 0x53, 0x8c, 0x93, 
-	0x84, 0x53, 0x7c, 0x11, 0x73, 0xcf, 0x74, 0x13, 
-	0x6b, 0xd1, 0x6b, 0x91, 0x5a, 0xcb, 0x5a, 0x8d, 
-	0x4a, 0x49, 0x63, 0x0f, 0x73, 0x4f, 0x7b, 0x91, 
-	0x94, 0x11, 0x9c, 0x11, 0x94, 0x11, 0x8b, 0xd1, 
-	0x8b, 0xd1, 0x8b, 0xd3, 0x7b, 0x4f, 0x73, 0x0d, 
-	0x83, 0x91, 0x8c, 0x13, 0x7b, 0xd3, 0x73, 0xd1, 
-	0x84, 0x53, 0x94, 0xd5, 0x84, 0x53, 0x6b, 0x8f, 
-	0x7c, 0x13, 0x74, 0x11, 0x84, 0x53, 0x74, 0x0f, 
-	0x63, 0x4d, 0x73, 0xcf, 0x7c, 0x51, 0x84, 0x55, 
-	0x7c, 0x53, 0x6b, 0xd1, 0x4a, 0x49, 0x52, 0x4b, 
-	0x41, 0xc7, 0x5a, 0xcd, 0x63, 0x0d, 0x7b, 0x4f, 
-	0x8b, 0xd1, 0x93, 0xd1, 0x8b, 0xcf, 0x83, 0x8f, 
-	0x83, 0x91, 0x83, 0x91, 0x73, 0x0f, 0x73, 0x0d, 
-	0x7b, 0x4f, 0x83, 0xd1, 0x83, 0xd3, 0x84, 0x13, 
-	0x84, 0x53, 0x84, 0x53, 0x74, 0x11, 0x6b, 0x8f, 
-	0x73, 0xcf, 0x6b, 0x8f, 0x74, 0x11, 0x6b, 0xcf, 
-	0x6b, 0x8d, 0x7c, 0x53, 0x8c, 0x95, 0x84, 0x53, 
-	0x74, 0x11, 0x63, 0x4d, 0x42, 0x09, 0x42, 0x09, 
-	0x31, 0x45, 0x4a, 0x4b, 0x5a, 0xcb, 0x6b, 0x0d, 
-	0x7b, 0x4f, 0x8b, 0x8f, 0x83, 0x8f, 0x7b, 0x4d, 
-	0x73, 0x0d, 0x7b, 0x4f, 0x6a, 0xcd, 0x6a, 0xcb, 
-	0x73, 0x0d, 0x7b, 0x4f, 0x94, 0x13, 0x9c, 0x95, 
-	0x9c, 0x95, 0x8c, 0x53, 0x6b, 0x8f, 0x63, 0x4d, 
-	0x73, 0xcf, 0x63, 0x4d, 0x74, 0x11, 0x73, 0xcf, 
-	0x7c, 0x11, 0x84, 0x93, 0x84, 0x93, 0x73, 0xd1, 
-	0x63, 0x4f, 0x63, 0x4f, 0x42, 0x07, 0x39, 0x87, 
-	0x29, 0x05, 0x42, 0x0b, 0x52, 0x8b, 0x62, 0xcb, 
-	0x73, 0x0d, 0x7b, 0x4d, 0x7b, 0x0d, 0x73, 0x0d, 
-	0x72, 0xcd, 0x73, 0x0d, 0x6a, 0xcd, 0x62, 0xcb, 
-	0x6b, 0x0d, 0x73, 0x0d, 0x83, 0x8f, 0x93, 0xd1, 
-	0xac, 0xd7, 0xb5, 0x19, 0x73, 0xcf, 0x6b, 0x8f, 
-	0x6b, 0x8d, 0x6b, 0x8f, 0x73, 0xcf, 0x6b, 0x8d, 
-	0x73, 0xcf, 0x74, 0x11, 0x63, 0x8d, 0x63, 0x4d, 
-	0x6b, 0x8f, 0x73, 0xd3, 0x39, 0xc9, 0x31, 0x45, 
-	0x21, 0x05, 0x39, 0xc9, 0x4a, 0x49, 0x5a, 0x8b, 
-	0x62, 0xcb, 0x6a, 0xcb, 0x6a, 0xcd, 0x6a, 0xcb, 
-	0x62, 0xcb, 0x6a, 0xcd, 0x62, 0xcd, 0x5a, 0x8b, 
-	0x62, 0xcb, 0x62, 0xcb, 0x62, 0x8b, 0x6a, 0xcb, 
-	0xa4, 0x95, 0xbd, 0x17, 0x94, 0x53, 0x73, 0xd1, 
-	0x7c, 0x13, 0x74, 0x11, 0x6b, 0x8f, 0x5b, 0x0b, 
-	0x52, 0xc9, 0x63, 0x4d, 0x5b, 0x4d, 0x63, 0x4f, 
-	0x73, 0xd3, 0x7c, 0x17, 0x39, 0xc9, 0x29, 0x45, 
-	0x18, 0xc3, 0x31, 0x89, 0x42, 0x09, 0x52, 0x49, 
-	0x5a, 0x8b, 0x62, 0xcb, 0x62, 0xcb, 0x5a, 0x8b, 
-	0x62, 0x8b, 0x62, 0x8b, 0x62, 0x8b, 0x52, 0x49, 
-	0x5a, 0x8b, 0x5a, 0xcb, 0x52, 0x49, 0x5a, 0x49, 
-	0x7b, 0x4f, 0xa4, 0x95, 0xa4, 0xd5, 0x6b, 0x8d, 
-	0x7c, 0x53, 0x5b, 0x0d, 0x4a, 0x49, 0x42, 0x49, 
-	0x5b, 0x0d, 0x6b, 0x8f, 0x53, 0x0b, 0x6b, 0x91, 
-	0x6b, 0x91, 0x63, 0x0f, 0x39, 0xc7, 0x21, 0x05, 
-	0x18, 0xc3, 0x29, 0x47, 0x39, 0xc7, 0x4a, 0x07, 
-	0x52, 0x49, 0x5a, 0x49, 0x5a, 0x49, 0x5a, 0x49, 
-	0x5a, 0x49, 0x5a, 0x8b, 0x5a, 0x49, 0x4a, 0x07, 
-	0x52, 0x49, 0x5a, 0x8b, 0x31, 0x45, 0x49, 0xc7, 
-	0x5a, 0x49, 0xa4, 0x53, 0xb5, 0x17, 0x73, 0xcf, 
-	0x5b, 0x0d, 0x63, 0x4d, 0x63, 0x0f, 0x52, 0xcb, 
-	0x63, 0x4f, 0x52, 0xcb, 0x42, 0x49, 0x52, 0x8b, 
-	0x52, 0xcd, 0x52, 0xcb, 0x39, 0xc9, 0x21, 0x05, 
-	0x18, 0x83, 0x21, 0x05, 0x31, 0x87, 0x41, 0xc7, 
-	0x42, 0x07, 0x4a, 0x07, 0x4a, 0x09, 0x52, 0x49, 
-	0x52, 0x49, 0x52, 0x49, 0x4a, 0x09, 0x41, 0xc7, 
-	0x52, 0x49, 0x52, 0x49, 0x31, 0x45, 0x31, 0x45, 
-	0x41, 0xc7, 0x94, 0x13, 0xb5, 0x17, 0x84, 0x11, 
-	0x4a, 0x89, 0x63, 0x4f, 0x6b, 0x91, 0x63, 0x0f, 
-	0x73, 0x93, 0x4a, 0x89, 0x5b, 0x0d, 0x63, 0x51, 
-	0x5b, 0x0f, 0x5b, 0x0f, 0x4a, 0x4d, 0x18, 0xc3, 
-	0x10, 0x83, 0x18, 0xc3, 0x21, 0x03, 0x31, 0x85, 
-	0x39, 0xc7, 0x41, 0xc7, 0x49, 0xc7, 0x42, 0x07, 
-	0x41, 0xc7, 0x42, 0x07, 0x41, 0xc7, 0x39, 0x87, 
-	0x4a, 0x09, 0x41, 0xc9, 0x31, 0x05, 0x29, 0x05, 
-	0x29, 0x05, 0x8b, 0xd1, 0xb4, 0xd5, 0x94, 0x95, 
-	0x5b, 0x0b, 0x6b, 0x51, 0x7b, 0xd5, 0x73, 0xd1, 
-	0x6b, 0x91, 0x63, 0x4f, 0x6b, 0x91, 0x5b, 0x0f, 
-	0x63, 0x51, 0x63, 0x51, 0x52, 0x8f, 0x18, 0xc3, 
-	0x10, 0x83, 0x10, 0x83, 0x18, 0x83, 0x21, 0x03, 
-	0x31, 0x85, 0x39, 0x87, 0x39, 0xc7, 0x39, 0x87, 
-	0x31, 0x85, 0x31, 0x45, 0x31, 0x85, 0x39, 0x45, 
-	0x41, 0xc7, 0x31, 0x85, 0x21, 0x05, 0x21, 0x03, 
-	0x20, 0xc3, 0x7b, 0x4f, 0xac, 0xd5, 0x94, 0x95, 
-	0x73, 0xd3, 0x6b, 0x91, 0x7c, 0x15, 0x7c, 0x15, 
-	0x6b, 0x91, 0x74, 0x13, 0x63, 0x8f, 0x5b, 0x0d, 
-	0x63, 0x4f, 0x63, 0x51, 0x5b, 0x0f, 0x18, 0xc5, 
-	0x10, 0x43, 0x10, 0x43, 0x10, 0x43, 0x10, 0x83, 
-	0x21, 0x03, 0x29, 0x45, 0x29, 0x45, 0x29, 0x05, 
-	0x21, 0x03, 0x21, 0x03, 0x29, 0x03, 0x29, 0x05, 
-	0x39, 0x87, 0x20, 0xc3, 0x18, 0xc3, 0x18, 0xc5, 
-	0x20, 0xc3, 0x73, 0x0f, 0xa4, 0x95, 0x9c, 0x95, 
-	0x74, 0x13, 0x7c, 0x13, 0x7c, 0x55, 0x7c, 0x55, 
-	0x7c, 0x13, 0x7c, 0x53, 0x6b, 0xd1, 0x63, 0x4f, 
-	0x63, 0x0f, 0x5b, 0x0f, 0x63, 0x0f, 0x21, 0x05, 
-	0x10, 0x43, 0x10, 0x43, 0x08, 0x43, 0x10, 0x43, 
-	0x10, 0x83, 0x18, 0xc3, 0x18, 0xc3, 0x18, 0x83, 
-	0x10, 0x83, 0x18, 0x83, 0x18, 0xc3, 0x29, 0x03, 
-	0x31, 0x87, 0x18, 0xc3, 0x10, 0x83, 0x10, 0x83, 
-	0x18, 0xc3, 0x6b, 0x0f, 0xa4, 0x95, 0x94, 0x53, 
-	0x6b, 0x91, 0x73, 0xd1, 0x74, 0x11, 0x84, 0x53, 
-	0x8c, 0x95, 0x8c, 0x95, 0x7c, 0x13, 0x7c, 0x13, 
-	0x7c, 0x15, 0x63, 0x51, 0x4a, 0x4b, 0x21, 0x05, 
-	0x08, 0x43, 0x08, 0x41, 0x08, 0x01, 0x08, 0x43, 
-	0x08, 0x43, 0x10, 0x43, 0x10, 0x43, 0x10, 0x43, 
-	0x10, 0x43, 0x08, 0x43, 0x10, 0x83, 0x29, 0x03, 
-	0x31, 0x87, 0x29, 0x47, 0x10, 0x43, 0x10, 0x43, 
-	0x10, 0x83, 0x6a, 0xcf, 0xa4, 0x95, 0x9c, 0x95, 
-	0x7c, 0x13, 0x7c, 0x13, 0x84, 0x53, 0x7c, 0x13, 
-	0x84, 0x53, 0x7c, 0x53, 0x73, 0xd1, 0x8c, 0x99, 
-	0x8c, 0x57, 0x4a, 0x8b, 0x31, 0x87, 0x21, 0x49, 
-	0x10, 0x83, 0x18, 0x83, 0x08, 0x43, 0x18, 0xc5, 
-	0x08, 0x41, 0x08, 0x43, 0x08, 0x43, 0x10, 0x83, 
-	0x29, 0x49, 0x10, 0x83, 0x18, 0x83, 0x29, 0x03, 
-	0x39, 0xc7, 0x4a, 0x4d, 0x10, 0x83, 0x10, 0x43, 
-	0x10, 0x83, 0x6a, 0xcd, 0xa4, 0x95, 0xa4, 0x95, 
-	0x6b, 0x8f, 0x63, 0x4d, 0x73, 0xd1, 0x74, 0x11, 
-	0x73, 0xd1, 0x5b, 0x0b, 0x6b, 0x8f, 0x73, 0xd3, 
-	0x52, 0xcd, 0x31, 0x89, 0x29, 0x89, 0x29, 0x8b, 
-	0x18, 0xc5, 0x21, 0x05, 0x19, 0x05, 0x29, 0x49, 
-	0x21, 0x07, 0x10, 0x83, 0x18, 0xc5, 0x39, 0xcb, 
-	0x42, 0x4d, 0x42, 0x0d, 0x41, 0xc9, 0x29, 0x05, 
-	0x41, 0xc9, 0x5a, 0x8f, 0x31, 0x89, 0x10, 0x43, 
-	0x10, 0x83, 0x62, 0xcd, 0xa4, 0x95, 0xa4, 0x95, 
-	0x5b, 0x0b, 0x5b, 0x0b, 0x6b, 0x8f, 0x6b, 0x8d, 
-	0x6b, 0xcf, 0x6b, 0x8f, 0x74, 0x11, 0x6b, 0x8f, 
-	0x39, 0xc7, 0x29, 0x8b, 0x31, 0x8b, 0x31, 0x8b, 
-	0x21, 0x07, 0x18, 0xc3, 0x18, 0xc5, 0x18, 0xc5, 
-	0x21, 0x49, 0x29, 0x49, 0x39, 0xcb, 0x4a, 0x4d, 
-	0x42, 0x4b, 0x4a, 0x4b, 0x41, 0xc9, 0x29, 0x45, 
-	0x42, 0x09, 0x5a, 0xcf, 0x52, 0x91, 0x21, 0x05, 
-	0x10, 0x83, 0x62, 0xcd, 0xa4, 0x95, 0x9c, 0x53, 
-	0x6b, 0x8f, 0x63, 0x4d, 0x6b, 0x8f, 0x7c, 0x53, 
-	0x8c, 0x95, 0x84, 0x53, 0x6b, 0xcf, 0x4a, 0x49, 
-	0x29, 0x47, 0x29, 0x49, 0x29, 0x8b, 0x29, 0x8b, 
-	0x21, 0x49, 0x18, 0xc3, 0x18, 0xc3, 0x18, 0xc3, 
-	0x18, 0xc5, 0x29, 0x47, 0x39, 0x89, 0x39, 0xc7, 
-	0x41, 0xc7, 0x41, 0xc7, 0x31, 0x45, 0x29, 0x03, 
-	0x4a, 0x4b, 0x62, 0xcf, 0x6b, 0x11, 0x52, 0x8f, 
-	0x21, 0x05, 0x6b, 0x51, 0xac, 0xd9, 0x94, 0x13, 
-	0x73, 0xd1, 0x63, 0x4d, 0x73, 0xd1, 0x7c, 0x53, 
-	0x74, 0x11, 0x73, 0xcf, 0x6b, 0x8f, 0x39, 0xc7, 
-	0x29, 0x49, 0x29, 0x49, 0x29, 0x8b, 0x29, 0x8b, 
-	0x29, 0x8b, 0x21, 0x05, 0x18, 0x83, 0x18, 0xc3, 
-	0x18, 0xc5, 0x29, 0x05, 0x31, 0x45, 0x31, 0x45, 
-	0x31, 0x85, 0x29, 0x45, 0x21, 0x03, 0x31, 0x45, 
-	0x52, 0x8b, 0x62, 0xcf, 0x6b, 0x51, 0x6b, 0x53, 
-	0x52, 0x4d, 0x7b, 0x93, 0xbd, 0x5d, 0x9c, 0x57, 
-	0x6b, 0x8f, 0x6b, 0x8f, 0x7c, 0x11, 0x74, 0x11, 
-	0x7c, 0x53, 0x74, 0x11, 0x4a, 0x89, 0x31, 0x87, 
-	0x21, 0x49, 0x21, 0x49, 0x29, 0x8b, 0x29, 0x49, 
-	0x29, 0x8b, 0x21, 0x47, 0x18, 0xc3, 0x10, 0x83, 
-	0x18, 0x83, 0x18, 0xc3, 0x18, 0xc3, 0x21, 0x03, 
-	0x20, 0xc3, 0x18, 0xc3, 0x21, 0x03, 0x41, 0xc9, 
-	0x5a, 0xcb, 0x62, 0xcf, 0x6b, 0x51, 0x73, 0x53, 
-	0x6b, 0x53, 0x73, 0x51, 0xac, 0xdb, 0x9c, 0x57, 
-	0x73, 0xd1, 0x8c, 0x95, 0x9c, 0xd7, 0x8c, 0x95, 
-	0x94, 0xd5, 0x6b, 0x8f, 0x39, 0xc7, 0x31, 0x89, 
-	0x29, 0x49, 0x21, 0x49, 0x21, 0x49, 0x21, 0x49, 
-	0x29, 0x89, 0x29, 0x8b, 0x21, 0x05, 0x10, 0x83, 
-	0x10, 0x83, 0x10, 0x83, 0x10, 0x83, 0x18, 0x83, 
-	0x18, 0x83, 0x18, 0xc3, 0x21, 0x05, 0x4a, 0x4b, 
-	0x63, 0x0d, 0x6b, 0x0f, 0x6b, 0x53, 0x6b, 0x53, 
-	0x6b, 0x53, 0x6b, 0x11, 0x83, 0xd3, 0x9c, 0x55, 
-	0x94, 0xd9, 0x94, 0xd7, 0x8c, 0x93, 0x8c, 0x93, 
-	0x94, 0xd5, 0x52, 0xcb, 0x42, 0x09, 0x31, 0x89, 
-	0x29, 0x49, 0x21, 0x47, 0x21, 0x49, 0x21, 0x49, 
-	0x29, 0x49, 0x29, 0x8b, 0x21, 0x49, 0x18, 0xc5, 
-	0x10, 0x83, 0x10, 0x43, 0x10, 0x43, 0x10, 0x83, 
-	0x10, 0x83, 0x18, 0xc3, 0x31, 0x87, 0x5a, 0xcd, 
-	0x73, 0x4f, 0x6b, 0x0f, 0x73, 0x53, 0x6b, 0x53, 
-	0x6b, 0x51, 0x6b, 0x11, 0x6b, 0x4d, 0x83, 0x91, 
-	0x8c, 0x95, 0x8c, 0x95, 0x7c, 0x51, 0x7c, 0x51, 
-	0x7c, 0x51, 0x4a, 0x49, 0x3a, 0x0b, 0x31, 0x8b, 
-	0x29, 0x8b, 0x29, 0x49, 0x21, 0x49, 0x39, 0xcd, 
-	0x29, 0x49, 0x29, 0x8b, 0x29, 0x49, 0x21, 0x05, 
-	0x18, 0x83, 0x10, 0x43, 0x10, 0x43, 0x10, 0x83, 
-	0x18, 0xc5, 0x21, 0x45, 0x42, 0x0b, 0x6b, 0x0f, 
-	0x73, 0x91, 0x6b, 0x0f, 0x6b, 0x11, 0x6b, 0x51, 
-	0x6b, 0x11, 0x6b, 0x11, 0x6b, 0x0f, 0x62, 0x8b, 
-	0x8c, 0x95, 0x7c, 0x13, 0x7c, 0x51, 0x84, 0x53, 
-	0x5b, 0x0b, 0x42, 0x09, 0x42, 0x0b, 0x31, 0xcb, 
-	0x31, 0x8b, 0x29, 0x49, 0x29, 0x49, 0x4a, 0x4f, 
-	0x42, 0x0d, 0x29, 0x8b, 0x21, 0x49, 0x21, 0x07, 
-	0x18, 0xc5, 0x10, 0x83, 0x10, 0x83, 0x18, 0x83, 
-	0x21, 0x07, 0x31, 0x89, 0x52, 0x8f, 0x73, 0x51, 
-	0x73, 0x91, 0x6b, 0x11, 0x6b, 0x11, 0x6b, 0x11, 
-	0x5a, 0xcf, 0x62, 0xcf, 0x63, 0x0f, 0x62, 0x8d, 
-	0x74, 0x11, 0x6b, 0x8f, 0x73, 0xcf, 0x84, 0x53, 
-	0x4a, 0x89, 0x42, 0x09, 0x3a, 0x0b, 0x39, 0xcb, 
-	0x31, 0x8b, 0x29, 0x8b, 0x29, 0x8b, 0x39, 0xcb, 
-	0x5a, 0xd1, 0x31, 0xcb, 0x21, 0x47, 0x19, 0x05, 
-	0x18, 0xc5, 0x18, 0xc5, 0x18, 0xc3, 0x19, 0x05, 
-	0x29, 0x47, 0x42, 0x0b, 0x63, 0x11, 0x73, 0x91, 
-	0x73, 0x51, 0x6b, 0x11, 0x62, 0xcf, 0x62, 0xd1, 
-	0x5a, 0xcf, 0x5a, 0x8d, 0x5a, 0x8f, 0x52, 0x8d, 
-	0x7c, 0x53, 0x7c, 0x11, 0x73, 0xcf, 0x6b, 0x91, 
-	0x4a, 0x4b, 0x42, 0x0b, 0x39, 0xcb, 0x39, 0xcb, 
-	0x31, 0x8b, 0x29, 0x8b, 0x31, 0x8b, 0x21, 0x47, 
-	0x52, 0x8f, 0x42, 0x0d, 0x29, 0x47, 0x19, 0x05, 
-	0x19, 0x05, 0x18, 0xc5, 0x18, 0xc5, 0x21, 0x07, 
-	0x31, 0x89, 0x52, 0x8d, 0x6b, 0x51, 0x6b, 0x51, 
-	0x6b, 0x4f, 0x5a, 0xcf, 0x4a, 0x4b, 0x4a, 0x4d, 
-	0x52, 0x4d, 0x52, 0x8d, 0x52, 0x8d, 0x52, 0x8d, 
-	0x8c, 0x95, 0x94, 0xd5, 0x73, 0xcf, 0x52, 0xcb, 
-	0x4a, 0x4b, 0x42, 0x0b, 0x39, 0xcb, 0x42, 0x0b, 
-	0x31, 0x8b, 0x29, 0x89, 0x31, 0xcb, 0x21, 0x05, 
-	0x39, 0xc9, 0x4a, 0x4d, 0x42, 0x0d, 0x29, 0x49, 
-	0x21, 0x05, 0x19, 0x05, 0x21, 0x07, 0x21, 0x07, 
-	0x39, 0xc9, 0x5a, 0xcf, 0x62, 0xcd, 0x6b, 0x4f, 
-	0x73, 0x4f, 0x52, 0x4b, 0x31, 0x45, 0x31, 0x87, 
-	0x42, 0x0b, 0x4a, 0x4b, 0x52, 0x8d, 0x52, 0x4d, 
-	0x73, 0xcf, 0x7c, 0x51, 0x73, 0xcf, 0x4a, 0x89, 
-	0x52, 0x4d, 0x4a, 0x4d, 0x42, 0x0b, 0x42, 0x0d, 
-	0x31, 0x8b, 0x31, 0xcb, 0x39, 0xcb, 0x21, 0x05, 
-	0x21, 0x05, 0x31, 0xc9, 0x52, 0x91, 0x52, 0x8f, 
-	0x39, 0xcb, 0x29, 0x47, 0x29, 0x47, 0x31, 0x87, 
-	0x4a, 0x0b, 0x63, 0x0f, 0x7b, 0x91, 0xa4, 0x99, 
-	0x94, 0x57, 0x52, 0x4b, 0x31, 0x87, 0x21, 0x05, 
-	0x39, 0xcb, 0x42, 0x0b, 0x52, 0x8d, 0x52, 0x4d, 
-	0x74, 0x11, 0x84, 0x53, 0x63, 0x4d, 0x4a, 0x49, 
-	0x52, 0x8f, 0x52, 0x8f, 0x42, 0x0d, 0x42, 0x0d, 
-	0x31, 0xcb, 0x42, 0x0d, 0x39, 0xc9, 0x29, 0x47, 
-	0x18, 0xc5, 0x18, 0xc5, 0x39, 0xcb, 0x4a, 0x4f, 
-	0x5a, 0x91, 0x62, 0xd1, 0x7b, 0x95, 0x73, 0x93, 
-	0x94, 0x57, 0xad, 0x1b, 0x9c, 0x57, 0x94, 0x55, 
-	0x73, 0x0f, 0x52, 0x49, 0x39, 0xc9, 0x21, 0x05, 
-	0x39, 0xc9, 0x42, 0x0b, 0x52, 0x4d, 0x52, 0x4d, 
-	0x5b, 0x4d, 0x74, 0x11, 0x4a, 0x89, 0x4a, 0x4b, 
-	0x5a, 0x8f, 0x5a, 0x8f, 0x52, 0x8f, 0x42, 0x0d, 
-	0x3a, 0x0b, 0x52, 0x8f, 0x42, 0x0b, 0x31, 0x87, 
-	0x21, 0x05, 0x10, 0x83, 0x18, 0xc5, 0x31, 0x89, 
-	0x42, 0x0b, 0x6b, 0x53, 0x8c, 0x15, 0x8b, 0xd5, 
-	0x8c, 0x13, 0x8b, 0xd3, 0x73, 0x0d, 0x6a, 0xcb, 
-	0x6a, 0xcb, 0x6a, 0xcd, 0x52, 0x4b, 0x29, 0x45, 
-	0x39, 0xc9, 0x42, 0x0b, 0x4a, 0x4d, 0x4a, 0x4d, 
-	0x5b, 0x0b, 0x52, 0xc9, 0x42, 0x09, 0x4a, 0x4d, 
-	0x5a, 0xcf, 0x5a, 0xd1, 0x52, 0x4f, 0x4a, 0x4d, 
-	0x52, 0x8f, 0x63, 0x11, 0x4a, 0x4d, 0x39, 0xc9, 
-	0x31, 0x87, 0x20, 0xc3, 0x10, 0x83, 0x18, 0xc3, 
-	0x31, 0x87, 0x4a, 0x0b, 0x5a, 0x49, 0x5a, 0x49, 
-	0x5a, 0x49, 0x5a, 0x49, 0x4a, 0x07, 0x62, 0x89, 
-	0x73, 0x0d, 0x8b, 0xd3, 0x8b, 0xd3, 0x52, 0x4d, 
-	0x39, 0xcb, 0x42, 0x4d, 0x52, 0x4d, 0x52, 0x8d, 
-	0x6b, 0x8f, 0x4a, 0x89, 0x4a, 0x4d, 0x52, 0x4d, 
-	0x5a, 0xd1, 0x5a, 0xd1, 0x52, 0x8f, 0x4a, 0x4d, 
-	0x63, 0x11, 0x6b, 0x11, 0x52, 0x8f, 0x4a, 0x4b, 
-	0x39, 0xc9, 0x31, 0x45, 0x20, 0xc3, 0x18, 0x83, 
-	0x18, 0x83, 0x29, 0x03, 0x31, 0x05, 0x31, 0x05, 
-	0x31, 0x45, 0x49, 0xc7, 0x5a, 0x49, 0x72, 0xcd, 
-	0x83, 0x4d, 0x94, 0x11, 0x9c, 0x53, 0x7b, 0x93, 
-	0x39, 0xcb, 0x4a, 0x4d, 0x52, 0x8f, 0x5a, 0xcf, 
-	0x8c, 0x95, 0x52, 0x8b, 0x4a, 0x4d, 0x5a, 0x8f, 
-	0x5a, 0xcf, 0x5a, 0xd1, 0x52, 0x8f, 0x52, 0x8f, 
-	0x73, 0x53, 0x6b, 0x51, 0x63, 0x0f, 0x52, 0x8b, 
-	0x4a, 0x09, 0x41, 0xc7, 0x31, 0x45, 0x29, 0x05, 
-	0x20, 0xc3, 0x18, 0x83, 0x20, 0x83, 0x28, 0xc3, 
-	0x41, 0xc7, 0x52, 0x49, 0x62, 0x8b, 0x73, 0x0d, 
-	0x83, 0x8f, 0x94, 0x11, 0xa4, 0x93, 0x8b, 0xd3, 
-	0x39, 0xc9, 0x4a, 0x4d, 0x52, 0x91, 0x62, 0xcf, 
-	0x84, 0x53, 0x4a, 0x89, 0x4a, 0x4d, 0x5a, 0x8f, 
-	0x5a, 0xd1, 0x62, 0xd1, 0x5a, 0xd1, 0x63, 0x11, 
-	0x7b, 0xd5, 0x73, 0x93, 0x73, 0x91, 0x62, 0xcd, 
-	0x5a, 0x8b, 0x4a, 0x09, 0x41, 0xc7, 0x39, 0x87, 
-	0x39, 0x45, 0x31, 0x45, 0x39, 0x45, 0x41, 0x87, 
-	0x52, 0x0b, 0x62, 0x8b, 0x6a, 0xcd, 0x7b, 0x4d, 
-	0x8b, 0x8f, 0x9c, 0x11, 0xac, 0x95, 0x9c, 0x55, 
-	0x41, 0xc9, 0x4a, 0x4f, 0x5a, 0x91, 0x5a, 0xcf, 
-	0x63, 0x4d, 0x4a, 0x49, 0x52, 0x8d, 0x5a, 0xd1, 
-	0x63, 0x11, 0x63, 0x11, 0x5a, 0xd1, 0x73, 0x95, 
-	0x84, 0x57, 0x84, 0x13, 0x84, 0x15, 0x73, 0x91, 
-	0x6b, 0x0d, 0x5a, 0x8b, 0x52, 0x09, 0x4a, 0x09, 
-	0x49, 0xc9, 0x41, 0xc7, 0x41, 0xc7, 0x49, 0xc9, 
-	0x5a, 0x49, 0x6a, 0xcb, 0x7b, 0x4d, 0x83, 0x8f, 
-	0x8b, 0x8f, 0x9c, 0x11, 0xb4, 0xd5, 0xa4, 0x97, 
-	0x41, 0xc9, 0x4a, 0x4f, 0x52, 0x8f, 0x52, 0x8d, 
-	0x63, 0x4f, 0x4a, 0x4b, 0x52, 0x8f, 0x5a, 0xd1, 
-	0x63, 0x11, 0x5b, 0x11, 0x5a, 0xd1, 0x84, 0x17, 
-	0x8c, 0x57, 0x94, 0x55, 0x8c, 0x53, 0x84, 0x13, 
-	0x7b, 0x4f, 0x62, 0x8b, 0x62, 0x8b, 0x5a, 0x8b, 
-	0x52, 0x49, 0x52, 0x09, 0x52, 0x09, 0x52, 0x49, 
-	0x62, 0x8b, 0x73, 0x0d, 0x83, 0x8f, 0x8b, 0xcf, 
-	0x8b, 0x8f, 0x9c, 0x53, 0xb4, 0xd5, 0xac, 0xd9, 
-	0x42, 0x09, 0x4a, 0x4d, 0x4a, 0x4d, 0x52, 0x4d, 
-	0x52, 0x8b, 0x4a, 0x4d, 0x52, 0x8f, 0x5a, 0xd1, 
-	0x63, 0x11, 0x63, 0x11, 0x6b, 0x13, 0x94, 0x59, 
-	0x94, 0x57, 0x9c, 0x55, 0x94, 0x13, 0x94, 0x13, 
-	0x83, 0x8f, 0x73, 0x0d, 0x6a, 0xcd, 0x62, 0x8b, 
-	0x62, 0x8b, 0x62, 0x8b, 0x62, 0x8b, 0x62, 0x8b, 
-	0x73, 0x0d, 0x83, 0x4d, 0x8b, 0x8f, 0x8b, 0xcf, 
-	0x9c, 0x11, 0xac, 0x95, 0xb4, 0xd5, 0xb4, 0xd9, 
-	0x52, 0x4b, 0x42, 0x0b, 0x4a, 0x4d, 0x4a, 0x4d, 
-	0x52, 0x8b, 0x4a, 0x4d, 0x5a, 0x8f, 0x5a, 0xd1, 
-	0x63, 0x11, 0x5b, 0x11, 0x73, 0x93, 0x94, 0x59, 
-	0x9c, 0x55, 0x9c, 0x55, 0x9c, 0x55, 0x9c, 0x53, 
-	0x93, 0xd1, 0x83, 0x4f, 0x73, 0x0d, 0x6a, 0xcb, 
-	0x6a, 0xcb, 0x6a, 0xcb, 0x6a, 0xcd, 0x73, 0x0d, 
-	0x7b, 0x4d, 0x8b, 0xcf, 0x93, 0xd1, 0x9c, 0x53, 
-	0xa4, 0x95, 0xb4, 0xd5, 0xb4, 0xd5, 0xb5, 0x19, 
-	0x62, 0xcd, 0x42, 0x0b, 0x4a, 0x4d, 0x4a, 0x4d, 
-	0x52, 0x8d, 0x52, 0x4d, 0x5a, 0x91, 0x5a, 0xd1, 
-	0x5b, 0x11, 0x5a, 0xd1, 0x83, 0xd7, 0x94, 0x97, 
-	0x94, 0x55, 0x9c, 0x53, 0x9c, 0x53, 0x9c, 0x53, 
-	0x94, 0x11, 0x8b, 0xcf, 0x7b, 0x4d, 0x7b, 0x4f, 
-	0x73, 0x0d, 0x73, 0x0d, 0x73, 0x0d, 0x7b, 0x4d, 
-	0x8b, 0x8f, 0x94, 0x11, 0xa4, 0x93, 0xac, 0xd7, 
-	0xb4, 0xd5, 0xb4, 0xd5, 0xb5, 0x17, 0xbd, 0x59, 
-	0x7b, 0x91, 0x41, 0xc9, 0x4a, 0x4d, 0x4a, 0x4d, 
-	0x4a, 0x49, 0x52, 0x4d, 0x5a, 0xd1, 0x63, 0x11, 
-	0x63, 0x11, 0x63, 0x11, 0x8c, 0x17, 0x8c, 0x97, 
-	0x9c, 0x53, 0x9c, 0x53, 0x9c, 0x53, 0x9c, 0x11, 
-	0x93, 0xd1, 0x93, 0xd1, 0x8b, 0x8f, 0x83, 0x8f, 
-	0x8b, 0x91, 0x83, 0x8f, 0x83, 0x8f, 0x8b, 0x8f, 
-	0x94, 0x11, 0x9c, 0x53, 0xac, 0xd5, 0xb5, 0x17, 
-	0xb5, 0x17, 0xb5, 0x17, 0xb5, 0x17, 0xbd, 0x59, 
-	0x9c, 0x55, 0x42, 0x09, 0x4a, 0x4d, 0x52, 0x8d, 
-	0x39, 0xc7, 0x52, 0x4d, 0x5a, 0xd1, 0x5a, 0xd1, 
-	0x5b, 0x11, 0x63, 0x51, 0x8c, 0x57, 0x94, 0x97, 
-	0x9c, 0x55, 0x94, 0x13, 0x94, 0x11, 0x9c, 0x11, 
-	0x94, 0x11, 0x93, 0xd1, 0x8b, 0xcf, 0x8b, 0xcf, 
-	0x8b, 0xcf, 0x8b, 0xcf, 0x8b, 0xd1, 0x94, 0x11, 
-	0x9c, 0x53, 0xa4, 0x95, 0xb4, 0xd5, 0xb5, 0x17, 
-	0xbd, 0x17, 0xc5, 0x59, 0xbd, 0x59, 0xbd, 0x59, 
-	0xac, 0xd9, 0x4a, 0x09, 0x4a, 0x4d, 0x52, 0x8f, 
-	0x31, 0x87, 0x42, 0x0b, 0x52, 0x8f, 0x5a, 0xd1, 
-	0x5a, 0xcf, 0x63, 0x51, 0x8c, 0x59, 0x9c, 0x97, 
-	0x9c, 0x55, 0x94, 0x13, 0x94, 0x11, 0x94, 0x11, 
-	0x94, 0x11, 0x93, 0xd1, 0x93, 0xd1, 0x93, 0xd1, 
-	0x8b, 0xcf, 0x93, 0xd1, 0x94, 0x11, 0x9c, 0x13, 
-	0xa4, 0x53, 0xac, 0xd5, 0xb4, 0xd5, 0xb5, 0x17, 
-	0xc5, 0x59, 0xc5, 0x59, 0xc5, 0x59, 0xc5, 0x59, 
-	0xbd, 0x5b, 0x52, 0x49, 0x4a, 0x4d, 0x52, 0x8f, 
-	0x39, 0xc7, 0x39, 0xc9, 0x52, 0x8f, 0x5a, 0xd1, 
-	0x5a, 0xcf, 0x63, 0x51, 0x94, 0x59, 0x9c, 0x97, 
-	0x9c, 0x55, 0x9c, 0x53, 0x94, 0x11, 0x93, 0xd1, 
-	0x93, 0xd1, 0x93, 0xd1, 0x93, 0xd1, 0x93, 0xd1, 
-	0x93, 0xd1, 0x93, 0xd1, 0x94, 0x11, 0x94, 0x11, 
-	0xa4, 0x53, 0xb4, 0xd5, 0xb4, 0xd7, 0xb4, 0xd7, 
-	0xbd, 0x57, 0xc5, 0x59, 0xc5, 0x59, 0xc5, 0x59, 
-	0xbd, 0x5b, 0x6b, 0x0d, 0x4a, 0x4d, 0x52, 0x8f, 
-	0x42, 0x0b, 0x31, 0x89, 0x4a, 0x4d, 0x52, 0x8f, 
-	0x4a, 0x4d, 0x5b, 0x0f, 0x8c, 0x19, 0x9c, 0x57, 
-	0x9c, 0x97, 0x9c, 0x53, 0x93, 0xd1, 0x93, 0xd1, 
-	0x93, 0xd1, 0x93, 0xd1, 0x93, 0xd1, 0x93, 0xd1, 
-	0x93, 0xd1, 0x93, 0xd1, 0x94, 0x11, 0x9c, 0x11, 
-	0xa4, 0x93, 0xb4, 0xd5, 0xb4, 0xd5, 0xb5, 0x17, 
-	0xb5, 0x17, 0xbd, 0x59, 0xc5, 0x59, 0xc5, 0x59, 
-	0xc5, 0x9b, 0x83, 0xd3, 0x4a, 0x4b, 0x52, 0x8f, 
-	0x52, 0x8d, 0x39, 0xcb, 0x4a, 0x4d, 0x52, 0x8f, 
-	0x4a, 0x4b, 0x52, 0x8d, 0x8c, 0x19, 0x94, 0x57, 
-	0x9c, 0x55, 0x9c, 0x55, 0x8b, 0xd1, 0x8b, 0x8f, 
-	0x93, 0xd1, 0x9c, 0x11, 0x9c, 0x11, 0x94, 0x11, 
-	0x94, 0x11, 0x94, 0x11, 0x94, 0x11, 0xa4, 0x53, 
-	0xac, 0x95, 0xac, 0x95, 0xac, 0xd5, 0xb5, 0x17, 
-	0xb5, 0x17, 0xbd, 0x59, 0xc5, 0x59, 0xc5, 0x59, 
-	0xc5, 0x9b, 0x94, 0x55, 0x4a, 0x4b, 0x52, 0x8f, 
-	0x52, 0x8f, 0x42, 0x0d, 0x4a, 0x4d, 0x5a, 0x8f, 
-	0x42, 0x0b, 0x4a, 0x4b, 0x84, 0x17, 0x94, 0x57, 
-	0x9c, 0x55, 0x9c, 0x57, 0x94, 0x11, 0x8b, 0x8f, 
-	0x8b, 0xcf, 0x9c, 0x11, 0x9c, 0x11, 0x94, 0x11, 
-	0x9c, 0x11, 0x94, 0x11, 0x94, 0x11, 0x9c, 0x51, 
-	0xa4, 0x53, 0x9c, 0x53, 0xa4, 0x93, 0xb4, 0xd7, 
-	0xb5, 0x17, 0xbd, 0x57, 0xc5, 0x59, 0xc5, 0x59, 
-	0xc5, 0x9d, 0xac, 0xd9, 0x4a, 0x4b, 0x52, 0x4d, 
-	0x5a, 0xcf, 0x4a, 0x4d, 0x42, 0x0d, 0x5a, 0x8f, 
-	0x42, 0x0b, 0x42, 0x0b, 0x7b, 0xd5, 0x94, 0x55, 
-	0x9c, 0x55, 0x9c, 0x97, 0x9c, 0x55, 0x93, 0xd1, 
-	0x8b, 0xcf, 0x8b, 0xcf, 0x8b, 0xcf, 0x93, 0xd1, 
-	0x9c, 0x11, 0x9c, 0x51, 0x94, 0x11, 0x9c, 0x11, 
-	0x9c, 0x51, 0xa4, 0x53, 0xa4, 0x53, 0xb5, 0x17, 
-	0xb5, 0x17, 0xbd, 0x57, 0xc5, 0x5b, 0xc5, 0x9b, 
-	0xc5, 0x9d, 0xb5, 0x1b, 0x52, 0x8b, 0x52, 0x8f, 
-	0x5a, 0xcf, 0x4a, 0x4d, 0x39, 0xcb, 0x52, 0x8f, 
-	0x39, 0xcb, 0x39, 0xcb, 0x73, 0x93, 0x8c, 0x55, 
-	0x9c, 0x55, 0x9c, 0x97, 0x9c, 0x55, 0x9c, 0x53, 
-	0x94, 0x11, 0x8b, 0x8f, 0x83, 0x8d, 0x8b, 0x8f, 
-	0x94, 0x11, 0x9c, 0x11, 0x9c, 0x11, 0x9c, 0x11, 
-	0x9c, 0x53, 0xa4, 0x95, 0xac, 0x95, 0xb5, 0x17, 
-	0xb5, 0x17, 0xc5, 0x59, 0xc5, 0x9b, 0xc5, 0x9b, 
-	0xc5, 0x9d, 0xbd, 0x5d, 0x5a, 0x8b, 0x4a, 0x4d, 
-	
-};
-
-Gfx castle_grounds_dl_doit_ci8_aligner[] = {gsSPEndDisplayList()};
-u8 castle_grounds_dl_doit_ci8[] = {
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 
-	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x05, 0x06, 0x07, 0x07, 
-	0x08, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x0a, 0x0b, 0x0c, 0x0d, 0x07, 0x0e, 
-	0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x04, 0x11, 0x12, 0x13, 0x14, 0x0f, 0x15, 0x16, 
-	0x08, 0x12, 0x17, 0x17, 0x18, 0x00, 0x00, 0x00, 
-	0x19, 0x1a, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 
-	0x0e, 0x20, 0x21, 0x00, 0x22, 0x18, 0x00, 0x00, 
-	0x23, 0x24, 0x23, 0x23, 0x25, 0x26, 0x15, 0x27, 
-	0x1e, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 
-	0x29, 0x2a, 0x2a, 0x2b, 0x2c, 0x2d, 0x15, 0x16, 
-	0x1e, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x23, 0x1a, 0x24, 0x2b, 0x2c, 0x2f, 0x15, 0x16, 
-	0x1e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x23, 0x1a, 0x23, 0x2b, 0x31, 0x32, 0x15, 0x16, 
-	0x27, 0x33, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x35, 0x36, 0x37, 0x31, 0x38, 0x39, 0x0e, 0x15, 
-	0x16, 0x3a, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x3c, 0x3d, 0x3e, 0x3f, 0x3f, 0x26, 0x40, 0x1e, 
-	0x16, 0x41, 0x42, 0x43, 0x44, 0x00, 0x00, 0x00, 
-	0x45, 0x46, 0x46, 0x47, 0x44, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x49, 0x4a, 0x00, 0x00, 0x00, 
-	0x45, 0x4b, 0x4c, 0x4d, 0x4e, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x4f, 0x50, 0x00, 0x00, 0x00, 
-	0x4b, 0x51, 0x52, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x3e, 0x53, 0x54, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x4d, 0x55, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x56, 0x57, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x59, 0x59, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x5a, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x5b, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x0e, 0x1e, 
-	0x16, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x44, 0x26, 0x0e, 0x1e, 
-	0x16, 0x5c, 0x5d, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x5e, 0x5f, 0x1f, 0x15, 
-	0x16, 0x31, 0x4c, 0x60, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x61, 0x62, 0x40, 0x63, 
-	0x1e, 0x64, 0x65, 0x66, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x67, 0x06, 0x68, 0x69, 
-	0x6a, 0x6b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x54, 0x6c, 0x6d, 0x6e, 
-	0x6f, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x71, 0x72, 0x73, 0x74, 
-	0x74, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x76, 0x77, 0x78, 0x73, 
-	0x79, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x7b, 0x7c, 0x7d, 0x7e, 
-	0x7f, 0x80, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x82, 0x83, 0x84, 0x85, 
-	0x86, 0x87, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x89, 0x7a, 0x8a, 0x8b, 
-	0x8c, 0x8d, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x5a, 0x8f, 0x90, 0x91, 
-	0x92, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	
-};
-
-Gfx castle_grounds_dl_doit_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 castle_grounds_dl_doit_pal_rgba16[] = {
-	0x00, 0x00, 0x84, 0x62, 0xbe, 0x2e, 0xc6, 0x73, 
-	0xa5, 0x69, 0x32, 0x14, 0xb5, 0xad, 0xdf, 0x37, 
-	0xce, 0x71, 0x9c, 0xe2, 0x53, 0x1a, 0x5b, 0x5a, 
-	0x5b, 0x18, 0x7b, 0xdd, 0xe7, 0x39, 0x73, 0x5b, 
-	0x9c, 0xa2, 0xad, 0xa9, 0xbd, 0xeb, 0xbd, 0xe9, 
-	0xad, 0x67, 0xde, 0xf7, 0xe7, 0x7b, 0x52, 0x4e, 
-	0x4a, 0x50, 0xd6, 0xb1, 0xde, 0xb1, 0xd6, 0x6f, 
-	0xc6, 0x2d, 0xb5, 0x67, 0xdf, 0x39, 0xef, 0x7b, 
-	0xd6, 0x6d, 0x4a, 0x4e, 0x52, 0x50, 0xde, 0xaf, 
-	0xde, 0x6d, 0xce, 0x2d, 0xbd, 0xa9, 0xe7, 0x79, 
-	0x52, 0x92, 0xde, 0xad, 0xde, 0x6b, 0xde, 0x6f, 
-	0xce, 0x2b, 0xc5, 0xa9, 0xd6, 0xf2, 0xc5, 0xe9, 
-	0xd6, 0x70, 0xd6, 0x2d, 0xc5, 0xed, 0xd6, 0xb0, 
-	0x9c, 0x1a, 0xd6, 0x27, 0xd5, 0xe7, 0xcd, 0xe9, 
-	0xcd, 0xeb, 0xc5, 0xeb, 0xc5, 0xec, 0x93, 0xd8, 
-	0xd5, 0xe5, 0xbd, 0x1d, 0xb4, 0x9a, 0xbd, 0x22, 
-	0xef, 0x39, 0xd6, 0x71, 0xac, 0x9e, 0x9b, 0xd6, 
-	0x8b, 0x52, 0xd6, 0x29, 0xb4, 0xdb, 0x9c, 0x58, 
-	0xde, 0xb3, 0xa3, 0x94, 0x8b, 0x10, 0xc5, 0x61, 
-	0xac, 0x9c, 0xa4, 0x18, 0x61, 0x82, 0x9b, 0x50, 
-	0x8a, 0xce, 0xbd, 0x1f, 0xb4, 0xde, 0xbd, 0x61, 
-	0xbd, 0x20, 0xb4, 0x9c, 0x92, 0x42, 0x92, 0x86, 
-	0x8a, 0x42, 0xf5, 0x98, 0xec, 0x86, 0xec, 0x88, 
-	0xd6, 0xb3, 0xcd, 0xa6, 0x7a, 0x8e, 0xbd, 0xab, 
-	0xa3, 0xd8, 0x7a, 0x4a, 0xbd, 0xed, 0xe6, 0xf7, 
-	0xde, 0xf3, 0x8a, 0x86, 0x8b, 0x0e, 0xbc, 0x9c, 
-	0xce, 0x31, 0xbd, 0xad, 0xce, 0xb5, 0xde, 0xf5, 
-	0xa5, 0x29, 0xa5, 0x2b, 0xa4, 0xe9, 0xb5, 0xf1, 
-	0xc6, 0x2f, 0x73, 0x12, 0x6b, 0x5b, 0x8c, 0xa5, 
-	0x94, 0xe9, 0x52, 0xd7, 0x31, 0x06, 0x42, 0x11, 
-	0x84, 0x63, 0x8c, 0xa7, 0x4a, 0x97, 0x21, 0x06, 
-	0x42, 0x13, 0x6b, 0x9d, 0x73, 0xdf, 0x94, 0xa5, 
-	0x5b, 0x17, 0xf5, 0x96, 0x29, 0x08, 0x3a, 0x13, 
-	0x63, 0x19, 0x8c, 0x21, 0x94, 0x61, 0x6a, 0xd5, 
-	0xf5, 0x94, 0x39, 0x88, 0x4a, 0x95, 0x5b, 0x19, 
-	0x63, 0x17, 0x6b, 0x16, 0xe5, 0x12, 0x41, 0xce, 
-	0x4a, 0x53, 0x52, 0x53, 0x5a, 0xd2, 
-};
-
-Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_0[44] = {
-	{{ {-712, -93, -899}, 0, {368, 752}, {129, 0, 0, 255} }},
-	{{ {-712, -93, 1096}, 0, {368, 1008}, {129, 0, 0, 255} }},
-	{{ {-712, 1331, 1096}, 0, {624, 1008}, {129, 0, 0, 255} }},
-	{{ {-712, 1167, -899}, 0, {594, 752}, {129, 0, 0, 255} }},
-	{{ {-712, 1331, -899}, 0, {624, 752}, {129, 0, 0, 255} }},
-	{{ {712, -93, 1096}, 0, {368, 240}, {127, 0, 0, 255} }},
-	{{ {712, -93, -899}, 0, {368, 496}, {127, 0, 0, 255} }},
-	{{ {712, 1139, -899}, 0, {590, 496}, {127, 0, 0, 255} }},
-	{{ {712, 1331, 1096}, 0, {624, 240}, {127, 0, 0, 255} }},
-	{{ {712, 1331, -899}, 0, {624, 496}, {127, 0, 0, 255} }},
-	{{ {0, 101, 1096}, 0, {368, 112}, {0, 0, 127, 255} }},
-	{{ {-712, 1331, 1096}, 0, {624, -16}, {0, 0, 127, 255} }},
-	{{ {-712, -93, 1096}, 0, {368, -16}, {0, 0, 127, 255} }},
-	{{ {0, 1998, 1096}, 0, {624, 112}, {0, 0, 127, 255} }},
-	{{ {712, -93, 1096}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {712, 1331, 1096}, 0, {624, 240}, {0, 0, 127, 255} }},
-	{{ {712, -93, -899}, 0, {368, 496}, {0, 0, 129, 255} }},
-	{{ {0, -93, -899}, 0, {368, 624}, {0, 0, 129, 255} }},
-	{{ {0, 14, -899}, 0, {381, 624}, {0, 0, 129, 255} }},
-	{{ {-712, -93, -899}, 0, {368, 752}, {0, 0, 129, 255} }},
-	{{ {-325, 145, -899}, 0, {403, 682}, {0, 0, 129, 255} }},
-	{{ {-444, 443, -899}, 0, {452, 704}, {0, 0, 129, 255} }},
-	{{ {-712, 1167, -899}, 0, {594, 752}, {0, 0, 129, 255} }},
-	{{ {0, 494, -899}, 0, {440, 624}, {0, 0, 129, 255} }},
-	{{ {0, 1066, -899}, 0, {510, 624}, {0, 0, 129, 255} }},
-	{{ {-496, 1354, -899}, 0, {600, 713}, {0, 0, 129, 255} }},
-	{{ {-712, 1331, -899}, 0, {624, 752}, {0, 0, 129, 255} }},
-	{{ {-496, 1237, -899}, 0, {583, 713}, {0, 0, 129, 255} }},
-	{{ {0, 1703, -899}, 0, {588, 624}, {0, 0, 129, 255} }},
-	{{ {0, 1998, -899}, 0, {624, 624}, {0, 0, 129, 255} }},
-	{{ {496, 1237, -899}, 0, {583, 535}, {0, 0, 129, 255} }},
-	{{ {712, 1331, -899}, 0, {624, 496}, {0, 0, 129, 255} }},
-	{{ {496, 1237, -899}, 0, {583, 535}, {0, 0, 129, 255} }},
-	{{ {712, 1331, -899}, 0, {624, 496}, {0, 0, 129, 255} }},
-	{{ {712, 1139, -899}, 0, {590, 496}, {0, 0, 129, 255} }},
-	{{ {496, 1334, -899}, 0, {597, 535}, {0, 0, 129, 255} }},
-	{{ {4, 1283, -899}, 0, {536, 623}, {0, 0, 129, 255} }},
-	{{ {0, 1066, -899}, 0, {510, 624}, {0, 0, 129, 255} }},
-	{{ {712, -93, -899}, 0, {368, 496}, {0, 0, 129, 255} }},
-	{{ {234, 487, -899}, 0, {450, 582}, {0, 0, 129, 255} }},
-	{{ {299, 354, -899}, 0, {433, 570}, {0, 0, 129, 255} }},
-	{{ {0, 14, -899}, 0, {381, 624}, {0, 0, 129, 255} }},
-	{{ {0, 494, -899}, 0, {440, 624}, {0, 0, 129, 255} }},
-	{{ {-496, 1354, -899}, 0, {600, 713}, {0, 0, 129, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(7, 8, 5, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(10, 13, 11, 0),
-	gsSP1Triangle(14, 13, 10, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 1, 3, 0),
-	gsSP1Triangle(4, 2, 3, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(9, 8, 6, 0),
-	gsSP1Triangle(9, 6, 10, 0),
-	gsSP1Triangle(11, 9, 10, 0),
-	gsSP1Triangle(12, 11, 10, 0),
-	gsSP1Triangle(12, 10, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_0 + 32, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(4, 3, 2, 0),
-	gsSP1Triangle(4, 2, 5, 0),
-	gsSP1Triangle(5, 2, 6, 0),
-	gsSP1Triangle(7, 5, 6, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(6, 9, 8, 0),
-	gsSP1Triangle(7, 10, 5, 0),
-	gsSP1Triangle(11, 4, 5, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_1[8] = {
-	{{ {0, 1998, -899}, 0, {752, 496}, {169, 93, 0, 255} }},
-	{{ {-712, 1331, -899}, 0, {880, 496}, {169, 93, 0, 255} }},
-	{{ {-712, 1331, 1096}, 0, {880, 240}, {169, 93, 0, 255} }},
-	{{ {0, 1998, 1096}, 0, {752, 240}, {169, 93, 0, 255} }},
-	{{ {712, 1331, -899}, 0, {624, 496}, {87, 93, 0, 255} }},
-	{{ {0, 1998, -899}, 0, {752, 496}, {87, 93, 0, 255} }},
-	{{ {0, 1998, 1096}, 0, {752, 240}, {87, 93, 0, 255} }},
-	{{ {712, 1331, 1096}, 0, {624, 240}, {87, 93, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_1[] = {
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_1 + 0, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_2[32] = {
-	{{ {-325, 145, -899}, 0, {403, 682}, {115, 46, 27, 255} }},
-	{{ {-444, 443, -899}, 0, {452, 704}, {115, 46, 27, 255} }},
-	{{ {-552, 475, -499}, 0, {452, 704}, {115, 46, 27, 255} }},
-	{{ {-401, 97, -499}, 0, {403, 682}, {115, 46, 27, 255} }},
-	{{ {0, 494, -899}, 0, {440, 624}, {253, 130, 14, 255} }},
-	{{ {234, 487, -899}, 0, {450, 582}, {253, 130, 14, 255} }},
-	{{ {307, 531, -499}, 0, {450, 582}, {253, 130, 14, 255} }},
-	{{ {10, 540, -499}, 0, {440, 624}, {253, 130, 14, 255} }},
-	{{ {299, 354, -899}, 0, {433, 570}, {162, 83, 19, 255} }},
-	{{ {0, 14, -899}, 0, {381, 624}, {162, 83, 19, 255} }},
-	{{ {10, -69, -499}, 0, {381, 624}, {162, 83, 19, 255} }},
-	{{ {390, 362, -499}, 0, {433, 570}, {162, 83, 19, 255} }},
-	{{ {234, 487, -899}, 0, {450, 582}, {144, 201, 26, 255} }},
-	{{ {299, 354, -899}, 0, {433, 570}, {144, 201, 26, 255} }},
-	{{ {390, 362, -499}, 0, {433, 570}, {144, 201, 26, 255} }},
-	{{ {307, 531, -499}, 0, {450, 582}, {144, 201, 26, 255} }},
-	{{ {0, 14, -899}, 0, {381, 624}, {47, 116, 22, 255} }},
-	{{ {-325, 145, -899}, 0, {403, 682}, {47, 116, 22, 255} }},
-	{{ {-401, 97, -499}, 0, {403, 682}, {47, 116, 22, 255} }},
-	{{ {10, -69, -499}, 0, {381, 624}, {47, 116, 22, 255} }},
-	{{ {-444, 443, -899}, 0, {452, 704}, {14, 131, 14, 255} }},
-	{{ {0, 494, -899}, 0, {440, 624}, {14, 131, 14, 255} }},
-	{{ {10, 540, -499}, 0, {440, 624}, {14, 131, 14, 255} }},
-	{{ {-552, 475, -499}, 0, {452, 704}, {14, 131, 14, 255} }},
-	{{ {496, 1334, -899}, 0, {597, 535}, {0, 0, 129, 255} }},
-	{{ {4, 1283, -899}, 0, {536, 623}, {0, 0, 129, 255} }},
-	{{ {496, 1237, -899}, 0, {583, 535}, {0, 0, 129, 255} }},
-	{{ {0, 1703, -899}, 0, {588, 624}, {0, 0, 129, 255} }},
-	{{ {4, 1283, -899}, 0, {536, 623}, {0, 0, 129, 255} }},
-	{{ {-496, 1354, -899}, 0, {600, 713}, {0, 0, 129, 255} }},
-	{{ {0, 1703, -899}, 0, {588, 624}, {0, 0, 129, 255} }},
-	{{ {-496, 1237, -899}, 0, {583, 713}, {0, 0, 129, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_2[] = {
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_2 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_2 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_3[28] = {
-	{{ {-353, -50, -838}, 0, {-71, 2768}, {0, 0, 129, 255} }},
-	{{ {-353, 602, -838}, 0, {-71, -752}, {0, 0, 129, 255} }},
-	{{ {299, 602, -838}, 0, {1063, -752}, {0, 0, 129, 255} }},
-	{{ {299, -50, -838}, 0, {1063, 2768}, {0, 0, 129, 255} }},
-	{{ {-71, 805, -632}, 0, {465, 1065}, {129, 0, 0, 255} }},
-	{{ {-71, 875, -632}, 0, {487, 1065}, {129, 0, 0, 255} }},
-	{{ {-71, 875, -1166}, 0, {487, 1021}, {129, 0, 0, 255} }},
-	{{ {-71, 805, -1166}, 0, {465, 1021}, {129, 0, 0, 255} }},
-	{{ {-71, 805, -1166}, 0, {465, 1021}, {0, 0, 129, 255} }},
-	{{ {-71, 875, -1166}, 0, {487, 1021}, {0, 0, 129, 255} }},
-	{{ {30, 875, -1166}, 0, {487, 976}, {0, 0, 129, 255} }},
-	{{ {30, 805, -1166}, 0, {465, 976}, {0, 0, 129, 255} }},
-	{{ {30, 805, -1166}, 0, {465, 976}, {127, 0, 0, 255} }},
-	{{ {30, 875, -1166}, 0, {487, 976}, {127, 0, 0, 255} }},
-	{{ {30, 875, -632}, 0, {487, 931}, {127, 0, 0, 255} }},
-	{{ {30, 805, -632}, 0, {465, 931}, {127, 0, 0, 255} }},
-	{{ {30, 805, -632}, 0, {465, 931}, {0, 0, 127, 255} }},
-	{{ {30, 875, -632}, 0, {487, 931}, {0, 0, 127, 255} }},
-	{{ {-71, 875, -632}, 0, {487, 887}, {0, 0, 127, 255} }},
-	{{ {-71, 805, -632}, 0, {465, 887}, {0, 0, 127, 255} }},
-	{{ {-71, 805, -1166}, 0, {443, 976}, {0, 129, 0, 255} }},
-	{{ {30, 805, -1166}, 0, {465, 976}, {0, 129, 0, 255} }},
-	{{ {30, 805, -632}, 0, {465, 931}, {0, 129, 0, 255} }},
-	{{ {-71, 805, -632}, 0, {443, 931}, {0, 129, 0, 255} }},
-	{{ {30, 875, -1166}, 0, {487, 976}, {0, 127, 0, 255} }},
-	{{ {-71, 875, -1166}, 0, {509, 976}, {0, 127, 0, 255} }},
-	{{ {-71, 875, -632}, 0, {509, 931}, {0, 127, 0, 255} }},
-	{{ {30, 875, -632}, 0, {487, 931}, {0, 127, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_3[] = {
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_3 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_3 + 16, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_4[140] = {
-	{{ {528, 1320, -905}, 0, {1008, 496}, {0, 0, 129, 255} }},
-	{{ {528, 1246, -905}, 0, {1008, 641}, {0, 0, 129, 255} }},
-	{{ {463, 1306, -905}, 0, {883, 523}, {0, 0, 129, 255} }},
-	{{ {380, 1296, -905}, 0, {720, 605}, {0, 0, 129, 255} }},
-	{{ {429, 1230, -905}, 0, {815, 672}, {0, 0, 129, 255} }},
-	{{ {392, 1320, -905}, 0, {743, 496}, {0, 0, 129, 255} }},
-	{{ {346, 1373, -905}, 0, {653, 393}, {0, 0, 129, 255} }},
-	{{ {301, 1210, -905}, 0, {567, 623}, {0, 0, 129, 255} }},
-	{{ {456, 1396, -905}, 0, {869, 348}, {0, 0, 129, 255} }},
-	{{ {8, 1186, -902}, 0, {-16, -16}, {0, 0, 129, 255} }},
-	{{ {47, 1247, -902}, 0, {150, 240}, {0, 0, 129, 255} }},
-	{{ {101, 1247, -902}, 0, {372, 238}, {0, 0, 129, 255} }},
-	{{ {74, 1186, -902}, 0, {261, -16}, {0, 0, 129, 255} }},
-	{{ {167, 1431, -902}, 0, {648, 1008}, {0, 0, 129, 255} }},
-	{{ {211, 1305, -902}, 0, {833, 482}, {0, 0, 129, 255} }},
-	{{ {182, 1306, -902}, 0, {712, 486}, {0, 0, 129, 255} }},
-	{{ {167, 1431, -902}, 0, {648, 1008}, {0, 0, 129, 255} }},
-	{{ {182, 1306, -902}, 0, {712, 486}, {0, 0, 129, 255} }},
-	{{ {164, 1348, -902}, 0, {635, 659}, {0, 0, 129, 255} }},
-	{{ {87, 1308, -902}, 0, {316, 496}, {0, 0, 129, 255} }},
-	{{ {119, 1308, -902}, 0, {448, 493}, {0, 0, 129, 255} }},
-	{{ {211, 1305, -902}, 0, {833, 482}, {0, 0, 129, 255} }},
-	{{ {232, 1245, -902}, 0, {920, 233}, {0, 0, 129, 255} }},
-	{{ {190, 1246, -902}, 0, {743, 235}, {0, 0, 129, 255} }},
-	{{ {182, 1306, -902}, 0, {712, 486}, {0, 0, 129, 255} }},
-	{{ {47, 1247, -902}, 0, {150, 240}, {0, 0, 129, 255} }},
-	{{ {101, 1247, -902}, 0, {372, 238}, {0, 0, 129, 255} }},
-	{{ {119, 1308, -902}, 0, {448, 493}, {0, 0, 129, 255} }},
-	{{ {87, 1308, -902}, 0, {316, 496}, {0, 0, 129, 255} }},
-	{{ {211, 1186, -902}, 0, {834, -16}, {0, 0, 129, 255} }},
-	{{ {190, 1246, -902}, 0, {743, 235}, {0, 0, 129, 255} }},
-	{{ {232, 1245, -902}, 0, {920, 233}, {0, 0, 129, 255} }},
-	{{ {211, 1186, -902}, 0, {834, -16}, {0, 0, 129, 255} }},
-	{{ {232, 1245, -902}, 0, {920, 233}, {0, 0, 129, 255} }},
-	{{ {253, 1186, -902}, 0, {1008, -16}, {0, 0, 129, 255} }},
-	{{ {-34, 1201, -954}, 0, {891, -16}, {0, 0, 129, 255} }},
-	{{ {-88, 1201, -954}, 0, {676, -16}, {0, 0, 129, 255} }},
-	{{ {-95, 1237, -954}, 0, {648, 128}, {0, 0, 129, 255} }},
-	{{ {-108, 1305, -954}, 0, {594, 404}, {0, 0, 129, 255} }},
-	{{ {-102, 1273, -954}, 0, {620, 273}, {0, 0, 129, 255} }},
-	{{ {-174, 1201, -954}, 0, {330, -16}, {0, 0, 129, 255} }},
-	{{ {-131, 1201, -954}, 0, {503, -16}, {0, 0, 129, 255} }},
-	{{ {-75, 1344, -954}, 0, {729, 560}, {0, 0, 129, 255} }},
-	{{ {-91, 1325, -954}, 0, {662, 482}, {0, 0, 129, 255} }},
-	{{ {-183, 1299, -954}, 0, {292, 378}, {0, 0, 129, 255} }},
-	{{ {-157, 1337, -954}, 0, {398, 532}, {0, 0, 129, 255} }},
-	{{ {-115, 1405, -954}, 0, {567, 805}, {0, 0, 129, 255} }},
-	{{ {-170, 1369, -954}, 0, {345, 658}, {0, 0, 129, 255} }},
-	{{ {-115, 1405, -954}, 0, {567, 805}, {0, 0, 129, 255} }},
-	{{ {-106, 1366, -954}, 0, {605, 647}, {0, 0, 129, 255} }},
-	{{ {-157, 1337, -954}, 0, {398, 532}, {0, 0, 129, 255} }},
-	{{ {-75, 1344, -954}, 0, {729, 560}, {0, 0, 129, 255} }},
-	{{ {-41, 1383, -954}, 0, {864, 716}, {0, 0, 129, 255} }},
-	{{ {-34, 1201, -954}, 0, {891, -16}, {0, 0, 129, 255} }},
-	{{ {-276, 1391, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-251, 1391, -925}, 0, {1008, 1008}, {0, 0, 129, 255} }},
-	{{ {-251, 1228, -925}, 0, {1008, -16}, {0, 0, 129, 255} }},
-	{{ {-276, 1228, -925}, 0, {-16, -16}, {0, 0, 129, 255} }},
-	{{ {-464, 1287, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-459, 1277, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-499, 1250, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-509, 1268, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-467, 1298, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-515, 1288, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-468, 1309, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-467, 1298, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-515, 1288, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-517, 1309, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-467, 1320, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-515, 1330, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-464, 1331, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-509, 1350, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-459, 1341, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-499, 1368, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-452, 1350, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-486, 1384, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-443, 1357, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-470, 1397, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-433, 1362, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-452, 1407, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-422, 1365, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-433, 1362, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-452, 1407, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-432, 1413, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-411, 1366, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-411, 1415, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-400, 1365, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-390, 1413, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-389, 1362, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-370, 1407, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-379, 1357, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-352, 1397, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-370, 1350, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-336, 1384, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-363, 1341, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-322, 1368, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-358, 1331, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-363, 1341, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-322, 1368, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-313, 1350, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-354, 1320, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-307, 1330, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-353, 1309, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-305, 1309, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-354, 1298, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-307, 1288, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-358, 1287, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-313, 1268, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-363, 1277, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-322, 1250, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-370, 1268, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-336, 1234, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-379, 1261, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-370, 1268, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-336, 1234, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-352, 1221, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-389, 1256, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-370, 1211, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-459, 1277, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-452, 1268, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-486, 1234, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-499, 1250, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-452, 1268, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-470, 1221, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-486, 1234, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-443, 1261, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-452, 1211, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-433, 1256, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-433, 1256, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-432, 1205, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-452, 1211, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-422, 1253, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-411, 1203, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-411, 1251, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-390, 1205, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-400, 1253, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-400, 1253, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-389, 1256, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-370, 1211, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-	{{ {-390, 1205, -925}, 0, {-16, 1008}, {0, 0, 129, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_4[] = {
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_4 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(3, 5, 0, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(3, 7, 6, 0),
-	gsSP1Triangle(5, 8, 0, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_4 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(8, 5, 7, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(7, 10, 9, 0),
-	gsSP1Triangle(9, 11, 8, 0),
-	gsSP1Triangle(9, 12, 11, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_4 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(3, 5, 6, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 7, 5, 0),
-	gsSP1Triangle(8, 5, 9, 0),
-	gsSP1Triangle(6, 10, 3, 0),
-	gsSP1Triangle(6, 11, 10, 0),
-	gsSP1Triangle(11, 6, 12, 0),
-	gsSP1Triangle(13, 11, 12, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(12, 15, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_4 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(0, 4, 3, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(10, 12, 13, 0),
-	gsSP1Triangle(14, 10, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_4 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_4 + 80, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_4 + 96, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 4, 5, 0),
-	gsSP1Triangle(6, 5, 7, 0),
-	gsSP1Triangle(8, 6, 7, 0),
-	gsSP1Triangle(8, 7, 9, 0),
-	gsSP1Triangle(10, 8, 9, 0),
-	gsSP1Triangle(10, 9, 11, 0),
-	gsSP1Triangle(12, 10, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_4 + 112, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 0, 3, 0),
-	gsSP1Triangle(4, 3, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(6, 8, 9, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(10, 13, 11, 0),
-	gsSP1Triangle(13, 14, 11, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_4 + 128, 12, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_mesh_layer_1_vtx_5[240] = {
-	{{ {-37, 720, -1166}, 0, {170, 1008}, {243, 120, 216, 255} }},
-	{{ {-48, 730, -1130}, 0, {124, 927}, {243, 120, 216, 255} }},
-	{{ {-7, 730, -1144}, 0, {217, 927}, {243, 120, 216, 255} }},
-	{{ {14, 759, -1128}, 0, {263, 847}, {167, 84, 222, 255} }},
-	{{ {23, 753, -1166}, 0, {356, 847}, {167, 84, 222, 255} }},
-	{{ {-7, 730, -1144}, 0, {310, 927}, {167, 84, 222, 255} }},
-	{{ {-37, 720, -1166}, 0, {915, 1008}, {34, 120, 232, 255} }},
-	{{ {-74, 730, -1166}, 0, {868, 927}, {34, 120, 232, 255} }},
-	{{ {-48, 730, -1130}, 0, {961, 927}, {34, 120, 232, 255} }},
-	{{ {-37, 720, -1166}, 0, {729, 1008}, {34, 120, 24, 255} }},
-	{{ {-48, 730, -1201}, 0, {682, 927}, {34, 120, 24, 255} }},
-	{{ {-74, 730, -1166}, 0, {775, 927}, {34, 120, 24, 255} }},
-	{{ {-37, 720, -1166}, 0, {543, 1008}, {243, 120, 40, 255} }},
-	{{ {-7, 730, -1188}, 0, {496, 927}, {243, 120, 40, 255} }},
-	{{ {-48, 730, -1201}, 0, {589, 927}, {243, 120, 40, 255} }},
-	{{ {14, 759, -1128}, 0, {263, 847}, {141, 42, 222, 255} }},
-	{{ {31, 790, -1144}, 0, {310, 766}, {141, 42, 222, 255} }},
-	{{ {23, 753, -1166}, 0, {356, 847}, {141, 42, 222, 255} }},
-	{{ {-56, 759, -1105}, 0, {77, 847}, {253, 42, 136, 255} }},
-	{{ {-37, 790, -1095}, 0, {124, 766}, {253, 42, 136, 255} }},
-	{{ {-18, 753, -1108}, 0, {170, 847}, {253, 42, 136, 255} }},
-	{{ {-100, 759, -1166}, 0, {822, 847}, {113, 42, 216, 255} }},
-	{{ {-104, 790, -1144}, 0, {868, 766}, {113, 42, 216, 255} }},
-	{{ {-86, 753, -1130}, 0, {915, 847}, {113, 42, 216, 255} }},
-	{{ {-56, 759, -1226}, 0, {636, 847}, {73, 42, 95, 255} }},
-	{{ {-78, 790, -1223}, 0, {682, 766}, {73, 42, 95, 255} }},
-	{{ {-86, 753, -1201}, 0, {729, 847}, {73, 42, 95, 255} }},
-	{{ {14, 759, -1203}, 0, {449, 847}, {188, 42, 99, 255} }},
-	{{ {5, 790, -1223}, 0, {496, 766}, {188, 42, 99, 255} }},
-	{{ {-18, 753, -1223}, 0, {543, 847}, {188, 42, 99, 255} }},
-	{{ {14, 759, -1128}, 0, {263, 847}, {154, 16, 182, 255} }},
-	{{ {5, 790, -1108}, 0, {217, 766}, {154, 16, 182, 255} }},
-	{{ {31, 790, -1144}, 0, {310, 766}, {154, 16, 182, 255} }},
-	{{ {-56, 759, -1105}, 0, {77, 847}, {39, 16, 136, 255} }},
-	{{ {-78, 790, -1108}, 0, {31, 766}, {39, 16, 136, 255} }},
-	{{ {-37, 790, -1095}, 0, {124, 766}, {39, 16, 136, 255} }},
-	{{ {-100, 759, -1166}, 0, {822, 847}, {126, 16, 0, 255} }},
-	{{ {-104, 790, -1188}, 0, {775, 766}, {126, 16, 0, 255} }},
-	{{ {-104, 790, -1144}, 0, {868, 766}, {126, 16, 0, 255} }},
-	{{ {-56, 759, -1226}, 0, {636, 847}, {39, 16, 120, 255} }},
-	{{ {-37, 790, -1237}, 0, {589, 766}, {39, 16, 120, 255} }},
-	{{ {-78, 790, -1223}, 0, {682, 766}, {39, 16, 120, 255} }},
-	{{ {14, 759, -1203}, 0, {449, 847}, {154, 16, 74, 255} }},
-	{{ {31, 790, -1188}, 0, {403, 766}, {154, 16, 74, 255} }},
-	{{ {5, 790, -1223}, 0, {496, 766}, {154, 16, 74, 255} }},
-	{{ {-17, 822, -1105}, 0, {170, 686}, {204, 172, 176, 255} }},
-	{{ {-25, 851, -1130}, 0, {217, 605}, {204, 172, 176, 255} }},
-	{{ {12, 828, -1130}, 0, {263, 686}, {204, 172, 176, 255} }},
-	{{ {-88, 822, -1128}, 0, {-16, 686}, {60, 172, 182, 255} }},
-	{{ {-67, 851, -1144}, 0, {31, 605}, {60, 172, 182, 255} }},
-	{{ {-55, 828, -1108}, 0, {77, 686}, {60, 172, 182, 255} }},
-	{{ {-88, 822, -1203}, 0, {729, 686}, {89, 172, 34, 255} }},
-	{{ {-67, 851, -1188}, 0, {775, 605}, {89, 172, 34, 255} }},
-	{{ {-97, 828, -1166}, 0, {822, 686}, {89, 172, 34, 255} }},
-	{{ {-17, 822, -1226}, 0, {543, 686}, {252, 172, 95, 255} }},
-	{{ {-25, 851, -1201}, 0, {589, 605}, {252, 172, 95, 255} }},
-	{{ {-55, 828, -1223}, 0, {636, 686}, {252, 172, 95, 255} }},
-	{{ {27, 822, -1166}, 0, {356, 686}, {164, 172, 24, 255} }},
-	{{ {0, 851, -1166}, 0, {403, 605}, {164, 172, 24, 255} }},
-	{{ {12, 828, -1201}, 0, {449, 686}, {164, 172, 24, 255} }},
-	{{ {0, 851, -1166}, 0, {403, 605}, {222, 136, 24, 255} }},
-	{{ {-37, 861, -1166}, 0, {449, 524}, {222, 136, 24, 255} }},
-	{{ {-25, 851, -1201}, 0, {496, 605}, {222, 136, 24, 255} }},
-	{{ {0, 851, -1166}, 0, {403, 605}, {194, 155, 45, 255} }},
-	{{ {-25, 851, -1201}, 0, {496, 605}, {194, 155, 45, 255} }},
-	{{ {12, 828, -1201}, 0, {449, 686}, {194, 155, 45, 255} }},
-	{{ {12, 828, -1201}, 0, {449, 686}, {204, 172, 80, 255} }},
-	{{ {-25, 851, -1201}, 0, {496, 605}, {204, 172, 80, 255} }},
-	{{ {-17, 822, -1226}, 0, {543, 686}, {204, 172, 80, 255} }},
-	{{ {-25, 851, -1201}, 0, {589, 605}, {13, 136, 40, 255} }},
-	{{ {-37, 861, -1166}, 0, {636, 524}, {13, 136, 40, 255} }},
-	{{ {-67, 851, -1188}, 0, {682, 605}, {13, 136, 40, 255} }},
-	{{ {-25, 851, -1201}, 0, {589, 605}, {24, 155, 73, 255} }},
-	{{ {-67, 851, -1188}, 0, {682, 605}, {24, 155, 73, 255} }},
-	{{ {-55, 828, -1223}, 0, {636, 686}, {24, 155, 73, 255} }},
-	{{ {-55, 828, -1223}, 0, {636, 686}, {60, 172, 74, 255} }},
-	{{ {-67, 851, -1188}, 0, {682, 605}, {60, 172, 74, 255} }},
-	{{ {-88, 822, -1203}, 0, {729, 686}, {60, 172, 74, 255} }},
-	{{ {-67, 851, -1188}, 0, {775, 605}, {42, 136, 0, 255} }},
-	{{ {-37, 861, -1166}, 0, {822, 524}, {42, 136, 0, 255} }},
-	{{ {-67, 851, -1144}, 0, {868, 605}, {42, 136, 0, 255} }},
-	{{ {-67, 851, -1188}, 0, {775, 605}, {77, 155, 0, 255} }},
-	{{ {-67, 851, -1144}, 0, {868, 605}, {77, 155, 0, 255} }},
-	{{ {-97, 828, -1166}, 0, {822, 686}, {77, 155, 0, 255} }},
-	{{ {-97, 828, -1166}, 0, {822, 686}, {89, 172, 222, 255} }},
-	{{ {-67, 851, -1144}, 0, {868, 605}, {89, 172, 222, 255} }},
-	{{ {-88, 822, -1128}, 0, {915, 686}, {89, 172, 222, 255} }},
-	{{ {-67, 851, -1144}, 0, {31, 605}, {13, 136, 216, 255} }},
-	{{ {-37, 861, -1166}, 0, {77, 524}, {13, 136, 216, 255} }},
-	{{ {-25, 851, -1130}, 0, {124, 605}, {13, 136, 216, 255} }},
-	{{ {-67, 851, -1144}, 0, {31, 605}, {24, 155, 183, 255} }},
-	{{ {-25, 851, -1130}, 0, {124, 605}, {24, 155, 183, 255} }},
-	{{ {-55, 828, -1108}, 0, {77, 686}, {24, 155, 183, 255} }},
-	{{ {-55, 828, -1108}, 0, {77, 686}, {252, 172, 161, 255} }},
-	{{ {-25, 851, -1130}, 0, {124, 605}, {252, 172, 161, 255} }},
-	{{ {-17, 822, -1105}, 0, {170, 686}, {252, 172, 161, 255} }},
-	{{ {-25, 851, -1130}, 0, {217, 605}, {222, 136, 232, 255} }},
-	{{ {-37, 861, -1166}, 0, {263, 524}, {222, 136, 232, 255} }},
-	{{ {0, 851, -1166}, 0, {310, 605}, {222, 136, 232, 255} }},
-	{{ {-25, 851, -1130}, 0, {217, 605}, {194, 155, 211, 255} }},
-	{{ {0, 851, -1166}, 0, {310, 605}, {194, 155, 211, 255} }},
-	{{ {12, 828, -1130}, 0, {263, 686}, {194, 155, 211, 255} }},
-	{{ {12, 828, -1130}, 0, {263, 686}, {164, 172, 232, 255} }},
-	{{ {0, 851, -1166}, 0, {310, 605}, {164, 172, 232, 255} }},
-	{{ {27, 822, -1166}, 0, {356, 686}, {164, 172, 232, 255} }},
-	{{ {31, 790, -1188}, 0, {403, 766}, {143, 214, 40, 255} }},
-	{{ {27, 822, -1166}, 0, {356, 686}, {143, 214, 40, 255} }},
-	{{ {12, 828, -1201}, 0, {449, 686}, {143, 214, 40, 255} }},
-	{{ {31, 790, -1188}, 0, {403, 766}, {155, 232, 73, 255} }},
-	{{ {12, 828, -1201}, 0, {449, 686}, {155, 232, 73, 255} }},
-	{{ {5, 790, -1223}, 0, {496, 766}, {155, 232, 73, 255} }},
-	{{ {5, 790, -1223}, 0, {496, 766}, {183, 214, 95, 255} }},
-	{{ {12, 828, -1201}, 0, {449, 686}, {183, 214, 95, 255} }},
-	{{ {-17, 822, -1226}, 0, {543, 686}, {183, 214, 95, 255} }},
-	{{ {-37, 790, -1237}, 0, {589, 766}, {3, 214, 120, 255} }},
-	{{ {-17, 822, -1226}, 0, {543, 686}, {3, 214, 120, 255} }},
-	{{ {-55, 828, -1223}, 0, {636, 686}, {3, 214, 120, 255} }},
-	{{ {-37, 790, -1237}, 0, {589, 766}, {38, 232, 119, 255} }},
-	{{ {-55, 828, -1223}, 0, {636, 686}, {38, 232, 119, 255} }},
-	{{ {-78, 790, -1223}, 0, {682, 766}, {38, 232, 119, 255} }},
-	{{ {-78, 790, -1223}, 0, {682, 766}, {68, 214, 99, 255} }},
-	{{ {-55, 828, -1223}, 0, {636, 686}, {68, 214, 99, 255} }},
-	{{ {-88, 822, -1203}, 0, {729, 686}, {68, 214, 99, 255} }},
-	{{ {-104, 790, -1188}, 0, {775, 766}, {115, 214, 34, 255} }},
-	{{ {-88, 822, -1203}, 0, {729, 686}, {115, 214, 34, 255} }},
-	{{ {-97, 828, -1166}, 0, {822, 686}, {115, 214, 34, 255} }},
-	{{ {-104, 790, -1188}, 0, {775, 766}, {125, 232, 0, 255} }},
-	{{ {-97, 828, -1166}, 0, {822, 686}, {125, 232, 0, 255} }},
-	{{ {-104, 790, -1144}, 0, {868, 766}, {125, 232, 0, 255} }},
-	{{ {-104, 790, -1144}, 0, {868, 766}, {115, 214, 222, 255} }},
-	{{ {-97, 828, -1166}, 0, {822, 686}, {115, 214, 222, 255} }},
-	{{ {-88, 822, -1128}, 0, {915, 686}, {115, 214, 222, 255} }},
-	{{ {-78, 790, -1108}, 0, {31, 766}, {68, 214, 157, 255} }},
-	{{ {-88, 822, -1128}, 0, {-16, 686}, {68, 214, 157, 255} }},
-	{{ {-55, 828, -1108}, 0, {77, 686}, {68, 214, 157, 255} }},
-	{{ {-78, 790, -1108}, 0, {31, 766}, {38, 232, 137, 255} }},
-	{{ {-55, 828, -1108}, 0, {77, 686}, {38, 232, 137, 255} }},
-	{{ {-37, 790, -1095}, 0, {124, 766}, {38, 232, 137, 255} }},
-	{{ {-37, 790, -1095}, 0, {124, 766}, {3, 214, 136, 255} }},
-	{{ {-55, 828, -1108}, 0, {77, 686}, {3, 214, 136, 255} }},
-	{{ {-17, 822, -1105}, 0, {170, 686}, {3, 214, 136, 255} }},
-	{{ {5, 790, -1108}, 0, {217, 766}, {183, 214, 161, 255} }},
-	{{ {-17, 822, -1105}, 0, {170, 686}, {183, 214, 161, 255} }},
-	{{ {12, 828, -1130}, 0, {263, 686}, {183, 214, 161, 255} }},
-	{{ {5, 790, -1108}, 0, {217, 766}, {155, 232, 183, 255} }},
-	{{ {12, 828, -1130}, 0, {263, 686}, {155, 232, 183, 255} }},
-	{{ {31, 790, -1144}, 0, {310, 766}, {155, 232, 183, 255} }},
-	{{ {31, 790, -1144}, 0, {310, 766}, {143, 214, 216, 255} }},
-	{{ {12, 828, -1130}, 0, {263, 686}, {143, 214, 216, 255} }},
-	{{ {27, 822, -1166}, 0, {356, 686}, {143, 214, 216, 255} }},
-	{{ {5, 790, -1223}, 0, {496, 766}, {217, 240, 120, 255} }},
-	{{ {-17, 822, -1226}, 0, {543, 686}, {217, 240, 120, 255} }},
-	{{ {-37, 790, -1237}, 0, {589, 766}, {217, 240, 120, 255} }},
-	{{ {5, 790, -1223}, 0, {496, 766}, {218, 24, 119, 255} }},
-	{{ {-37, 790, -1237}, 0, {589, 766}, {218, 24, 119, 255} }},
-	{{ {-18, 753, -1223}, 0, {543, 847}, {218, 24, 119, 255} }},
-	{{ {-18, 753, -1223}, 0, {543, 847}, {253, 42, 120, 255} }},
-	{{ {-37, 790, -1237}, 0, {589, 766}, {253, 42, 120, 255} }},
-	{{ {-56, 759, -1226}, 0, {636, 847}, {253, 42, 120, 255} }},
-	{{ {-78, 790, -1223}, 0, {682, 766}, {102, 240, 74, 255} }},
-	{{ {-88, 822, -1203}, 0, {729, 686}, {102, 240, 74, 255} }},
-	{{ {-104, 790, -1188}, 0, {775, 766}, {102, 240, 74, 255} }},
-	{{ {-78, 790, -1223}, 0, {682, 766}, {101, 24, 73, 255} }},
-	{{ {-104, 790, -1188}, 0, {775, 766}, {101, 24, 73, 255} }},
-	{{ {-86, 753, -1201}, 0, {729, 847}, {101, 24, 73, 255} }},
-	{{ {-86, 753, -1201}, 0, {729, 847}, {113, 42, 40, 255} }},
-	{{ {-104, 790, -1188}, 0, {775, 766}, {113, 42, 40, 255} }},
-	{{ {-100, 759, -1166}, 0, {822, 847}, {113, 42, 40, 255} }},
-	{{ {-104, 790, -1144}, 0, {868, 766}, {102, 240, 182, 255} }},
-	{{ {-88, 822, -1128}, 0, {915, 686}, {102, 240, 182, 255} }},
-	{{ {-78, 790, -1108}, 0, {961, 766}, {102, 240, 182, 255} }},
-	{{ {-104, 790, -1144}, 0, {868, 766}, {101, 24, 183, 255} }},
-	{{ {-78, 790, -1108}, 0, {961, 766}, {101, 24, 183, 255} }},
-	{{ {-86, 753, -1130}, 0, {915, 847}, {101, 24, 183, 255} }},
-	{{ {-86, 753, -1130}, 0, {915, 847}, {73, 42, 161, 255} }},
-	{{ {-78, 790, -1108}, 0, {961, 766}, {73, 42, 161, 255} }},
-	{{ {-56, 759, -1105}, 0, {1008, 847}, {73, 42, 161, 255} }},
-	{{ {-37, 790, -1095}, 0, {124, 766}, {217, 240, 136, 255} }},
-	{{ {-17, 822, -1105}, 0, {170, 686}, {217, 240, 136, 255} }},
-	{{ {5, 790, -1108}, 0, {217, 766}, {217, 240, 136, 255} }},
-	{{ {-37, 790, -1095}, 0, {124, 766}, {218, 24, 137, 255} }},
-	{{ {5, 790, -1108}, 0, {217, 766}, {218, 24, 137, 255} }},
-	{{ {-18, 753, -1108}, 0, {170, 847}, {218, 24, 137, 255} }},
-	{{ {-18, 753, -1108}, 0, {170, 847}, {188, 42, 157, 255} }},
-	{{ {5, 790, -1108}, 0, {217, 766}, {188, 42, 157, 255} }},
-	{{ {14, 759, -1128}, 0, {263, 847}, {188, 42, 157, 255} }},
-	{{ {31, 790, -1144}, 0, {310, 766}, {130, 240, 0, 255} }},
-	{{ {27, 822, -1166}, 0, {356, 686}, {130, 240, 0, 255} }},
-	{{ {31, 790, -1188}, 0, {403, 766}, {130, 240, 0, 255} }},
-	{{ {31, 790, -1144}, 0, {310, 766}, {131, 24, 0, 255} }},
-	{{ {31, 790, -1188}, 0, {403, 766}, {131, 24, 0, 255} }},
-	{{ {23, 753, -1166}, 0, {356, 847}, {131, 24, 0, 255} }},
-	{{ {23, 753, -1166}, 0, {356, 847}, {141, 42, 34, 255} }},
-	{{ {31, 790, -1188}, 0, {403, 766}, {141, 42, 34, 255} }},
-	{{ {14, 759, -1203}, 0, {449, 847}, {141, 42, 34, 255} }},
-	{{ {-7, 730, -1188}, 0, {496, 927}, {196, 84, 74, 255} }},
-	{{ {14, 759, -1203}, 0, {449, 847}, {196, 84, 74, 255} }},
-	{{ {-18, 753, -1223}, 0, {543, 847}, {196, 84, 74, 255} }},
-	{{ {-7, 730, -1188}, 0, {496, 927}, {232, 101, 73, 255} }},
-	{{ {-18, 753, -1223}, 0, {543, 847}, {232, 101, 73, 255} }},
-	{{ {-48, 730, -1201}, 0, {589, 927}, {232, 101, 73, 255} }},
-	{{ {-48, 730, -1201}, 0, {589, 927}, {4, 84, 95, 255} }},
-	{{ {-18, 753, -1223}, 0, {543, 847}, {4, 84, 95, 255} }},
-	{{ {-56, 759, -1226}, 0, {636, 847}, {4, 84, 95, 255} }},
-	{{ {-48, 730, -1201}, 0, {682, 927}, {52, 84, 80, 255} }},
-	{{ {-56, 759, -1226}, 0, {636, 847}, {52, 84, 80, 255} }},
-	{{ {-86, 753, -1201}, 0, {729, 847}, {52, 84, 80, 255} }},
-	{{ {-48, 730, -1201}, 0, {682, 927}, {62, 101, 45, 255} }},
-	{{ {-86, 753, -1201}, 0, {729, 847}, {62, 101, 45, 255} }},
-	{{ {-74, 730, -1166}, 0, {775, 927}, {62, 101, 45, 255} }},
-	{{ {-74, 730, -1166}, 0, {775, 927}, {92, 84, 24, 255} }},
-	{{ {-86, 753, -1201}, 0, {729, 847}, {92, 84, 24, 255} }},
-	{{ {-100, 759, -1166}, 0, {822, 847}, {92, 84, 24, 255} }},
-	{{ {-74, 730, -1166}, 0, {868, 927}, {92, 84, 232, 255} }},
-	{{ {-100, 759, -1166}, 0, {822, 847}, {92, 84, 232, 255} }},
-	{{ {-86, 753, -1130}, 0, {915, 847}, {92, 84, 232, 255} }},
-	{{ {-74, 730, -1166}, 0, {868, 927}, {62, 101, 211, 255} }},
-	{{ {-86, 753, -1130}, 0, {915, 847}, {62, 101, 211, 255} }},
-	{{ {-48, 730, -1130}, 0, {961, 927}, {62, 101, 211, 255} }},
-	{{ {-48, 730, -1130}, 0, {961, 927}, {52, 84, 176, 255} }},
-	{{ {-86, 753, -1130}, 0, {915, 847}, {52, 84, 176, 255} }},
-	{{ {-56, 759, -1105}, 0, {1008, 847}, {52, 84, 176, 255} }},
-	{{ {23, 753, -1166}, 0, {356, 847}, {167, 84, 34, 255} }},
-	{{ {14, 759, -1203}, 0, {449, 847}, {167, 84, 34, 255} }},
-	{{ {-7, 730, -1188}, 0, {403, 927}, {167, 84, 34, 255} }},
-	{{ {23, 753, -1166}, 0, {356, 847}, {179, 101, 0, 255} }},
-	{{ {-7, 730, -1188}, 0, {403, 927}, {179, 101, 0, 255} }},
-	{{ {-7, 730, -1144}, 0, {310, 927}, {179, 101, 0, 255} }},
-	{{ {-7, 730, -1144}, 0, {310, 927}, {214, 120, 0, 255} }},
-	{{ {-7, 730, -1188}, 0, {403, 927}, {214, 120, 0, 255} }},
-	{{ {-37, 720, -1166}, 0, {356, 1008}, {214, 120, 0, 255} }},
-	{{ {-48, 730, -1130}, 0, {124, 927}, {4, 84, 161, 255} }},
-	{{ {-56, 759, -1105}, 0, {77, 847}, {4, 84, 161, 255} }},
-	{{ {-18, 753, -1108}, 0, {170, 847}, {4, 84, 161, 255} }},
-	{{ {-48, 730, -1130}, 0, {124, 927}, {232, 101, 183, 255} }},
-	{{ {-18, 753, -1108}, 0, {170, 847}, {232, 101, 183, 255} }},
-	{{ {-7, 730, -1144}, 0, {217, 927}, {232, 101, 183, 255} }},
-	{{ {-7, 730, -1144}, 0, {217, 927}, {196, 84, 182, 255} }},
-	{{ {-18, 753, -1108}, 0, {170, 847}, {196, 84, 182, 255} }},
-	{{ {14, 759, -1128}, 0, {263, 847}, {196, 84, 182, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_mesh_layer_1_tri_5[] = {
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 0, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 15, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 30, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 45, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 60, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 75, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 90, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 105, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 120, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 135, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 150, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 165, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 180, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 195, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 210, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPVertex(castle_grounds_dl_Cube_mesh_layer_1_vtx_5 + 225, 15, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(6, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_001_mesh_layer_1_vtx_0[24] = {
-	{{ {-100, -100, 100}, 0, {368, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {624, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {0, 0, 129, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {0, 0, 129, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 0, 127, 255} }},
-	{{ {-100, 100, 100}, 0, {624, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, 100}, 0, {368, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, -100}, 0, {112, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 129, 0, 255} }},
-	{{ {-100, -100, 100}, 0, {112, 240}, {0, 129, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {880, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {880, 240}, {0, 127, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 127, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_001_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Cube_001_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_001_mesh_layer_1_vtx_0 + 16, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_002_mesh_layer_1_vtx_0[24] = {
-	{{ {-100, -100, 100}, 0, {368, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {624, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {0, 0, 129, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {0, 0, 129, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 0, 127, 255} }},
-	{{ {-100, 100, 100}, 0, {624, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, 100}, 0, {368, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, -100}, 0, {112, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 129, 0, 255} }},
-	{{ {-100, -100, 100}, 0, {112, 240}, {0, 129, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {880, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {880, 240}, {0, 127, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 127, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_002_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Cube_002_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_002_mesh_layer_1_vtx_0 + 16, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_003_mesh_layer_1_vtx_0[24] = {
-	{{ {-100, -100, 100}, 0, {368, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {624, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {0, 0, 129, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {0, 0, 129, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 0, 127, 255} }},
-	{{ {-100, 100, 100}, 0, {624, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, 100}, 0, {368, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, -100}, 0, {112, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 129, 0, 255} }},
-	{{ {-100, -100, 100}, 0, {112, 240}, {0, 129, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {880, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {880, 240}, {0, 127, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 127, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_003_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Cube_003_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_003_mesh_layer_1_vtx_0 + 16, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_004_mesh_layer_1_vtx_0[24] = {
-	{{ {-100, -100, 100}, 0, {368, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {624, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {0, 0, 129, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {0, 0, 129, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 0, 127, 255} }},
-	{{ {-100, 100, 100}, 0, {624, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, 100}, 0, {368, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, -100}, 0, {112, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 129, 0, 255} }},
-	{{ {-100, -100, 100}, 0, {112, 240}, {0, 129, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {880, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {880, 240}, {0, 127, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 127, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_004_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Cube_004_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_004_mesh_layer_1_vtx_0 + 16, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_005_mesh_layer_1_vtx_0[24] = {
-	{{ {-100, -100, 100}, 0, {368, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {624, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {0, 0, 129, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {0, 0, 129, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 0, 127, 255} }},
-	{{ {-100, 100, 100}, 0, {624, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, 100}, 0, {368, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, -100}, 0, {112, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 129, 0, 255} }},
-	{{ {-100, -100, 100}, 0, {112, 240}, {0, 129, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {880, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {880, 240}, {0, 127, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 127, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_005_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Cube_005_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_005_mesh_layer_1_vtx_0 + 16, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_006_mesh_layer_1_vtx_0[24] = {
-	{{ {-100, -100, 100}, 0, {368, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {624, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {0, 0, 129, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {0, 0, 129, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 0, 127, 255} }},
-	{{ {-100, 100, 100}, 0, {624, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, 100}, 0, {368, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, -100}, 0, {112, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 129, 0, 255} }},
-	{{ {-100, -100, 100}, 0, {112, 240}, {0, 129, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {880, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {880, 240}, {0, 127, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 127, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_006_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Cube_006_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_006_mesh_layer_1_vtx_0 + 16, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_007_mesh_layer_1_vtx_0[24] = {
-	{{ {-100, -100, 100}, 0, {368, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {624, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {0, 0, 129, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {0, 0, 129, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 0, 127, 255} }},
-	{{ {-100, 100, 100}, 0, {624, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, 100}, 0, {368, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, -100}, 0, {112, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 129, 0, 255} }},
-	{{ {-100, -100, 100}, 0, {112, 240}, {0, 129, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {880, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {880, 240}, {0, 127, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 127, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_007_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Cube_007_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_007_mesh_layer_1_vtx_0 + 16, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_008_mesh_layer_1_vtx_0[24] = {
-	{{ {-100, -100, 100}, 0, {368, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {624, 1008}, {129, 0, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {129, 0, 0, 255} }},
-	{{ {-100, -100, -100}, 0, {368, 752}, {0, 0, 129, 255} }},
-	{{ {-100, 100, -100}, 0, {624, 752}, {0, 0, 129, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 0, 129, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {127, 0, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {127, 0, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 0, 127, 255} }},
-	{{ {-100, 100, 100}, 0, {624, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, 100}, 0, {368, -16}, {0, 0, 127, 255} }},
-	{{ {-100, -100, -100}, 0, {112, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, -100}, 0, {368, 496}, {0, 129, 0, 255} }},
-	{{ {100, -100, 100}, 0, {368, 240}, {0, 129, 0, 255} }},
-	{{ {-100, -100, 100}, 0, {112, 240}, {0, 129, 0, 255} }},
-	{{ {100, 100, -100}, 0, {624, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, -100}, 0, {880, 496}, {0, 127, 0, 255} }},
-	{{ {-100, 100, 100}, 0, {880, 240}, {0, 127, 0, 255} }},
-	{{ {100, 100, 100}, 0, {624, 240}, {0, 127, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_008_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Cube_008_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_008_mesh_layer_1_vtx_0 + 16, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Cube_010_mesh_layer_1_vtx_0[24] = {
-	{{ {-29, -29, 29}, 0, {368, 1008}, {129, 0, 0, 255} }},
-	{{ {-29, 29, 29}, 0, {624, 1008}, {129, 0, 0, 255} }},
-	{{ {-29, 29, -29}, 0, {624, 752}, {129, 0, 0, 255} }},
-	{{ {-29, -29, -29}, 0, {368, 752}, {129, 0, 0, 255} }},
-	{{ {-29, -29, -29}, 0, {368, 752}, {0, 0, 129, 255} }},
-	{{ {-29, 29, -29}, 0, {624, 752}, {0, 0, 129, 255} }},
-	{{ {29, 29, -29}, 0, {624, 496}, {0, 0, 129, 255} }},
-	{{ {29, -29, -29}, 0, {368, 496}, {0, 0, 129, 255} }},
-	{{ {29, -29, -29}, 0, {368, 496}, {127, 0, 0, 255} }},
-	{{ {29, 29, -29}, 0, {624, 496}, {127, 0, 0, 255} }},
-	{{ {29, 29, 29}, 0, {624, 240}, {127, 0, 0, 255} }},
-	{{ {29, -29, 29}, 0, {368, 240}, {127, 0, 0, 255} }},
-	{{ {29, -29, 29}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {29, 29, 29}, 0, {624, 240}, {0, 0, 127, 255} }},
-	{{ {-29, 29, 29}, 0, {624, -16}, {0, 0, 127, 255} }},
-	{{ {-29, -29, 29}, 0, {368, -16}, {0, 0, 127, 255} }},
-	{{ {-29, -29, -29}, 0, {112, 496}, {0, 129, 0, 255} }},
-	{{ {29, -29, -29}, 0, {368, 496}, {0, 129, 0, 255} }},
-	{{ {29, -29, 29}, 0, {368, 240}, {0, 129, 0, 255} }},
-	{{ {-29, -29, 29}, 0, {112, 240}, {0, 129, 0, 255} }},
-	{{ {29, 29, -29}, 0, {624, 496}, {0, 127, 0, 255} }},
-	{{ {-29, 29, -29}, 0, {880, 496}, {0, 127, 0, 255} }},
-	{{ {-29, 29, 29}, 0, {880, 240}, {0, 127, 0, 255} }},
-	{{ {29, 29, 29}, 0, {624, 240}, {0, 127, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Cube_010_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Cube_010_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Cube_010_mesh_layer_1_vtx_0 + 16, 8, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Plane_mesh_layer_1_vtx_0[177] = {
-	{{ {5475, -1523, -4693}, 0, {3798, -2334}, {0, 127, 0, 255} }},
-	{{ {7039, -1523, -7039}, 0, {4741, -3749}, {0, 127, 0, 255} }},
-	{{ {5475, -1523, -7039}, 0, {3798, -3749}, {0, 127, 0, 255} }},
-	{{ {7039, -1523, -4693}, 0, {4741, -2334}, {0, 127, 0, 255} }},
-	{{ {5475, -1523, -2346}, 0, {3798, -919}, {0, 127, 0, 255} }},
-	{{ {3911, -1523, -2346}, 0, {2855, -919}, {0, 127, 0, 255} }},
-	{{ {3911, -1523, -4693}, 0, {2855, -2334}, {0, 127, 0, 255} }},
-	{{ {7039, -1523, -2346}, 0, {4741, -919}, {0, 127, 0, 255} }},
-	{{ {-7039, 0, -4693}, 0, {-3749, -2334}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, -7039}, 0, {-2806, -3749}, {0, 127, 0, 255} }},
-	{{ {-7039, 0, -7039}, 0, {-3749, -3749}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, -4693}, 0, {-2806, -2334}, {0, 127, 0, 255} }},
-	{{ {-7039, 0, -2346}, 0, {-3749, -919}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, -2346}, 0, {-2806, -919}, {0, 127, 0, 255} }},
-	{{ {-7039, 0, 0}, 0, {-3749, 496}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, 0}, 0, {-2806, 496}, {0, 127, 0, 255} }},
-	{{ {-7039, 0, 2346}, 0, {-3749, 1911}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, 0}, 0, {-2806, 496}, {0, 127, 0, 255} }},
-	{{ {-7039, 0, 0}, 0, {-3749, 496}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, 2346}, 0, {-2806, 1911}, {0, 127, 0, 255} }},
-	{{ {-7039, 0, 4693}, 0, {-3749, 3326}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, 4693}, 0, {-2806, 3326}, {0, 127, 0, 255} }},
-	{{ {-7039, 0, 7039}, 0, {-3749, 4741}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, 7039}, 0, {-2806, 4741}, {0, 127, 0, 255} }},
-	{{ {-3911, 0, 4693}, 0, {-1863, 3326}, {0, 127, 0, 255} }},
-	{{ {-3911, 0, 7039}, 0, {-1863, 4741}, {0, 127, 0, 255} }},
-	{{ {-3911, 0, 2346}, 0, {-1863, 1911}, {0, 127, 0, 255} }},
-	{{ {-3911, 0, 0}, 0, {-1863, 496}, {0, 127, 0, 255} }},
-	{{ {-3911, 0, -2346}, 0, {-1863, -919}, {0, 127, 0, 255} }},
-	{{ {-2346, 0, -2346}, 0, {-919, -919}, {0, 127, 0, 255} }},
-	{{ {-2346, 0, 0}, 0, {-919, 496}, {0, 127, 0, 255} }},
-	{{ {-782, 0, -2346}, 0, {24, -919}, {0, 127, 0, 255} }},
-	{{ {-2346, 0, 0}, 0, {-919, 496}, {0, 127, 0, 255} }},
-	{{ {-782, 0, 0}, 0, {24, 496}, {0, 127, 0, 255} }},
-	{{ {-782, 0, -2346}, 0, {24, -919}, {0, 127, 0, 255} }},
-	{{ {782, 0, -2346}, 0, {968, -919}, {0, 127, 0, 255} }},
-	{{ {782, 0, 0}, 0, {968, 496}, {0, 127, 0, 255} }},
-	{{ {2346, 0, -2346}, 0, {1911, -919}, {0, 127, 0, 255} }},
-	{{ {2346, 0, 0}, 0, {1911, 496}, {0, 127, 0, 255} }},
-	{{ {-2346, 0, -2346}, 0, {-919, -919}, {0, 127, 0, 255} }},
-	{{ {-782, 0, -4693}, 0, {24, -2334}, {0, 127, 0, 255} }},
-	{{ {-2346, 0, -4693}, 0, {-919, -2334}, {0, 127, 0, 255} }},
-	{{ {-782, 0, -7039}, 0, {24, -3749}, {0, 127, 0, 255} }},
-	{{ {-2346, 0, -7039}, 0, {-919, -3749}, {0, 127, 0, 255} }},
-	{{ {-3911, 0, -4693}, 0, {-1863, -2334}, {0, 127, 0, 255} }},
-	{{ {-3911, 0, -7039}, 0, {-1863, -3749}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, -4693}, 0, {-2806, -2334}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, -7039}, 0, {-2806, -3749}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, -2346}, 0, {-2806, -919}, {0, 127, 0, 255} }},
-	{{ {-3911, 0, -4693}, 0, {-1863, -2334}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, -4693}, 0, {-2806, -2334}, {0, 127, 0, 255} }},
-	{{ {-3911, 0, -2346}, 0, {-1863, -919}, {0, 127, 0, 255} }},
-	{{ {-5475, 0, 0}, 0, {-2806, 496}, {0, 127, 0, 255} }},
-	{{ {-2346, 0, -4693}, 0, {-919, -2334}, {0, 127, 0, 255} }},
-	{{ {-2346, 0, -2346}, 0, {-919, -919}, {0, 127, 0, 255} }},
-	{{ {-782, 0, -4693}, 0, {24, -2334}, {89, 91, 0, 255} }},
-	{{ {782, -1523, -4693}, 0, {968, -2334}, {89, 91, 0, 255} }},
-	{{ {782, -1523, -7039}, 0, {968, -3749}, {89, 91, 0, 255} }},
-	{{ {-782, 0, -7039}, 0, {24, -3749}, {89, 91, 0, 255} }},
-	{{ {782, -1523, -4693}, 0, {968, -2334}, {0, 127, 0, 255} }},
-	{{ {2346, -1523, -7039}, 0, {1911, -3749}, {0, 127, 0, 255} }},
-	{{ {782, -1523, -7039}, 0, {968, -3749}, {0, 127, 0, 255} }},
-	{{ {2346, -1523, -4693}, 0, {1911, -2334}, {0, 127, 0, 255} }},
-	{{ {3911, -1523, -7039}, 0, {2855, -3749}, {0, 127, 0, 255} }},
-	{{ {2346, -1523, -4693}, 0, {1911, -2334}, {0, 127, 0, 255} }},
-	{{ {3911, -1523, -4693}, 0, {2855, -2334}, {0, 127, 0, 255} }},
-	{{ {3911, -1523, -7039}, 0, {2855, -3749}, {0, 127, 0, 255} }},
-	{{ {4171, -1864, -5142}, 0, {3012, -2491}, {0, 127, 0, 255} }},
-	{{ {5215, -1864, -5142}, 0, {3641, -2491}, {0, 127, 0, 255} }},
-	{{ {5215, -1864, -6967}, 0, {3641, -3592}, {0, 127, 0, 255} }},
-	{{ {4171, -1864, -6967}, 0, {3012, -3592}, {0, 127, 0, 255} }},
-	{{ {3911, 0, 0}, 0, {2855, 496}, {0, 107, 187, 255} }},
-	{{ {5475, -1523, -2346}, 0, {3798, -919}, {0, 107, 187, 255} }},
-	{{ {3911, -1523, -2346}, 0, {2855, -919}, {0, 107, 187, 255} }},
-	{{ {5475, 0, 0}, 0, {3798, 496}, {0, 107, 187, 255} }},
-	{{ {7039, -1523, -2346}, 0, {4741, -919}, {0, 107, 187, 255} }},
-	{{ {7039, 0, 0}, 0, {4741, 496}, {0, 107, 187, 255} }},
-	{{ {2346, 587, 7039}, 0, {1911, 4741}, {44, 119, 0, 255} }},
-	{{ {3911, 0, 7039}, 0, {2855, 4741}, {44, 119, 0, 255} }},
-	{{ {3911, 0, 4693}, 0, {2855, 3326}, {44, 119, 0, 255} }},
-	{{ {2346, 587, 7039}, 0, {1911, 4741}, {44, 119, 0, 255} }},
-	{{ {3911, 0, 4693}, 0, {2855, 3326}, {44, 119, 0, 255} }},
-	{{ {2346, 587, 4693}, 0, {1911, 3326}, {44, 119, 0, 255} }},
-	{{ {2346, 587, 4693}, 0, {1911, 3326}, {23, 124, 241, 255} }},
-	{{ {3911, 0, 4693}, 0, {2855, 3326}, {23, 124, 241, 255} }},
-	{{ {3911, 0, 2346}, 0, {2855, 1911}, {23, 124, 241, 255} }},
-	{{ {2346, 0, 2346}, 0, {1911, 1911}, {23, 124, 241, 255} }},
-	{{ {782, 587, 4693}, 0, {968, 3326}, {23, 124, 241, 255} }},
-	{{ {782, 587, 2346}, 0, {968, 1911}, {23, 124, 241, 255} }},
-	{{ {2346, 0, 0}, 0, {1911, 496}, {23, 124, 241, 255} }},
-	{{ {782, 0, 0}, 0, {968, 496}, {23, 124, 241, 255} }},
-	{{ {2346, 0, 2346}, 0, {1911, 1911}, {0, 127, 0, 255} }},
-	{{ {3911, 0, 0}, 0, {2855, 496}, {0, 127, 0, 255} }},
-	{{ {2346, 0, 0}, 0, {1911, 496}, {0, 127, 0, 255} }},
-	{{ {3911, 0, 2346}, 0, {2855, 1911}, {0, 127, 0, 255} }},
-	{{ {5475, 0, 0}, 0, {3798, 496}, {0, 127, 0, 255} }},
-	{{ {3911, 0, 2346}, 0, {2855, 1911}, {0, 127, 0, 255} }},
-	{{ {5475, 0, 2346}, 0, {3798, 1911}, {0, 127, 0, 255} }},
-	{{ {5475, 0, 0}, 0, {3798, 496}, {0, 127, 0, 255} }},
-	{{ {3911, 0, 4693}, 0, {2855, 3326}, {0, 127, 0, 255} }},
-	{{ {5475, 0, 4693}, 0, {3798, 3326}, {0, 127, 0, 255} }},
-	{{ {3911, 0, 7039}, 0, {2855, 4741}, {0, 127, 0, 255} }},
-	{{ {5475, 0, 7039}, 0, {3798, 4741}, {0, 127, 0, 255} }},
-	{{ {7039, 0, 4693}, 0, {4741, 3326}, {0, 127, 0, 255} }},
-	{{ {7039, 0, 7039}, 0, {4741, 4741}, {0, 127, 0, 255} }},
-	{{ {7039, 0, 2346}, 0, {4741, 1911}, {0, 127, 0, 255} }},
-	{{ {7039, 0, 0}, 0, {4741, 496}, {0, 127, 0, 255} }},
-	{{ {2346, 0, 0}, 0, {1911, 496}, {53, 110, 221, 255} }},
-	{{ {3911, 0, 0}, 0, {2855, 496}, {53, 110, 221, 255} }},
-	{{ {3911, -1523, -2346}, 0, {2855, -919}, {53, 110, 221, 255} }},
-	{{ {2346, 0, -2346}, 0, {1911, -919}, {53, 110, 221, 255} }},
-	{{ {3911, -1523, -4693}, 0, {2855, -2334}, {53, 110, 221, 255} }},
-	{{ {2346, 0, -2346}, 0, {1911, -919}, {53, 110, 221, 255} }},
-	{{ {3911, -1523, -4693}, 0, {2855, -2334}, {53, 110, 221, 255} }},
-	{{ {2346, -1523, -4693}, 0, {1911, -2334}, {53, 110, 221, 255} }},
-	{{ {782, 0, -2346}, 0, {968, -919}, {0, 107, 187, 255} }},
-	{{ {2346, 0, -2346}, 0, {1911, -919}, {0, 107, 187, 255} }},
-	{{ {2346, -1523, -4693}, 0, {1911, -2334}, {0, 107, 187, 255} }},
-	{{ {782, -1523, -4693}, 0, {968, -2334}, {0, 107, 187, 255} }},
-	{{ {-782, 587, 2346}, 0, {24, 1911}, {0, 123, 225, 255} }},
-	{{ {782, 587, 2346}, 0, {968, 1911}, {0, 123, 225, 255} }},
-	{{ {782, 0, 0}, 0, {968, 496}, {0, 123, 225, 255} }},
-	{{ {-782, 0, 0}, 0, {24, 496}, {0, 123, 225, 255} }},
-	{{ {-2346, 587, 2346}, 0, {-919, 1911}, {0, 123, 225, 255} }},
-	{{ {-2346, 0, 0}, 0, {-919, 496}, {0, 123, 225, 255} }},
-	{{ {-782, 0, -2346}, 0, {24, -919}, {53, 110, 221, 255} }},
-	{{ {782, 0, -2346}, 0, {968, -919}, {53, 110, 221, 255} }},
-	{{ {782, -1523, -4693}, 0, {968, -2334}, {53, 110, 221, 255} }},
-	{{ {-782, 0, -2346}, 0, {24, -919}, {53, 110, 221, 255} }},
-	{{ {782, -1523, -4693}, 0, {968, -2334}, {53, 110, 221, 255} }},
-	{{ {-782, 0, -4693}, 0, {24, -2334}, {53, 110, 221, 255} }},
-	{{ {-2346, 587, 4693}, 0, {-919, 3326}, {0, 127, 0, 255} }},
-	{{ {-782, 587, 2346}, 0, {24, 1911}, {0, 127, 0, 255} }},
-	{{ {-2346, 587, 2346}, 0, {-919, 1911}, {0, 127, 0, 255} }},
-	{{ {-782, 587, 4693}, 0, {24, 3326}, {0, 127, 0, 255} }},
-	{{ {-2346, 587, 7039}, 0, {-919, 4741}, {0, 127, 0, 255} }},
-	{{ {-782, 587, 7039}, 0, {24, 4741}, {0, 127, 0, 255} }},
-	{{ {782, 587, 4693}, 0, {968, 3326}, {0, 127, 0, 255} }},
-	{{ {782, 587, 7039}, 0, {968, 4741}, {0, 127, 0, 255} }},
-	{{ {-782, 587, 13777}, 0, {24, 4741}, {0, 127, 0, 255} }},
-	{{ {782, 587, 13777}, 0, {968, 4741}, {0, 127, 0, 255} }},
-	{{ {2346, 587, 7039}, 0, {1911, 4741}, {0, 127, 0, 255} }},
-	{{ {2346, 587, 13777}, 0, {1911, 4741}, {0, 127, 0, 255} }},
-	{{ {2346, 587, 4693}, 0, {1911, 3326}, {0, 127, 0, 255} }},
-	{{ {-782, 587, 4693}, 0, {24, 3326}, {0, 127, 0, 255} }},
-	{{ {782, 587, 4693}, 0, {968, 3326}, {0, 127, 0, 255} }},
-	{{ {782, 587, 2346}, 0, {968, 1911}, {0, 127, 0, 255} }},
-	{{ {-782, 587, 2346}, 0, {24, 1911}, {0, 127, 0, 255} }},
-	{{ {-3911, 0, 7039}, 0, {-1863, 4741}, {212, 119, 0, 255} }},
-	{{ {-2346, 587, 7039}, 0, {-919, 4741}, {212, 119, 0, 255} }},
-	{{ {-2346, 587, 4693}, 0, {-919, 3326}, {212, 119, 0, 255} }},
-	{{ {-3911, 0, 4693}, 0, {-1863, 3326}, {212, 119, 0, 255} }},
-	{{ {-2346, 587, 2346}, 0, {-919, 1911}, {212, 119, 0, 255} }},
-	{{ {-3911, 0, 2346}, 0, {-1863, 1911}, {212, 119, 0, 255} }},
-	{{ {-3911, 0, 2346}, 0, {-1863, 1911}, {233, 124, 241, 255} }},
-	{{ {-2346, 587, 2346}, 0, {-919, 1911}, {233, 124, 241, 255} }},
-	{{ {-2346, 0, 0}, 0, {-919, 496}, {233, 124, 241, 255} }},
-	{{ {-3911, 0, 0}, 0, {-1863, 496}, {233, 124, 241, 255} }},
-	{{ {3911, -1523, -7039}, 0, {2855, -3749}, {0, 41, 120, 255} }},
-	{{ {4171, -1864, -6967}, 0, {3012, -3592}, {0, 41, 120, 255} }},
-	{{ {5215, -1864, -6967}, 0, {3641, -3592}, {0, 41, 120, 255} }},
-	{{ {4693, -1740, -7039}, 0, {3326, -3749}, {0, 41, 120, 255} }},
-	{{ {5475, -1523, -7039}, 0, {3798, -3749}, {0, 41, 120, 255} }},
-	{{ {4171, -1864, -5142}, 0, {3012, -2491}, {101, 77, 0, 255} }},
-	{{ {4171, -1864, -6967}, 0, {3012, -3592}, {101, 77, 0, 255} }},
-	{{ {3911, -1523, -7039}, 0, {2855, -3749}, {101, 77, 0, 255} }},
-	{{ {3911, -1523, -4693}, 0, {2855, -2334}, {101, 77, 0, 255} }},
-	{{ {5215, -1864, -6967}, 0, {3641, -3592}, {155, 77, 0, 255} }},
-	{{ {5215, -1864, -5142}, 0, {3641, -2491}, {155, 77, 0, 255} }},
-	{{ {5475, -1523, -4693}, 0, {3798, -2334}, {155, 77, 0, 255} }},
-	{{ {5475, -1523, -7039}, 0, {3798, -3749}, {155, 77, 0, 255} }},
-	{{ {5215, -1864, -5142}, 0, {3641, -2491}, {0, 101, 179, 255} }},
-	{{ {4171, -1864, -5142}, 0, {3012, -2491}, {0, 101, 179, 255} }},
-	{{ {3911, -1523, -4693}, 0, {2855, -2334}, {0, 101, 179, 255} }},
-	{{ {5215, -1864, -5142}, 0, {3641, -2491}, {0, 101, 179, 255} }},
-	{{ {3911, -1523, -4693}, 0, {2855, -2334}, {0, 101, 179, 255} }},
-	{{ {5475, -1523, -4693}, 0, {3798, -2334}, {0, 101, 179, 255} }},
-};
-
-Gfx castle_grounds_dl_Plane_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(5, 4, 0, 0),
-	gsSP1Triangle(5, 0, 6, 0),
-	gsSP1Triangle(4, 7, 3, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 11, 9, 0),
-	gsSP1Triangle(12, 11, 8, 0),
-	gsSP1Triangle(12, 13, 11, 0),
-	gsSP1Triangle(14, 13, 12, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(6, 5, 4, 0),
-	gsSP1Triangle(6, 7, 5, 0),
-	gsSP1Triangle(7, 8, 5, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(5, 8, 10, 0),
-	gsSP1Triangle(5, 10, 3, 0),
-	gsSP1Triangle(3, 10, 11, 0),
-	gsSP1Triangle(3, 11, 1, 0),
-	gsSP1Triangle(1, 11, 12, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(11, 14, 13, 0),
-	gsSP1Triangle(14, 15, 13, 0),
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 32, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(1, 3, 2, 0),
-	gsSP1Triangle(1, 4, 3, 0),
-	gsSP1Triangle(4, 5, 3, 0),
-	gsSP1Triangle(4, 6, 5, 0),
-	gsSP1Triangle(7, 2, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(9, 8, 10, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(12, 9, 11, 0),
-	gsSP1Triangle(12, 11, 13, 0),
-	gsSP1Triangle(14, 12, 13, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 48, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(4, 3, 0, 0),
-	gsSP1Triangle(3, 5, 1, 0),
-	gsSP1Triangle(3, 6, 5, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(11, 14, 12, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 64, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(3, 5, 6, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(7, 10, 8, 0),
-	gsSP1Triangle(10, 11, 8, 0),
-	gsSP1Triangle(10, 12, 11, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 80, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(3, 5, 6, 0),
-	gsSP1Triangle(7, 3, 6, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(8, 6, 9, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(11, 14, 12, 0),
-	gsSP1Triangle(14, 15, 12, 0),
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 96, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 1, 0, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(5, 4, 3, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(6, 7, 4, 0),
-	gsSP1Triangle(6, 8, 7, 0),
-	gsSP1Triangle(4, 7, 9, 0),
-	gsSP1Triangle(4, 9, 1, 0),
-	gsSP1Triangle(1, 9, 10, 0),
-	gsSP1Triangle(1, 10, 2, 0),
-	gsSP1Triangle(11, 12, 13, 0),
-	gsSP1Triangle(11, 13, 14, 0),
-	gsSP1Triangle(14, 13, 15, 0),
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 112, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(3, 5, 6, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(7, 9, 10, 0),
-	gsSP1Triangle(11, 7, 10, 0),
-	gsSP1Triangle(11, 10, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 128, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 4, 5, 0),
-	gsSP1Triangle(3, 6, 4, 0),
-	gsSP1Triangle(7, 6, 3, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(8, 9, 6, 0),
-	gsSP1Triangle(8, 10, 9, 0),
-	gsSP1Triangle(10, 8, 11, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(13, 10, 12, 0),
-	gsSP1Triangle(13, 12, 14, 0),
-	gsSP1Triangle(10, 13, 15, 0),
-	gsSP1Triangle(10, 15, 9, 0),
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 144, 14, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(7, 6, 8, 0),
-	gsSP1Triangle(7, 8, 9, 0),
-	gsSP1Triangle(10, 11, 12, 0),
-	gsSP1Triangle(10, 12, 13, 0),
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 158, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(2, 3, 0, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(5, 6, 7, 0),
-	gsSP1Triangle(5, 7, 8, 0),
-	gsSP1Triangle(9, 10, 11, 0),
-	gsSP1Triangle(9, 11, 12, 0),
-	gsSP1Triangle(13, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_0 + 174, 3, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Plane_mesh_layer_1_vtx_1[4] = {
-	{{ {1604, -555, -7162}, 0, {-16, 2032}, {127, 0, 0, 255} }},
-	{{ {1604, -555, -7877}, 0, {1008, 2032}, {127, 0, 0, 255} }},
-	{{ {1604, 160, -7877}, 0, {1008, -16}, {127, 0, 0, 255} }},
-	{{ {1604, 160, -7162}, 0, {-16, -16}, {127, 0, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Plane_mesh_layer_1_tri_1[] = {
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_1 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Plane_mesh_layer_1_vtx_2[10] = {
-	{{ {-3039, 175, -6632}, 0, {-16, 364}, {0, 0, 127, 255} }},
-	{{ {-3039, 120, -6632}, 0, {-16, 644}, {0, 0, 127, 255} }},
-	{{ {-2883, 120, -6632}, 0, {782, 644}, {0, 0, 127, 255} }},
-	{{ {-2892, 175, -6632}, 0, {737, 364}, {0, 0, 127, 255} }},
-	{{ {-2839, 186, -6632}, 0, {1008, 304}, {0, 0, 127, 255} }},
-	{{ {-2904, 49, -6632}, 0, {671, 1008}, {0, 0, 127, 255} }},
-	{{ {-2932, 49, -6632}, 0, {532, 1008}, {0, 0, 127, 255} }},
-	{{ {-2839, 118, -6632}, 0, {1008, 656}, {0, 0, 127, 255} }},
-	{{ {-2939, 249, -6632}, 0, {496, -16}, {0, 0, 127, 255} }},
-	{{ {-2969, 249, -6632}, 0, {339, -16}, {0, 0, 127, 255} }},
-};
-
-Gfx castle_grounds_dl_Plane_mesh_layer_1_tri_2[] = {
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_2 + 0, 10, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(3, 0, 2, 0),
-	gsSP1Triangle(2, 4, 3, 0),
-	gsSP1Triangle(2, 5, 4, 0),
-	gsSP1Triangle(2, 6, 5, 0),
-	gsSP1Triangle(5, 7, 4, 0),
-	gsSP1Triangle(4, 8, 9, 0),
-	gsSP1Triangle(4, 9, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Plane_mesh_layer_1_vtx_3[4] = {
-	{{ {-4967, 126, 6384}, 0, {-16, 2784}, {0, 127, 0, 255} }},
-	{{ {-4767, 126, 6384}, 0, {496, 2784}, {0, 127, 0, 255} }},
-	{{ {-4767, 126, 6184}, 0, {496, 1280}, {0, 127, 0, 255} }},
-	{{ {-4967, 126, 6184}, 0, {-16, 1280}, {0, 127, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Plane_mesh_layer_1_tri_3[] = {
-	gsSPVertex(castle_grounds_dl_Plane_mesh_layer_1_vtx_3 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Vtx castle_grounds_dl_Plane_003_mesh_layer_1_vtx_0[36] = {
-	{{ {1562, -14167, -5201}, 0, {368, 1008}, {127, 0, 0, 255} }},
-	{{ {1562, -14167, -11584}, 0, {368, 752}, {127, 0, 0, 255} }},
-	{{ {1562, -7783, -11584}, 0, {624, 752}, {127, 0, 0, 255} }},
-	{{ {1562, -7783, -5201}, 0, {624, 1008}, {127, 0, 0, 255} }},
-	{{ {1562, -14167, -11584}, 0, {368, 752}, {0, 0, 127, 255} }},
-	{{ {7946, -14167, -11584}, 0, {368, 496}, {0, 0, 127, 255} }},
-	{{ {7946, -7783, -11584}, 0, {624, 496}, {0, 0, 127, 255} }},
-	{{ {1562, -7783, -11584}, 0, {624, 752}, {0, 0, 127, 255} }},
-	{{ {7946, -14167, -11584}, 0, {368, 496}, {129, 0, 0, 255} }},
-	{{ {7946, -14167, -5201}, 0, {368, 240}, {129, 0, 0, 255} }},
-	{{ {7946, -7783, -5201}, 0, {624, 240}, {129, 0, 0, 255} }},
-	{{ {7946, -7783, -11584}, 0, {624, 496}, {129, 0, 0, 255} }},
-	{{ {7946, -14167, -5201}, 0, {368, 240}, {0, 0, 129, 255} }},
-	{{ {1562, -14167, -5201}, 0, {368, -16}, {0, 0, 129, 255} }},
-	{{ {1562, -7783, -5201}, 0, {624, -16}, {0, 0, 129, 255} }},
-	{{ {7946, -7783, -5201}, 0, {624, 240}, {0, 0, 129, 255} }},
-	{{ {1562, -14167, -11584}, 0, {112, 496}, {0, 127, 0, 255} }},
-	{{ {1562, -14167, -5201}, 0, {112, 240}, {0, 127, 0, 255} }},
-	{{ {7946, -14167, -5201}, 0, {368, 240}, {0, 127, 0, 255} }},
-	{{ {7946, -14167, -11584}, 0, {368, 496}, {0, 127, 0, 255} }},
-	{{ {7946, -7783, -11584}, 0, {624, 496}, {0, 129, 0, 255} }},
-	{{ {7946, -7783, -5201}, 0, {624, 240}, {0, 129, 0, 255} }},
-	{{ {1562, -7783, -5201}, 0, {880, 240}, {0, 129, 0, 255} }},
-	{{ {1562, -7783, -11584}, 0, {880, 496}, {0, 129, 0, 255} }},
-	{{ {-5438, -5683, -18585}, 0, {112, 496}, {0, 127, 0, 255} }},
-	{{ {-5438, -5683, 1800}, 0, {112, 240}, {0, 127, 0, 255} }},
-	{{ {14947, -5683, 1800}, 0, {368, 240}, {0, 127, 0, 255} }},
-	{{ {14947, -5683, -18585}, 0, {368, 496}, {0, 127, 0, 255} }},
-	{{ {14947, -5683, 1800}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {-5438, -5683, 1800}, 0, {112, 240}, {0, 0, 127, 255} }},
-	{{ {-5438, -12698, 1800}, 0, {112, 240}, {0, 0, 127, 255} }},
-	{{ {14947, -12698, 1800}, 0, {368, 240}, {0, 0, 127, 255} }},
-	{{ {-5438, -5683, 1800}, 0, {112, 240}, {129, 0, 0, 255} }},
-	{{ {-5438, -5683, -18585}, 0, {112, 496}, {129, 0, 0, 255} }},
-	{{ {-5438, -12698, -18585}, 0, {112, 496}, {129, 0, 0, 255} }},
-	{{ {-5438, -12698, 1800}, 0, {112, 240}, {129, 0, 0, 255} }},
-};
-
-Gfx castle_grounds_dl_Plane_003_mesh_layer_1_tri_0[] = {
-	gsSPVertex(castle_grounds_dl_Plane_003_mesh_layer_1_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Plane_003_mesh_layer_1_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSP1Triangle(4, 5, 6, 0),
-	gsSP1Triangle(4, 6, 7, 0),
-	gsSP1Triangle(8, 9, 10, 0),
-	gsSP1Triangle(8, 10, 11, 0),
-	gsSP1Triangle(12, 13, 14, 0),
-	gsSP1Triangle(12, 14, 15, 0),
-	gsSPVertex(castle_grounds_dl_Plane_003_mesh_layer_1_vtx_0 + 32, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_007[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPClearGeometryMode(G_CULL_BACK),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_007_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_castle_grounds_dl_f3dlite_material_007[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_CULL_BACK),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_006[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_006_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_008[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPClearGeometryMode(G_CULL_BACK),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_008_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_castle_grounds_dl_f3dlite_material_008[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_CULL_BACK),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_005[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_005_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, castle_grounds_dl_dor_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 252),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_009[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_009_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_010[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_010_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_001[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_001_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_014[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_014_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_004[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsDPSetTextureLUT(G_TT_RGBA16),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_004_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, castle_grounds_dl_RMGP01_ecdb432b_14_pal_rgba16),
-	gsDPSetTile(0, 0, 0, 256, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadTLUTCmd(5, 67),
-	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b_LOAD_BLOCK, 1, castle_grounds_dl_RMGP01_ecdb432b_14_ci8),
-	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 511, 512),
-	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 4, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_castle_grounds_dl_f3dlite_material_004[] = {
-	gsDPPipeSync(),
-	gsDPSetTextureLUT(G_TT_NONE),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, castle_grounds_dl_cok_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 252),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_002[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPClearGeometryMode(G_CULL_BACK),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_002_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_castle_grounds_dl_f3dlite_material_002[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_CULL_BACK),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_011[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT, TEXEL0, 0, SHADE, 0, 0, 0, 0, ENVIRONMENT),
-	gsDPSetTextureLUT(G_TT_RGBA16),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_011_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, castle_grounds_dl_doit_pal_rgba16),
-	gsDPSetTile(0, 0, 0, 256, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadTLUTCmd(5, 146),
-	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_8b_LOAD_BLOCK, 1, castle_grounds_dl_doit_ci8),
-	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 1023, 1024),
-	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_8b, 2, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 4, 0),
-	gsDPSetTileSize(0, 0, 0, 60, 508),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_castle_grounds_dl_f3dlite_material_011[] = {
-	gsDPPipeSync(),
-	gsDPSetTextureLUT(G_TT_NONE),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_castle_grounds_dl_f3dlite_material_013[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsSPSetLights1(castle_grounds_dl_f3dlite_material_013_lights),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Cube_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_007),
-	gsSPDisplayList(castle_grounds_dl_Cube_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_revert_castle_grounds_dl_f3dlite_material_007),
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_006),
-	gsSPDisplayList(castle_grounds_dl_Cube_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_008),
-	gsSPDisplayList(castle_grounds_dl_Cube_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_revert_castle_grounds_dl_f3dlite_material_008),
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_005),
-	gsSPDisplayList(castle_grounds_dl_Cube_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_009),
-	gsSPDisplayList(castle_grounds_dl_Cube_mesh_layer_1_tri_4),
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_010),
-	gsSPDisplayList(castle_grounds_dl_Cube_mesh_layer_1_tri_5),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Cube_001_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_001),
-	gsSPDisplayList(castle_grounds_dl_Cube_001_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Cube_002_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_014),
-	gsSPDisplayList(castle_grounds_dl_Cube_002_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Cube_003_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_014),
-	gsSPDisplayList(castle_grounds_dl_Cube_003_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Cube_004_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_014),
-	gsSPDisplayList(castle_grounds_dl_Cube_004_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Cube_005_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_014),
-	gsSPDisplayList(castle_grounds_dl_Cube_005_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Cube_006_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_014),
-	gsSPDisplayList(castle_grounds_dl_Cube_006_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Cube_007_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_014),
-	gsSPDisplayList(castle_grounds_dl_Cube_007_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Cube_008_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_014),
-	gsSPDisplayList(castle_grounds_dl_Cube_008_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Cube_010_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_014),
-	gsSPDisplayList(castle_grounds_dl_Cube_010_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Plane_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_004),
-	gsSPDisplayList(castle_grounds_dl_Plane_mesh_layer_1_tri_0),
-	gsSPDisplayList(mat_revert_castle_grounds_dl_f3dlite_material_004),
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material),
-	gsSPDisplayList(castle_grounds_dl_Plane_mesh_layer_1_tri_1),
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_002),
-	gsSPDisplayList(castle_grounds_dl_Plane_mesh_layer_1_tri_2),
-	gsSPDisplayList(mat_revert_castle_grounds_dl_f3dlite_material_002),
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_011),
-	gsSPDisplayList(castle_grounds_dl_Plane_mesh_layer_1_tri_3),
-	gsSPDisplayList(mat_revert_castle_grounds_dl_f3dlite_material_011),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_Plane_003_mesh_layer_1[] = {
-	gsSPDisplayList(mat_castle_grounds_dl_f3dlite_material_013),
-	gsSPDisplayList(castle_grounds_dl_Plane_003_mesh_layer_1_tri_0),
-	gsSPEndDisplayList(),
-};
-
-Gfx castle_grounds_dl_material_revert_render_settings[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_LIGHTING),
-	gsSPClearGeometryMode(G_TEXTURE_GEN),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 0),
-	gsDPSetEnvColor(255, 255, 255, 255),
-	gsDPSetAlphaCompare(G_AC_NONE),
-	gsSPEndDisplayList(),
-};
-
diff --git a/levels/castle_grounds/script.c b/levels/castle_grounds/script.c
index 15a4ec29..6e44620b 100644
--- a/levels/castle_grounds/script.c
+++ b/levels/castle_grounds/script.c
@@ -3,7 +3,6 @@
 #include "behavior_data.h"
 #include "model_ids.h"
 #include "seq_ids.h"
-#include "dialog_ids.h"
 #include "segment_symbols.h"
 #include "level_commands.h"
 
@@ -13,105 +12,128 @@
 
 #include "actors/common1.h"
 
-/* Fast64 begin persistent block [includes] */
-/* Fast64 end persistent block [includes] */
-
 #include "make_const_nonconst.h"
 #include "levels/castle_grounds/header.h"
 
-/* Fast64 begin persistent block [scripts] */
-/* Fast64 end persistent block [scripts] */
+static const LevelScript script_func_local_1[] = {
+    WARP_NODE(/*id*/ 0x00, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x01, /*destNode*/ 0x00, /*flags*/ WARP_NO_CHECKPOINT),
+    WARP_NODE(/*id*/ 0x01, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x01, /*destNode*/ 0x01, /*flags*/ WARP_NO_CHECKPOINT),
+    WARP_NODE(/*id*/ 0x02, /*destLevel*/ LEVEL_CASTLE, /*destArea*/ 0x03, /*destNode*/ 0x02, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/     0,   900, -1710, /*angle*/ 0, 180, 0, /*behParam*/ 0x00030000, /*beh*/ bhvDeathWarp),
+    WARP_NODE(/*id*/ 0x03, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x03, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -1328,   260,  4664, /*angle*/ 0, 180, 0, /*behParam*/ 0x00040000, /*beh*/ bhvSpinAirborneCircleWarp),
+    WARP_NODE(/*id*/ 0x04, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x04, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -815, -2025, /*angle*/ 0,   0, 0, /*behParam*/ 0x3C050000, /*beh*/ bhvWarp),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -500, -2025, /*angle*/ 0, 180, 0, /*behParam*/ 0x00060000, /*beh*/ bhvLaunchDeathWarp),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3799, -1199, -5816, /*angle*/ 0,   0, 0, /*behParam*/ 0x00070000, /*beh*/ bhvSwimmingWarp),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -3379,  -500, -2025, /*angle*/ 0, 180, 0, /*behParam*/ 0x00080000, /*beh*/ bhvLaunchStarCollectWarp),
+    WARP_NODE(/*id*/ 0x05, /*destLevel*/ LEVEL_VCUTM, /*destArea*/ 0x01, /*destNode*/ 0x0A, /*flags*/ WARP_NO_CHECKPOINT),
+    WARP_NODE(/*id*/ 0x06, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x06, /*flags*/ WARP_NO_CHECKPOINT),
+    WARP_NODE(/*id*/ 0x07, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x07, /*flags*/ WARP_NO_CHECKPOINT),
+    WARP_NODE(/*id*/ 0x08, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x08, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/  5408,  4500,  3637, /*angle*/ 0, 225, 0, /*behParam*/ 0x000A0000, /*beh*/ bhvAirborneWarp),
+    WARP_NODE(/*id*/ 0x0A, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x0A, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/ -6901,  2376, -6509, /*angle*/ 0, 230, 0, /*behParam*/ 0x00140000, /*beh*/ bhvAirborneWarp),
+    WARP_NODE(/*id*/ 0x14, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x14, /*flags*/ WARP_NO_CHECKPOINT),
+    OBJECT(/*model*/ MODEL_NONE, /*pos*/  4997, -1250,  2258, /*angle*/ 0, 210, 0, /*behParam*/ 0x001E0000, /*beh*/ bhvSwimmingWarp),
+    WARP_NODE(/*id*/ 0x1E, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x1E, /*flags*/ WARP_NO_CHECKPOINT),
+    RETURN(),
+};
 
-const LevelScript level_castle_grounds_entry[] = {
-	INIT_LEVEL(),
-	LOAD_YAY0(0x07, _castle_grounds_segment_7SegmentRomStart, _castle_grounds_segment_7SegmentRomEnd), 
-	LOAD_YAY0(0x0A, _water_skybox_yay0SegmentRomStart, _water_skybox_yay0SegmentRomEnd), 
-	LOAD_YAY0_TEXTURE(0x09, _outside_yay0SegmentRomStart, _outside_yay0SegmentRomEnd), 
-	LOAD_YAY0(0x05, _group10_yay0SegmentRomStart, _group10_yay0SegmentRomEnd), 
-	LOAD_RAW(0x0C, _group10_geoSegmentRomStart, _group10_geoSegmentRomEnd), 
-	LOAD_YAY0(0x06, _group15_yay0SegmentRomStart, _group15_yay0SegmentRomEnd), 
-	LOAD_RAW(0x0D, _group15_geoSegmentRomStart, _group15_geoSegmentRomEnd), 
-	LOAD_YAY0(0x08, _common0_yay0SegmentRomStart, _common0_yay0SegmentRomEnd), 
-	LOAD_RAW(0x0F, _common0_geoSegmentRomStart, _common0_geoSegmentRomEnd), 
-	ALLOC_LEVEL_POOL(),
-	MARIO(MODEL_MARIO, 0x00000001, bhvMario), 
-	JUMP_LINK(script_func_global_1), 
-	JUMP_LINK(script_func_global_11), 
-	JUMP_LINK(script_func_global_16), 
-	LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03, castle_grounds_geo_0006F4), 
-	LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_BUBBLY_TREE, bubbly_tree_geo), 
-	LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_WARP_PIPE, warp_pipe_geo), 
-	LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CASTLE_DOOR, castle_door_geo), 
-	LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_METAL_DOOR, metal_door_geo), 
-	LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_VCUTM_GRILL, castle_grounds_geo_00070C), 
-	LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_FLAG, castle_grounds_geo_000660), 
-	LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CANNON_GRILL, castle_grounds_geo_000724), 
-	LOAD_MODEL_FROM_GEO(MODEL_TROLL_WATER_LEVEL, troll_water_geo), 
-	LOAD_MODEL_FROM_GEO(MODEL_SPONGE_CIRCLE, sponge_circle_geo), 
+static const LevelScript script_func_local_2[] = {
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -5812,  100, -5937, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvWaterfallSoundLoop),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -7430, 1500,   873, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvBirdsSoundLoop),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/   -80, 1500,  5004, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBirdsSoundLoop),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/  7131, 1500, -2989, /*angle*/ 0,   0, 0, /*behParam*/ 0x00020000, /*beh*/ bhvBirdsSoundLoop),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -7430, 1500, -5937, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvAmbientSounds),
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_VCUTM_GRILL,  /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvMoatGrills),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvInvisibleObjectsUnderBridge),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -4878, -787, -5690, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -4996, -787, -5548, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5114, -787, -5406, /*angle*/ 0,   0, 0, /*behParam*/ 0x00020000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5212, -787, -5219, /*angle*/ 0,   0, 0, /*behParam*/ 0x00030000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5311, -787, -5033, /*angle*/ 0,   0, 0, /*behParam*/ 0x00040000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5419, -787, -4895, /*angle*/ 0,   0, 0, /*behParam*/ 0x00050000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5527, -787, -4757, /*angle*/ 0,   0, 0, /*behParam*/ 0x00060000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5686, -787, -4733, /*angle*/ 0,   0, 0, /*behParam*/ 0x00070000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_MIST,                        /*pos*/ -5845, -787, -4710, /*angle*/ 0,   0, 0, /*behParam*/ 0x00080000, /*beh*/ bhvWaterMist2),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/  5223, -975,  1667, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvManyBlueFishSpawner),
+    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/ -5069,  850,  3221, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
+    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/ -4711,  742,   433, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
+    OBJECT(/*model*/ MODEL_BIRDS,                       /*pos*/  5774,  913, -1114, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvBird),
+    OBJECT(/*model*/ MODEL_NONE,                        /*pos*/ -1328,  260,  4664, /*angle*/ 0, 180, 0, /*behParam*/ 0x00280000, /*beh*/ bhvIntroScene),
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_CANNON_GRILL, /*pos*/     0,    0,     0, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvHiddenAt120Stars),
+    OBJECT(/*model*/ MODEL_LAKITU,                      /*pos*/    11,  803, -3015, /*angle*/ 0,   0, 0, /*behParam*/ 0x00010000, /*beh*/ bhvCameraLakitu),
+    RETURN(),
+};
 
-	/* Fast64 begin persistent block [level commands] */
-	/* Fast64 end persistent block [level commands] */
+static const LevelScript script_func_local_3[] = {
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/ -3213, 3348, -3011, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/  3213, 3348, -3011, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/ -3835, 3348, -6647, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+    OBJECT(/*model*/ MODEL_CASTLE_GROUNDS_FLAG, /*pos*/  3835, 3348, -6647, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvCastleFlagWaving),
+    RETURN(),
+};
+
+static const LevelScript script_func_local_4[] = {
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4508,  406,  4400, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4408,  406,  4500, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -4708,  406,  4100, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -6003,  473, -2621, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -6003,  473, -2321, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  6543,  461,  -617, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  6143,  461,  -617, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5773,  775, -5722, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5873,  775, -5622, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/  5473,  775, -5322, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -1504,  326,  3196, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_BUTTERFLY, /*pos*/ -1204,  326,  3296, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvButterfly),
+    OBJECT(/*model*/ MODEL_YOSHI,     /*pos*/     0, 3174, -5625, /*angle*/ 0, 0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvYoshi),
+    RETURN(),
+};
+
+const LevelScript level_castle_grounds_entry[] = {
+    INIT_LEVEL(),
+    LOAD_YAY0(        /*seg*/ 0x07, _castle_grounds_segment_7SegmentRomStart, _castle_grounds_segment_7SegmentRomEnd),
+    LOAD_YAY0(        /*seg*/ 0x0A, _water_skybox_yay0SegmentRomStart, _water_skybox_yay0SegmentRomEnd),
+    LOAD_YAY0_TEXTURE(/*seg*/ 0x09, _outside_yay0SegmentRomStart, _outside_yay0SegmentRomEnd),
+    LOAD_YAY0(        /*seg*/ 0x05, _group10_yay0SegmentRomStart, _group10_yay0SegmentRomEnd),
+    LOAD_RAW(         /*seg*/ 0x0C, _group10_geoSegmentRomStart,  _group10_geoSegmentRomEnd),
+    LOAD_YAY0(        /*seg*/ 0x06, _group15_yay0SegmentRomStart, _group15_yay0SegmentRomEnd),
+    LOAD_RAW(         /*seg*/ 0x0D, _group15_geoSegmentRomStart,  _group15_geoSegmentRomEnd),
+    LOAD_YAY0(        /*seg*/ 0x08, _common0_yay0SegmentRomStart, _common0_yay0SegmentRomEnd),
+    LOAD_RAW(         /*seg*/ 0x0F, _common0_geoSegmentRomStart,  _common0_geoSegmentRomEnd),
+    ALLOC_LEVEL_POOL(),
+    MARIO(/*model*/ MODEL_MARIO, /*behParam*/ 0x00000001, /*beh*/ bhvMario),
+    JUMP_LINK(script_func_global_1),
+    JUMP_LINK(script_func_global_11),
+    JUMP_LINK(script_func_global_16),
+    LOAD_MODEL_FROM_GEO(MODEL_LEVEL_GEOMETRY_03,           castle_grounds_geo_0006F4),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_BUBBLY_TREE,  bubbly_tree_geo),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_WARP_PIPE,    warp_pipe_geo),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CASTLE_DOOR,  castle_door_geo),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_METAL_DOOR,   metal_door_geo),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_VCUTM_GRILL,  castle_grounds_geo_00070C),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_FLAG,         castle_grounds_geo_000660),
+    LOAD_MODEL_FROM_GEO(MODEL_CASTLE_GROUNDS_CANNON_GRILL, castle_grounds_geo_000724),
 
-	AREA(1, castle_grounds_area_1),
-		WARP_NODE(0x0A, LEVEL_BOB, 0x01, 0x0A, WARP_NO_CHECKPOINT),
-		WARP_NODE(0xF0, LEVEL_BOB, 0x01, 0x0A, WARP_NO_CHECKPOINT),
-		WARP_NODE(0xF1, LEVEL_BOB, 0x01, 0x0A, WARP_NO_CHECKPOINT),
-		OBJECT(MODEL_EXCLAMATION_BOX, -3697, 212, -1218, 0, 0, 0, (9 << 16), bhvExclamationBox),
-		OBJECT(MODEL_EXCLAMATION_BOX, -3810, 212, -1218, 0, 0, 0, (9 << 16), bhvExclamationBox),
-		OBJECT(MODEL_EXCLAMATION_BOX, -3810, 212, -1341, 0, 0, 0, (9 << 16), bhvExclamationBox),
-		OBJECT(MODEL_EXCLAMATION_BOX, -3574, 212, -1341, 0, 0, 0, (9 << 16), bhvExclamationBox),
-		OBJECT(MODEL_EXCLAMATION_BOX, -3574, 212, -1216, 0, 0, 0, (9 << 16), bhvExclamationBox),
-		OBJECT(MODEL_EXCLAMATION_BOX, -3697, 355, -1345, 0, 0, 0, (9 << 16), bhvExclamationBox),
-		OBJECT(MODEL_EXCLAMATION_BOX, -3697, 212, -1480, 0, 0, 0, (9 << 16), bhvExclamationBox),
-		OBJECT(MODEL_EXCLAMATION_BOX, -3810, 212, -1480, 0, 0, 0, (9 << 16), bhvExclamationBox),
-		OBJECT(MODEL_EXCLAMATION_BOX, -3574, 212, -1478, 0, 0, 0, (9 << 16), bhvExclamationBox),
-		OBJECT(MODEL_CAPPY, -6486, 212, 10452, 0, 180, 0, (15 << 16), bhvBreakableBoxSmall),
-		OBJECT(MODEL_NONE, 2307, -1311, -1565, 0, 0, 0, 0x00000000, bhvIntroScene),
-		OBJECT(MODEL_CHUCKYA, -5056, 212, -36, 0, 0, 0, 0x00000000, bhvChuckya),
-		OBJECT(MODEL_CHUCKYA, -1, 100, 5, 0, 0, 0, 0x00000000, bhvChuckya),
-		OBJECT(MODEL_CHUCKYA, -2309, 212, -795, 0, 0, 0, 0x00000000, bhvChuckya),
-		OBJECT(MODEL_GOOMBA, 4018, 212, 9891, 0, 0, 0, 0x00000000, bhvGoomba),
-		OBJECT(MODEL_GOOMBA, -5728, 212, 6680, 0, 0, 0, 0x00000000, bhvGoomba),
-		OBJECT(MODEL_GOOMBA, -7515, 212, 4928, 0, 0, 0, 0x00000000, bhvGoomba),
-		OBJECT(MODEL_NONE, -385, 1248, 17540, 0, 0, 0, 0x00000000, bhvEnemyLakitu),
-		OBJECT(MODEL_MARIOS_METAL_CAP, 5341, -1311, 1606, 0, 0, 0, 0x00000000, bhvMetalCap),
-		OBJECT(MODEL_RED_COIN, 4907, 286, 6329, 0, 0, 0, 0x00000000, bhvMoneybagHidden),
-		OBJECT(MODEL_RED_COIN, -3697, 214, -1345, 0, 0, 0, 0x00000000, bhvRedCoin),
-		OBJECT(MODEL_FLYGUY, -1612, 1003, 3869, 0, 0, 0, 0x00000000, bhvHiddenRedCoinStar),
-		OBJECT(MODEL_RED_COIN, -4443, 360, -1345, 0, 0, 0, 0x00000000, bhvRedCoin),
-		OBJECT(MODEL_RED_COIN, 3568, -1289, -4368, 0, 0, 0, 0x00000000, bhvRedCoin),
-		OBJECT(MODEL_RED_COIN, -1362, 799, 10289, 0, 0, 0, 0x00000000, bhvRedCoin),
-		OBJECT(MODEL_RED_COIN, 3359, 1197, 12206, 0, 0, 0, 0x00000000, bhvRedCoin),
-		OBJECT(MODEL_RED_COIN, -30, 799, 17616, 0, 0, 0, 0x00000000, bhvRedCoin),
-		OBJECT(MODEL_WOODEN_SIGNPOST, 5034, -1311, 1611, 0, -90, 0, (16 << 16), bhvMessagePanel),
-		OBJECT(MODEL_WOODEN_SIGNPOST, -6486, 212, 9984, 0, 180, 0, (15 << 16), bhvMessagePanel),
-		OBJECT(MODEL_WOODEN_SIGNPOST, 4810, 212, 9565, 0, -155, 0, (18 << 16), bhvMessagePanel),
-		OBJECT(MODEL_SPONGE_CIRCLE, 3468, -10763, -4312, 0, 0, 0, 0x00000000, bhvSpongeCircle),
-		OBJECT(MODEL_SPONGE_CIRCLE, 3468, -10763, -4312, 0, 0, 0, 0x00000000, bhvSpongeCircle),
-		OBJECT(MODEL_SPONGE_CIRCLE, 3468, -10763, -4312, 0, 0, 0, 0x00000000, bhvSpongeCircle),
-		OBJECT(MODEL_SPONGE_CIRCLE, 3468, -10763, -2057, 0, 0, 0, 0x00000000, bhvSpongeCircle),
-		OBJECT(MODEL_SPONGE_CIRCLE, 3468, -10763, -2057, 0, 0, 0, 0x00000000, bhvSpongeCircle),
-		OBJECT(MODEL_SPONGE_CIRCLE, 3468, -10763, -2057, 0, 0, 0, 0x00000000, bhvSpongeCircle),
-		OBJECT(MODEL_STAR, 3568, -1155, -6158, 0, 0, 0, 0x00000000, bhvStar),
-		OBJECT(MODEL_TROLL_WATER_LEVEL, 3503, -1289, -3281, 0, 0, 0, 0x00000000, bhvTrollWaterLevel),
-		OBJECT(MODEL_NONE, -1328, 212, 4664, 0, -180, 0, 0x000A0000, bhvSpinAirborneWarp),
-		MARIO_POS(0x01, -180, -1328, 212, 4664),
-		OBJECT(MODEL_NONE, -5055, -1499, 118, 0, 0, 0, 0x00000000, bhvWaterLevelDiamond),
-		OBJECT(MODEL_NONE, 2469, -1311, -1383, 0, 0, 0, 0x00000000, bhvInitializeChangingWaterLevel),
-		OBJECT(MODEL_NONE, 2133, -1311, -1424, 0, 0, 0, 0x00000000, bhvEndlessStairsMusicController),
-		TERRAIN(castle_grounds_area_1_collision),
-		MACRO_OBJECTS(castle_grounds_area_1_macro_objs),
-		STOP_MUSIC(0),
-		TERRAIN_TYPE(TERRAIN_GRASS),
-		/* Fast64 begin persistent block [area commands] */
-		/* Fast64 end persistent block [area commands] */
-	END_AREA(),
+    AREA(/*index*/ 1, castle_grounds_geo_00073C),
+        WARP_NODE(/*id*/ 0xF1, /*destLevel*/ LEVEL_CASTLE_GROUNDS, /*destArea*/ 0x01, /*destNode*/ 0x03, /*flags*/ WARP_NO_CHECKPOINT),
+        JUMP_LINK(script_func_local_1),
+        JUMP_LINK(script_func_local_2),
+        JUMP_LINK(script_func_local_3),
+        JUMP_LINK(script_func_local_4),
+        TERRAIN(/*terrainData*/ castle_grounds_seg7_collision_level),
+        MACRO_OBJECTS(/*objList*/ castle_grounds_seg7_macro_objs),
+        SET_BACKGROUND_MUSIC(/*settingsPreset*/ 0x0000, /*seq*/ SEQ_SOUND_PLAYER),
+        TERRAIN_TYPE(/*terrainType*/ TERRAIN_GRASS),
+    END_AREA(),
 
-	FREE_LEVEL_POOL(),
-	MARIO_POS(0x01, -180, -1328, 212, 4664),
-	CALL(0, lvl_init_or_update),
-	CALL_LOOP(1, lvl_init_or_update),
-	CLEAR_LEVEL(),
-	SLEEP_BEFORE_EXIT(1),
-	EXIT(),
+    FREE_LEVEL_POOL(),
+    MARIO_POS(/*area*/ 1, /*yaw*/ 180, /*pos*/ -1328, 260, 4664),
+    CALL(/*arg*/ 0, /*func*/ lvl_init_or_update),
+    CALL_LOOP(/*arg*/ 1, /*func*/ lvl_init_or_update),
+    CLEAR_LEVEL(),
+    SLEEP_BEFORE_EXIT(/*frames*/ 1),
+    EXIT(),
 };
diff --git a/levels/castle_grounds/sponge_circle/geo.inc.c b/levels/castle_grounds/sponge_circle/geo.inc.c
deleted file mode 100644
index a924299f..00000000
--- a/levels/castle_grounds/sponge_circle/geo.inc.c
+++ /dev/null
@@ -1,10 +0,0 @@
-#include "src/game/envfx_snow.h"
-
-const GeoLayout sponge_circle_geo[] = {
-	GEO_CULLING_RADIUS(0x7FFF),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_ALPHA, sponge_circle_Circle_mesh_layer_4),
-		GEO_DISPLAY_LIST(LAYER_ALPHA, sponge_circle_material_revert_render_settings),
-	GEO_CLOSE_NODE(),
-	GEO_END(),
-};
diff --git a/levels/castle_grounds/sponge_circle/geo_header.h b/levels/castle_grounds/sponge_circle/geo_header.h
deleted file mode 100644
index e517c362..00000000
--- a/levels/castle_grounds/sponge_circle/geo_header.h
+++ /dev/null
@@ -1,8 +0,0 @@
-extern const GeoLayout sponge_circle_geo[];
-extern u8 sponge_circle_hi__i_m_spongebob_rgba16[];
-extern Vtx sponge_circle_Circle_mesh_layer_4_vtx_0[38];
-extern Gfx sponge_circle_Circle_mesh_layer_4_tri_0[];
-extern Gfx mat_sponge_circle_f3dlite_material_012[];
-extern Gfx mat_revert_sponge_circle_f3dlite_material_012[];
-extern Gfx sponge_circle_Circle_mesh_layer_4[];
-extern Gfx sponge_circle_material_revert_render_settings[];
diff --git a/levels/castle_grounds/sponge_circle/model.inc.c b/levels/castle_grounds/sponge_circle/model.inc.c
deleted file mode 100644
index ea658ca5..00000000
--- a/levels/castle_grounds/sponge_circle/model.inc.c
+++ /dev/null
@@ -1,636 +0,0 @@
-Gfx sponge_circle_hi__i_m_spongebob_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 sponge_circle_hi__i_m_spongebob_rgba16[] = {
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x54, 
-	0x6b, 0x52, 0x5b, 0x12, 0x5b, 0x5a, 0x00, 0x00, 
-	0x6c, 0x1c, 0x63, 0xda, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0x9e, 0x5b, 0x16, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x6b, 0xa4, 0x63, 0x5a, 0x5b, 0x9c, 0x5b, 0x14, 
-	0x5a, 0xd0, 0x62, 0xd2, 0x84, 0x13, 0xbd, 0x97, 
-	0xde, 0x99, 0xce, 0x17, 0xa4, 0xd7, 0x8c, 0x15, 
-	0x9c, 0x95, 0x9c, 0xd5, 0x8c, 0x55, 0xad, 0x15, 
-	0xc5, 0xd7, 0xc5, 0xd7, 0x94, 0x55, 0x73, 0x5a, 
-	0x00, 0x00, 0x64, 0x1c, 0x5b, 0x98, 0x7b, 0xa0, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x9e, 
-	0x7b, 0x97, 0xad, 0x15, 0x9c, 0x95, 0xc5, 0xd7, 
-	0xd6, 0x59, 0xd6, 0x59, 0xe6, 0x99, 0xe6, 0x99, 
-	0xe6, 0x99, 0xde, 0x99, 0xde, 0x99, 0xde, 0x99, 
-	0xe6, 0x99, 0xe6, 0xd9, 0xe6, 0xd9, 0xe6, 0xd9, 
-	0xe6, 0xd9, 0xe6, 0xdb, 0xde, 0xdb, 0xad, 0x17, 
-	0x8c, 0x55, 0xa4, 0xd5, 0xce, 0x17, 0xc5, 0xd9, 
-	0x84, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b, 0xd6, 
-	0xd6, 0x59, 0xe6, 0x99, 0xde, 0x99, 0xbd, 0x97, 
-	0xde, 0x97, 0xde, 0x99, 0xe6, 0xd9, 0xe6, 0x99, 
-	0x4a, 0x0b, 0xcd, 0xd7, 0xd6, 0x57, 0xd6, 0x57, 
-	0xde, 0x99, 0xe6, 0xd9, 0xe6, 0xd9, 0xe6, 0xd9, 
-	0x9c, 0x93, 0xde, 0xd9, 0xe6, 0xdb, 0xe6, 0xdb, 
-	0xe6, 0xdb, 0xd6, 0x59, 0xde, 0x99, 0xe6, 0x99, 
-	0xbd, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0x97, 
-	0xde, 0x99, 0xde, 0x9b, 0xc5, 0xdd, 0xb5, 0x5d, 
-	0xc5, 0xd5, 0xb5, 0x55, 0xb5, 0x15, 0xde, 0x99, 
-	0x52, 0x0d, 0xce, 0x19, 0x94, 0x53, 0x83, 0xcf, 
-	0xde, 0x97, 0xa4, 0xd5, 0xa4, 0xd3, 0xde, 0xd9, 
-	0x5a, 0x4d, 0xde, 0x99, 0x83, 0xd1, 0xd6, 0x57, 
-	0xce, 0x1b, 0xbd, 0x9d, 0xc5, 0xd9, 0xde, 0x99, 
-	0xc6, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x17, 
-	0xde, 0x99, 0xd6, 0x5b, 0xb5, 0x5d, 0xad, 0x1b, 
-	0xd6, 0x57, 0x94, 0x53, 0x52, 0x0b, 0xbd, 0xa3, 
-	0xbd, 0xad, 0xad, 0x27, 0x4a, 0x4f, 0xc5, 0x95, 
-	0xde, 0x99, 0xac, 0xd5, 0x6b, 0x0f, 0xc5, 0x99, 
-	0x52, 0x0d, 0xcd, 0xd9, 0x39, 0x89, 0xde, 0x57, 
-	0xb5, 0x59, 0xad, 0x5b, 0xce, 0x17, 0xde, 0x9b, 
-	0x84, 0x5a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6b, 0x54, 
-	0xde, 0x99, 0xce, 0x19, 0xad, 0x1b, 0xb5, 0x57, 
-	0xde, 0x97, 0xde, 0x9b, 0x8c, 0x1f, 0xe7, 0x39, 
-	0xe7, 0x39, 0xe7, 0x39, 0xad, 0x6d, 0xc5, 0xd9, 
-	0xe6, 0xdb, 0xd6, 0x1b, 0x8b, 0xdf, 0xd6, 0xb5, 
-	0xe7, 0x39, 0xad, 0x6b, 0x94, 0x55, 0xde, 0x99, 
-	0xd6, 0x59, 0xd6, 0x17, 0xe6, 0x99, 0xc5, 0xdb, 
-	0x4b, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x5a, 
-	0xbd, 0x97, 0xde, 0x99, 0xce, 0x17, 0xde, 0x99, 
-	0xde, 0x97, 0xb5, 0x9b, 0xce, 0xb5, 0xc5, 0xf1, 
-	0x9d, 0x2f, 0xbe, 0x35, 0x8c, 0x69, 0xad, 0x1f, 
-	0xde, 0x99, 0xbd, 0xa1, 0xde, 0xf7, 0xe7, 0x39, 
-	0xde, 0xf7, 0xce, 0xf7, 0x9d, 0x6b, 0xde, 0x59, 
-	0xe6, 0xd9, 0xe6, 0xd9, 0xde, 0x99, 0xbd, 0x99, 
-	0x8c, 0xe7, 0x22, 0x56, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x56, 
-	0x9c, 0x97, 0xde, 0x99, 0xad, 0x17, 0xde, 0x99, 
-	0xde, 0x99, 0xb5, 0xa3, 0xce, 0xb7, 0x63, 0x67, 
-	0x5a, 0xe3, 0xa5, 0x6f, 0x4a, 0x21, 0x9c, 0xa5, 
-	0xac, 0xd7, 0x8c, 0x5f, 0x8c, 0xab, 0xc6, 0xb7, 
-	0xa5, 0x73, 0x84, 0x67, 0xad, 0xf3, 0xa4, 0xd7, 
-	0xde, 0xd9, 0xe6, 0xd9, 0xde, 0x99, 0xbd, 0x5d, 
-	0xce, 0xb7, 0x4a, 0xda, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa5, 0x6d, 
-	0xc5, 0xe7, 0xce, 0x19, 0xb5, 0x17, 0xde, 0x99, 
-	0xd5, 0x97, 0xb4, 0x1d, 0xb4, 0xa7, 0x42, 0x21, 
-	0x08, 0x45, 0x18, 0xc7, 0x6b, 0x29, 0x83, 0xe5, 
-	0xbd, 0x5d, 0xb5, 0x1b, 0x52, 0x9f, 0x73, 0x9f, 
-	0x6b, 0x67, 0x52, 0xa3, 0xa5, 0x71, 0x94, 0x9b, 
-	0xde, 0xd9, 0xe6, 0xd9, 0xde, 0x5b, 0xb5, 0xa3, 
-	0xde, 0xf7, 0x94, 0xa6, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x2a, 0x14, 0xbe, 0x31, 
-	0xc6, 0x2b, 0xde, 0x99, 0xde, 0xd9, 0xcd, 0x59, 
-	0xcc, 0xa5, 0xdc, 0xe5, 0xbb, 0x5d, 0x62, 0x1f, 
-	0x08, 0x45, 0x08, 0x45, 0x31, 0x5d, 0x73, 0x61, 
-	0xc5, 0x57, 0xa4, 0x55, 0x4a, 0x11, 0x08, 0x43, 
-	0x4a, 0x59, 0x42, 0x21, 0x9c, 0x27, 0xb3, 0xdf, 
-	0xc4, 0x97, 0xde, 0x99, 0xd6, 0x1d, 0xa5, 0xa9, 
-	0xce, 0xf7, 0x94, 0xe8, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x3a, 0x52, 0xd6, 0xb7, 
-	0xbe, 0x27, 0xde, 0xd9, 0xe6, 0x99, 0xbc, 0x1d, 
-	0xdd, 0xab, 0xcc, 0x1f, 0xbb, 0x1b, 0x9b, 0x63, 
-	0x31, 0x5f, 0x29, 0x9f, 0x42, 0xa1, 0x83, 0xe3, 
-	0xac, 0xd5, 0xa4, 0x97, 0x52, 0x5d, 0x08, 0x47, 
-	0x21, 0x17, 0x63, 0x25, 0xd5, 0x6d, 0xd4, 0xa5, 
-	0xc3, 0x9f, 0xc4, 0xd7, 0xc5, 0x9d, 0x73, 0x9d, 
-	0x63, 0x5d, 0x42, 0x98, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x63, 0x5c, 0xad, 0xad, 
-	0xb5, 0x5f, 0xde, 0x99, 0xd5, 0x99, 0xbb, 0x1b, 
-	0xbb, 0x5d, 0xcb, 0x5d, 0xcb, 0xa1, 0xb3, 0x61, 
-	0x4a, 0xa1, 0x42, 0x9d, 0x7c, 0x25, 0x9c, 0x5d, 
-	0xad, 0x15, 0x9c, 0x9b, 0x4a, 0x5d, 0x3a, 0x65, 
-	0x42, 0xe5, 0x9b, 0xa1, 0xcc, 0x63, 0xcc, 0x1f, 
-	0xcb, 0xe1, 0xcc, 0x1f, 0xbd, 0x5b, 0x7b, 0x97, 
-	0x31, 0xce, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x93, 
-	0x8c, 0x55, 0xde, 0x99, 0xc4, 0xd7, 0xdc, 0xe7, 
-	0xcb, 0xe1, 0xa2, 0x97, 0xc3, 0xe1, 0xbb, 0xe1, 
-	0x94, 0x65, 0x94, 0xa9, 0x84, 0x1b, 0xac, 0xd7, 
-	0xbd, 0x57, 0x7b, 0xd7, 0x8c, 0x67, 0x7b, 0xe5, 
-	0x9d, 0x2d, 0xc4, 0x61, 0xd4, 0xa5, 0xc3, 0x5d, 
-	0xcb, 0xa1, 0xbb, 0x5d, 0xb4, 0xdb, 0x73, 0x97, 
-	0x19, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x54, 
-	0x74, 0x19, 0xc5, 0xd7, 0xbc, 0x97, 0xdd, 0x27, 
-	0xcb, 0x9f, 0xa2, 0xd7, 0x6a, 0x51, 0xb4, 0x19, 
-	0xc5, 0x99, 0xcd, 0xd7, 0xde, 0x57, 0xcd, 0xd7, 
-	0xcd, 0x99, 0xad, 0x17, 0xad, 0x19, 0x94, 0x5f, 
-	0x94, 0xa1, 0xa4, 0x1b, 0x8b, 0x17, 0xcb, 0x9f, 
-	0xcb, 0x1b, 0xb3, 0x5b, 0xb5, 0x1b, 0x73, 0x97, 
-	0x19, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x12, 
-	0x73, 0xd9, 0x94, 0x95, 0xcd, 0x59, 0xd4, 0x61, 
-	0xc3, 0x17, 0xd4, 0x1b, 0xcd, 0x19, 0xa4, 0x93, 
-	0x8b, 0xd1, 0x83, 0x95, 0x9d, 0x25, 0xad, 0x1f, 
-	0xac, 0xd5, 0xa4, 0x95, 0x8c, 0x13, 0x8b, 0xd3, 
-	0xa4, 0x97, 0xe6, 0x9d, 0xbc, 0x99, 0xdc, 0x1f, 
-	0xc3, 0x17, 0xb3, 0xdb, 0xad, 0x17, 0x73, 0x97, 
-	0x22, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0xd2, 
-	0x73, 0xd9, 0xd6, 0x59, 0xd6, 0x19, 0xc3, 0xdb, 
-	0xcb, 0x9f, 0xd4, 0x5f, 0xd5, 0x59, 0xde, 0x59, 
-	0xd6, 0x19, 0xbd, 0x5b, 0xe7, 0x37, 0xc5, 0xef, 
-	0xad, 0x21, 0xce, 0x73, 0xa5, 0x27, 0xc5, 0x97, 
-	0xde, 0x99, 0xe6, 0x99, 0xe6, 0x1b, 0xd3, 0xdb, 
-	0xcb, 0x9b, 0xab, 0xd3, 0x9c, 0x97, 0x7b, 0xd7, 
-	0x08, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x50, 
-	0x7c, 0x19, 0xce, 0x19, 0xac, 0xd9, 0xdd, 0xd9, 
-	0xbc, 0x59, 0xcc, 0xd9, 0xde, 0x17, 0xde, 0x17, 
-	0xde, 0x1b, 0xcd, 0xab, 0xad, 0x29, 0x9c, 0x63, 
-	0xc5, 0x67, 0xce, 0x73, 0xad, 0x27, 0xdd, 0xdb, 
-	0xde, 0x99, 0xe6, 0x99, 0xe6, 0x1b, 0xd4, 0x99, 
-	0xb3, 0xd7, 0x94, 0x17, 0x94, 0x99, 0x84, 0x58, 
-	0x21, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x12, 
-	0x73, 0xd9, 0xc5, 0x99, 0xbd, 0x5b, 0xbd, 0x59, 
-	0x9c, 0x1b, 0x8b, 0xdf, 0x9c, 0x61, 0x9c, 0xa1, 
-	0x94, 0x21, 0xbc, 0x25, 0xe6, 0x33, 0xdc, 0xe9, 
-	0xcc, 0xeb, 0xbd, 0x2b, 0xbb, 0xe1, 0xcc, 0x99, 
-	0xd5, 0xd7, 0xde, 0x19, 0xd5, 0xd9, 0xb4, 0xd9, 
-	0xb5, 0x19, 0x9c, 0x57, 0x94, 0x57, 0x84, 0x18, 
-	0x42, 0x92, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x98, 
-	0x6b, 0x99, 0x7b, 0xdd, 0x9c, 0x65, 0xb5, 0x6d, 
-	0xcd, 0xf1, 0xce, 0x31, 0xe6, 0xf5, 0xde, 0xf5, 
-	0xce, 0x33, 0xc5, 0xaf, 0xbb, 0xe5, 0xab, 0xe7, 
-	0xac, 0x6b, 0xbb, 0xe7, 0xab, 0xe7, 0x8b, 0xe3, 
-	0x94, 0x1d, 0x9c, 0x59, 0x9c, 0x59, 0x8c, 0x1d, 
-	0xa4, 0x5d, 0xa4, 0x99, 0x83, 0xd9, 0x84, 0x14, 
-	0x7c, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0xd9, 0x94, 0x28, 0xcd, 0xab, 0xd5, 0xab, 
-	0xcd, 0x6b, 0xcd, 0x6b, 0xcd, 0x6b, 0xcd, 0x6d, 
-	0xd5, 0xad, 0xcd, 0xad, 0xcd, 0x6d, 0xcd, 0x29, 
-	0xc5, 0x29, 0xc4, 0xe9, 0xc4, 0xe9, 0xc4, 0xe9, 
-	0xbc, 0xe9, 0xc4, 0xe9, 0xc4, 0xe9, 0xbc, 0xa7, 
-	0xbc, 0xa7, 0xbc, 0xa7, 0x5a, 0x56, 0x8c, 0x16, 
-	0x84, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0x99, 0x84, 0x6c, 0xb5, 0x71, 0xc5, 0xf3, 
-	0xc5, 0xf3, 0xc5, 0xf5, 0xc6, 0x35, 0xbd, 0xb3, 
-	0xc6, 0x33, 0xce, 0x33, 0xd6, 0x75, 0xce, 0x33, 
-	0xc5, 0xf3, 0xbd, 0xb1, 0xbd, 0xb3, 0xc5, 0xf3, 
-	0xc5, 0xf3, 0xce, 0x35, 0xc5, 0xf3, 0xbd, 0x73, 
-	0xbd, 0x71, 0xbd, 0x73, 0x73, 0x6a, 0x83, 0xd6, 
-	0x84, 0x5a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0x99, 0x8c, 0x6b, 0xde, 0xf9, 0xde, 0xf9, 
-	0xe7, 0x39, 0xe7, 0x39, 0xe7, 0x39, 0xe7, 0x39, 
-	0xe7, 0x39, 0xe7, 0x39, 0xde, 0xf9, 0xe7, 0x39, 
-	0xef, 0x39, 0xd6, 0xb7, 0xde, 0xb7, 0xe7, 0x39, 
-	0xe7, 0x39, 0xef, 0x3b, 0xe7, 0x39, 0xe7, 0x39, 
-	0xef, 0x7b, 0xef, 0x7b, 0xb5, 0xf2, 0x83, 0xd2, 
-	0x94, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0xdb, 0x5a, 0xe5, 0x73, 0x67, 0x84, 0x29, 
-	0xa5, 0x2b, 0xa4, 0xeb, 0xad, 0x6f, 0xde, 0xb7, 
-	0xde, 0xb7, 0xde, 0xb7, 0xad, 0x2f, 0xa5, 0x2b, 
-	0xad, 0x6b, 0x9c, 0xeb, 0x83, 0xe7, 0x7b, 0xa7, 
-	0x94, 0x6b, 0x9c, 0xed, 0x94, 0xad, 0xa4, 0xef, 
-	0xad, 0x71, 0x8c, 0x2b, 0x5a, 0xa5, 0x83, 0xd4, 
-	0x8c, 0x16, 0x3a, 0x9c, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x73, 0xdb, 0x3a, 0x1b, 0x62, 0xeb, 0x62, 0xeb, 
-	0x63, 0x2d, 0x6b, 0x2d, 0x63, 0x2b, 0x62, 0xe7, 
-	0x62, 0xe7, 0x62, 0xe7, 0x6b, 0x2d, 0x63, 0x29, 
-	0x6b, 0x25, 0x5a, 0xa7, 0x52, 0xa9, 0x52, 0x67, 
-	0x4a, 0x63, 0x52, 0x65, 0x52, 0x67, 0x52, 0xa5, 
-	0x5a, 0xeb, 0x5a, 0xeb, 0x4a, 0x23, 0x8c, 0x12, 
-	0x83, 0xd5, 0xa4, 0xdb, 0x4a, 0xda, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x7b, 0xdb, 0x53, 0x1a, 0x21, 0x11, 0x20, 0xd5, 
-	0x28, 0xd9, 0x29, 0x1b, 0x31, 0x5b, 0x39, 0x9d, 
-	0x39, 0x9f, 0x29, 0x19, 0x39, 0x9b, 0x6b, 0x21, 
-	0x62, 0xdf, 0x4a, 0x5d, 0x20, 0xd5, 0x20, 0xd9, 
-	0x29, 0x1f, 0x31, 0x21, 0x29, 0x1f, 0x20, 0xd9, 
-	0x20, 0xd7, 0x29, 0x19, 0x31, 0x91, 0xac, 0xd5, 
-	0xbd, 0x97, 0x94, 0x99, 0x42, 0xd8, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5b, 0x64, 
-	0x7b, 0xd9, 0xad, 0x1b, 0x41, 0x9b, 0x4a, 0x27, 
-	0x4a, 0x29, 0x49, 0xe7, 0x41, 0xe7, 0x41, 0xe5, 
-	0x41, 0xa3, 0x4a, 0x27, 0x73, 0x65, 0x63, 0x21, 
-	0x62, 0x9f, 0x4a, 0x21, 0x41, 0xe1, 0x41, 0xe7, 
-	0x4a, 0x27, 0x49, 0xe7, 0x41, 0xe7, 0x41, 0xa5, 
-	0x39, 0x63, 0x39, 0xa5, 0x5a, 0x93, 0xa4, 0x95, 
-	0xcd, 0xd9, 0x4a, 0xd4, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x84, 0x18, 0xad, 0x1b, 
-	0xce, 0x19, 0x63, 0x57, 0x4a, 0x65, 0x5a, 0xed, 
-	0x63, 0x2d, 0x5a, 0xed, 0x52, 0xab, 0x52, 0x69, 
-	0x52, 0x29, 0x52, 0x67, 0x62, 0xa5, 0x7b, 0xe7, 
-	0x49, 0xdd, 0x73, 0x63, 0x39, 0xa1, 0x52, 0x69, 
-	0x4a, 0x29, 0x41, 0xe7, 0x39, 0x65, 0x31, 0x61, 
-	0x41, 0xa5, 0x49, 0xe7, 0x29, 0x57, 0xad, 0x17, 
-	0x9c, 0xd9, 0x94, 0xa2, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x5a, 0xd4, 0x7b, 0xd7, 
-	0x8c, 0x15, 0x94, 0x9b, 0x39, 0xdf, 0x52, 0xab, 
-	0x5a, 0xed, 0x5a, 0xed, 0x52, 0xab, 0x4a, 0x29, 
-	0x4a, 0x27, 0x52, 0x67, 0x52, 0x69, 0x6b, 0x25, 
-	0x62, 0xe5, 0x39, 0x5f, 0x52, 0x69, 0x52, 0x6b, 
-	0x52, 0x69, 0x4a, 0x29, 0x4a, 0x29, 0x52, 0xab, 
-	0x52, 0xab, 0x4a, 0x29, 0x31, 0x97, 0x8c, 0x59, 
-	0x84, 0x59, 0x8c, 0x5c, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x57, 
-	0x9c, 0x99, 0x8c, 0x5f, 0x39, 0xdb, 0x52, 0xab, 
-	0x4a, 0x29, 0x4a, 0x29, 0x41, 0xe7, 0x41, 0xe7, 
-	0x41, 0xe7, 0x4a, 0x27, 0x52, 0x69, 0x52, 0x63, 
-	0x73, 0xa9, 0x49, 0xe3, 0x52, 0x69, 0x52, 0x6b, 
-	0x52, 0xab, 0x52, 0xab, 0x52, 0xab, 0x52, 0xab, 
-	0x4a, 0x69, 0x4a, 0x29, 0x29, 0x56, 0x00, 0x00, 
-	0x5a, 0xd6, 0x4a, 0xd8, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x16, 
-	0x62, 0xd6, 0x73, 0xdb, 0x42, 0x21, 0x5a, 0xed, 
-	0x4a, 0x69, 0x4a, 0x29, 0x4a, 0x27, 0x41, 0xe7, 
-	0x41, 0xe7, 0x41, 0xe7, 0x4a, 0x29, 0x5a, 0x63, 
-	0x5a, 0xa3, 0x49, 0xe5, 0x52, 0x6b, 0x52, 0xab, 
-	0x52, 0xab, 0x52, 0xab, 0x52, 0xab, 0x52, 0xab, 
-	0x4a, 0x29, 0x41, 0xe7, 0x29, 0x54, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x22, 0xaa, 0x22, 0x9e, 0x4a, 0x65, 0x63, 0x2d, 
-	0x5a, 0xed, 0x52, 0x6b, 0x4a, 0x69, 0x49, 0xe7, 
-	0x4a, 0x27, 0x49, 0xe7, 0x4a, 0x27, 0x52, 0x69, 
-	0x5a, 0xa7, 0x4a, 0x27, 0x52, 0x6b, 0x52, 0x6b, 
-	0x52, 0x6b, 0x52, 0xab, 0x52, 0xab, 0x4a, 0x29, 
-	0x41, 0xe9, 0x41, 0xe7, 0x29, 0x56, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x39, 0xdf, 0x63, 0x2d, 
-	0x5b, 0x2d, 0x5a, 0xed, 0x5a, 0xad, 0x4a, 0x27, 
-	0x49, 0xe7, 0x49, 0xe7, 0x41, 0xe7, 0x4a, 0x27, 
-	0x52, 0x69, 0x52, 0x69, 0x52, 0x6b, 0x52, 0x6b, 
-	0x52, 0x6b, 0x52, 0xab, 0x4a, 0x29, 0x4a, 0x29, 
-	0x41, 0xe9, 0x4a, 0x29, 0x29, 0x56, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x42, 0x1f, 0x5b, 0x2d, 
-	0x5a, 0xed, 0x52, 0x6b, 0x4a, 0x69, 0x52, 0xab, 
-	0x52, 0x6b, 0x4a, 0x69, 0x4a, 0x27, 0x4a, 0x27, 
-	0x52, 0x69, 0x52, 0x69, 0x52, 0x6b, 0x52, 0x69, 
-	0x52, 0xab, 0x52, 0xab, 0x52, 0x6b, 0x4a, 0x29, 
-	0x4a, 0x69, 0x4a, 0x69, 0x21, 0x54, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x4a, 0x67, 0x5a, 0xed, 
-	0x5a, 0xed, 0x5a, 0xed, 0x5a, 0xeb, 0x5a, 0xeb, 
-	0x52, 0xab, 0x52, 0x6b, 0x52, 0x69, 0x4a, 0x29, 
-	0x52, 0x69, 0x52, 0x69, 0x52, 0x69, 0x4a, 0x69, 
-	0x52, 0xab, 0x52, 0xab, 0x52, 0xab, 0x52, 0xab, 
-	0x52, 0xab, 0x41, 0xe7, 0x29, 0x56, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x4a, 0xa9, 0x5a, 0xed, 
-	0x5a, 0xed, 0x5a, 0xed, 0x62, 0xed, 0x5b, 0x2d, 
-	0x5b, 0x2d, 0x5a, 0xab, 0x52, 0x69, 0x4a, 0x69, 
-	0x52, 0x69, 0x52, 0x69, 0x4a, 0x69, 0x52, 0xab, 
-	0x52, 0xab, 0x52, 0xab, 0x5a, 0xad, 0x52, 0xed, 
-	0x52, 0xab, 0x41, 0xe5, 0x21, 0x54, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x5e, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x52, 0xeb, 0x52, 0xeb, 
-	0x5a, 0xed, 0x5a, 0xed, 0x6b, 0x2d, 0x63, 0x2d, 
-	0x5b, 0x2d, 0x5a, 0xed, 0x52, 0x69, 0x52, 0x69, 
-	0x52, 0x69, 0x4a, 0x69, 0x52, 0x69, 0x5a, 0xeb, 
-	0x5a, 0xed, 0x52, 0xed, 0x5a, 0xed, 0x52, 0xed, 
-	0x52, 0xab, 0x41, 0xe7, 0x21, 0x14, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x52, 0xa9, 0x4a, 0x69, 
-	0x5a, 0xed, 0x5b, 0x2d, 0x63, 0x2d, 0x73, 0x6f, 
-	0x63, 0x2d, 0x63, 0x2d, 0x5a, 0xed, 0x52, 0xab, 
-	0x52, 0x69, 0x4a, 0x69, 0x5a, 0xeb, 0x5a, 0xed, 
-	0x5a, 0xed, 0x5a, 0xed, 0x52, 0xa9, 0x52, 0xab, 
-	0x52, 0xab, 0x4a, 0x27, 0x29, 0x58, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x52, 0xa9, 0x52, 0x69, 
-	0x5b, 0x2d, 0x63, 0x2d, 0x63, 0x2d, 0x73, 0x6f, 
-	0x63, 0x6f, 0x63, 0x2d, 0x62, 0xed, 0x62, 0xed, 
-	0x5a, 0xab, 0x52, 0xab, 0x5a, 0xab, 0x5a, 0xeb, 
-	0x5a, 0xab, 0x52, 0x65, 0x42, 0x23, 0x4a, 0x69, 
-	0x52, 0x6b, 0x4a, 0x69, 0x31, 0x5a, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x52, 0xa9, 0x5a, 0xed, 
-	0x52, 0xab, 0x52, 0xab, 0x5a, 0xa9, 0x6b, 0x2d, 
-	0x73, 0x6f, 0x63, 0x2d, 0x62, 0xeb, 0x5a, 0xeb, 
-	0x5a, 0xab, 0x5a, 0xab, 0x5a, 0xed, 0x5a, 0xeb, 
-	0x4a, 0x67, 0x31, 0x5b, 0x41, 0xe7, 0x42, 0x25, 
-	0x52, 0x6b, 0x4a, 0x69, 0x29, 0x5c, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x31, 0xdc, 0x4a, 0x25, 0x5a, 0xed, 
-	0x5a, 0xed, 0x5a, 0xab, 0x5a, 0xab, 0x52, 0x63, 
-	0x6b, 0x2d, 0x73, 0x6f, 0x63, 0x2d, 0x52, 0xab, 
-	0x52, 0xab, 0x5a, 0xeb, 0x62, 0xed, 0x4a, 0x27, 
-	0x29, 0x19, 0x31, 0x5f, 0x31, 0x1b, 0x42, 0x27, 
-	0x52, 0xab, 0x41, 0xe7, 0x21, 0x18, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x29, 0xda, 0x39, 0xa1, 0x52, 0x69, 
-	0x5a, 0xeb, 0x52, 0x69, 0x41, 0xe7, 0x41, 0xe1, 
-	0x41, 0xdd, 0x62, 0xe9, 0x73, 0x6d, 0x63, 0x2d, 
-	0x52, 0xa9, 0x52, 0xa9, 0x41, 0xe5, 0x20, 0xd7, 
-	0x20, 0xd5, 0x29, 0x1b, 0x29, 0x1d, 0x41, 0xe5, 
-	0x4a, 0x29, 0x31, 0x21, 0x18, 0xd0, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x3a, 0x60, 0x21, 0x14, 0x31, 0x59, 
-	0x39, 0x9d, 0x39, 0x9d, 0x31, 0x5b, 0x20, 0xd5, 
-	0x18, 0x8f, 0x18, 0xcd, 0x39, 0xdb, 0x39, 0xdd, 
-	0x39, 0x9f, 0x29, 0x19, 0x18, 0x91, 0x10, 0x4b, 
-	0x10, 0x4b, 0x10, 0x49, 0x18, 0x91, 0x31, 0x19, 
-	0x31, 0x5b, 0x18, 0x93, 0x19, 0x54, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x20, 
-	0x29, 0xdc, 0x39, 0x9f, 0x41, 0xe5, 0x39, 0xa1, 
-	0x20, 0xd5, 0x18, 0xd1, 0x10, 0xd0, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x10, 0xce, 0x20, 0xd3, 
-	0x20, 0x95, 0x20, 0xd9, 0x39, 0xa1, 0x39, 0x9d, 
-	0x19, 0x53, 0x21, 0x56, 0x32, 0xa4, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x29, 0xe0, 0x21, 0xdf, 0x29, 0xdd, 0x52, 0x11, 
-	0x10, 0x8a, 0x19, 0x12, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x10, 0xd0, 0x10, 0x8a, 
-	0x29, 0x0d, 0x39, 0x93, 0x18, 0xd0, 0x21, 0x58, 
-	0x2a, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x5a, 0xd9, 0xa4, 0x99, 
-	0x10, 0x8a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x7b, 0x54, 0x83, 0x97, 0x42, 0x5e, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x4a, 0x58, 0x7b, 0x55, 
-	0x62, 0xdb, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x0e, 
-	0x83, 0xdb, 0x73, 0x59, 0x2a, 0x22, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x7b, 0xe4, 0xb5, 0xf5, 
-	0x6b, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x8a, 
-	0xb5, 0xaf, 0x8c, 0xab, 0x32, 0xa6, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x10, 0x8a, 0xb5, 0x71, 
-	0x83, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xa4, 0xed, 0x8c, 0x6b, 0x2a, 0x66, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x10, 0x44, 0xb4, 0x25, 
-	0x8b, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xc3, 0xe3, 0x93, 0x1f, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x20, 0x84, 0xce, 0x75, 
-	0xad, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xe6, 0xf6, 0xbd, 0xf1, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x20, 0xd0, 0xbd, 0xf1, 
-	0x9d, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xde, 0xf6, 0x9d, 0x2f, 0x31, 0x66, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x10, 0x86, 0xa4, 0xe9, 
-	0x6b, 0xa1, 0x18, 0xc6, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xce, 0x71, 0xa5, 0x2d, 0x31, 0x64, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x42, 0x16, 0x83, 0xaa, 
-	0x31, 0x50, 0x00, 0x00, 0x52, 0x19, 0x5a, 0x9b, 
-	0x39, 0x93, 0x20, 0xcb, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x46, 
-	0xad, 0x6b, 0x84, 0x67, 0x29, 0x0e, 0x18, 0xc6, 
-	0x52, 0x17, 0x9c, 0x69, 0x6a, 0xa0, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0xe7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x52, 0x5b, 0xbd, 0xb3, 
-	0x39, 0x95, 0x18, 0x88, 0x49, 0x97, 0x49, 0xd9, 
-	0x29, 0x11, 0x18, 0x89, 0x08, 0x06, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x93, 
-	0x7b, 0xa1, 0x52, 0x57, 0x18, 0x89, 0x29, 0x4e, 
-	0x7b, 0x63, 0xa4, 0xad, 0x41, 0x94, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x08, 0x82, 0x49, 0xd7, 0x62, 0xa1, 
-	0x20, 0xcf, 0x28, 0xcf, 0x29, 0x11, 0x18, 0x8b, 
-	0x10, 0x89, 0x08, 0x43, 0x08, 0x82, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x51, 
-	0x72, 0xe3, 0x39, 0x51, 0x18, 0x87, 0x18, 0xc9, 
-	0x39, 0x53, 0x41, 0x55, 0x10, 0x47, 0x20, 0xcc, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x10, 0xc2, 0x29, 0x0f, 0x31, 0x13, 
-	0x28, 0xcf, 0x18, 0x8b, 0x10, 0x47, 0x08, 0x43, 
-	0x08, 0x47, 0x08, 0x43, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0xcf, 
-	0x29, 0x0f, 0x10, 0x87, 0x08, 0x45, 0x20, 0xcb, 
-	0x10, 0x49, 0x10, 0x47, 0x08, 0x43, 0x29, 0x46, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x10, 0x89, 0x18, 0x89, 
-	0x18, 0x89, 0x08, 0x45, 0x08, 0x43, 0x10, 0x47, 
-	0x29, 0x11, 0x18, 0x89, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x89, 
-	0x08, 0x45, 0x00, 0x03, 0x00, 0x01, 0x08, 0x45, 
-	0x08, 0x45, 0x08, 0x45, 0x08, 0x43, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x10, 0x88, 0x18, 0xcb, 
-	0x20, 0xcb, 0x08, 0x45, 0x18, 0xc4, 0x18, 0x87, 
-	0x20, 0xcb, 0x18, 0xc8, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x0b, 
-	0x31, 0x11, 0x20, 0xcb, 0x08, 0x43, 0x08, 0x43, 
-	0x10, 0x87, 0x10, 0x87, 0x08, 0x45, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x48, 
-	0x18, 0x8c, 0x18, 0xc4, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x06, 
-	0x10, 0xc4, 0x08, 0x82, 0x18, 0xc4, 0x10, 0x84, 
-	0x20, 0xd0, 0x18, 0x8a, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	
-};
-
-Vtx sponge_circle_Circle_mesh_layer_4_vtx_0[38] = {
-	{{ {1007, -160, -1007}, 0, {-11915, 2043}, {166, 0, 90, 255} }},
-	{{ {1316, 213, -545}, 0, {-10316, -27}, {138, 0, 48, 255} }},
-	{{ {1007, 213, -1007}, 0, {-11915, -27}, {166, 0, 90, 255} }},
-	{{ {1316, -160, -545}, 0, {-10316, 2043}, {138, 0, 48, 255} }},
-	{{ {1425, 213, 0}, 0, {-8718, -27}, {129, 0, 0, 255} }},
-	{{ {1425, -160, 0}, 0, {-8718, 2043}, {129, 0, 0, 255} }},
-	{{ {1316, 213, 545}, 0, {-7119, -27}, {138, 0, 208, 255} }},
-	{{ {1316, -160, 545}, 0, {-7119, 2043}, {138, 0, 208, 255} }},
-	{{ {1007, 213, 1007}, 0, {-5520, -27}, {166, 0, 166, 255} }},
-	{{ {1007, -160, 1007}, 0, {-5520, 2043}, {166, 0, 166, 255} }},
-	{{ {545, 213, 1316}, 0, {-3921, -27}, {208, 0, 138, 255} }},
-	{{ {545, -160, 1316}, 0, {-3921, 2043}, {208, 0, 138, 255} }},
-	{{ {0, 213, 1425}, 0, {-2322, -27}, {0, 0, 129, 255} }},
-	{{ {0, -160, 1425}, 0, {-2322, 2043}, {0, 0, 129, 255} }},
-	{{ {-545, 213, 1316}, 0, {-724, -27}, {48, 0, 138, 255} }},
-	{{ {-545, -160, 1316}, 0, {-724, 2043}, {48, 0, 138, 255} }},
-	{{ {-545, -160, 1316}, 0, {-724, 2043}, {48, 0, 138, 255} }},
-	{{ {-1007, 213, 1007}, 0, {875, -27}, {90, 0, 166, 255} }},
-	{{ {-545, 213, 1316}, 0, {-724, -27}, {48, 0, 138, 255} }},
-	{{ {-1007, -160, 1007}, 0, {875, 2043}, {90, 0, 166, 255} }},
-	{{ {-1316, 213, 545}, 0, {2474, -27}, {118, 0, 208, 255} }},
-	{{ {-1316, -160, 545}, 0, {2474, 2043}, {118, 0, 208, 255} }},
-	{{ {-1425, 213, 0}, 0, {4073, -27}, {127, 0, 0, 255} }},
-	{{ {-1425, -160, 0}, 0, {4073, 2043}, {127, 0, 0, 255} }},
-	{{ {-1316, 213, -545}, 0, {5672, -27}, {118, 0, 48, 255} }},
-	{{ {-1316, -160, -545}, 0, {5672, 2043}, {118, 0, 48, 255} }},
-	{{ {-1007, 213, -1007}, 0, {7270, -27}, {90, 0, 90, 255} }},
-	{{ {-1007, -160, -1007}, 0, {7270, 2043}, {90, 0, 90, 255} }},
-	{{ {-545, 213, -1316}, 0, {8869, -27}, {48, 0, 118, 255} }},
-	{{ {-545, -160, -1316}, 0, {8869, 2043}, {48, 0, 118, 255} }},
-	{{ {0, 213, -1425}, 0, {10468, -27}, {0, 0, 127, 255} }},
-	{{ {0, -160, -1425}, 0, {10468, 2043}, {0, 0, 127, 255} }},
-	{{ {0, -160, -1425}, 0, {10468, 2043}, {0, 0, 127, 255} }},
-	{{ {545, 213, -1316}, 0, {12067, -27}, {208, 0, 118, 255} }},
-	{{ {0, 213, -1425}, 0, {10468, -27}, {0, 0, 127, 255} }},
-	{{ {545, -160, -1316}, 0, {12067, 2043}, {208, 0, 118, 255} }},
-	{{ {1007, 213, -1007}, 0, {13665, -27}, {166, 0, 90, 255} }},
-	{{ {1007, -160, -1007}, 0, {13665, 2043}, {166, 0, 90, 255} }},
-};
-
-Gfx sponge_circle_Circle_mesh_layer_4_tri_0[] = {
-	gsSPVertex(sponge_circle_Circle_mesh_layer_4_vtx_0 + 0, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(sponge_circle_Circle_mesh_layer_4_vtx_0 + 16, 16, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSP1Triangle(5, 6, 4, 0),
-	gsSP1Triangle(5, 7, 6, 0),
-	gsSP1Triangle(7, 8, 6, 0),
-	gsSP1Triangle(7, 9, 8, 0),
-	gsSP1Triangle(9, 10, 8, 0),
-	gsSP1Triangle(9, 11, 10, 0),
-	gsSP1Triangle(11, 12, 10, 0),
-	gsSP1Triangle(11, 13, 12, 0),
-	gsSP1Triangle(13, 14, 12, 0),
-	gsSP1Triangle(13, 15, 14, 0),
-	gsSPVertex(sponge_circle_Circle_mesh_layer_4_vtx_0 + 32, 6, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 3, 1, 0),
-	gsSP1Triangle(3, 4, 1, 0),
-	gsSP1Triangle(3, 5, 4, 0),
-	gsSPEndDisplayList(),
-};
-
-
-Gfx mat_sponge_circle_f3dlite_material_012[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, PRIMITIVE, 0, TEXEL0, 0, ENVIRONMENT, 0, TEXEL0, 0, PRIMITIVE, 0, TEXEL0, 0, ENVIRONMENT, 0),
-	gsSPClearGeometryMode(G_CULL_BACK),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsDPSetPrimColor(0, 0, 255, 255, 255, 255),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 1, sponge_circle_hi__i_m_spongebob_rgba16),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b_LOAD_BLOCK, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 2047, 256),
-	gsDPSetTile(G_IM_FMT_RGBA, G_IM_SIZ_16b, 8, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 6, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 252),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_sponge_circle_f3dlite_material_012[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_CULL_BACK),
-	gsSPEndDisplayList(),
-};
-
-Gfx sponge_circle_Circle_mesh_layer_4[] = {
-	gsSPDisplayList(mat_sponge_circle_f3dlite_material_012),
-	gsSPDisplayList(sponge_circle_Circle_mesh_layer_4_tri_0),
-	gsSPDisplayList(mat_revert_sponge_circle_f3dlite_material_012),
-	gsSPEndDisplayList(),
-};
-
-Gfx sponge_circle_material_revert_render_settings[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_LIGHTING),
-	gsSPClearGeometryMode(G_TEXTURE_GEN),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 0),
-	gsDPSetEnvColor(255, 255, 255, 255),
-	gsDPSetAlphaCompare(G_AC_NONE),
-	gsSPEndDisplayList(),
-};
-
diff --git a/levels/castle_grounds/texscroll.inc.c b/levels/castle_grounds/texscroll.inc.c
deleted file mode 100644
index 2c4a5465..00000000
--- a/levels/castle_grounds/texscroll.inc.c
+++ /dev/null
@@ -1,24 +0,0 @@
-void scroll_castle_grounds_dl_Plane_mesh_layer_1_vtx_3() {
-	int i = 0;
-	int count = 4;
-	int height = 128 * 0x20;
-
-	static int currentY = 0;
-	int deltaY;
-	Vtx *vertices = segmented_to_virtual(castle_grounds_dl_Plane_mesh_layer_1_vtx_3);
-
-	deltaY = (int)(1.0 * 0x20) % height;
-
-	if (absi(currentY) > height) {
-		deltaY -= (int)(absi(currentY) / height) * height * signum_positive(deltaY);
-	}
-
-	for (i = 0; i < count; i++) {
-		vertices[i].n.tc[1] += deltaY;
-	}
-	currentY += deltaY;
-}
-
-void scroll_castle_grounds() {
-	scroll_castle_grounds_dl_Plane_mesh_layer_1_vtx_3();
-};
diff --git a/levels/castle_grounds/texscroll.inc.h b/levels/castle_grounds/texscroll.inc.h
deleted file mode 100644
index 6a9472f9..00000000
--- a/levels/castle_grounds/texscroll.inc.h
+++ /dev/null
@@ -1,2 +0,0 @@
-extern void scroll_castle_grounds_dl_Plane_mesh_layer_1_vtx_3();
-extern void scroll_castle_grounds();
diff --git a/levels/castle_grounds/troll_water/geo.inc.c b/levels/castle_grounds/troll_water/geo.inc.c
deleted file mode 100644
index f5b5484a..00000000
--- a/levels/castle_grounds/troll_water/geo.inc.c
+++ /dev/null
@@ -1,10 +0,0 @@
-#include "src/game/envfx_snow.h"
-
-const GeoLayout troll_water_geo[] = {
-	GEO_CULLING_RADIUS(0x7FFF),
-	GEO_OPEN_NODE(),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, troll_water_Plane_001_mesh_layer_5),
-		GEO_DISPLAY_LIST(LAYER_TRANSPARENT, troll_water_material_revert_render_settings),
-	GEO_CLOSE_NODE(),
-	GEO_END(),
-};
diff --git a/levels/castle_grounds/troll_water/geo_header.h b/levels/castle_grounds/troll_water/geo_header.h
deleted file mode 100644
index 73eb36c8..00000000
--- a/levels/castle_grounds/troll_water/geo_header.h
+++ /dev/null
@@ -1,10 +0,0 @@
-extern const GeoLayout troll_water_geo[];
-extern Lights1 troll_water_f3dlite_material_003_lights;
-extern u8 troll_water_RMGP01_34bcf116_14_ci4[];
-extern u8 troll_water_RMGP01_34bcf116_14_pal_rgba16[];
-extern Vtx troll_water_Plane_001_mesh_layer_5_vtx_0[4];
-extern Gfx troll_water_Plane_001_mesh_layer_5_tri_0[];
-extern Gfx mat_troll_water_f3dlite_material_003[];
-extern Gfx mat_revert_troll_water_f3dlite_material_003[];
-extern Gfx troll_water_Plane_001_mesh_layer_5[];
-extern Gfx troll_water_material_revert_render_settings[];
diff --git a/levels/castle_grounds/troll_water/model.inc.c b/levels/castle_grounds/troll_water/model.inc.c
deleted file mode 100644
index 426fb507..00000000
--- a/levels/castle_grounds/troll_water/model.inc.c
+++ /dev/null
@@ -1,139 +0,0 @@
-Lights1 troll_water_f3dlite_material_003_lights = gdSPDefLights1(
-	0x0, 0x5, 0x7F,
-	0x0, 0x14, 0xFF, 0x28, 0x28, 0x28);
-
-Gfx troll_water_RMGP01_34bcf116_14_ci4_aligner[] = {gsSPEndDisplayList()};
-u8 troll_water_RMGP01_34bcf116_14_ci4[] = {
-	0x01, 0x22, 0x23, 0x00, 0x44, 0x44, 0x30, 0x45, 
-	0x46, 0x22, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 
-	0x00, 0x32, 0x22, 0x30, 0x44, 0x44, 0x33, 0x04, 
-	0x44, 0x62, 0x73, 0x30, 0x00, 0x03, 0x30, 0x00, 
-	0x00, 0x01, 0x22, 0x23, 0x34, 0x44, 0x43, 0x30, 
-	0x64, 0x42, 0x78, 0x73, 0x30, 0x00, 0x30, 0x00, 
-	0x00, 0x00, 0x03, 0x22, 0x33, 0x44, 0x40, 0x00, 
-	0x36, 0x46, 0x37, 0x73, 0x33, 0x00, 0x03, 0x30, 
-	0x11, 0x10, 0x44, 0x62, 0x22, 0x23, 0x00, 0x03, 
-	0x33, 0x11, 0x13, 0x22, 0x33, 0x00, 0x00, 0x33, 
-	0x31, 0x11, 0x44, 0x46, 0x22, 0x22, 0x00, 0x09, 
-	0x33, 0x31, 0x11, 0x32, 0x33, 0x30, 0x00, 0x33, 
-	0x33, 0x33, 0x34, 0x44, 0xa3, 0x23, 0x00, 0x00, 
-	0x13, 0x22, 0x11, 0x13, 0x33, 0x33, 0x00, 0x03, 
-	0x13, 0x22, 0x26, 0x64, 0xaa, 0x33, 0x90, 0x00, 
-	0x11, 0x22, 0x31, 0x11, 0x32, 0x33, 0x30, 0x00, 
-	0x03, 0x32, 0x33, 0x00, 0x44, 0x43, 0x33, 0x44, 
-	0x44, 0x33, 0x23, 0x11, 0x33, 0x83, 0x30, 0x00, 
-	0x00, 0x03, 0x33, 0x30, 0x44, 0x44, 0x33, 0x34, 
-	0x44, 0x43, 0x33, 0x31, 0x13, 0x83, 0x30, 0x00, 
-	0x00, 0x00, 0x33, 0x33, 0x34, 0x44, 0x43, 0x34, 
-	0x44, 0x44, 0x13, 0x31, 0x14, 0x13, 0x33, 0x00, 
-	0x33, 0x00, 0x03, 0x33, 0x33, 0x44, 0x44, 0x33, 
-	0x44, 0x44, 0x13, 0x33, 0x14, 0x41, 0x33, 0x33, 
-	0x82, 0x11, 0x11, 0x88, 0x33, 0x33, 0x00, 0x32, 
-	0x23, 0x00, 0x00, 0x33, 0x30, 0x00, 0x01, 0x22, 
-	0x88, 0x81, 0x11, 0x38, 0x83, 0x33, 0x00, 0x03, 
-	0x22, 0x30, 0x00, 0x33, 0x23, 0x00, 0x00, 0x12, 
-	0x88, 0x82, 0x11, 0x13, 0x83, 0x33, 0x30, 0x00, 
-	0x32, 0x30, 0x00, 0x32, 0x23, 0x30, 0x00, 0x01, 
-	0x28, 0x88, 0x33, 0x11, 0x33, 0x33, 0x30, 0x00, 
-	0x03, 0x23, 0x00, 0x03, 0x22, 0x33, 0x10, 0x00, 
-	0x03, 0x88, 0x22, 0x31, 0x43, 0x22, 0x30, 0x00, 
-	0xaa, 0x33, 0x31, 0x11, 0x32, 0x22, 0x30, 0x00, 
-	0x00, 0x38, 0x22, 0x31, 0x44, 0x63, 0x33, 0x00, 
-	0xaa, 0x49, 0x31, 0x11, 0x13, 0x22, 0x33, 0x00, 
-	0x00, 0x03, 0x22, 0x23, 0x64, 0x44, 0x33, 0x30, 
-	0xaa, 0xa4, 0x33, 0x33, 0x11, 0x32, 0x33, 0x30, 
-	0x00, 0x00, 0x32, 0x22, 0x36, 0x44, 0x00, 0x30, 
-	0x4a, 0xaa, 0x13, 0x32, 0x31, 0x11, 0x33, 0x33, 
-	0x30, 0x00, 0x03, 0x32, 0x33, 0x33, 0x44, 0x43, 
-	0x04, 0x55, 0xa3, 0x32, 0x23, 0x11, 0x03, 0x33, 
-	0x33, 0x00, 0x00, 0x03, 0x83, 0x33, 0x44, 0x44, 
-	0x30, 0x44, 0xaa, 0x32, 0x23, 0x31, 0x00, 0x33, 
-	0x33, 0x30, 0x00, 0x00, 0x33, 0x33, 0x34, 0x44, 
-	0x03, 0x30, 0xaa, 0xa3, 0x22, 0x33, 0x00, 0x03, 
-	0x33, 0x33, 0x30, 0x00, 0x33, 0x33, 0x33, 0x44, 
-	0x40, 0x30, 0x4a, 0xaa, 0x33, 0x23, 0x00, 0x00, 
-	0x03, 0x33, 0x23, 0x11, 0x41, 0x33, 0x33, 0x00, 
-	0x00, 0x03, 0x30, 0x00, 0x03, 0x22, 0x39, 0x00, 
-	0x00, 0x33, 0x22, 0x31, 0x44, 0x41, 0x33, 0x33, 
-	0x00, 0x00, 0x23, 0x30, 0x00, 0x12, 0x33, 0x00, 
-	0x30, 0x00, 0x22, 0x23, 0x14, 0x44, 0x33, 0x33, 
-	0x30, 0x00, 0x02, 0x23, 0x10, 0x01, 0x33, 0x00, 
-	0x03, 0x00, 0x13, 0x33, 0x14, 0x44, 0x03, 0x33, 
-	0x33, 0x90, 0x03, 0x22, 0x31, 0x00, 0x03, 0x39, 
-	0x33, 0x00, 0x44, 0x63, 0x33, 0x04, 0xaa, 0x93, 
-	0x33, 0x33, 0x44, 0x43, 0x33, 0x10, 0x46, 0x32, 
-	0x33, 0x30, 0x44, 0x44, 0x33, 0x04, 0xaa, 0x49, 
-	0x33, 0x33, 0x44, 0x44, 0x32, 0x21, 0x44, 0x62, 
-	0x38, 0x83, 0x34, 0x44, 0x40, 0x30, 0xaa, 0xa4, 
-	0x33, 0x33, 0x44, 0x44, 0x13, 0x31, 0x64, 0x46, 
-	0x33, 0x88, 0x23, 0x44, 0x54, 0x00, 0x4a, 0xaa, 
-	0x33, 0x33, 0x33, 0x44, 0x01, 0x31, 0x46, 0x66, 
-	
-};
-
-Gfx troll_water_RMGP01_34bcf116_14_pal_rgba16_aligner[] = {gsSPEndDisplayList()};
-u8 troll_water_RMGP01_34bcf116_14_pal_rgba16[] = {
-	0xcd, 0xe5, 0xcd, 0xe3, 0xcd, 0xa1, 0xcd, 0xa3, 
-	0xd5, 0xe5, 0xd6, 0x27, 0xd5, 0xe3, 0xc5, 0xa3, 
-	0xc5, 0xa1, 0xcd, 0xa5, 0xd5, 0xe7, 
-};
-
-Vtx troll_water_Plane_001_mesh_layer_5_vtx_0[4] = {
-	{{ {-648, 0, 2738}, 0, {-16, 1008}, {0, 127, 0, 255} }},
-	{{ {648, 0, 2738}, 0, {1008, 1008}, {0, 127, 0, 255} }},
-	{{ {648, 0, -2738}, 0, {1008, -16}, {0, 127, 0, 255} }},
-	{{ {-648, 0, -2738}, 0, {-16, -16}, {0, 127, 0, 255} }},
-};
-
-Gfx troll_water_Plane_001_mesh_layer_5_tri_0[] = {
-	gsSPVertex(troll_water_Plane_001_mesh_layer_5_vtx_0 + 0, 4, 0),
-	gsSP1Triangle(0, 1, 2, 0),
-	gsSP1Triangle(0, 2, 3, 0),
-	gsSPEndDisplayList(),
-};
-
-
-Gfx mat_troll_water_f3dlite_material_003[] = {
-	gsDPPipeSync(),
-	gsDPSetCombineLERP(TEXEL0, 0, SHADE, 0, TEXEL0, 0, PRIMITIVE, 0, TEXEL0, 0, SHADE, 0, TEXEL0, 0, PRIMITIVE, 0),
-	gsSPClearGeometryMode(G_CULL_BACK),
-	gsDPSetTextureLUT(G_TT_RGBA16),
-	gsSPTexture(65535, 65535, 0, 0, 1),
-	gsDPSetPrimColor(0, 0, 2, 17, 255, 56),
-	gsSPSetLights1(troll_water_f3dlite_material_003_lights),
-	gsDPSetTextureImage(G_IM_FMT_RGBA, G_IM_SIZ_16b, 1, troll_water_RMGP01_34bcf116_14_pal_rgba16),
-	gsDPSetTile(0, 0, 0, 256, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadTLUTCmd(5, 10),
-	gsDPSetTextureImage(G_IM_FMT_CI, G_IM_SIZ_16b, 1, troll_water_RMGP01_34bcf116_14_ci4),
-	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_16b, 0, 0, 7, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 0, 0),
-	gsDPLoadBlock(7, 0, 0, 255, 1024),
-	gsDPSetTile(G_IM_FMT_CI, G_IM_SIZ_4b, 2, 0, 0, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0, G_TX_WRAP | G_TX_NOMIRROR, 5, 0),
-	gsDPSetTileSize(0, 0, 0, 124, 124),
-	gsSPEndDisplayList(),
-};
-
-Gfx mat_revert_troll_water_f3dlite_material_003[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_CULL_BACK),
-	gsDPSetTextureLUT(G_TT_NONE),
-	gsSPEndDisplayList(),
-};
-
-Gfx troll_water_Plane_001_mesh_layer_5[] = {
-	gsSPDisplayList(mat_troll_water_f3dlite_material_003),
-	gsSPDisplayList(troll_water_Plane_001_mesh_layer_5_tri_0),
-	gsSPDisplayList(mat_revert_troll_water_f3dlite_material_003),
-	gsSPEndDisplayList(),
-};
-
-Gfx troll_water_material_revert_render_settings[] = {
-	gsDPPipeSync(),
-	gsSPSetGeometryMode(G_LIGHTING),
-	gsSPClearGeometryMode(G_TEXTURE_GEN),
-	gsDPSetCombineLERP(0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT, 0, 0, 0, SHADE, 0, 0, 0, ENVIRONMENT),
-	gsSPTexture(65535, 65535, 0, 0, 0),
-	gsDPSetEnvColor(255, 255, 255, 255),
-	gsDPSetAlphaCompare(G_AC_NONE),
-	gsSPEndDisplayList(),
-};
-
diff --git a/levels/castle_grounds/troll_water/texscroll.inc.c b/levels/castle_grounds/troll_water/texscroll.inc.c
deleted file mode 100644
index b2a5cd27..00000000
--- a/levels/castle_grounds/troll_water/texscroll.inc.c
+++ /dev/null
@@ -1,32 +0,0 @@
-void scroll_troll_water_Plane_001_mesh_layer_5_vtx_0() {
-	int i = 0;
-	int count = 4;
-	int width = 32 * 0x20;
-	int height = 32 * 0x20;
-
-	static int currentX = 0;
-	int deltaX;
-	static int currentY = 0;
-	int deltaY;
-	Vtx *vertices = segmented_to_virtual(troll_water_Plane_001_mesh_layer_5_vtx_0);
-
-	deltaX = (int)(1.0 * 0x20) % width;
-	deltaY = (int)(1.0 * 0x20) % height;
-
-	if (absi(currentX) > width) {
-		deltaX -= (int)(absi(currentX) / width) * width * signum_positive(deltaX);
-	}
-	if (absi(currentY) > height) {
-		deltaY -= (int)(absi(currentY) / height) * height * signum_positive(deltaY);
-	}
-
-	for (i = 0; i < count; i++) {
-		vertices[i].n.tc[0] += deltaX;
-		vertices[i].n.tc[1] += deltaY;
-	}
-	currentX += deltaX;	currentY += deltaY;
-}
-
-void scroll_castle_grounds_level_geo_troll_water() {
-	scroll_troll_water_Plane_001_mesh_layer_5_vtx_0();
-};
diff --git a/levels/castle_grounds/troll_water/texscroll.inc.h b/levels/castle_grounds/troll_water/texscroll.inc.h
deleted file mode 100644
index 08bae122..00000000
--- a/levels/castle_grounds/troll_water/texscroll.inc.h
+++ /dev/null
@@ -1,2 +0,0 @@
-extern void scroll_troll_water_Plane_001_mesh_layer_5_vtx_0();
-extern void scroll_castle_grounds_level_geo_troll_water();
diff --git a/levels/course_defines.h b/levels/course_defines.h
index 5f64f56b..600cead4 100644
--- a/levels/course_defines.h
+++ b/levels/course_defines.h
@@ -10,30 +10,30 @@
  *      3: Bowser keys and the grand star
  *      4: Default, used for 100 coin stars, 8 red coin stars in bowser levels, and secret stars
  */
-DEFINE_COURSE(COURSE_NONE, 0x44444440) // (0)  Course Hub (Castle Grounds)
-DEFINE_COURSE(COURSE_BOB, 0x00022240) // (1)  Bob Omb Battlefield
-DEFINE_COURSE(COURSE_WF, 0x00002040) // (2)  Whomp's Fortress
-DEFINE_COURSE(COURSE_JRB, 0x22222240) // (3)  Jolly Rodger's Bay
-DEFINE_COURSE(COURSE_CCM, 0x00220040) // (4)  Cool Cool Mountain
-DEFINE_COURSE(COURSE_BBH, 0x22222240) // (5)  Big Boo's Haunt
-DEFINE_COURSE(COURSE_HMC, 0x22222240) // (6)  Hazy Maze Cave
-DEFINE_COURSE(COURSE_LLL, 0x21212140) // (7)  Lethal Lava Land
-DEFINE_COURSE(COURSE_SSL, 0x20222240) // (8)  Shifting Sand Land
-DEFINE_COURSE(COURSE_DDD, 0x22222240) // (9)  Dire Dire Docks
-DEFINE_COURSE(COURSE_SL, 0x02020240) // (10) Snowman's Land
-DEFINE_COURSE(COURSE_WDW, 0x22102240) // (11) Wet Dry World
-DEFINE_COURSE(COURSE_TTM, 0x00000040) // (12) Tall Tall Mountain
-DEFINE_COURSE(COURSE_THI, 0x11112140) // (13) Tiny Huge Island
-DEFINE_COURSE(COURSE_TTC, 0x22222240) // (14) Tick Tock Clock
-DEFINE_COURSE(COURSE_RR, 0x00000040) // (15) Rainbow Ride
+DEFINE_COURSE(COURSE_NONE, 0x44444440)            // (0)  Course Hub (Castle Grounds)
+DEFINE_COURSE(COURSE_BOB,  0x00022240)            // (1)  Bob Omb Battlefield
+DEFINE_COURSE(COURSE_WF,   0x00002040)            // (2)  Whomp's Fortress
+DEFINE_COURSE(COURSE_JRB,  0x22222240)            // (3)  Jolly Rodger's Bay
+DEFINE_COURSE(COURSE_CCM,  0x00220040)            // (4)  Cool Cool Mountain
+DEFINE_COURSE(COURSE_BBH,  0x22222240)            // (5)  Big Boo's Haunt
+DEFINE_COURSE(COURSE_HMC,  0x22222240)            // (6)  Hazy Maze Cave
+DEFINE_COURSE(COURSE_LLL,  0x21212140)            // (7)  Lethal Lava Land
+DEFINE_COURSE(COURSE_SSL,  0x20222240)            // (8)  Shifting Sand Land
+DEFINE_COURSE(COURSE_DDD,  0x22222240)            // (9)  Dire Dire Docks
+DEFINE_COURSE(COURSE_SL,   0x02020240)            // (10) Snowman's Land
+DEFINE_COURSE(COURSE_WDW,  0x22102240)            // (11) Wet Dry World
+DEFINE_COURSE(COURSE_TTM,  0x00000040)            // (12) Tall Tall Mountain
+DEFINE_COURSE(COURSE_THI,  0x11112140)            // (13) Tiny Huge Island
+DEFINE_COURSE(COURSE_TTC,  0x22222240)            // (14) Tick Tock Clock
+DEFINE_COURSE(COURSE_RR,   0x00000040)            // (15) Rainbow Ride
 DEFINE_COURSES_END()
-DEFINE_BONUS_COURSE(COURSE_BITDW, 0x34444440) // (16) Bowser in the Dark World
-DEFINE_BONUS_COURSE(COURSE_BITFS, 0x34444440) // (17) Bowser in the Fire Sea
-DEFINE_BONUS_COURSE(COURSE_BITS, 0x34444440) // (18) Bowser in the Sky
-DEFINE_BONUS_COURSE(COURSE_PSS, 0x24444440) // (19) Princess's Secret Slide
-DEFINE_BONUS_COURSE(COURSE_COTMC, 0x44444440) // (20) Cavern of the Metal Cap
-DEFINE_BONUS_COURSE(COURSE_TOTWC, 0x04444440) // (21) Tower of the Wing Cap
-DEFINE_BONUS_COURSE(COURSE_VCUTM, 0x24444440) // (22) Vanish Cap Under the Moat
-DEFINE_BONUS_COURSE(COURSE_WMOTR, 0x04444440) // (23) Winged Mario over the Rainbow
-DEFINE_BONUS_COURSE(COURSE_SA, 0x24444440) // (24) Secret Aquarium
+DEFINE_BONUS_COURSE(COURSE_BITDW,    0x34444440) // (16) Bowser in the Dark World
+DEFINE_BONUS_COURSE(COURSE_BITFS,    0x34444440) // (17) Bowser in the Fire Sea
+DEFINE_BONUS_COURSE(COURSE_BITS,     0x34444440) // (18) Bowser in the Sky
+DEFINE_BONUS_COURSE(COURSE_PSS,      0x24444440) // (19) Princess's Secret Slide
+DEFINE_BONUS_COURSE(COURSE_COTMC,    0x44444440) // (20) Cavern of the Metal Cap
+DEFINE_BONUS_COURSE(COURSE_TOTWC,    0x04444440) // (21) Tower of the Wing Cap
+DEFINE_BONUS_COURSE(COURSE_VCUTM,    0x24444440) // (22) Vanish Cap Under the Moat
+DEFINE_BONUS_COURSE(COURSE_WMOTR,    0x04444440) // (23) Winged Mario over the Rainbow
+DEFINE_BONUS_COURSE(COURSE_SA,       0x24444440) // (24) Secret Aquarium
 DEFINE_BONUS_COURSE(COURSE_CAKE_END, 0x44444440) // (25) The End (Cake Scene)
diff --git a/levels/level_defines.h b/levels/level_defines.h
index 4cdd6351..65814579 100644
--- a/levels/level_defines.h
+++ b/levels/level_defines.h
@@ -12,41 +12,41 @@
 // NOTE: Be sure to edit sZoomOutAreaMasks in camera.c, as there isnt a good way to macro those right now.
 // TODO: Figure something out for sZoomOutAreaMasks?
 
-STUB_LEVEL("", LEVEL_UNKNOWN_1, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
-STUB_LEVEL("", LEVEL_UNKNOWN_2, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
-STUB_LEVEL("", LEVEL_UNKNOWN_3, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
-DEFINE_LEVEL("COURSE 5 BBH", LEVEL_BBH, COURSE_BBH, bbh, spooky, 28000, 0x28, 0x28, 0x28, sDynBbh, sCamBBH) 
-DEFINE_LEVEL("COURSE 4 CCM", LEVEL_CCM, COURSE_CCM, ccm, snow, 17000, 0x10, 0x38, 0x38, _, sCamCCM) 
-DEFINE_LEVEL("OW2 IN CASTLE", LEVEL_CASTLE, COURSE_NONE, castle_inside, inside, 20000, 0x20, 0x20, 0x30, _, sCamCastle) 
-DEFINE_LEVEL("COURSE 6 HMC", LEVEL_HMC, COURSE_HMC, hmc, cave, 16000, 0x28, 0x28, 0x28, sDynHmc, sCamHMC) 
-DEFINE_LEVEL("COURSE 8 SSL", LEVEL_SSL, COURSE_SSL, ssl, generic, 15000, 0x08, 0x30, 0x30, _, sCamSSL) 
-DEFINE_LEVEL("COURSE 1 BOB", LEVEL_BOB, COURSE_BOB, bob, generic, 15000, 0x08, 0x08, 0x08, _, _) 
-DEFINE_LEVEL("COURSE 10 SL", LEVEL_SL, COURSE_SL, sl, snow, 14000, 0x10, 0x28, 0x28, _, sCamSL) 
-DEFINE_LEVEL("COURSE 11 WDW", LEVEL_WDW, COURSE_WDW, wdw, grass, 17000, 0x10, 0x18, 0x18, sDynWdw, _) 
-DEFINE_LEVEL("COURSE 3 JRB", LEVEL_JRB, COURSE_JRB, jrb, water, 20000, 0x10, 0x18, 0x18, sDynJrb, _) 
-DEFINE_LEVEL("COURSE 13 THI", LEVEL_THI, COURSE_THI, thi, grass, 20000, 0x0c, 0x0c, 0x20, _, sCamTHI) 
-DEFINE_LEVEL("COURSE 14 TTC", LEVEL_TTC, COURSE_TTC, ttc, machine, 18000, 0x18, 0x18, 0x18, _, _) 
-DEFINE_LEVEL("COURSE 15 RR", LEVEL_RR, COURSE_RR, rr, sky, 20000, 0x20, 0x20, 0x20, _, sCamRR) 
-DEFINE_LEVEL("OW1 C GROUNDS", LEVEL_CASTLE_GROUNDS, COURSE_NONE, castle_grounds, outside, 20000, 0x00, 0x00, 0x00, _, sCamCastleGrounds) 
-DEFINE_LEVEL("BC1 BITDW", LEVEL_BITDW, COURSE_BITDW, bitdw, sky, 16000, 0x28, 0x28, 0x28, _, _) 
-DEFINE_LEVEL("VCL VCUTM", LEVEL_VCUTM, COURSE_VCUTM, vcutm, outside, 30000, 0x28, 0x28, 0x28, _, _) 
-DEFINE_LEVEL("BC2 BITFS", LEVEL_BITFS, COURSE_BITFS, bitfs, sky, 16000, 0x28, 0x28, 0x28, _, _) 
-DEFINE_LEVEL("SC1 SEC AQUA", LEVEL_SA, COURSE_SA, sa, inside, 20000, 0x10, 0x10, 0x10, _, _) 
-DEFINE_LEVEL("BC3 BITS", LEVEL_BITS, COURSE_BITS, bits, sky, 16000, 0x28, 0x28, 0x28, _, _) 
-DEFINE_LEVEL("COURSE 7 LLL", LEVEL_LLL, COURSE_LLL, lll, fire, 22000, 0x08, 0x30, 0x30, _, _) 
-DEFINE_LEVEL("COURSE 9 DDD", LEVEL_DDD, COURSE_DDD, ddd, water, 17000, 0x10, 0x20, 0x20, sDynDdd, _) 
-DEFINE_LEVEL("COURSE 2 WF", LEVEL_WF, COURSE_WF, wf, grass, 13000, 0x08, 0x08, 0x08, _, _) 
-DEFINE_LEVEL("END CAKE", LEVEL_ENDING, COURSE_CAKE_END, ending, generic, 20000, 0x00, 0x00, 0x00, _, _) 
-DEFINE_LEVEL("OW3 C COURTYD", LEVEL_CASTLE_COURTYARD, COURSE_NONE, castle_courtyard, outside, 20000, 0x08, 0x08, 0x08, _, _) 
-DEFINE_LEVEL("SIC P SEC SLID", LEVEL_PSS, COURSE_PSS, pss, mountain, 20000, 0x28, 0x28, 0x28, _, _) 
-DEFINE_LEVEL("MCL COTMC", LEVEL_COTMC, COURSE_COTMC, cotmc, cave, 18000, 0x28, 0x28, 0x28, _, sCamCotMC) 
-DEFINE_LEVEL("WCL TOTWC", LEVEL_TOTWC, COURSE_TOTWC, totwc, sky, 20000, 0x20, 0x20, 0x20, _, _) 
-DEFINE_LEVEL("B BATTLE1", LEVEL_BOWSER_1, COURSE_BITDW, bowser_1, generic, 60000, 0x40, 0x40, 0x40, _, _) 
-DEFINE_LEVEL("SC2 WMOTR", LEVEL_WMOTR, COURSE_WMOTR, wmotr, generic, 20000, 0x28, 0x28, 0x28, _, _) 
-STUB_LEVEL("", LEVEL_UNKNOWN_32, COURSE_NONE, 20000, 0x70, 0x00, 0x00, _, _) 
-DEFINE_LEVEL("B BATTLE2", LEVEL_BOWSER_2, COURSE_BITFS, bowser_2, fire, 60000, 0x40, 0x40, 0x40, _, _) 
-DEFINE_LEVEL("B BATTLE3", LEVEL_BOWSER_3, COURSE_BITS, bowser_3, generic, 60000, 0x40, 0x40, 0x40, _, _) 
-STUB_LEVEL("", LEVEL_UNKNOWN_35, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
-DEFINE_LEVEL("COURSE 12 TTM", LEVEL_TTM, COURSE_TTM, ttm, mountain, 15000, 0x08, 0x08, 0x08, _, _) 
-STUB_LEVEL("", LEVEL_UNKNOWN_37, COURSE_NONE, 20000, 0x00, 0x00, 0x00, _, _) 
-STUB_LEVEL("", LEVEL_UNKNOWN_38, COURSE_NONE, 20000, 0x00, 0x00, 0x00, sDynUnk38, _) 
+STUB_LEVEL(  "",               LEVEL_UNKNOWN_1,        COURSE_NONE,                                 20000, 0x00, 0x00, 0x00, _,         _)
+STUB_LEVEL(  "",               LEVEL_UNKNOWN_2,        COURSE_NONE,                                 20000, 0x00, 0x00, 0x00, _,         _)
+STUB_LEVEL(  "",               LEVEL_UNKNOWN_3,        COURSE_NONE,                                 20000, 0x00, 0x00, 0x00, _,         _)
+DEFINE_LEVEL("COURSE 5 BBH",   LEVEL_BBH,              COURSE_BBH,      bbh,              spooky,   28000, 0x28, 0x28, 0x28, sDynBbh,   sCamBBH)
+DEFINE_LEVEL("COURSE 4 CCM",   LEVEL_CCM,              COURSE_CCM,      ccm,              snow,     17000, 0x10, 0x38, 0x38, _,         sCamCCM)
+DEFINE_LEVEL("OW2 IN CASTLE",  LEVEL_CASTLE,           COURSE_NONE,     castle_inside,    inside,   20000, 0x20, 0x20, 0x30, _,         sCamCastle)
+DEFINE_LEVEL("COURSE 6 HMC",   LEVEL_HMC,              COURSE_HMC,      hmc,              cave,     16000, 0x28, 0x28, 0x28, sDynHmc,   sCamHMC)
+DEFINE_LEVEL("COURSE 8 SSL",   LEVEL_SSL,              COURSE_SSL,      ssl,              generic,  15000, 0x08, 0x30, 0x30, _,         sCamSSL)
+DEFINE_LEVEL("COURSE 1 BOB",   LEVEL_BOB,              COURSE_BOB,      bob,              generic,  15000, 0x08, 0x08, 0x08, _,         _)
+DEFINE_LEVEL("COURSE 10 SL",   LEVEL_SL,               COURSE_SL,       sl,               snow,     14000, 0x10, 0x28, 0x28, _,         sCamSL)
+DEFINE_LEVEL("COURSE 11 WDW",  LEVEL_WDW,              COURSE_WDW,      wdw,              grass,    17000, 0x10, 0x18, 0x18, sDynWdw,   _)
+DEFINE_LEVEL("COURSE 3 JRB",   LEVEL_JRB,              COURSE_JRB,      jrb,              water,    20000, 0x10, 0x18, 0x18, sDynJrb,   _)
+DEFINE_LEVEL("COURSE 13 THI",  LEVEL_THI,              COURSE_THI,      thi,              grass,    20000, 0x0c, 0x0c, 0x20, _,         sCamTHI)
+DEFINE_LEVEL("COURSE 14 TTC",  LEVEL_TTC,              COURSE_TTC,      ttc,              machine,  18000, 0x18, 0x18, 0x18, _,         _)
+DEFINE_LEVEL("COURSE 15 RR",   LEVEL_RR,               COURSE_RR,       rr,               sky,      20000, 0x20, 0x20, 0x20, _,         sCamRR)
+DEFINE_LEVEL("OW1 C GROUNDS",  LEVEL_CASTLE_GROUNDS,   COURSE_NONE,     castle_grounds,   outside,  25000, 0x08, 0x08, 0x08, _,         _)
+DEFINE_LEVEL("BC1 BITDW",      LEVEL_BITDW,            COURSE_BITDW,    bitdw,            sky,      16000, 0x28, 0x28, 0x28, _,         _)
+DEFINE_LEVEL("VCL VCUTM",      LEVEL_VCUTM,            COURSE_VCUTM,    vcutm,            outside,  30000, 0x28, 0x28, 0x28, _,         _)
+DEFINE_LEVEL("BC2 BITFS",      LEVEL_BITFS,            COURSE_BITFS,    bitfs,            sky,      16000, 0x28, 0x28, 0x28, _,         _)
+DEFINE_LEVEL("SC1 SEC AQUA",   LEVEL_SA,               COURSE_SA,       sa,               inside,   20000, 0x10, 0x10, 0x10, _,         _)
+DEFINE_LEVEL("BC3 BITS",       LEVEL_BITS,             COURSE_BITS,     bits,             sky,      16000, 0x28, 0x28, 0x28, _,         _)
+DEFINE_LEVEL("COURSE 7 LLL",   LEVEL_LLL,              COURSE_LLL,      lll,              fire,     22000, 0x08, 0x30, 0x30, _,         _)
+DEFINE_LEVEL("COURSE 9 DDD",   LEVEL_DDD,              COURSE_DDD,      ddd,              water,    17000, 0x10, 0x20, 0x20, sDynDdd,   _)
+DEFINE_LEVEL("COURSE 2 WF",    LEVEL_WF,               COURSE_WF,       wf,               grass,    13000, 0x08, 0x08, 0x08, _,         _)
+DEFINE_LEVEL("END CAKE",       LEVEL_ENDING,           COURSE_CAKE_END, ending,           generic,  20000, 0x00, 0x00, 0x00, _,         _)
+DEFINE_LEVEL("OW3 C COURTYD",  LEVEL_CASTLE_COURTYARD, COURSE_NONE,     castle_courtyard, outside,  20000, 0x08, 0x08, 0x08, _,         _)
+DEFINE_LEVEL("SIC P SEC SLID", LEVEL_PSS,              COURSE_PSS,      pss,              mountain, 20000, 0x28, 0x28, 0x28, _,         _)
+DEFINE_LEVEL("MCL COTMC",      LEVEL_COTMC,            COURSE_COTMC,    cotmc,            cave,     18000, 0x28, 0x28, 0x28, _,         sCamCotMC)
+DEFINE_LEVEL("WCL TOTWC",      LEVEL_TOTWC,            COURSE_TOTWC,    totwc,            sky,      20000, 0x20, 0x20, 0x20, _,         _)
+DEFINE_LEVEL("B BATTLE1",      LEVEL_BOWSER_1,         COURSE_BITDW,    bowser_1,         generic,  60000, 0x40, 0x40, 0x40, _,         _)
+DEFINE_LEVEL("SC2 WMOTR",      LEVEL_WMOTR,            COURSE_WMOTR,    wmotr,            generic,  20000, 0x28, 0x28, 0x28, _,         _)
+STUB_LEVEL(  "",               LEVEL_UNKNOWN_32,       COURSE_NONE,                                 20000, 0x70, 0x00, 0x00, _,         _)
+DEFINE_LEVEL("B BATTLE2",      LEVEL_BOWSER_2,         COURSE_BITFS,    bowser_2,         fire,     60000, 0x40, 0x40, 0x40, _,         _)
+DEFINE_LEVEL("B BATTLE3",      LEVEL_BOWSER_3,         COURSE_BITS,     bowser_3,         generic,  60000, 0x40, 0x40, 0x40, _,         _)
+STUB_LEVEL(  "",               LEVEL_UNKNOWN_35,       COURSE_NONE,                                 20000, 0x00, 0x00, 0x00, _,         _)
+DEFINE_LEVEL("COURSE 12 TTM",  LEVEL_TTM,              COURSE_TTM,      ttm,              mountain, 15000, 0x08, 0x08, 0x08, _,         _)
+STUB_LEVEL(  "",               LEVEL_UNKNOWN_37,       COURSE_NONE,                                 20000, 0x00, 0x00, 0x00, _,         _)
+STUB_LEVEL(  "",               LEVEL_UNKNOWN_38,       COURSE_NONE,                                 20000, 0x00, 0x00, 0x00, sDynUnk38, _)
diff --git a/levels/scripts.c b/levels/scripts.c
index b1639bce..85eb3209 100644
--- a/levels/scripts.c
+++ b/levels/scripts.c
@@ -111,9 +111,6 @@ const LevelScript level_main_scripts_entry[] = {
     LOAD_MODEL_FROM_GEO(MODEL_EXPLOSION,               explosion_geo),
     LOAD_MODEL_FROM_GEO(MODEL_DIRT_ANIMATION,          dirt_animation_geo),
     LOAD_MODEL_FROM_GEO(MODEL_CARTOON_STAR,            cartoon_star_geo),
-    LOAD_MODEL_FROM_GEO(MODEL_MARIO_RAGDOLL,            ragdoll_mario_geo),
-    LOAD_MODEL_FROM_GEO(MODEL_GOOMBA,            supergoomb_geo),
-    LOAD_MODEL_FROM_GEO(MODEL_CAPPY,            cappy_geo),
 #ifdef IA8_30FPS_COINS
     LOAD_MODEL_FROM_GEO(MODEL_SILVER_COIN,             silver_coin_geo),
     LOAD_MODEL_FROM_GEO(MODEL_SILVER_COIN_NO_SHADOW,   silver_coin_no_shadow_geo),
@@ -184,7 +181,7 @@ const LevelScript script_func_global_1[] = {
     LOAD_MODEL_FROM_GEO(MODEL_BREAKABLE_BOX_NO_SHADOW, breakable_box_no_shadow_geo),
     LOAD_MODEL_FROM_GEO(MODEL_EXCLAMATION_BOX_OUTLINE, exclamation_box_outline_geo),
     LOAD_MODEL_FROM_GEO(MODEL_EXCLAMATION_BOX,         exclamation_box_geo),
-    //LOAD_MODEL_FROM_GEO(MODEL_GOOMBA,                  goomba_geo),
+    LOAD_MODEL_FROM_GEO(MODEL_GOOMBA,                  goomba_geo),
     LOAD_MODEL_FROM_DL( MODEL_EXCLAMATION_POINT,       exclamation_box_outline_seg8_dl_exclamation_point, LAYER_OCCLUDE_SILHOUETTE_ALPHA),
     LOAD_MODEL_FROM_GEO(MODEL_KOOPA_SHELL,             koopa_shell_geo),
     LOAD_MODEL_FROM_GEO(MODEL_METAL_BOX,               metal_box_geo),
@@ -283,7 +280,6 @@ const LevelScript script_func_global_11[] = {
     LOAD_MODEL_FROM_GEO(MODEL_BIRDS,                   birds_geo),
     LOAD_MODEL_FROM_GEO(MODEL_PEACH,                   peach_geo),
     LOAD_MODEL_FROM_GEO(MODEL_YOSHI,                   yoshi_geo),
-    LOAD_MODEL_FROM_GEO(MODEL_MONEYBAG,                moneybag_geo),
     RETURN(),
 };
 
@@ -343,7 +339,7 @@ const LevelScript script_func_global_16[] = {
 const LevelScript script_func_global_17[] = {
     LOAD_MODEL_FROM_GEO(MODEL_CHILL_BULLY,             chilly_chief_geo),
     LOAD_MODEL_FROM_GEO(MODEL_BIG_CHILL_BULLY,         chilly_chief_big_geo),
-    
+    LOAD_MODEL_FROM_GEO(MODEL_MONEYBAG,                moneybag_geo),
     RETURN(),
 };
 
diff --git a/sound/samples/sfx_1/06_ragdoll.aiff b/sound/samples/sfx_1/06_ragdoll.aiff
deleted file mode 100644
index c1114ba8..00000000
Binary files a/sound/samples/sfx_1/06_ragdoll.aiff and /dev/null differ
diff --git a/sound/samples/sfx_1/07_sponge.aiff b/sound/samples/sfx_1/07_sponge.aiff
deleted file mode 100644
index 1968f813..00000000
Binary files a/sound/samples/sfx_1/07_sponge.aiff and /dev/null differ
diff --git a/sound/samples/sfx_1/08_capture.aiff b/sound/samples/sfx_1/08_capture.aiff
deleted file mode 100644
index ecca500a..00000000
Binary files a/sound/samples/sfx_1/08_capture.aiff and /dev/null differ
diff --git a/sound/samples/sfx_mario_peach/0E_peach_dear_mario.aiff.sfk b/sound/samples/sfx_mario_peach/0E_peach_dear_mario.aiff.sfk
deleted file mode 100644
index 29d206f8..00000000
Binary files a/sound/samples/sfx_mario_peach/0E_peach_dear_mario.aiff.sfk and /dev/null differ
diff --git a/sound/sequences/00_sound_player.s b/sound/sequences/00_sound_player.s
index 048ce315..ae2dc9a6 100644
--- a/sound/sequences/00_sound_player.s
+++ b/sound/sequences/00_sound_player.s
@@ -2793,11 +2793,6 @@ sound_ref .sound_general_grand_star
 sound_ref .sound_general_grand_star_jump
 sound_ref .sound_general_boat_rock
 sound_ref .sound_general_vanish_sfx
-sound_ref .sound_ragdoll
-sound_ref .sound_sponge
-sound_ref .sound_capture
-
-
 sound_ref .sound_menu_enter_hole
 sound_ref .sound_general_red_coin
 sound_ref .sound_general_birds_fly_away
@@ -4400,29 +4395,6 @@ layer_portamento 0x81, 19, 255
 layer_note1 31, 0x32, 115
 layer_end
 
-.sound_ragdoll:
-chan_setbank 0
-chan_setinstr 6
-chan_setlayer 0, .layer_AAAA
-chan_end
-
-.sound_sponge:
-chan_setbank 0
-chan_setinstr 7
-chan_setlayer 0, .layer_AAAA
-chan_end
-
-.sound_capture:
-chan_setbank 0
-chan_setinstr 7
-chan_setlayer 0, .layer_AAAA
-chan_end
-
-
-.layer_AAAA:
-  layer_note1 39, 0x100, 127
-  layer_end
-
 .channel4_table:
 sound_ref .sound_env_waterfall1
 sound_ref .sound_env_waterfall1
diff --git a/sound/sound_banks/00.json b/sound/sound_banks/00.json
index a37d41f6..02ef6c71 100644
--- a/sound/sound_banks/00.json
+++ b/sound/sound_banks/00.json
@@ -39,21 +39,6 @@
             "release_rate": 208,
             "envelope": "envelope0",
             "sound": "05_heavy_landing"
-        },
-        "inst6": {
-            "release_rate": 208,
-            "envelope": "envelope0",
-            "sound": "06_ragdoll"
-        },
-        "inst7": {
-            "release_rate": 208,
-            "envelope": "envelope0",
-            "sound": "07_sponge"
-        },
-        "inst8": {
-            "release_rate": 208,
-            "envelope": "envelope0",
-            "sound": "08_capture"
         }
     },
     "instrument_list": [
@@ -62,9 +47,6 @@
         "inst2",
         "inst3",
         "inst4",
-        "inst5",
-        "inst6",
-        "inst7",
-        "inst8"
+        "inst5"
     ]
 }
diff --git a/src/audio/playback.c b/src/audio/playback.c
index 40f0dc2d..0c0b1fff 100644
--- a/src/audio/playback.c
+++ b/src/audio/playback.c
@@ -600,8 +600,6 @@ void process_notes(void) {
                 frequency *= (32000.0f / (f32) gAiFrequency);
             }
             frequency = (frequency < cap ? frequency : cap);
-            //frequency += (frequency / 5.0f);
-            //frequency += 0.2f;
             scale *= 4.3498e-5f; // ~1 / 23000
             velocity = velocity * scale * scale;
             note_set_frequency(note, frequency);
diff --git a/src/audio/synthesis.c b/src/audio/synthesis.c
index d18c6057..71b8bab4 100644
--- a/src/audio/synthesis.c
+++ b/src/audio/synthesis.c
@@ -1700,9 +1700,6 @@ void note_set_vel_pan_reverb(struct Note *note, f32 velocity, f32 pan, u8 reverb
 
 void note_set_frequency(struct Note *note, f32 frequency) {
     note->frequency = frequency;
-    if (gShitMusic == 1) {
-        note->frequency += random_float() / 5.0f;
-    }
 }
 
 void note_enable(struct Note *note) {
diff --git a/src/boot/memory.c b/src/boot/memory.c
index bedc292a..5abf5c72 100644
--- a/src/boot/memory.c
+++ b/src/boot/memory.c
@@ -65,9 +65,7 @@ extern struct MainPoolBlock *sPoolListHeadR;
 struct MemoryPool *gEffectsMemoryPool;
 
 
-
 uintptr_t sSegmentTable[32];
-uintptr_t sSegmentROMTable[32];
 u32 sPoolFreeSpace;
 u8 *sPoolStart;
 u8 *sPoolEnd;
@@ -332,13 +330,13 @@ void *load_segment(s32 segment, u8 *srcStart, u8 *srcEnd, u32 side, u8 *bssStart
         addr = dynamic_dma_read(srcStart, srcEnd, side, TLB_PAGE_SIZE, ((uintptr_t)bssEnd - (uintptr_t)bssStart));
         if (addr != NULL) {
             u8 *realAddr = (u8 *)ALIGN((uintptr_t)addr, TLB_PAGE_SIZE);
-            set_segment_base_addr(segment, realAddr); sSegmentROMTable[segment] = (uintptr_t) srcStart;
+            set_segment_base_addr(segment, realAddr);
             mapTLBPages((segment << 24), VIRTUAL_TO_PHYSICAL(realAddr), ((srcEnd - srcStart) + ((uintptr_t)bssEnd - (uintptr_t)bssStart)), segment);
         }
     } else {
         addr = dynamic_dma_read(srcStart, srcEnd, side, 0, 0);
         if (addr != NULL) {
-            set_segment_base_addr(segment, addr); sSegmentROMTable[segment] = (uintptr_t) srcStart;
+            set_segment_base_addr(segment, addr);
         }
     }
 #if PUPPYPRINT_DEBUG
@@ -414,7 +412,7 @@ void *load_segment_decompress(s32 segment, u8 *srcStart, u8 *srcEnd) {
             decompress(compressed, dest);
 #endif
             osSyncPrintf("end decompress\n");
-            set_segment_base_addr(segment, dest); sSegmentROMTable[segment] = (uintptr_t) srcStart;
+            set_segment_base_addr(segment, dest);
             main_pool_free(compressed);
         }
     }
@@ -454,7 +452,7 @@ void *load_segment_decompress_heap(u32 segment, u8 *srcStart, u8 *srcEnd) {
 #elif MIO0
         decompress(compressed, gDecompressionHeap);
 #endif
-        set_segment_base_addr(segment, gDecompressionHeap); sSegmentROMTable[segment] = (uintptr_t) srcStart;
+        set_segment_base_addr(segment, gDecompressionHeap);
         main_pool_free(compressed);
     }
     return gDecompressionHeap;
diff --git a/src/engine/geo_layout.c b/src/engine/geo_layout.c
index 3a4e0ecc..a291d05c 100644
--- a/src/engine/geo_layout.c
+++ b/src/engine/geo_layout.c
@@ -39,7 +39,7 @@ GeoLayoutCommandProc GeoLayoutJumpTable[] = {
     /*GEO_CMD_COPY_VIEW                 */ geo_layout_cmd_copy_view,
     /*GEO_CMD_NODE_HELD_OBJ             */ geo_layout_cmd_node_held_obj,
     /*GEO_CMD_NODE_SCALE                */ geo_layout_cmd_node_scale,
-    /*GEO_CMD_NODE_SCALE_BETER          */geo_layout_cmd_node_scale_better, //geo_layout_cmd_nop2,
+    /*GEO_CMD_NOP_1E                    */ geo_layout_cmd_nop2,
     /*GEO_CMD_NOP_1F                    */ geo_layout_cmd_nop3,
     /*GEO_CMD_NODE_CULLING_RADIUS       */ geo_layout_cmd_node_culling_radius,
     /*GEO_CMD_NODE_BONE                 */ geo_layout_cmd_bone,
@@ -545,23 +545,6 @@ void geo_layout_cmd_node_scale(void) {
     gGeoLayoutCommand += 0x08 << CMD_SIZE_SHIFT;
 }
 
-void geo_layout_cmd_node_scale_better(void) {
-    struct GraphNodeScaleBetter *graphNode;
-
-    s16 drawingLayer = 0;
-    s16 params = cur_geo_cmd_u8(0x01);
-    f32 scaleX = cur_geo_cmd_u32(0x04) / 65536.0f;
-    f32 scaleY = cur_geo_cmd_u32(0x08) / 65536.0f;
-    f32 scaleZ = cur_geo_cmd_u32(0x0C) / 65536.0f;
-    void *displayList = NULL;
-
-    graphNode = init_graph_node_scale_better(gGraphNodePool, NULL, drawingLayer, displayList, scaleX, scaleY, scaleZ);
-
-    register_scene_graph_node(&graphNode->node);
-
-    gGeoLayoutCommand += 0x10 << CMD_SIZE_SHIFT;
-}
-
 // 0x1E: No operation
 void geo_layout_cmd_nop2(void) {
     gGeoLayoutCommand += 0x08 << CMD_SIZE_SHIFT;
diff --git a/src/engine/geo_layout.h b/src/engine/geo_layout.h
index 0661a897..8234fff7 100644
--- a/src/engine/geo_layout.h
+++ b/src/engine/geo_layout.h
@@ -71,7 +71,6 @@ void geo_layout_cmd_node_translation(void);
 void geo_layout_cmd_node_rotation(void);
 void geo_layout_cmd_node_scale(void);
 void geo_layout_cmd_nop2(void);
-void geo_layout_cmd_node_scale_better(void);
 void geo_layout_cmd_node_animated_part(void);
 void geo_layout_cmd_node_billboard(void);
 void geo_layout_cmd_node_display_list(void);
diff --git a/src/engine/graph_node.c b/src/engine/graph_node.c
index b9d5f991..7143d9dd 100644
--- a/src/engine/graph_node.c
+++ b/src/engine/graph_node.c
@@ -287,25 +287,6 @@ struct GraphNodeScale *init_graph_node_scale(struct AllocOnlyPool *pool,
     return graphNode;
 }
 
-struct GraphNodeScaleBetter *init_graph_node_scale_better(struct AllocOnlyPool *pool,
-                                             struct GraphNodeScaleBetter *graphNode, s32 drawingLayer,
-                                             void *displayList, f32 scaleX, f32 scaleY, f32 scaleZ) {
-    if (pool != NULL) {
-        graphNode = alloc_only_pool_alloc(pool, sizeof(struct GraphNodeScaleBetter));
-    }
-
-    if (graphNode != NULL) {
-        init_scene_graph_node_links(&graphNode->node, GRAPH_NODE_TYPE_SCALE_BETTER);
-        graphNode->node.flags = (drawingLayer << 8) | (graphNode->node.flags & 0xFF);
-        graphNode->scaleX = scaleX;
-        graphNode->scaleY = scaleY;
-        graphNode->scaleZ = scaleZ;
-        graphNode->displayList = displayList;
-    }
-
-    return graphNode;
-}
-
 /**
  * Allocates and returns a newly created object node
  */
diff --git a/src/engine/graph_node.h b/src/engine/graph_node.h
index e36ec46d..fb6c0ea5 100644
--- a/src/engine/graph_node.h
+++ b/src/engine/graph_node.h
@@ -68,7 +68,6 @@ enum GraphNodeTypes {
     GRAPH_NODE_TYPE_BILLBOARD,
     GRAPH_NODE_TYPE_DISPLAY_LIST,
     GRAPH_NODE_TYPE_SCALE,
-    GRAPH_NODE_TYPE_SCALE_BETTER,
     GRAPH_NODE_TYPE_SHADOW,
     GRAPH_NODE_TYPE_OBJECT_PARENT,
     GRAPH_NODE_TYPE_GENERATED_LIST,
@@ -334,16 +333,6 @@ struct GraphNodeScale {
     /*0x18*/ f32 scale;
 };
 
-
-struct GraphNodeScaleBetter
-{
-    /*0x00*/ struct GraphNode node;
-    /*0x14*/ void *displayList;
-    /*0x18*/ f32 scaleX;
-    /*0x1C*/ f32 scaleY;
-    /*0x20*/ f32 scaleZ;
-};
-
 /** GraphNode that draws a shadow under an object.
  *  Almost every object starts with a shadow node.
  *  The shadow type determines the shape (round or rectangular), vertices (4 or 9)
@@ -442,9 +431,6 @@ struct GraphNodeObjectParent        *init_graph_node_object_parent       (struct
 struct GraphNodeGenerated           *init_graph_node_generated           (struct AllocOnlyPool *pool, struct GraphNodeGenerated           *graphNode, GraphNodeFunc gfxFunc, s32 parameter);
 struct GraphNodeBackground          *init_graph_node_background          (struct AllocOnlyPool *pool, struct GraphNodeBackground          *graphNode, u16 background, GraphNodeFunc backgroundFunc, s32 zero);
 struct GraphNodeHeldObject          *init_graph_node_held_object         (struct AllocOnlyPool *pool, struct GraphNodeHeldObject          *graphNode, struct Object *objNode, Vec3s translation, GraphNodeFunc nodeFunc, s32 playerIndex);
-struct GraphNodeScaleBetter *init_graph_node_scale_better(struct AllocOnlyPool *pool,
-                                             struct GraphNodeScaleBetter *graphNode, s32 drawingLayer,
-                                             void *displayList, f32 scaleX, f32 scaleY, f32 scaleZ);
 
 struct GraphNode *geo_add_child       (struct GraphNode *parent, struct GraphNode *childNode);
 struct GraphNode *geo_remove_child    (struct GraphNode *graphNode);
diff --git a/src/game/area.c b/src/game/area.c
index 54df9783..70e90707 100644
--- a/src/game/area.c
+++ b/src/game/area.c
@@ -85,11 +85,6 @@ Vp gViewport = { {
     { 640, 480, 511, 0 },
 } };
 
-Vp gShitViewport = { {
-    { 64, 48, 511, 0 },
-    { 64, 48, 511, 0 },
-} };
-
 #if MULTILANG
 const char *gNoControllerMsg[] = {
     "NO CONTROLLER",
@@ -382,25 +377,11 @@ void play_transition_after_delay(s16 transType, s16 time, u8 red, u8 green, u8 b
 
 void render_game(void) {
     if (gCurrentArea != NULL && !gWarpTransition.pauseRendering) {
-
-        if (gBetterMarioCam) {
-            gShitViewport.vp.vscale[0] = 48;
-    gShitViewport.vp.vscale[1] = 32;
-    gShitViewport.vp.vtrans[0] = SCREEN_WIDTH  * 2;
-    gShitViewport.vp.vtrans[1] = SCREEN_HEIGHT * 2;
-    override_viewport_and_clip(NULL, &gShitViewport, 0, 0, 0);
-        }
-
         if (gCurrentArea->graphNode) {
             geo_process_root(gCurrentArea->graphNode, gViewportOverride, gViewportClip, gFBSetColor);
         }
 
-        
-
-            gSPViewport(gDisplayListHead++, VIRTUAL_TO_PHYSICAL(&gViewport));
-        
-
-        
+        gSPViewport(gDisplayListHead++, VIRTUAL_TO_PHYSICAL(&gViewport));
 
         gDPSetScissor(gDisplayListHead++, G_SC_NON_INTERLACE, 0, gBorderHeight, SCREEN_WIDTH,
                       SCREEN_HEIGHT - gBorderHeight);
diff --git a/src/game/behavior_actions.c b/src/game/behavior_actions.c
index cf544c5b..1fd7468e 100644
--- a/src/game/behavior_actions.c
+++ b/src/game/behavior_actions.c
@@ -234,7 +234,3 @@ void set_obj_anim_with_accel_and_sound(s16 frame1, s16 frame2, s32 sound) {
 #include "behaviors/strong_wind_particle.inc.c"
 #include "behaviors/sl_snowman_wind.inc.c"
 #include "behaviors/sl_walking_penguin.inc.c"
-
-#include "behaviors/troll_water_level.inc.c"
-#include "behaviors/sponge_circle.inc.c"
-#include "behaviors/endless_stairs_music_controller.inc.c"
\ No newline at end of file
diff --git a/src/game/behavior_actions.h b/src/game/behavior_actions.h
index b4dfd13a..02a9d446 100644
--- a/src/game/behavior_actions.h
+++ b/src/game/behavior_actions.h
@@ -448,7 +448,6 @@ void bhv_chain_chomp_gate_update(void);
 void bhv_wiggler_update(void);
 void bhv_wiggler_body_part_update(void);
 void bhv_enemy_lakitu_update(void);
-void bhv_lakitu_adopt_red_coin(void);
 void bhv_camera_lakitu_init(void);
 void bhv_camera_lakitu_update(void);
 void bhv_cloud_update(void);
@@ -576,10 +575,3 @@ extern struct WaterDropletParams gShallowWaterSplashDropletParams;
 extern struct WaterDropletParams gShallowWaterWaveDropletParams;
 
 #endif // BEHAVIOR_ACTIONS_H
-
-void bhv_troll_water_level_init(void);
-void bhv_troll_water_level_loop(void);
-void bhv_sponge_circle_init(void);
-void bhv_sponge_circle_loop(void);
-void bhv_endless_stairs_music_controller_init(void);
-void bhv_endless_stairs_music_controller_loop(void);
\ No newline at end of file
diff --git a/src/game/behaviors/breakable_box_small.inc.c b/src/game/behaviors/breakable_box_small.inc.c
index 749d9105..d4ac514b 100644
--- a/src/game/behaviors/breakable_box_small.inc.c
+++ b/src/game/behaviors/breakable_box_small.inc.c
@@ -31,29 +31,7 @@ void small_breakable_box_spawn_dust(void) {
 void small_breakable_box_act_move(void) {
     s16 collisionFlags = object_step();
 
-    if (o->oCappyObj == NULL) {
-        obj_cappy_collide(o);
-    }
-
-    f32 dist;
-    struct Object *chuckFuck = cur_obj_find_nearest_object_with_behavior(bhvChuckya, &dist);
-
-    if (dist < 200.0f && o->oAction == 0) {
-        o->oCappyObj = chuckFuck;
-        play_sound(SOUND_SPONGE, gMarioState->marioObj->header.gfx.cameraToObject);
-        o->oAction++;
-    }
-
-    if (o->oCappyObj != NULL) {
-        gMarioState->marioObj->header.gfx.sharedChild = gLoadedGraphNodes[MODEL_NONE];
-        o->oCappyObj->oPosX = gMarioState->pos[0];
-        o->oCappyObj->oPosY = gMarioState->pos[1];
-        o->oCappyObj->oPosZ = gMarioState->pos[2];
-        o->oPosX = o->oCappyObj->oPosX;
-        o->oPosY = o->oCappyObj->oPosY + 200;
-        o->oPosZ = o->oCappyObj->oPosZ;
-        
-    }
+    obj_attack_collided_from_other_object(o);
 
     if (collisionFlags == OBJ_COL_FLAG_GROUNDED) {
         cur_obj_play_sound_2(SOUND_GENERAL_SMALL_BOX_LANDING);
@@ -87,7 +65,7 @@ void breakable_box_small_released_loop(void) {
 
     // Despawn, and create a corkbox respawner
     if (o->oBreakableBoxSmallFramesSinceReleased > 900) {
-        create_respawner(MODEL_CAPPY, bhvBreakableBoxSmall, 3000);
+        create_respawner(MODEL_BREAKABLE_BOX, bhvBreakableBoxSmall, 3000);
         o->activeFlags = ACTIVE_FLAG_DEACTIVATED;
     }
 }
@@ -104,7 +82,7 @@ void breakable_box_small_idle_loop(void) {
 
         case OBJ_ACT_DEATH_PLANE_DEATH:
             o->activeFlags = ACTIVE_FLAG_DEACTIVATED;
-            create_respawner(MODEL_CAPPY, bhvBreakableBoxSmall, 3000);
+            create_respawner(MODEL_BREAKABLE_BOX, bhvBreakableBoxSmall, 3000);
             break;
     }
 
diff --git a/src/game/behaviors/cap.inc.c b/src/game/behaviors/cap.inc.c
index e0cabb7b..d8e76b08 100644
--- a/src/game/behaviors/cap.inc.c
+++ b/src/game/behaviors/cap.inc.c
@@ -26,7 +26,7 @@ s32 cap_set_hitbox(void) {
 
 void cap_despawn(void) {
     if (o->oTimer > 300) {
-        //obj_flicker_and_disappear(o, 300);
+        obj_flicker_and_disappear(o, 300);
     }
 }
 
diff --git a/src/game/behaviors/chuckya.inc.c b/src/game/behaviors/chuckya.inc.c
index 02e137de..76f20142 100644
--- a/src/game/behaviors/chuckya.inc.c
+++ b/src/game/behaviors/chuckya.inc.c
@@ -11,15 +11,15 @@ void common_anchor_mario_behavior(f32 forwardVel, f32 yVel, s32 flag) {
 
         case 2:
             gMarioObject->oInteractStatus |= flag + INT_STATUS_MARIO_THROWN_BY_OBJ;
-            gMarioStates[0].forwardVel = 500.0f;
-            gMarioStates[0].vel[1] = 50.0f;
+            gMarioStates[0].forwardVel = forwardVel;
+            gMarioStates[0].vel[1] = yVel;
             o->parentObj->oCommonAnchorAction = 0;
             break;
 
         case 3:
             gMarioObject->oInteractStatus |= INT_STATUS_MARIO_THROWN_BY_OBJ | INT_STATUS_MARIO_DROPPED_BY_OBJ; // loads 2 interactions at once?
-            gMarioStates[0].forwardVel = 500.0f;
-            gMarioStates[0].vel[1] = 50.0f;
+            gMarioStates[0].forwardVel = 10.0f;
+            gMarioStates[0].vel[1] = 10.0f;
             o->parentObj->oCommonAnchorAction = 0;
             break;
     }
diff --git a/src/game/behaviors/endless_stairs_music_controller.inc.c b/src/game/behaviors/endless_stairs_music_controller.inc.c
deleted file mode 100644
index 44a8c7cf..00000000
--- a/src/game/behaviors/endless_stairs_music_controller.inc.c
+++ /dev/null
@@ -1,29 +0,0 @@
-void bhv_endless_stairs_music_controller_init(void) {
-   
-}
-
-void bhv_endless_stairs_music_controller_loop(void) {
-
-    if (gDialogID != -1) {
-        o->oTimer = 0;
-    }
-
-    if (o->oTimer > 90 && o->oAction == 0 && gCamera->cutscene == 0 && gDialogID == -1) {
-        play_music(SEQ_PLAYER_LEVEL, SEQUENCE_ARGS(4, SEQ_LEVEL_GRASS), 0);
-        gShitMusic = 1;
-        o->oAction++;
-    }
-
-
-    s16 musicDist;
-
-
-   if (gMarioState->pos[1] < -4000) {
-    gShitMusic = 0;
-    musicDist = 128 - ((10000 + gMarioState->pos[1]) / 250);
-    if (musicDist < 0) musicDist = 0;
-    if (musicDist > 128) musicDist = 128;
-    play_secondary_music(SEQ_EVENT_ENDLESS_STAIRS, 128 - musicDist, musicDist, 10);
-   }
-}
-
diff --git a/src/game/behaviors/enemy_lakitu.inc.c b/src/game/behaviors/enemy_lakitu.inc.c
index 260efdf5..b120d7dc 100644
--- a/src/game/behaviors/enemy_lakitu.inc.c
+++ b/src/game/behaviors/enemy_lakitu.inc.c
@@ -93,17 +93,17 @@ static void enemy_lakitu_update_speed_and_angle(void) {
  * hold it, then enter the hold spiny sub-action.
  */
 static void enemy_lakitu_sub_act_no_spiny(void) {
-    //cur_obj_init_animation_with_sound(1);
+    cur_obj_init_animation_with_sound(1);
 
     if (o->oEnemyLakituSpinyCooldown != 0) {
         o->oEnemyLakituSpinyCooldown--;
     } else if (o->oEnemyLakituNumSpinies < 3 && o->oDistanceToMario < 800.0f
                && abs_angle_diff(o->oAngleToMario, o->oFaceAngleYaw) < 0x4000) {
-        struct Object *spiny = spawn_object(o, MODEL_CHUCKYA, bhvChuckya);
+        struct Object *spiny = spawn_object(o, MODEL_SPINY_BALL, bhvSpiny);
         if (spiny != NULL) {
             o->prevObj = spiny;
             spiny->oAction = SPINY_ACT_HELD_BY_LAKITU;
-            //obj_init_animation_with_sound(spiny, spiny_egg_seg5_anims_050157E4, 0);
+            obj_init_animation_with_sound(spiny, spiny_egg_seg5_anims_050157E4, 0);
 
             o->oEnemyLakituNumSpinies++;
             o->oSubAction = ENEMY_LAKITU_SUB_ACT_HOLD_SPINY;
@@ -117,7 +117,7 @@ static void enemy_lakitu_sub_act_no_spiny(void) {
  * enter the throw spiny sub-action.
  */
 static void enemy_lakitu_sub_act_hold_spiny(void) {
-    //cur_obj_init_anim_extend(3);
+    cur_obj_init_anim_extend(3);
 
     if (o->oEnemyLakituSpinyCooldown != 0) {
         o->oEnemyLakituSpinyCooldown--;
@@ -135,12 +135,12 @@ static void enemy_lakitu_sub_act_hold_spiny(void) {
  * Throw the spiny, then enter the no spiny sub-action.
  */
 static void enemy_lakitu_sub_act_throw_spiny(void) {
-    if (o->oTimer == 2) {
+    if (cur_obj_init_anim_check_frame(2, 2)) {
         cur_obj_play_sound_2(SOUND_OBJ_EVIL_LAKITU_THROW);
         o->prevObj = NULL;
     }
 
-    if (o->oTimer == 30) {
+    if (cur_obj_check_if_near_animation_end()) {
         o->oSubAction = ENEMY_LAKITU_SUB_ACT_NO_SPINY;
         o->oEnemyLakituSpinyCooldown = random_linear_offset(100, 100);
     }
@@ -182,14 +182,6 @@ static void enemy_lakitu_act_main(void) {
     }
 }
 
-void bhv_lakitu_adopt_red_coin(void) {
-    f32 dist;
-    struct Object *redCoin = cur_obj_find_nearest_object_with_behavior(bhvRedCoin, &dist);
-    if (redCoin) {
-        o->oLakituRedCoin = redCoin;
-    }
-}
-
 /**
  * Update function for bhvEnemyLakitu.
  */
@@ -198,12 +190,6 @@ void bhv_enemy_lakitu_update(void) {
 
     treat_far_home_as_mario(2000.0f);
 
-    if (o->oLakituRedCoin) {
-        o->oLakituRedCoin->oPosX = o->oPosX;
-        o->oLakituRedCoin->oPosY = o->oPosY + 10;
-        o->oLakituRedCoin->oPosZ = o->oPosZ;
-    }
-
     switch (o->oAction) {
         case ENEMY_LAKITU_ACT_UNINITIALIZED:
             enemy_lakitu_act_uninitialized();
diff --git a/src/game/behaviors/exclamation_box.inc.c b/src/game/behaviors/exclamation_box.inc.c
index cbc50717..34738d57 100644
--- a/src/game/behaviors/exclamation_box.inc.c
+++ b/src/game/behaviors/exclamation_box.inc.c
@@ -30,7 +30,7 @@ struct ExclamationBoxContents sExclamationBoxContents[] = {
     { EXCLAMATION_BOX_BP_COINS_10,         0, 0, MODEL_NONE,             bhvTenCoinsSpawn         },
     { EXCLAMATION_BOX_BP_1UP_WALKING,      0, 0, MODEL_1UP,              bhv1upWalking            },
     { EXCLAMATION_BOX_BP_STAR_1,           0, 0, MODEL_STAR,             bhvSpawnedStar           },
-    { EXCLAMATION_BOX_BP_1UP_RUNNING_AWAY, 0, 0, MODEL_1UP,              bhvHidden1upInPole        },
+    { EXCLAMATION_BOX_BP_1UP_RUNNING_AWAY, 0, 0, MODEL_1UP,              bhv1upRunningAway        },
     { EXCLAMATION_BOX_BP_STAR_2,           0, 1, MODEL_STAR,             bhvSpawnedStar           },
     { EXCLAMATION_BOX_BP_STAR_3,           0, 2, MODEL_STAR,             bhvSpawnedStar           },
     { EXCLAMATION_BOX_BP_STAR_4,           0, 3, MODEL_STAR,             bhvSpawnedStar           },
diff --git a/src/game/behaviors/goomba.inc.c b/src/game/behaviors/goomba.inc.c
index a8921660..2180243e 100644
--- a/src/game/behaviors/goomba.inc.c
+++ b/src/game/behaviors/goomba.inc.c
@@ -115,7 +115,7 @@ void bhv_goomba_init(void) {
 
     obj_set_hitbox(o, &sGoombaHitbox);
 
-    //o->oDrawingDistance = sGoombaProperties[o->oGoombaSize].drawDistance;
+    o->oDrawingDistance = sGoombaProperties[o->oGoombaSize].drawDistance;
     o->oDamageOrCoinValue = sGoombaProperties[o->oGoombaSize].damage;
 
     o->oGravity = -8.0f / 3.0f * o->oGoombaScale;
diff --git a/src/game/behaviors/moneybag.inc.c b/src/game/behaviors/moneybag.inc.c
index d965f7cf..dc06a877 100644
--- a/src/game/behaviors/moneybag.inc.c
+++ b/src/game/behaviors/moneybag.inc.c
@@ -146,7 +146,7 @@ void moneybag_act_return_home(void) {
     moneybag_check_mario_collision();
 
     if (is_point_close_to_object(o, o->oHomeX, o->oHomeY, o->oHomeZ, 100)) {
-        spawn_object(o, MODEL_RED_COIN, bhvMoneybagHidden);
+        spawn_object(o, MODEL_YELLOW_COIN, bhvMoneybagHidden);
         cur_obj_play_sound_2(SOUND_GENERAL_VANISH_SFX);
         cur_obj_init_animation(0);
         o->oAction = MONEYBAG_ACT_DISAPPEAR;
diff --git a/src/game/behaviors/mushroom_1up.inc.c b/src/game/behaviors/mushroom_1up.inc.c
index 95ef5337..083d366e 100644
--- a/src/game/behaviors/mushroom_1up.inc.c
+++ b/src/game/behaviors/mushroom_1up.inc.c
@@ -10,7 +10,6 @@ void bhv_1up_interact(void) {
 #endif
 #endif
         gMarioState->numLives++;
-        gMarioState->squishTimer = 69;
 #ifdef SAVE_NUM_LIVES
         save_file_set_num_lives(gMarioState->numLives);
 #endif
diff --git a/src/game/behaviors/sponge_circle.inc.c b/src/game/behaviors/sponge_circle.inc.c
deleted file mode 100644
index 30f6ddd5..00000000
--- a/src/game/behaviors/sponge_circle.inc.c
+++ /dev/null
@@ -1,18 +0,0 @@
-void bhv_sponge_circle_init(void) {
-    o->oAngleVelRoll = random_u16() / 64;
-    o->oAngleVelYaw = random_u16() / 64;
-    o->oAngleVelPitch = random_u16() / 64;
-}
-
-void bhv_sponge_circle_loop(void) {
-   o->oFaceAngleYaw += o->oAngleVelYaw;
-   o->oFaceAnglePitch += o->oAngleVelPitch;
-   o->oFaceAngleRoll += o->oAngleVelRoll;
-
-   if (gMarioState->pos[1] < -8000) {
-    if (random_u16() % 60 == 1) {
-        play_sound(SOUND_SPONGE, gMarioState->marioObj->header.gfx.cameraToObject);
-    }
-   }
-}
-
diff --git a/src/game/behaviors/troll_water_level.inc.c b/src/game/behaviors/troll_water_level.inc.c
deleted file mode 100644
index 9a86ce5f..00000000
--- a/src/game/behaviors/troll_water_level.inc.c
+++ /dev/null
@@ -1,8 +0,0 @@
-void bhv_troll_water_level_init(void) {
-   
-}
-
-void bhv_troll_water_level_loop(void) {
-   o->oPosY = gEnvironmentLevels[0];
-}
-
diff --git a/src/game/behaviors/wdw_water_level.inc.c b/src/game/behaviors/wdw_water_level.inc.c
index 9fe179e9..aa5eec16 100644
--- a/src/game/behaviors/wdw_water_level.inc.c
+++ b/src/game/behaviors/wdw_water_level.inc.c
@@ -26,7 +26,7 @@ void bhv_water_level_diamond_loop(void) {
                 break;
 
             case WATER_LEVEL_DIAMOND_ACT_IDLE:
-                if (!gWDWWaterLevelChanging && gMarioState->pos[2] < -5000) {
+                if (!gWDWWaterLevelChanging && obj_check_if_collided_with_object(o, gMarioObject)) {
                     o->oAction++; // WATER_LEVEL_DIAMOND_ACT_CHANGE_WATER_LEVEL
                     gWDWWaterLevelChanging = TRUE;
                 }
@@ -35,8 +35,8 @@ void bhv_water_level_diamond_loop(void) {
             case WATER_LEVEL_DIAMOND_ACT_CHANGE_WATER_LEVEL:
                 o->oAngleVelYaw = 0;
                 gEnvironmentLevels[0] = (s32) approach_f32_symmetric(
-                    (f32) gEnvironmentLevels[0], -10000, 20.0f);
-                if (gEnvironmentLevels[0] == -10000) {
+                    (f32) gEnvironmentLevels[0], (f32) o->oWaterLevelTriggerTargetWaterLevel, 10.0f);
+                if (gEnvironmentLevels[0] == o->oWaterLevelTriggerTargetWaterLevel) {
                     if ((s16) o->oFaceAngleYaw == 0) {
                         o->oAction++; // WATER_LEVEL_DIAMOND_ACT_IDLE_SPINNING
                     } else {
diff --git a/src/game/camera.c b/src/game/camera.c
index fe77243e..f9bf782c 100644
--- a/src/game/camera.c
+++ b/src/game/camera.c
@@ -3584,7 +3584,6 @@ s32 set_cam_angle(s32 mode) {
             gCameraMovementFlags &= ~CAM_MOVE_ZOOMED_OUT;
         }
         sCameraSoundFlags |= CAM_SOUND_MARIO_ACTIVE;
-        gBetterMarioCam = 1;
     }
 
     // Switch back to normal mode
@@ -3597,7 +3596,6 @@ s32 set_cam_angle(s32 mode) {
             gCameraMovementFlags &= ~CAM_MOVE_ZOOMED_OUT;
         }
         sCameraSoundFlags |= CAM_SOUND_NORMAL_ACTIVE;
-        gBetterMarioCam = 0;
     }
     if (sSelectionFlags & CAM_MODE_MARIO_ACTIVE) {
         curMode = CAM_ANGLE_MARIO;
@@ -6060,9 +6058,6 @@ struct CameraTrigger sCamBBH[] = {
  *
  * Each table is terminated with NULL_TRIGGER
  */
-struct CameraTrigger sCamCastleGrounds[] = {
-	NULL_TRIGGER
-};
 struct CameraTrigger *sCameraTriggers[LEVEL_COUNT + 1] = {
     NULL,
     #include "levels/level_defines.h"
@@ -6124,10 +6119,10 @@ struct CutsceneSplinePoint sIntroPipeToDialogFocus[] = {
 #else
 struct CutsceneSplinePoint sIntroPipeToDialogFocus[] = {
     { 0, 20, { -1248, 450, 4596 } }, { 1, 59, { -1258, 485, 4606 } }, { 2, 59, { -1379, 344, 4769 } },
-    { 3, 20, { -1335, 366, 4815 } }, { 4, 23, { -1315, 370, 4450 } }, { 5, 40, { -1322, -333, 4591 } },
-    { 6, 25, { -1185, -329, 4616 } }, { 7, 21, { -1059, -380, 4487 } }, { 8, 14, { -1086, 421, 4206 } },
-    { 9, 21, { -1321, 100, 4098 } }, { 0, 0, { -1328, 185, 4354 } },  { 0, 0, { -1328, 185, 4354 } },
-    { 0, 0, { -1328, 285, 4354 } },  { -1, 0, { -1328, 385, 4354 } }
+    { 3, 20, { -1335, 366, 4815 } }, { 4, 23, { -1315, 370, 4450 } }, { 5, 40, { -1322, 333, 4591 } },
+    { 6, 25, { -1185, 329, 4616 } }, { 7, 21, { -1059, 380, 4487 } }, { 8, 14, { -1086, 421, 4206 } },
+    { 9, 21, { -1321, 346, 4098 } }, { 0, 0, { -1328, 385, 4354 } },  { 0, 0, { -1328, 385, 4354 } },
+    { 0, 0, { -1328, 385, 4354 } },  { -1, 0, { -1328, 385, 4354 } }
 };
 #endif
 
@@ -6710,7 +6705,6 @@ void cutscene_intro_peach_start_letter_music(UNUSED struct Camera *c) {
 void cutscene_intro_peach_start_flying_music(UNUSED struct Camera *c) {
     seq_player_unlower_volume(SEQ_PLAYER_LEVEL, 60);
     cutscene_intro_peach_play_lakitu_flying_music();
-    gShitMusic = 1;
 }
 
 #ifdef VERSION_EU
@@ -10399,26 +10393,26 @@ u8 sDanceCutsceneIndexTable[][4] = {
  * and if the result is non-zero, the camera will zoom out.
  */
 u8 sZoomOutAreaMasks[] = {
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // Unused         | Unused
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // Unused         | Unused
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // BBH            | CCM
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // CASTLE_INSIDE  | HMC
-	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // SSL            | BOB
-	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // SL             | WDW
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 1, 0, 0), // JRB            | THI
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // TTC            | RR
-	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // CASTLE_GROUNDS | BITDW
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // VCUTM          | BITFS
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // SA             | BITS
-	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // LLL            | DDD
-	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // WF             | ENDING
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // COURTYARD      | PSS
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // COTMC          | TOTWC
-	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 1, 0, 0, 0), // BOWSER_1       | WMOTR
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 1, 0, 0, 0), // Unused         | BOWSER_2
-	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // BOWSER_3       | Unused
-	ZOOMOUT_AREA_MASK(1, 0, 0, 0, 0, 0, 0, 0), // TTM            | Unused
-	ZOOMOUT_AREA_MASK(0, 0, 0, 0, 0, 0, 0, 0), // Unused         | Unused
+    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // Unused         | Unused
+    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // Unused         | Unused
+    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // BBH            | CCM
+    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // CASTLE_INSIDE  | HMC
+    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // SSL            | BOB
+    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // SL             | WDW
+    ZOOMOUT_AREA_MASK(0,0,0,0, 1,1,0,0), // JRB            | THI
+    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // TTC            | RR
+    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // CASTLE_GROUNDS | BITDW
+    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // VCUTM          | BITFS
+    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // SA             | BITS
+    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // LLL            | DDD
+    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // WF             | ENDING
+    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // COURTYARD      | PSS
+    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // COTMC          | TOTWC
+    ZOOMOUT_AREA_MASK(1,0,0,0, 1,0,0,0), // BOWSER_1       | WMOTR
+    ZOOMOUT_AREA_MASK(0,0,0,0, 1,0,0,0), // Unused         | BOWSER_2
+    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // BOWSER_3       | Unused
+    ZOOMOUT_AREA_MASK(1,0,0,0, 0,0,0,0), // TTM            | Unused
+    ZOOMOUT_AREA_MASK(0,0,0,0, 0,0,0,0), // Unused         | Unused
 };
 
 STATIC_ASSERT(ARRAY_COUNT(sZoomOutAreaMasks) - 1 == LEVEL_MAX / 2, "Make sure you edit sZoomOutAreaMasks when adding / removing courses.");
diff --git a/src/game/game_init.c b/src/game/game_init.c
index 189396ad..cd09fa3c 100644
--- a/src/game/game_init.c
+++ b/src/game/game_init.c
@@ -48,8 +48,6 @@ u8 gControllerBits;
 u8 gIsConsole = TRUE; // Needs to be initialized before audio_reset_session is called
 u8 gCacheEmulated = TRUE;
 u8 gBorderHeight;
-u8 gShitMusic;
-u8 gBetterMarioCam;
 #ifdef VANILLA_STYLE_CUSTOM_DEBUG
 u8 gCustomDebugMode;
 #endif
diff --git a/src/game/game_init.h b/src/game/game_init.h
index a06af591..36916060 100644
--- a/src/game/game_init.h
+++ b/src/game/game_init.h
@@ -50,8 +50,6 @@ extern u8 gControllerBits;
 extern u8 gIsConsole;
 extern u8 gCacheEmulated;
 extern u8 gBorderHeight;
-extern u8 gShitMusic;
-extern u8 gBetterMarioCam;
 #ifdef VANILLA_STYLE_CUSTOM_DEBUG
 extern u8 gCustomDebugMode;
 #endif
diff --git a/src/game/ingame_menu.c b/src/game/ingame_menu.c
index fe4806d9..45268e4c 100644
--- a/src/game/ingame_menu.c
+++ b/src/game/ingame_menu.c
@@ -2199,7 +2199,7 @@ s32 render_menus_and_dialogs(void) {
         gDialogColorFadeTimer = (s16) gDialogColorFadeTimer + 0x1000;
     } else if (gDialogID != DIALOG_NONE) {
         // The Peach "Dear Mario" message needs to be repositioned separately
-        if (gDialogID == DIALOG_020 || gDialogID == DIALOG_019) {
+        if (gDialogID == DIALOG_020) {
             print_peach_letter_message();
             return mode;
         }
diff --git a/src/game/ingame_menu.h b/src/game/ingame_menu.h
index 9fb325c1..e5fd6410 100644
--- a/src/game/ingame_menu.h
+++ b/src/game/ingame_menu.h
@@ -53,7 +53,6 @@ extern s8 gHudFlash;
 
 extern s8 gDialogCourseActNum;
 extern s16 gInGameLanguage;
-extern s16 gDialogID;
 
 struct DialogEntry {
     /*0x00*/ u32 unused;
diff --git a/src/game/level_update.c b/src/game/level_update.c
index 36e36bb0..6b2d27c0 100644
--- a/src/game/level_update.c
+++ b/src/game/level_update.c
@@ -1,4 +1,3 @@
-#include "texscroll.h"
 #include <ultra64.h>
 
 #include "sm64.h"
@@ -1141,7 +1140,7 @@ s32 update_level(void) {
 
     switch (sCurrPlayMode) {
         case PLAY_MODE_NORMAL:
-            changeLevel = play_mode_normal(); scroll_textures();
+            changeLevel = play_mode_normal();
             break;
         case PLAY_MODE_PAUSED:
             changeLevel = play_mode_paused();
@@ -1314,7 +1313,6 @@ s32 lvl_set_current_level(UNUSED s16 initOrUpdate, s32 levelNum) {
     sWarpCheckpointActive = FALSE;
     gCurrLevelNum = levelNum;
     gCurrCourseNum = gLevelToCourseNumTable[levelNum - 1];
-	if (gCurrLevelNum == LEVEL_CASTLE_GROUNDS) return 0;
 
     if (gCurrDemoInput != NULL || gCurrCreditsEntry != NULL || gCurrCourseNum == COURSE_NONE) {
         return FALSE;
diff --git a/src/game/mario.c b/src/game/mario.c
index cffa552e..acce2d69 100644
--- a/src/game/mario.c
+++ b/src/game/mario.c
@@ -124,65 +124,6 @@ s16 set_mario_anim_with_accel(struct MarioState *m, s32 targetAnimID, s32 accel)
     return marioObj->header.gfx.animInfo.animFrame;
 }
 
-extern const struct Animation *const ragdoll_mario_anims[];
-
-s16 set_custom_mario_animation(struct MarioState *m, s32 targetAnimID) {
-    struct Object *o = m->marioObj;
-
-    if (o->header.gfx.animInfo.animID != targetAnimID) {
-        struct Animation **animPtrAddr = &ragdoll_mario_anims[targetAnimID];
-        struct Animation **animSegmented = segmented_to_virtual(animPtrAddr);
-        struct Animation *targetAnim = segmented_to_virtual(*animSegmented);
-
-        o->header.gfx.animInfo.animID = targetAnimID;
-        o->header.gfx.animInfo.curAnim = targetAnim;
-        o->header.gfx.animInfo.animAccel = 0;
-        o->header.gfx.animInfo.animYTrans = m->animYTrans;
-
-        if (targetAnim->flags & ANIM_FLAG_NO_ACCEL) {
-            o->header.gfx.animInfo.animFrame = targetAnim->startFrame;
-        } else {
-            if (targetAnim->flags & ANIM_FLAG_FORWARD) {
-                o->header.gfx.animInfo.animFrame = targetAnim->startFrame + 1;
-            } else {
-                o->header.gfx.animInfo.animFrame = targetAnim->startFrame - 1;
-            }
-        }
-    }
-
-    return o->header.gfx.animInfo.animFrame;
-}
-
-s16 set_custom_mario_animation_with_accel(struct MarioState *m, s32 targetAnimID, s32 accel) {
-    struct Object *o = m->marioObj;
-
-    if (o->header.gfx.animInfo.animID != targetAnimID) {
-        struct Animation **animPtrAddr = &ragdoll_mario_anims[targetAnimID];
-        struct Animation **animSegmented = segmented_to_virtual(animPtrAddr);
-        struct Animation *targetAnim = segmented_to_virtual(*animSegmented);
-
-        o->header.gfx.animInfo.animID = targetAnimID;
-        o->header.gfx.animInfo.curAnim = targetAnim;
-        o->header.gfx.animInfo.animYTrans = m->animYTrans;
-
-        if (targetAnim->flags & ANIM_FLAG_NO_ACCEL) {
-            o->header.gfx.animInfo.animFrameAccelAssist = (targetAnim->startFrame << 0x10);
-        } else {
-            if (targetAnim->flags & ANIM_FLAG_FORWARD) {
-                o->header.gfx.animInfo.animFrameAccelAssist = (targetAnim->startFrame << 0x10) + accel;
-            } else {
-                o->header.gfx.animInfo.animFrameAccelAssist = (targetAnim->startFrame << 0x10) - accel;
-            }
-        }
-
-        o->header.gfx.animInfo.animFrame = (o->header.gfx.animInfo.animFrameAccelAssist >> 0x10);
-    }
-
-    o->header.gfx.animInfo.animAccel = accel;
-
-    return o->header.gfx.animInfo.animFrame;
-}
-
 /**
  * Sets the animation to a specific "next" frame from the frame given.
  */
@@ -784,7 +725,7 @@ void set_mario_y_vel_based_on_fspeed(struct MarioState *m, f32 initialVelY, f32
     // It was likely trampoline related based on code location.
     m->vel[1] = initialVelY + get_additive_y_vel_for_jumps() + m->forwardVel * multiplier;
 
-    if (m->squishTimer != 69  && (m->squishTimer != 0 || m->quicksandDepth > 1.0f)) {
+    if (m->squishTimer != 0 || m->quicksandDepth > 1.0f) {
         m->vel[1] *= 0.5f;
     }
 }
@@ -1235,11 +1176,7 @@ void squish_mario_model(struct MarioState *m) {
                 ((sSquishScaleOverTime[15 - m->squishTimer] * 0.4f) / 100.0f) + 1.0f;
 
             m->marioObj->header.gfx.scale[2] = m->marioObj->header.gfx.scale[0];
-        } else if (m->squishTimer == 69) {
-            vec3f_set(m->marioObj->header.gfx.scale, 0.2f, 0.2f, 0.2f);
-        }
-        
-        else {
+        } else {
             m->squishTimer -= 1;
 
             vec3f_set(m->marioObj->header.gfx.scale, 1.4f, 0.4f, 1.4f);
@@ -1760,15 +1697,6 @@ void queue_rumble_particles(struct MarioState *m) {
 s32 execute_mario_action(UNUSED struct Object *obj) {
     s32 inLoop = TRUE;
 
-    if (gPlayer1Controller->buttonPressed & D_JPAD) {
-        gBetterMarioCam = 1;
-    }
-
-    if (gMarioState->flags & MARIO_METAL_CAP && !(gMarioState->action == ACT_IDLE || gMarioState->action == ACT_PUTTING_ON_CAP)) {
-
-        set_mario_action(gMarioState, ACT_IDLE, 0);
-    }
-
     // Updates once per frame:
     vec3f_get_dist_and_lateral_dist_and_angle(gMarioState->prevPos, gMarioState->pos, &gMarioState->moveSpeed, &gMarioState->lateralSpeed, &gMarioState->movePitch, &gMarioState->moveYaw);
     vec3f_copy(gMarioState->prevPos, gMarioState->pos);
diff --git a/src/game/mario.h b/src/game/mario.h
index 7380abf0..cb2df1a1 100644
--- a/src/game/mario.h
+++ b/src/game/mario.h
@@ -8,8 +8,6 @@
 
 s32 is_anim_at_end(struct MarioState *m);
 s32 is_anim_past_end(struct MarioState *m);
-s16 set_custom_mario_animation(struct MarioState *m, s32 targetAnimID);
-s16 set_custom_mario_animation_with_accel(struct MarioState *m, s32 targetAnimID, s32 accel);
 s16 set_mario_animation(struct MarioState *m, s32 targetAnimID);
 s16 set_mario_anim_with_accel(struct MarioState *m, s32 targetAnimID, s32 accel);
 void set_anim_to_frame(struct MarioState *m, s16 animFrame);
diff --git a/src/game/mario_actions_cutscene.c b/src/game/mario_actions_cutscene.c
index 1be05b3b..8a65acc6 100644
--- a/src/game/mario_actions_cutscene.c
+++ b/src/game/mario_actions_cutscene.c
@@ -1713,7 +1713,6 @@ static void intro_cutscene_raise_pipe(struct MarioState *m) {
     }
 
     if (m->actionTimer++ == TIMER_RAISE_PIPE) {
-        
         m->vel[1] = 60.0f;
         advance_cutscene_step(m);
     }
@@ -1726,7 +1725,6 @@ static void intro_cutscene_jump_out_of_pipe(struct MarioState *m) {
     }
 
     if (m->actionTimer++ >= 118) {
-        gShitMusic = 0;
         m->marioObj->header.gfx.node.flags |= GRAPH_RENDER_ACTIVE;
 
         play_sound_if_no_flag(m, SOUND_ACTION_HIT_3, MARIO_ACTION_SOUND_PLAYED);
@@ -1735,23 +1733,35 @@ static void intro_cutscene_jump_out_of_pipe(struct MarioState *m) {
         set_mario_animation(m, MARIO_ANIM_SINGLE_JUMP);
         mario_set_forward_vel(m, 10.0f);
         if (perform_air_step(m, AIR_STEP_CHECK_NONE) == AIR_STEP_LANDED) {
-            set_mario_action(m, ACT_RAGDOLL, 0);
-            play_sound(SOUND_RAGDOLL, m->marioObj->header.gfx.cameraToObject);
-            obj_mark_for_deletion(sIntroWarpPipeObj);
+            sound_banks_enable(SEQ_PLAYER_SFX, SOUND_BANKS_DISABLED_DURING_INTRO_CUTSCENE);
+            play_mario_landing_sound(m, SOUND_ACTION_TERRAIN_LANDING);
+            play_sound(SOUND_MARIO_HAHA, m->marioObj->header.gfx.cameraToObject);
             advance_cutscene_step(m);
         }
     }
 }
 
 static void intro_cutscene_land_outside_pipe(struct MarioState *m) {
+    set_mario_animation(m, MARIO_ANIM_LAND_FROM_SINGLE_JUMP);
+
+    if (is_anim_at_end(m)) {
         advance_cutscene_step(m);
+    }
 
     stop_and_set_height_to_floor(m);
 }
 
 static void intro_cutscene_lower_pipe(struct MarioState *m) {
+    if (m->actionTimer++ == 0) {
+        play_sound(SOUND_MENU_ENTER_PIPE, sIntroWarpPipeObj->header.gfx.cameraToObject);
+        set_mario_animation(m, MARIO_ANIM_FIRST_PERSON);
+    }
 
-    
+    sIntroWarpPipeObj->oPosY -= 5.0f;
+    if (sIntroWarpPipeObj->oPosY <= 50.0f) {
+        obj_mark_for_deletion(sIntroWarpPipeObj);
+        advance_cutscene_step(m);
+    }
 
     stop_and_set_height_to_floor(m);
 }
diff --git a/src/game/mario_actions_moving.c b/src/game/mario_actions_moving.c
index a1412e69..23dc7a87 100644
--- a/src/game/mario_actions_moving.c
+++ b/src/game/mario_actions_moving.c
@@ -14,9 +14,6 @@
 #include "memory.h"
 #include "behavior_data.h"
 #include "rumble_init.h"
-#include "src/game/game_init.h"
-#include "seq_ids.h"
-#include "src/game/ingame_menu.h"
 
 #include "config.h"
 
@@ -1775,28 +1772,6 @@ s32 act_jump_land(struct MarioState *m) {
     return FALSE;
 }
 
-s32 act_ragdoll(struct MarioState *m) {
-    m->marioObj->header.gfx.sharedChild = gLoadedGraphNodes[MODEL_MARIO_RAGDOLL];
-    set_custom_mario_animation(m, 0);
-    m->marioObj->header.gfx.angle[0] = 0x8000;
-    m->marioObj->header.gfx.angle[1] = 0x0;
-
-    if (m->actionTimer++ < 35) {
-        m->marioObj->header.gfx.pos[1] -= 3.0f;
-        m->marioObj->header.gfx.pos[2] -= 1.0f;
-    }
-
-    if (m->actionTimer > 150 && gDialogID == -1) {
-        if (m->input & INPUT_A_PRESSED) {
-            play_secondary_music(SEQ_LEVEL_GRASS, 0, 255, 10);
-            gShitMusic = 1;
-            return set_mario_action(m, ACT_JUMP, 0);
-    }
-        
-    }
-    return FALSE;
-}
-
 s32 act_freefall_land(struct MarioState *m) {
     if (common_landing_cancels(m, &sFreefallLandAction, set_jumping_action)) {
         return TRUE;
@@ -2013,7 +1988,6 @@ s32 mario_execute_moving_action(struct MarioState *m) {
         case ACT_GROUND_BONK:              cancel = act_ground_bonk(m);              break;
         case ACT_DEATH_EXIT_LAND:          cancel = act_death_exit_land(m);          break;
         case ACT_JUMP_LAND:                cancel = act_jump_land(m);                break;
-        case ACT_RAGDOLL:                cancel = act_ragdoll(m);                break;
         case ACT_FREEFALL_LAND:            cancel = act_freefall_land(m);            break;
         case ACT_DOUBLE_JUMP_LAND:         cancel = act_double_jump_land(m);         break;
         case ACT_SIDE_FLIP_LAND:           cancel = act_side_flip_land(m);           break;
diff --git a/src/game/mario_actions_stationary.c b/src/game/mario_actions_stationary.c
index 8f318ccb..b0692e54 100644
--- a/src/game/mario_actions_stationary.c
+++ b/src/game/mario_actions_stationary.c
@@ -104,13 +104,6 @@ s32 check_common_hold_idle_cancels(struct MarioState *m) {
 
 //! TODO: actionArg names
 s32 act_idle(struct MarioState *m) {
-
-    if (m->flags & MARIO_METAL_CAP) {
-        m->capTimer = 900;
-        m->marioObj->header.gfx.animInfo.curAnim->flags |= ANIM_FLAG_NO_ACCEL;
-        return FALSE;
-    }
-
     if (m->quicksandDepth > 30.0f) {
         return set_mario_action(m, ACT_IN_QUICKSAND, 0);
     }
@@ -542,6 +535,7 @@ s32 act_crouching(struct MarioState *m) {
     }
 
     stationary_ground_step(m);
+    set_mario_animation(m, MARIO_ANIM_CROUCHING);
     return FALSE;
 }
 
diff --git a/src/game/memory.h b/src/game/memory.h
index e7fca38f..7785c5c2 100644
--- a/src/game/memory.h
+++ b/src/game/memory.h
@@ -82,6 +82,4 @@ void *alloc_display_list(u32 size);
 void setup_dma_table_list(struct DmaHandlerList *list, void *srcAddr, void *buffer);
 s32 load_patchable_table(struct DmaHandlerList *list, s32 index);
 
-
-extern uintptr_t sSegmentROMTable[32];
 #endif // MEMORY_H
diff --git a/src/game/object_helpers.c b/src/game/object_helpers.c
index 5b8258b6..c63dd3be 100644
--- a/src/game/object_helpers.c
+++ b/src/game/object_helpers.c
@@ -45,30 +45,6 @@ Gfx *geo_update_projectile_pos_from_parent(s32 callContext, UNUSED struct GraphN
     return NULL;
 }
 
-
-Gfx *geo_peach_head_scaler(s32 callContext, struct GraphNode *node, UNUSED Mat4 *mtx) {
-    struct GraphNodeScaleBetter *scaleNode = (struct GraphNodeScaleBetter *) node->next;
-    struct Object *obj;
-
-    obj = (struct Object *) gCurGraphNodeObject;
-
-    if (callContext == GEO_CONTEXT_RENDER) {
-        if (obj->oTimer > 90) {
-            scaleNode->scaleY = 1.0f + (((f32)o->oTimer - 90.0f) / 30.0f);
-        }
-        else if (obj->oAction == 3) {
-            scaleNode->scaleY = 5.0f + (((f32)o->oTimer) / 30.0f);
-        }
-
-        if (obj->oTimer == 110) {
-            gDialogID = DIALOG_019;
-        }
-        
-    }
-    
-    return NULL;
-}
-
 Gfx *geo_update_layer_transparency(s32 callContext, struct GraphNode *node, UNUSED void *context) {
     Gfx *dlStart = NULL;
 
@@ -663,7 +639,6 @@ struct Object *cur_obj_find_nearest_object_with_behavior(const BehaviorScript *b
     return closestObj;
 }
 
-
 struct Object *find_unimportant_object(void) {
     struct ObjectNode *listHead = &gObjectLists[OBJ_LIST_UNIMPORTANT];
     struct ObjectNode *obj = listHead->next;
@@ -2273,20 +2248,6 @@ s32 obj_attack_collided_from_other_object(struct Object *obj) {
     return FALSE;
 }
 
-s32 obj_cappy_collide(struct Object *obj) {
-    if (obj->numCollidedObjs != 0) {
-        struct Object *other = obj->collidedObjs[0];
-
-        if (other != gMarioObject) {
-            obj->oCappyObj = other;
-            play_sound(SOUND_SPONGE, gMarioState->marioObj->header.gfx.cameraToObject);
-            return TRUE;
-        }
-    }
-
-    return FALSE;
-}
-
 s32 cur_obj_was_attacked_or_ground_pounded(void) {
     s32 attacked = FALSE;
 
diff --git a/src/game/object_helpers.h b/src/game/object_helpers.h
index a1bca470..99169aa1 100644
--- a/src/game/object_helpers.h
+++ b/src/game/object_helpers.h
@@ -59,9 +59,6 @@ enum GeoUpdateLayerTransparencyModes {
     GEO_TRANSPARENCY_MODE_INTER     = 30,
 };
 
-Gfx *geo_peach_head_scaler(s32 callContext, struct GraphNode *node, UNUSED Mat4 *mtx);
-s32 obj_cappy_collide(struct Object *obj);
-
 Gfx *geo_update_projectile_pos_from_parent(s32 callContext, UNUSED struct GraphNode *node, Mat4 mtx);
 Gfx *geo_update_layer_transparency(s32 callContext, struct GraphNode *node, UNUSED void *context);
 Gfx *geo_switch_anim_state(s32 callContext, struct GraphNode *node, UNUSED void *context);
diff --git a/src/game/rendering_graph_node.c b/src/game/rendering_graph_node.c
index 5eaa14b1..6763218b 100644
--- a/src/game/rendering_graph_node.c
+++ b/src/game/rendering_graph_node.c
@@ -637,25 +637,6 @@ void geo_process_scale(struct GraphNodeScale *node) {
     append_dl_and_return((struct GraphNodeDisplayList *)node);
 }
 
-static void geo_process_scale_better(struct GraphNodeScaleBetter *node) {
-    UNUSED Mat4 transform;
-    Vec3f scaleVec;
-    Mtx *mtx = alloc_display_list(sizeof(*mtx));
-
-    vec3f_set(scaleVec, node->scaleX, node->scaleY, node->scaleZ);
-    mtxf_scale_vec3f(gMatStack[gMatStackIndex + 1], gMatStack[gMatStackIndex], scaleVec);
-    gMatStackIndex++;
-    mtxf_to_mtx(mtx, gMatStack[gMatStackIndex]);
-    gMatStackFixed[gMatStackIndex] = mtx;
-    if (node->displayList != NULL) {
-        geo_append_display_list(node->displayList, node->node.flags >> 8);
-    }
-    if (node->node.children != NULL) {
-        geo_process_node_and_siblings(node->node.children);
-    }
-    gMatStackIndex--;
-}
-
 /**
  * Process a billboard node. A transformation matrix is created that makes its
  * children face the camera, and it is pushed on the floating point and fixed
@@ -1235,9 +1216,6 @@ void geo_process_node_and_siblings(struct GraphNode *firstNode) {
                     case GRAPH_NODE_TYPE_BILLBOARD:            geo_process_billboard           ((struct GraphNodeBillboard           *) curGraphNode); break;
                     case GRAPH_NODE_TYPE_DISPLAY_LIST:         geo_process_display_list        ((struct GraphNodeDisplayList         *) curGraphNode); break;
                     case GRAPH_NODE_TYPE_SCALE:                geo_process_scale               ((struct GraphNodeScale               *) curGraphNode); break;
-                    case GRAPH_NODE_TYPE_SCALE_BETTER:
-                        geo_process_scale_better((struct GraphNodeScaleBetter *) curGraphNode); 
-                        break;
                     case GRAPH_NODE_TYPE_SHADOW:               geo_process_shadow              ((struct GraphNodeShadow              *) curGraphNode); break;
                     case GRAPH_NODE_TYPE_OBJECT_PARENT:        geo_process_object_parent       ((struct GraphNodeObjectParent        *) curGraphNode); break;
                     case GRAPH_NODE_TYPE_GENERATED_LIST:       geo_process_generated_list      ((struct GraphNodeGenerated           *) curGraphNode); break;
diff --git a/src/game/texscroll.c b/src/game/texscroll.c
deleted file mode 100644
index 220e8c27..00000000
--- a/src/game/texscroll.c
+++ /dev/null
@@ -1,22 +0,0 @@
-#include "types.h"
-#include "include/segment_symbols.h"
-#include "memory.h"
-#include "engine/math_util.h"
-#include "src/engine/behavior_script.h"
-#include "tile_scroll.h"
-#include "texscroll.h"
-
-#ifdef TARGET_N64
-#define SCROLL_CONDITION(condition) condition
-#else
-#define SCROLL_CONDITION(condition) 1
-#endif
-
-
-#include "src/game/texscroll/castle_grounds_texscroll.inc.c"
-void scroll_textures() {
-	if(SCROLL_CONDITION(sSegmentROMTable[0x7] == (uintptr_t)_castle_grounds_segment_7SegmentRomStart)) {
-		scroll_textures_castle_grounds();
-	}
-
-}
diff --git a/src/game/texscroll.h b/src/game/texscroll.h
deleted file mode 100644
index 551127ca..00000000
--- a/src/game/texscroll.h
+++ /dev/null
@@ -1,7 +0,0 @@
-#ifndef TEXSCROLL_H
-#define TEXSCROLL_H
-
-#include "src/game/texscroll/castle_grounds_texscroll.inc.h"
-extern void scroll_textures();
-
-#endif
diff --git a/src/game/texscroll/castle_grounds_texscroll.inc.c b/src/game/texscroll/castle_grounds_texscroll.inc.c
deleted file mode 100644
index 73c4ec43..00000000
--- a/src/game/texscroll/castle_grounds_texscroll.inc.c
+++ /dev/null
@@ -1,7 +0,0 @@
-#include "levels/castle_grounds/header.h"
-#include "levels/castle_grounds/troll_water/texscroll.inc.c"
-#include "levels/castle_grounds/texscroll.inc.c"
-void scroll_textures_castle_grounds() {
-		scroll_castle_grounds_level_geo_troll_water();
-	scroll_castle_grounds();
-}
diff --git a/src/game/texscroll/castle_grounds_texscroll.inc.h b/src/game/texscroll/castle_grounds_texscroll.inc.h
deleted file mode 100644
index 02db775d..00000000
--- a/src/game/texscroll/castle_grounds_texscroll.inc.h
+++ /dev/null
@@ -1,3 +0,0 @@
-#include "levels/castle_grounds/texscroll.inc.h"
-#include "levels/castle_grounds/troll_water/texscroll.inc.h"
-extern void scroll_textures_castle_grounds();
diff --git a/src/game/tile_scroll.c b/src/game/tile_scroll.c
deleted file mode 100644
index dfd4ece7..00000000
--- a/src/game/tile_scroll.c
+++ /dev/null
@@ -1,42 +0,0 @@
-#include <ultra64.h>
-#include "game/memory.h"
-#include "game/tile_scroll.h"
-
-
-/*
- * Parameters:
- * dl - Which display list to modify (make sure it's passed by reference).
- *
- * cmd - Location of the gsDPSetTileSize command in the display list.
- *
- * s/t - How much to scroll.
- */
-
-void shift_s(Gfx *dl, u32 cmd, u16 s) {
-    SetTileSize *tile = dl;
-    tile += cmd;
-    tile->s += s;
-    tile->u += s;
-}
-
-void shift_t(Gfx *dl, u32 cmd, u16 t) {
-    SetTileSize *tile = dl;
-    tile += cmd;
-    tile->t += t;
-    tile->v += t;
-}
-
-void shift_s_down(Gfx *dl, u32 cmd, u16 s) {
-    SetTileSize *tile = dl;
-    tile += cmd;
-    tile->s -= s;
-    tile->u += s;
-}
-
-void shift_t_down(Gfx *dl, u32 cmd, u16 t) {
-    SetTileSize *tile = dl;
-    tile += cmd;
-    tile->t -= t;
-    tile->v += t;
-}
-
diff --git a/src/game/tile_scroll.h b/src/game/tile_scroll.h
deleted file mode 100644
index 6a7c0c91..00000000
--- a/src/game/tile_scroll.h
+++ /dev/null
@@ -1,19 +0,0 @@
-#include "types.h"
-
-#define PACK_TILESIZE(w, d) ((w << 2) + d)
-
-typedef struct {
-    int cmd:8;
-    int s:12;
-    int t:12;
-    int pad:4;
-    int i:4;
-    int u:12;
-    int v:12;
-} SetTileSize;
-
-void shift_s(Gfx *dl, u32 cmd, u16 s);
-void shift_t(Gfx *dl, u32 cmd, u16 t);
-void shift_s_down(Gfx *dl, u32 cmd, u16 s);
-void shift_t_down(Gfx *dl, u32 cmd, u16 t);
-
diff --git a/src/menu/star_select.c b/src/menu/star_select.c
index f07c9fe5..3a160c6b 100644
--- a/src/menu/star_select.c
+++ b/src/menu/star_select.c
@@ -1,4 +1,3 @@
-#include "src/game/texscroll.h"
 #include <PR/ultratypes.h>
 
 #include "audio/external.h"
@@ -444,7 +443,7 @@ s32 lvl_update_obj_and_load_act_button_actions(UNUSED s32 arg, UNUSED s32 unused
         }
     }
 
-    area_update_objects(); scroll_textures();
+    area_update_objects();
     sActSelectorMenuTimer++;
     return sLoadedActNum;
 }
diff --git a/text/us/dialogs.h b/text/us/dialogs.h
index 089c18ab..4b811066 100644
--- a/text/us/dialogs.h
+++ b/text/us/dialogs.h
@@ -219,17 +219,20 @@ Do you want to Save?\n\
 \n\
 //You Bet//Not Now"))
 
-DEFINE_DIALOG(DIALOG_015, 1, 6, 30, 200, _("\
-Mario: look its capy!!!\n\
-I can thrown cappy to poses\n\
-emenies!!!!"))
+DEFINE_DIALOG(DIALOG_015, 1, 4, 30, 200, _("\
+You can punch enemies to\n\
+knock them down. Press [A]\n\
+to jump, [B] to punch.\n\
+Press [A] then [B] to Kick.\n\
+To pick something up,\n\
+press [B], too. To throw\n\
+something you're holding,\n\
+press [B] again."))
 
 DEFINE_DIALOG(DIALOG_016, 1, 3, 30, 200, _("\
-THIS IS THE LEAD CAP\n\
-not cloud cap otr metal\n\
-cap!\n\
-the diference is lead\n\
-is hevier!"))
+Hop on the shiny shell and\n\
+ride wherever you want to\n\
+go! Shred those enemies!"))
 
 DEFINE_DIALOG(DIALOG_017, 1, 4, 30, 200, _("\
 I'm the Big Bob-omb, lord\n\
@@ -258,15 +261,14 @@ this royal turf? I think\n\
 that you cannot!"))
 
 DEFINE_DIALOG(DIALOG_018, 1, 4, 30, 200, _("\
-kaiso area warning hard"))
-
-DEFINE_DIALOG(DIALOG_019, 1, 6, 95, 150, _("\
-Dear Mario:\n\
-AAAAAAAAAAAAAAAAAA\n\
-AAAAAAAAAAAAAAAAAA\n\
-AAAAAAAAAAAAAAAAAA\n\
-AAAAAAAAAAAAAAAAAA\n\
-AAAAAAAAAAAAAAAAAH"))
+I'm sleeping because...\n\
+...I'm sleepy. I don't\n\
+like being disturbed.\n\
+Please walk quietly."))
+
+DEFINE_DIALOG(DIALOG_019, 1, 2, 30, 200, _("\
+Shhh! Please walk\n\
+quietly in the hallway!"))
 
 DEFINE_DIALOG(DIALOG_020, 1, 6, 95, 150, _("\
 Dear Mario:\n\
